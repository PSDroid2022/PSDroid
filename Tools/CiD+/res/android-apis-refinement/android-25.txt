<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void onDetachedFromWindow()>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowBypass()>
<android.view.WindowId.FocusObserver: void onFocusGained(android.view.WindowId)>
<android.renderscript.Script.FieldBase: android.renderscript.Type getType()>
<android.media.AudioTrack: void pause()>
<android.net.ip.IpManager.Callback: void onLinkPropertiesChange(android.net.LinkProperties)>
<javax.microedition.khronos.opengles.GL10: void glLineWidthx(int)>
<android.net.Uri: java.lang.String getLastPathSegment()>
<android.hardware.Camera.Parameters: int getMaxNumFocusAreas()>
<com.android.systemui.statusbar.TransformableView: void setVisible(boolean)>
<com.android.documentsui.SectionedListAdapter: int getViewTypeCount()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<android.content.pm.PackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.android.server.notification.CalendarTracker: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setTitle(java.lang.CharSequence)>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>
<android.service.quicksettings.TileService: void onTileRemoved()>
<com.android.printspooler.renderer.IPdfRenderer: void renderPage(int,int,int,android.print.PrintAttributes,android.os.ParcelFileDescriptor)>
<android.view.ViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)>
<com.android.hotspot2.osu.WiFiKeyManager: void enableClientAuth(java.util.List)>
<android.content.res.Resources_Theme_Delegate: com.android.layoutlib.bridge.impl.DelegateManager getDelegateManager()>
<android.view.KeyEvent: int getUnicodeChar()>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailableZoomCropRectangles(android.hardware.Camera.Parameters,android.graphics.Rect)>
<android.view.Window: boolean hasSoftInputMode()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerSignature(java.lang.String)>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[],java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgePowerManager: void releaseWakeLock(android.os.IBinder,int)>
<android.util.Pools.SimplePool: java.lang.Object acquire()>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>
<com.android.systemui.settings.ToggleSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPackageUidAsUser(java.lang.String,int,int)>
<android.os.BaseBundle: void putDouble(java.lang.String,double)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,int[],int)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.android.layoutlib.bridge.android.BridgeWindow: void moved(int,int)>
<com.android.systemui.qs.QSPanel: void setCallback(com.android.systemui.qs.QSTile.Host.Callback)>
<android.security.keystore.KeyProtection: boolean isRandomizedEncryptionRequired()>
<com.android.documentsui.DocumentsActivity: com.android.documentsui.DocumentsActivity get(android.app.Fragment)>
<com.android.systemui.qs.external.TileLifecycleManager: android.content.ComponentName getComponent()>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.RecentsGrowingEvent)>
<android.webkit.GeolocationPermissions: void clearAll()>
<com.android.printspooler.model.PrintSpoolerService: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCanceled()>
<android.content.res.BridgeTypedArray: void recycle()>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>
<android.view.KeyboardShortcutInfo: java.lang.CharSequence getLabel()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void removeDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<android.media.MediaRouter.UserRouteInfo: void requestSetVolume(int)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: int getPositionOfTask(com.android.systemui.recents.model.Task)>
<android.view.Menu: android.view.MenuItem findItem(int)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
<com.android.server.am.ActivityManagerService: boolean isUserRunning(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.RestrictionEntry: java.lang.String getDescription()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(int,int)>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>
<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)>
<android.view.ViewGroup: void dispatchSetActivated(boolean)>
<com.android.hotspot2.osu.commands.ClientCertInfo: boolean doesAcceptMfgCerts()>
<android.view.Window: void takeSurface(android.view.SurfaceHolder.Callback2)>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>
<com.android.keyguard.AlphaOptimizedImageButton: boolean hasOverlappingRendering()>
<com.google.android.gles_jni.EGLContextImpl: boolean equals(java.lang.Object)>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>
<com.android.documentsui.SectionedListAdapter: int getItemViewType(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPermissionPolicy(android.content.ComponentName,int)>
<android.media.MediaCodec: android.view.Surface createPersistentInputSurface()>
<android.telecom.PhoneAccountHandle: int describeContents()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.server.notification.ImportanceExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<android.widget.AdapterView: int getCount()>
<com.android.systemui.recents.RecentsImplProxy: void showCurrentUserToast(int,int)>
<android.app.ActivityManagerProxy: void backgroundResourcesReleased(android.os.IBinder)>
<com.android.settingslib.wifi.WifiTracker: java.util.List getAccessPoints()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>
<com.android.systemui.recents.views.RecentsTransitionHelper: android.graphics.Bitmap composeTaskBitmap(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform)>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.ExpandableView: void performAddAnimation(long,long)>
<android.app.NativeActivity: void onInputQueueDestroyed(android.view.InputQueue)>
<android.text.SpannableStringBuilder: int hashCode()>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>
<com.android.layoutlib.bridge.BridgeRenderSession: void dispose()>
<android.location.Address: java.lang.String getSubAdminArea()>
<com.android.systemui.statusbar.car.CarBatteryController: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.backup.UsageStatsBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setAudioSource(int)>
<android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener: void onLearningDone(android.filterpacks.videoproc.BackDropperFilter)>
<com.android.systemui.qs.tiles.FlashlightTile: java.lang.String composeChangeAnnouncement()>
<android.nfc.tech.MifareUltralight: int getType()>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getFileExtension(java.lang.String)>
<android.database.sqlite.SQLiteException: void <init>()>
<com.android.printspooler.ui.PrintActivity: void onOptionsOpened()>
<com.android.systemui.qs.tiles.BatteryTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<android.appwidget.AppWidgetProvider: void <init>()>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>
<android.graphics.drawable.BitmapDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getTaskKeys()>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.misc.SystemServicesProxy: void removeTask(int)>
<android.app.ListActivity: int getSelectedItemPosition()>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>
<android.hardware.input.InputManager: void unregisterInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener)>
<android.text.Layout: int getBottomPadding()>
<com.android.server.backup.Trampoline: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>
<android.preference.PreferenceActivity: void invalidateHeaders()>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.Map getDefaultProperties()>
<com.android.server.am.ActivityManagerService: void releaseSomeActivities(android.app.IApplicationThread)>
<android.content.res.Resources: android.content.res.Resources.Theme newTheme()>
<com.android.server.job.JobStore: com.android.server.job.controllers.JobStatus getJobByUidAndJobId(int,int)>
<android.app.Dialog: void setCancelable(boolean)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glGenBuffers(int,int[],int)>
<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest.Builder createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)>
<android.nfc.tech.IsoDep: boolean isExtendedLengthApduSupported()>
<com.android.documentsui.RecentsCreateFragment: void onStop()>
<com.android.server.am.BatteryStatsService: void noteAlarmFinish(java.lang.String,int)>
<android.content.ClipData: void <init>(android.content.ClipData)>
<android.media.AudioManager: void unloadSoundEffects()>
<android.database.MatrixCursor: byte[] getBlob(int)>
<com.android.systemui.volume.ZenModePanel.Callback: void onPrioritySettings()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.util.Set getBondedDevices()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getRowCount()>
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<com.android.server.backup.Trampoline: long getAvailableRestoreToken(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void loadDimens()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
<android.view.View: void setRotationX(float)>
<android.webkit.WebView: void requestImageRef(android.os.Message)>
<android.view.KeyboardShortcutInfo: int describeContents()>
<android.graphics.Picture: void finalize()>
<android.speech.RecognitionListener: void onReadyForSpeech(android.os.Bundle)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setOnExpandClickListener(com.android.systemui.statusbar.ExpandableNotificationRow.OnExpandClickListener)>
<android.animation.ValueAnimator: void cancel()>
<com.android.systemui.recents.tv.RecentsTvImpl: void startRecentsActivity(android.app.ActivityManager.RunningTaskInfo,android.app.ActivityOptions,boolean,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getRestrictionsProvider(int)>
<com.android.server.notification.ZenModeHelper: void onSystemReady()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<com.android.server.am.ActivityManagerService: void exitFreeformMode(android.os.IBinder)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: int getItemCount()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onRemoteInputActive(boolean)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacSHA256: void <init>()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.classifier.FalsingManager: void onBouncerShown()>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.service.voice.VoiceInteractionSession: void onCreate()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: void writeToParcel(android.os.Parcel,int)>
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>
<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<com.android.hotspot2.asn1.Asn1Octets: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer)>
<com.android.printspooler.ui.PrintActivity: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>
<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()>
<android.widget.ArrayAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)>
<com.android.systemui.statusbar.ActivatableNotificationView: void makeInactive(boolean)>
<com.android.server.policy.PhoneWindowManager: void getStableInsetsLw(int,int,int,android.graphics.Rect)>
<com.android.settingslib.RestrictedLockUtils: void sendShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<android.service.voice.VoiceInteractionSession: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.animation.ValueAnimator: void end()>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.view.View: void setAlpha(float)>
<android.net.wifi.WifiScanner.ChannelSpec: void <init>(int)>
<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.webkit.WebViewFactoryProvider.Statics: void enableSlowWholeDocumentDraw()>
<com.android.server.net.NetworkPolicyManagerService: void setConnectivityListener(android.net.INetworkPolicyListener)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: java.util.List getNotificationChildren()>
<com.android.documentsui.DocumentClipper: java.util.List getClippedDocuments()>
<android.app.ActionBar: void removeTab(android.app.ActionBar.Tab)>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()>
<android.accounts.AccountsException: void <init>(java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteMobileRadioPowerState(int,long,int)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.accessibilityservice.GestureDescription: int getStrokeCount()>
<com.android.documentsui.Events.MotionInputEvent: int getItemPosition()>
<android.widget.Toolbar.LayoutParams: void <init>(int)>
<com.android.preload.ui.UI: java.lang.Object showChoiceDialog(java.lang.String,java.lang.String,java.lang.Object[])>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.util.PathParser.PathData: void <init>(java.lang.String)>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glEnable(int)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<android.provider.Settings.System: boolean canWrite(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<android.net.TrafficStats: long getMobileRxPackets()>
<android.graphics.drawable.AnimatedStateListDrawable: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)>
<android.media.MediaCodec: void releaseOutputBuffer(int,long)>
<android.widget.QuickContactBadge: void assignContactUri(android.net.Uri)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateCloseQs()>
<android.media.CamcorderProfile: boolean hasProfile(int)>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameWidth(float)>
<com.android.server.am.ActivityManagerService: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.app.ActivityManagerProxy: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean canBypassWorkChallenge(android.app.PendingIntent)>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.util.SizeF: android.util.SizeF parseSizeF(java.lang.String)>
<com.android.documentsui.dirlist.DirectoryFragment: void initDocumentHolder(com.android.documentsui.dirlist.DocumentHolder)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task)>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>
<android.widget.CalendarView: int getWeekNumberColor()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.widget.NumberPicker: void onDetachedFromWindow()>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(android.net.Uri)>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request)>
<android.hardware.camera2.legacy.RequestHolder: boolean hasPreviewTargets()>
<android.provider.DocumentsProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.server.clipboard.ClipboardService: void setPrimaryClip(android.content.ClipData,java.lang.String)>
<com.android.server.pm.UserManagerService: boolean exists(int)>
<android.widget.TwoLineListItem: void onFinishInflate()>
<com.android.server.content.SyncJobService: void callJobFinished(int,boolean)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDiscoveryModeChanged(int)>
<android.hardware.Camera.Parameters: boolean getAutoExposureLock()>
<com.android.systemui.qs.QSDetailItems: void onDetachedFromWindow()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.app.ActivityManager.RunningTaskInfo getRunningTask()>
<android.graphics.Interpolator: void reset(int,int)>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: java.lang.CharSequence getPackageName()>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>
<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.media.midi.MidiReceiver: void onFlush()>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<com.android.keyguard.KeyguardSimPukView: void resetState()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean onStateChange(int[])>
<android.transition.TransitionPropagation: java.lang.String[] getPropagationProperties()>
<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>
<com.android.server.am.ActivityManagerService: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>
<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadPartialLocked(long,long)>
<android.hardware.SensorEventCallback: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setNormalBackgroundVisibilityAmount(float)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.net.InetAddress,int)>
<android.widget.OverScroller: boolean isOverScrolled()>
<android.webkit.ServiceWorkerWebSettings: void setCacheMode(int)>
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>
<android.app.Fragment: boolean getUserVisibleHint()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isGuest(com.android.server.notification.ManagedServices)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isVisible()>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>
<com.android.server.job.JobServiceContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.content.ContentResolver: void <init>(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: void setTags(java.util.Collection)>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnLongClickListener(android.view.View.OnLongClickListener)>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>
<com.android.server.media.MediaSessionService: void onSessionPlaybackTypeChanged(com.android.server.media.MediaSessionRecord)>
<com.android.server.am.BatteryStatsService: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>
<com.android.server.am.ActivityManagerService: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<android.animation.ValueAnimator: void setCurrentFraction(float)>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean isRadioOn()>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>
<android.os.HandlerThread: void run()>
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View.OnTouchListener)>
<com.android.server.wm.animation.ClipRectTBAnimation: boolean getTransformation(long,android.view.animation.Transformation)>
<android.view.ActionMode.Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>
<android.app.Notification.BigPictureStyle: void <init>()>
<com.android.systemui.statusbar.policy.HeadsUpManager.Clock: long currentTimeMillis()>
<android.provider.DocumentsContract: android.net.Uri moveDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri,android.net.Uri)>
<android.widget.TabHost: int getCurrentTab()>
<android.media.tv.TvInputInfo: int describeContents()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getSystemProperty(java.lang.String)>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.view.Window: void <init>(android.content.Context)>
<android.widget.Toolbar: boolean hideOverflowMenu()>
<android.database.sqlite.SQLiteCursor: int getCount()>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>
<android.location.Location: boolean hasSpeed()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.documentsui.DocumentsActivity: void <init>()>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.lang.String getName()>
<android.service.voice.VoiceInteractionSession.Request: android.os.Bundle getExtras()>
<android.hardware.Sensor: int getMaxDelay()>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isAnimating()>
<android.app.Notification.WearableExtender: boolean getHintHideIcon()>
<com.android.commands.hid.Device: void sendReport(byte[])>
<android.webkit.WebView: void clearSslPreferences()>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<com.android.server.Watchdog.HandlerChecker: java.lang.String describeBlockedStateLocked()>
<com.android.documentsui.ProviderExecutor.Preemptable: void preempt()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerDataMask()>
<android.os.Process: int getThreadScheduler(int)>
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()>
<android.view.Window.Callback: void onContentChanged()>
<android.view.accessibility.AccessibilityManager: boolean isHighTextContrastEnabled()>
<com.android.hotspot2.asn1.Asn1Integer: java.lang.String toString()>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateNotifications()>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onBusy(android.hardware.camera2.CameraDevice)>
<android.animation.ObjectAnimator: void setProperty(android.util.Property)>
<android.content.Intent: java.lang.String getType()>
<com.android.server.usb.UsbHostManager: void systemReady()>
<android.app.ActivityManagerProxy: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoAvailable()>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
<android.app.Service: boolean onUnbind(android.content.Intent)>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.media.midi.MidiManager: void openBluetoothDevice(android.bluetooth.BluetoothDevice,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<com.android.gallery3d.exif.ExifTag: void setHasDefinedCount(boolean)>
<android.graphics.Canvas: boolean isOpaque()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void <init>()>
<com.android.server.trust.TrustArchive: void logManagingTrust(int,android.content.ComponentName,boolean)>
<android.preference.Preference: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void <init>(android.content.Context)>
<android.location.GnssStatus: boolean hasEphemerisData(int)>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>
<android.os.Parcel: java.lang.Object readTypedObject(android.os.Parcelable.Creator)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>
<android.widget.RelativeLayout.LayoutParams: int getRule(int)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void link(android.view.ViewGroup,android.widget.BaseAdapter)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<com.android.server.location.GeofenceManager: void onProviderEnabled(java.lang.String)>
<android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenContentInsetsLw()>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<android.graphics.ColorMatrix: void setSaturation(float)>
<com.android.documentsui.OpenExternalDirectoryActivity: void onCreate(android.os.Bundle)>
<android.view.View: int getNextFocusRightId()>
<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.documentsui.BaseActivity: void onSearchFinished()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isKeyguardFadingAway()>
<android.net.wifi.WifiManager: boolean isPreferredNetworkOffloadSupported()>
<android.hardware.usb.UsbDevice: int hashCode()>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result getResult()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void verifyUnlock()>
<android.print.PrinterInfo: java.lang.String getDescription()>
<com.android.systemui.qs.NonInterceptingScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>
<android.location.LocationManager: void removeNmeaListener(android.location.OnNmeaMessageListener)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: com.google.android.util.AbstractMessageParser.YouTubeVideo matchURL(java.lang.String,java.lang.String)>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.location.provider.FusedLocationHardware: void flushBatchedLocations()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getStorageEncryption(android.content.ComponentName,int)>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>
<android.preference.Preference: boolean persistInt(int)>
<android.media.SRTTrack: void updateView(java.util.Vector)>
<com.android.server.am.ActivityManagerService: void resizePinnedStack(android.graphics.Rect,android.graphics.Rect)>
<com.android.preload.actions.ComputeThresholdAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isWhitespace()>
<android.content.Intent: java.lang.String toURI()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendTimestamp(android.os.IBinder,long)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>
<com.android.server.search.SearchManagerService: void <init>(android.content.Context)>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String,java.lang.Exception)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMax()>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageSizeChanged(java.lang.String)>
<com.android.layoutlib.bridge.Bridge: boolean dispose()>
<android.media.session.MediaSession.Token: boolean equals(java.lang.Object)>
<com.android.systemui.recents.views.RecentsView: void onReload(boolean,boolean)>
<android.hardware.radio.RadioManager.FmBandDescriptor: java.lang.String toString()>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startExitToHomeAnimation(boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.telecom.PhoneAccount: int getCapabilities()>
<com.android.server.media.MediaSessionService: void updateSession(com.android.server.media.MediaSessionRecord)>
<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>
<com.android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleDevicePolicyManagerStateChanged()>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int)>
<android.text.Layout: android.text.Layout.Alignment getAlignment()>
<android.app.Notification.MediaStyle: void <init>()>
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)>
<android.view.ContextMenu: void clearHeader()>
<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig getConfig()>
<com.android.server.backup.Trampoline: java.lang.String getDataManagementLabel(java.lang.String)>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>
<android.preference.TwoStatePreference: void onClick()>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(java.lang.String,long,float)>
<com.android.documentsui.RootsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.database.MatrixCursor: boolean isNull(int)>
<android.widget.AdapterView: int getLastVisiblePosition()>
<com.android.server.connectivity.NetworkAgentInfo: boolean addRequest(android.net.NetworkRequest)>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>
<android.graphics.NinePatch: int getWidth()>
<com.android.server.input.InputManagerService: void setFocusedApplication(com.android.server.input.InputApplicationHandle)>
<android.view.ViewGroup: void layout(int,int,int,int)>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>
<android.os.health.HealthStats: boolean hasTimer(int)>
<android.view.accessibility.AccessibilityRecord: boolean isEnabled()>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>
<com.android.systemui.qs.QSDetail: void setQsPanel(com.android.systemui.qs.QSPanel,com.android.systemui.statusbar.phone.BaseStatusBarHeader)>
<com.android.settingslib.users.AppRestrictionsHelper: void fetchAndMergeApps()>
<com.android.systemui.recents.ScreenPinningRequest: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.SecurityController: void removeCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.google.android.gles_jni.EGLImpl: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<com.android.documentsui.model.DocumentStack: java.lang.String buildKey()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<android.bluetooth.BluetoothGattServerCallback: void onConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>
<com.android.systemui.recents.RecentsSystemUserService: android.os.IBinder onBind(android.content.Intent)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.graphics.drawable.RippleDrawable: int getRadius()>
<android.os.ServiceManager: java.lang.String[] listServices()>
<android.net.IpPrefix: java.net.InetAddress getAddress()>
<com.google.android.gles_jni.GLImpl: void glBindFramebufferOES(int,int)>
<android.location.GnssNavigationMessageEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getProfileVpnName()>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<android.location.Address: void setLatitude(double)>
<com.android.anqp.HSOsuProvidersElement: java.lang.String toString()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int,int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.android.providers.settings.SettingsProvider: int getTypeFromKey(int)>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<android.webkit.CookieManager: boolean allowFileSchemeCookies()>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCallSessionEvent(android.telecom.RemoteConnection.VideoProvider,int)>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>
<android.widget.CalendarView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.tuner.BatteryPreference: void onTuningChanged(java.lang.String,java.lang.String)>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createWindowedInstallPolicy(int,int)>
<android.media.MediaExtractor: void seekTo(long,int)>
<android.util.JsonReader: void skipValue()>
<com.android.server.net.NetworkStatsCollection: boolean isEmpty()>
<android.bluetooth.BluetoothGatt: boolean readRemoteRssi()>
<android.widget.VideoView: void setVideoPath(java.lang.String)>
<com.android.printspooler.widget.EmbeddedContentContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: com.android.systemui.recents.model.TaskStack getTaskStack()>
<android.media.MediaRouter.UserRouteInfo: void setName(int)>
<android.widget.SlidingDrawer: void animateToggle()>
<android.view.accessibility.AccessibilityRecord: void recycle()>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.text.Layout: int getTopPadding()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>
<android.content.ContentProviderClient: android.net.Uri canonicalize(android.net.Uri)>
<android.provider.ContactsContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.service.dreams.DreamService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: void updatePermissionFlagsForAllApps(int,int,int)>
<com.google.android.collect.Maps: java.util.HashMap newHashMap()>
<android.view.View: void onOverScrolled(int,int,boolean,boolean)>
<com.android.systemui.classifier.DirectionClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.views.TaskStackViewScroller: void setStackScroll(float)>
<android.content.Context: java.lang.String getPackageCodePath()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int getSaveCount()>
<android.media.AudioRecordingConfiguration: int hashCode()>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,com.android.server.input.InputWindowHandle)>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>
<com.android.server.pm.KeySetManagerService: void addScannedPackageLPw(android.content.pm.PackageParser.Package)>
<com.android.systemui.qs.tiles.CellularTile: java.lang.CharSequence getTileLabel()>
<android.graphics.Rect: java.lang.String toString()>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: boolean isVoiceInteraction()>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>(java.lang.String,java.lang.Throwable)>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>
<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>
<android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int)>
<android.content.res.BridgeTypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setActionAcknowledgmentTimeout(long)>
<android.os.Message: boolean isAsynchronous()>
<android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>
<android.speech.tts.TextToSpeech: java.util.List getEngines()>
<android.content.AsyncQueryHandler.WorkerHandler: void handleMessage(android.os.Message)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStartLoading()>
<android.view.textservice.SpellCheckerSubtype: int describeContents()>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>
<android.os.ParcelFormatException: void <init>(java.lang.String)>
<android.bluetooth.BluetoothGattServer: void cancelConnection(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean)>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.ScriptIntrinsicYuvToRGB create(android.renderscript.RenderScript,android.renderscript.Element)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void show(boolean)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetStart(int,int)>
<com.google.android.util.AbstractMessageParser.Video: boolean isMedia()>
<com.android.documentsui.dirlist.DocumentHolder: void bind(android.database.Cursor,java.lang.String,com.android.documentsui.State)>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.BatteryMeterDrawable: void stopListening()>
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>
<android.view.ViewParent: android.view.ViewParent getParent()>
<com.android.systemui.recents.model.TaskStack: void removeTaskImpl(com.android.systemui.recents.model.FilteredTaskList,com.android.systemui.recents.model.Task)>
<android.drm.DrmEvent: int getType()>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid2()>
<com.android.anqp.eap.VendorSpecificAuth: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: boolean isShowingWallpaper()>
<android.media.midi.MidiDeviceInfo: java.lang.String toString()>
<com.android.server.pm.IntentFilterVerificationState: boolean setVerifierResponse(int,int)>
<android.webkit.WebMessage: void <init>(java.lang.String,android.webkit.WebMessagePort[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setNetworkLoggingEnabled(android.content.ComponentName,boolean)>
<com.android.server.notification.ConditionProviders: void setCallback(com.android.server.notification.ConditionProviders.Callback)>
<android.content.res.BridgeTypedArray: int[] extractThemeAttrs()>
<com.android.hotspot2.WifiNetworkAdapter: void <init>(android.content.Context,com.android.hotspot2.osu.OSUManager)>
<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>
<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>
<android.os.StrictMode: android.os.StrictMode.VmPolicy getVmPolicy()>
<android.graphics.Movie: int duration()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: android.view.ViewRootImpl getViewRootImpl()>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteGroup getGroup()>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName,int)>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getDisplayName()>
<com.android.server.usb.UsbDeviceManager: void systemReady()>
<android.net.TrafficStats: void incrementOperationCount(int,int)>
<android.renderscript.Type: int getCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<com.android.documentsui.BaseActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.android.systemui.qs.tiles.DataSaverTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.app.Notification.Builder: void <init>(android.content.Context)>
<android.content.res.BridgeTypedArray: boolean hasValueOrEmpty(int)>
<android.net.ProxyInfo: android.net.ProxyInfo buildPacProxy(android.net.Uri)>
<android.telecom.TelecomManager: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>
<android.print.PrintAttributes.Resolution: java.lang.String getLabel()>
<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: java.lang.String toJson()>
<com.android.systemui.classifier.FalsingManager: void onCameraOn()>
<android.net.nsd.NsdManager.ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)>
<com.android.layoutlib.bridge.android.BridgeWindow: android.os.IBinder asBinder()>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMinFrequency()>
<android.view.ViewRootImpl.CalledFromWrongThreadException: void <init>(java.lang.String)>
<android.media.MediaSync: void release()>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>
<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.view.View: void setBackgroundResource(int)>
<com.android.settingslib.net.ChartDataLoader: com.android.settingslib.net.ChartData loadInBackground()>
<android.renderscript.ProgramFragment.Builder: android.renderscript.ProgramFragment create()>
<android.graphics.drawable.LayerDrawable: int getLayerWidth(int)>
<com.android.server.am.BatteryStatsService: void noteNetworkInterfaceType(java.lang.String,int)>
<android.app.Fragment: java.lang.Object getHost()>
<android.os.Parcelable: int describeContents()>
<com.android.server.accessibility.AccessibilityManagerService: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.QSDetailItems: void setTagSuffix(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onLockedWorkRemoteInput(int,com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void loadDimens()>
<android.net.nsd.NsdServiceInfo: void setPort(int)>
<com.android.systemui.statusbar.notification.VisualStabilityManager.Callback: void onReorderingAllowed()>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>
<android.app.ActivityManager.TaskDescription: java.lang.String toString()>
<android.service.notification.ZenModeConfig.ZenRule: int describeContents()>
<android.app.ActivityManagerProxy: boolean isAppForeground(int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>
<com.android.server.pm.PackageInstallerService: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>
<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData.Entry remove(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.net.NetworkPolicyManagerService: void addRestrictBackgroundWhitelistedUid(int)>
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Loader: boolean isAbandoned()>
<android.net.UrlQuerySanitizer: void clear()>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomContentHeight(int)>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.phone.NotificationGroupManager)>
<android.app.ActivityManagerProxy: void setVoiceKeepAwake(android.service.voice.IVoiceInteractionSession,boolean)>
<android.view.View: void destroyDrawingCache()>
<com.android.uiautomator.core.UiDevice: void setCompressedLayoutHeirarchy(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,com.android.systemui.statusbar.phone.StatusBarWindowManager,android.view.ViewGroup)>
<com.android.server.pm.PermissionsState: int grantRuntimePermission(com.android.server.pm.BasePermission,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingOrSelfPermission(java.lang.String)>
<com.android.hotspot2.osu.OSUInfo: com.android.anqp.IconInfo getIconInfo()>
<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)>
<android.service.vr.VrListenerService: void onCurrentVrActivityChanged(android.content.ComponentName)>
<com.android.systemui.stackdivider.DividerView: int getCurrentPosition()>
<android.os.WorkSource: boolean equals(java.lang.Object)>
<android.text.Spanned: int getSpanFlags(java.lang.Object)>
<com.android.systemui.statusbar.notification.TextViewTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<android.content.Intent: java.lang.String getAction()>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
<android.hardware.camera2.params.TonemapCurve: java.lang.String toString()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean setScanMode(int,int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>
<android.telecom.Phone.Listener: void onCallRemoved(android.telecom.Phone,android.telecom.Call)>
<com.android.server.AttributeCache: void init(android.content.Context)>
<android.telecom.PhoneAccount: android.net.Uri getAddress()>
<com.android.gallery3d.exif.ExifInterface: void <init>()>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<com.android.server.am.ActivityManagerService.PendingAssistExtras: void run()>
<android.view.animation.AnimationSet: boolean willChangeBounds()>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>
<android.bluetooth.le.ScanRecord: android.util.SparseArray getManufacturerSpecificData()>
<com.android.server.notification.SystemConditionProviderService: java.lang.String ts(long)>
<android.hardware.usb.UsbEndpoint: int getInterval()>
<android.view.View: android.animation.StateListAnimator getStateListAnimator()>
<android.provider.DocumentsContract: boolean removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)>
<android.widget.Switch: void setTrackResource(int)>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>
<android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>
<android.renderscript.Allocation: void copyFrom(android.renderscript.Allocation)>
<android.view.View: float getAlpha()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void cancelFadeAnimator()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getExternalCacheDir()>
<android.transition.Fade: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<android.renderscript.Type: android.renderscript.Type createXY(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
<android.mtp.MtpDevice: android.mtp.MtpEvent readEvent(android.os.CancellationSignal)>
<android.util.Rational: boolean isInfinite()>
<android.database.AbstractCursor: int getColumnCount()>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>
<android.app.Activity: void setTitle(int)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.testrunner.IAutomationSupport: void sendStatus(int,android.os.Bundle)>
<com.android.systemui.volume.VolumeDialog: void show(int)>
<com.android.settingslib.accounts.AuthenticatorHelper: int getLabelIdForType(java.lang.String)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateNotAfter(java.util.Date)>
<com.android.systemui.statusbar.BaseStatusBar: void setShowLockscreenNotifications(boolean)>
<com.android.server.accessibility.KeyboardInterceptor: void onDestroy()>
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>
<android.nfc.cardemulation.NfcFCardEmulation: boolean disableService(android.app.Activity)>
<com.android.server.am.BatteryStatsService: void noteWakeUp(java.lang.String,int)>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerName(java.lang.String)>
<android.telephony.CellIdentityGsm: java.lang.String toString()>
<com.android.settingslib.RestrictedLockImageSpan: android.graphics.drawable.Drawable getDrawable()>
<com.android.keyguard.KeyguardAbsKeyInputView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.am.ProcessStatsService: int getCurrentMemoryState()>
<android.graphics.Path: boolean isInverseFillType()>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>
<com.android.documentsui.dirlist.DirectoryFragment: void onDisplayStateChanged()>
<com.android.server.policy.PhoneWindowManager: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>
<com.android.systemui.recents.misc.Utilities: void cancelAnimationWithoutCallbacks(android.animation.Animator)>
<com.android.settingslib.drawer.SettingsDrawerActivity: java.util.HashMap getTileCache()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.MapProfile getMapProfile()>
<android.graphics.drawable.shapes.OvalShape: void getOutline(android.graphics.Outline)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
<android.util.StateSet: java.lang.String dump(int[])>
<android.media.MediaPlayer: boolean isPlaying()>
<android.view.animation.AnimationSet: void setStartTime(long)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getTopPaddingOverflow()>
<com.android.keyguard.KeyguardSimPukView: boolean confirmPin()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void setLocation(android.view.View)>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>
<com.android.printspooler.ui.FusedPrintersProvider: boolean isFavoritePrinter(android.print.PrinterId)>
<com.android.server.policy.PhoneWindowManager: void notifyActivityDrawnForKeyguardLw()>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>
<android.util.JsonReader: void <init>(java.io.Reader)>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsTags(double,double)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setTintColor(int,boolean)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onTaskDataUnloaded()>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>
<com.android.layoutlib.bridge.android.BridgeWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<android.widget.Toolbar: boolean isOverflowMenuShowing()>
<android.provider.ContactsContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.app.Fragment: int getId()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<com.android.documentsui.SearchViewManager.SearchManagerListener: void onSearchChanged(java.lang.String)>
<android.webkit.FindActionModeCallback.NoAction: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.widget.AdapterView: void setEmptyView(android.view.View)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(android.os.Parcel)>
<com.android.server.net.DnsServerRepository: boolean addServers(long,java.lang.String[])>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable applyTintColor(android.content.Context,int,int)>
<com.android.printservice.recommendation.plugin.hp.VendorInfo: void <init>(android.content.res.Resources,int)>
<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.StaticLayout: int getParagraphDirection(int)>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>
<android.filterpacks.imageproc.GrainFilter: void <init>(java.lang.String)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isInputRestricted()>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>
<android.graphics.Region: void <init>()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserCanSkipBouncer(int)>
<android.net.NetworkInfo: int getSubtype()>
<com.android.systemui.statusbar.phone.BarTransitions: boolean isLightsOut(int)>
<android.hardware.camera2.legacy.RequestHandlerThread: boolean hasAnyMessages(int[])>
<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int)>
<com.android.server.appwidget.AppWidgetService: void onBootPhase(int)>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadCustomLabel(android.content.Context)>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getPackageName()>
<com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback: void onReleaseRequested(java.io.File)>
<android.database.MatrixCursor: int getType(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.Object getProperty(java.lang.String)>
<android.renderscript.FieldPacker: void reset()>
<android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
<com.android.server.backup.BackupManagerService: boolean setBackupPassword(java.lang.String,java.lang.String)>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.content.ContentProviderProxy: android.os.IBinder asBinder()>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)>
<android.hardware.usb.UsbInterface: int describeContents()>
<com.android.systemui.stackdivider.Divider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
<com.android.systemui.recents.tv.animations.RecentsRowFocusAnimationHolder: void <init>(android.view.View,android.view.View)>
<android.view.ViewStructure: void asyncCommit()>
<android.widget.Toolbar: void setLogoDescription(int)>
<android.view.View: boolean dispatchNestedPrePerformAccessibilityAction(int,android.os.Bundle)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>
<android.widget.ActivityChooserModel.HistoricalRecord: boolean equals(java.lang.Object)>
<com.android.server.am.ActivityManagerService: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.hotspot2.osu.WiFiKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>
<com.android.server.job.controllers.StateController: void prepareForExecutionLocked(com.android.server.job.controllers.JobStatus)>
<android.util.LruCache: void resize(int)>
<android.content.pm.ResolveInfo: void <init>()>
<android.location.GnssMeasurement: boolean hasSnrInDb()>
<android.widget.Chronometer: java.lang.String getFormat()>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.View getGroupParentWhenDismissed()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,int[][])>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnIndex()>
<com.android.server.updates.SELinuxPolicyInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setSignaturePaddings(java.lang.String[])>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>
<android.view.View: java.lang.CharSequence getContentDescription()>
<android.service.voice.VoiceInteractionSession: int getDisabledShowContext()>
<android.media.tv.TvView: void setCallback(android.media.tv.TvView.TvInputCallback)>
<com.android.systemui.statusbar.phone.ScrimController: void setDozeBehindAlpha(float)>
<android.telecom.CallScreeningService: boolean onUnbind(android.content.Intent)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setIconTint(int)>
<android.media.AudioTrack: void release()>
<com.android.systemui.classifier.FalsingManager: void onLeftAffordanceHintStarted()>
<com.android.systemui.statusbar.phone.PanelBar: boolean panelEnabled()>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>
<com.google.android.util.AbstractMessageParser.Photo: java.util.List getInfo()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<com.android.systemui.statusbar.CommandQueue: void buzzBeepBlinked()>
<com.android.settingslib.drawer.SettingsDrawerActivity.CategoryListener: void onCategoriesChanged()>
<android.media.Tokenizer.OnTokenListener: void onStart(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.gallery3d.glrenderer.RawTexture: void yield()>
<com.android.documentsui.dirlist.DirectoryFragment: void onStop()>
<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>
<com.android.systemui.qs.QuickQSPanel: boolean shouldShowDetail()>
<com.android.keyguard.KeyguardSimPukView: void onPause()>
<android.os.WorkSource: void <init>(android.os.WorkSource)>
<android.speech.tts.SynthesisCallback: int done()>
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>
<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void replaceSessionClose()>
<com.android.commands.sm.Sm: void runListVolumes()>
<com.android.location.provider.ActivityRecognitionProvider: boolean enableActivityEvent(java.lang.String,int,long)>
<android.widget.Switch: void draw(android.graphics.Canvas)>
<android.graphics.RectF: java.lang.String toShortString()>
<com.android.layoutlib.bridge.util.NinePatchInputStream: void <init>(java.io.File)>
<android.filterpacks.imageproc.PosterizeFilter: void <init>(java.lang.String)>
<android.net.ip.IpManager.Callback: void installPacketFilter(byte[])>
<android.service.voice.VoiceInteractionSession.CommandRequest: java.lang.String getCommand()>
<android.location.Address: void setAdminArea(java.lang.String)>
<android.view.Window: void setClipToOutline(boolean)>
<com.android.server.am.ProviderMap: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<android.app.DownloadManager: int remove(long[])>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>
<android.view.View: int getVerticalScrollbarWidth()>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.net.nsd.NsdManager.DiscoveryListener: void onStartDiscoveryFailed(java.lang.String,int)>
<android.filterpacks.imageproc.NegativeFilter: void process(android.filterfw.core.FilterContext)>
<android.text.style.TtsSpan.TimeBuilder: void <init>(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getLayoutMinHeight()>
<android.os.BatteryStats.Counter: void logState(android.util.Printer,java.lang.String)>
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.BluetoothEventManager getEventManager()>
<com.android.systemui.recents.events.ui.UpdateFreeformTaskViewVisibilityEvent: void <init>(boolean)>
<com.android.printspooler.model.PageContentRepository: void stopPreload()>
<android.util.BridgeXmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>
<android.telecom.StatusHints: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>
<com.android.systemui.statusbar.policy.FlashlightController: void removeListener(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<android.graphics.Paint: float getFontSpacing()>
<com.android.tools.layoutlib.java.Objects: int hash(java.lang.Object[])>
<android.os.Parcel: void recycle()>
<com.android.systemui.stackdivider.DividerHandleView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: android.view.View getNotificationInnerAreaView()>
<android.animation.Animator: long getTotalDuration()>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int,int)>
<android.view.accessibility.CaptioningManager: boolean isEnabled()>
<com.android.systemui.statusbar.policy.DateView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.hotspot2.omadm.OMAConstants: void serializeString(java.lang.String,java.io.OutputStream)>
<android.text.method.KeyListener: int getInputType()>
<android.location.Location: double getAltitude()>
<android.telecom.Conference: void removeExtras(java.util.List)>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onMoveToFullscreen()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.Callback getCallback()>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void inflateGuts()>
<android.graphics.Canvas_Delegate: android.graphics.Canvas_Delegate getDelegate(long)>
<android.app.backup.FullBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>
<android.renderscript.RenderScript: void finalize()>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<android.database.AbstractCursor: boolean isLast()>
<com.android.server.notification.RankingHelper: void onPackagesChanged(boolean,java.lang.String[])>
<com.android.systemui.qs.tiles.UserTile: int getMetricsCategory()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setIsClickedNotification(android.view.View,boolean)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: java.util.List createHighSpeedRequestList(android.hardware.camera2.CaptureRequest)>
<android.util.MonthDisplayHelper: void previousMonth()>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize)>
<com.android.systemui.qs.QSTile.Host.Callback: void onTilesChanged()>
<com.android.hotspot2.osu.OSUManager: java.security.KeyStore getKeyStore()>
<com.android.systemui.egg.MLand: void <init>(android.content.Context)>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>
<android.content.IntentFilter: boolean hasAction(java.lang.String)>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task findTaskWithId(int)>
<com.android.gallery3d.exif.ExifInterface: boolean isThumbnailCompressed()>
<com.android.server.pm.PackageManagerService: int checkUidPermission(java.lang.String,int)>
<com.android.documentsui.Events.MotionInputEvent: android.graphics.Point getOrigin()>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowStart()>
<android.media.MediaCodecInfo: boolean isEncoder()>
<android.net.wifi.WifiInfo: int getFrequency()>
<android.view.MenuItem: boolean isEnabled()>
<com.android.server.connectivity.IpConnectivityMetrics.Impl: boolean unregisterNetdEventCallback()>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartScaleX()>
<android.text.Layout: float getLineLeft(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.notification.HybridNotificationView getSingleLineView()>
<com.android.server.usage.UnixCalendar: void <init>(long)>
<android.service.notification.StatusBarNotification: boolean isGroup()>
<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>
<android.view.MotionEvent: int getAction()>
<com.android.systemui.SwipeHelper: void setDisableHardwareLayers(boolean)>
<android.telephony.CellSignalStrengthWcdma: int describeContents()>
<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>
<android.os.Parcel: void finalize()>
<com.android.systemui.statusbar.policy.HeadsUpManager: java.util.Collection getAllEntries()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.analytics.DataCollector: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.android.tools.layoutlib.create.OverrideMethod: void invokeV(java.lang.String,boolean,java.lang.Object)>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler)>
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)>
<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.media.tv.TvContentRating: java.lang.String getMainRating()>
<android.media.MediaCodec: void reset()>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>
<android.widget.TabHost: android.view.View getCurrentTabView()>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>
<com.android.systemui.recents.views.AnimationProps: com.android.systemui.recents.views.AnimationProps setStartDelay(int,int)>
<javax.microedition.khronos.opengles.GL10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()>
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
<com.android.systemui.qs.PagedTileLayout: void onMeasure(int,int)>
<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getBadgedApplicationIcon(android.content.pm.ApplicationInfo,int)>
<android.provider.DocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.statusbar.phone.ButtonDispatcher.ButtonInterface: void setCarMode(boolean)>
<com.android.hotspot2.osu.IconCache: void tickle(boolean)>
<android.graphics.Xfermode_Delegate: boolean isSupported()>
<android.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>
<com.android.systemui.statusbar.phone.PanelView: boolean isTracking()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,int[],int)>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean,boolean)>
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.media.AudioTrack: void removeOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener)>
<android.widget.ViewFlipper: void setAutoStart(boolean)>
<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>
<android.renderscript.Matrix3f: void <init>()>
<com.android.tools.layoutlib.create.CreateInfo: java.util.Map getInjectedMethodsMap()>
<com.android.settingslib.accounts.AuthenticatorHelper: void <init>(android.content.Context,android.os.UserHandle,com.android.settingslib.accounts.AuthenticatorHelper.OnAccountsUpdateListener)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<com.android.systemui.qs.QSTile.DrawableIconWithRes: boolean equals(java.lang.Object)>
<android.media.tv.TvContentRating: java.lang.String flattenToString()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setDisallowMetered(boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.BinderProxy: boolean isBinderAlive()>
<android.telecom.Conference: java.util.List getConferenceableConnections()>
<android.widget.TextView: int getMaxEms()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<android.renderscript.Double3: void <init>(double,double,double)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int)>
<android.os.Bundle: void <init>(android.os.PersistableBundle)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<android.graphics.SurfaceTexture: void updateTexImage()>
<com.android.systemui.recents.RecentsDebugFlags: boolean isFastToggleRecentsEnabled()>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector enabled(boolean)>
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
<com.android.server.power.PowerManagerService: void monitor()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingStarted(boolean)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: int describeContents()>
<android.filterpacks.imageproc.TintFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.text.util.Rfc822Token: void setName(java.lang.String)>
<android.hardware.camera2.params.BlackLevelPattern: java.lang.String toString()>
<com.android.server.am.BatteryStatsService: void setBatteryState(int,int,int,int,int,int,int)>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasScaleChangedFrom(float)>
<android.opengl.GLES10: void glDepthRangef(float,float)>
<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleKeyboardShortcutsMenu(int)>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getCurrentView()>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.hardware.camera2.legacy.RequestThreadManager: void configure(java.util.Collection)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getOpPackageName()>
<android.app.Activity: void onPictureInPictureModeChanged(boolean)>
<android.view.KeyEvent: boolean isAltPressed()>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setYear(int)>
<android.view.animation.PathInterpolator: void <init>(android.graphics.Path)>
<android.preference.PreferenceManager: java.lang.String getDefaultSharedPreferencesName(android.content.Context)>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>
<android.telephony.CellInfoGsm: int describeContents()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<android.print.PrintDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>
<com.android.server.am.ActivityManagerService: void forceStopPackage(java.lang.String,int)>
<android.widget.Toolbar: void onMeasure(int,int)>
<android.app.AutomaticZenRule: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getLeftPreview()>
<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void invalidateView()>
<android.animation.LayoutTransition: void enableTransitionType(int)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbManager getInstance(android.content.Context)>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>
<com.android.server.am.PreBootBroadcaster: void sendNext()>
<com.android.systemui.statusbar.policy.HeadsUpManager: int compare(com.android.systemui.statusbar.NotificationData.Entry,com.android.systemui.statusbar.NotificationData.Entry)>
<android.os.Debug: void resetGlobalFreedCount()>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>
<com.android.systemui.ExpandHelper: void setEventSource(android.view.View)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setNegativeButton(int,android.view.View.OnClickListener)>
<android.telephony.CellIdentityCdma: int getSystemId()>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRates()>
<android.app.WallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean,int)>
<com.android.server.am.ActivityManagerService: void batteryPowerChanged(boolean)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onTileClicked(com.android.settingslib.drawer.Tile)>
<android.mtp.MtpDeviceInfo: int[] getEventsSupported()>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onSettingsIconRowReset(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>
<android.filterpacks.imageproc.ImageStitcher: void process(android.filterfw.core.FilterContext)>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<com.android.hotspot2.omadm.OMAParser: void characters(char[],int,int)>
<android.net.LinkAddress: int getScope()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.TaskGrouping getGroupWithAffiliation(int)>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>
<android.app.Activity: android.app.Application getApplication()>
<com.android.printspooler.ui.PrinterRegistry: void setOnPrintersChangeListener(com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener)>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<com.android.server.media.RemoteDisplayProviderWatcher: void <init>(android.content.Context,com.android.server.media.RemoteDisplayProviderWatcher.Callback,android.os.Handler,int)>
<android.telephony.TelephonyManager: boolean hasIccCard()>
<android.graphics.ComposeShader_Delegate: boolean isSupported()>
<com.android.documentsui.SectionedListAdapter: boolean isEnabled(int)>
<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
<com.android.systemui.ExpandHelper.Callback: void expansionStateChanged(boolean)>
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>
<android.view.OrientationEventListener: void <init>(android.content.Context)>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void <init>(org.objectweb.asm.signature.SignatureVisitor)>
<android.view.inputmethod.InputConnection: void closeConnection()>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>
<android.os.UserManager: boolean isUserRunningAndUnlocked(android.os.UserHandle)>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void performRemoveNotification(android.service.notification.StatusBarNotification)>
<android.widget.ProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff.Mode)>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMANode removeNode(java.lang.String,com.android.hotspot2.omadm.OMANode)>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>
<com.android.systemui.statusbar.BaseStatusBar: void setLockScreenAllowRemoteInput(boolean)>
<android.widget.CheckedTextView: void setCheckMarkTintMode(android.graphics.PorterDuff.Mode)>
<com.android.systemui.qs.PageIndicator: void setNumPages(int)>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>
<android.view.WindowManagerPolicy.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleDeviceProvisioned()>
<android.telecom.CallScreeningService.CallResponse: boolean getRejectCall()>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Transition)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.qs.tiles.BatteryTile: void setListening(boolean)>
<com.android.server.twilight.TwilightState: java.util.Calendar sunset()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.media.audiofx.Equalizer: short getBandLevel(short)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String)>
<android.app.Fragment: void setSharedElementReturnTransition(android.transition.Transition)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void <init>(android.content.Context)>
<com.android.server.Watchdog: void run()>
<android.view.ThreadedRenderer.HardwareDrawCallbacks: void onHardwarePostDraw(android.view.DisplayListCanvas)>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation.MipmapControl,int)>
<android.widget.GridView: int getHorizontalSpacing()>
<android.content.BroadcastReceiver: java.lang.String getResultData()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setStatusBarFocusable(boolean)>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.graphics.Matrix: void mapVectors(float[])>
<android.view.ViewTreeObserver: void addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>
<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelScrimMinFractionChanged(float)>
<android.view.WindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.graphics.drawable.GradientDrawable: float getGradientRadius()>
<javax.microedition.khronos.opengles.GL10: void glClearDepthx(int)>
<com.android.systemui.qs.tiles.NightDisplayTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>
<android.view.MenuItem: android.view.MenuItem setShowAsActionFlags(int)>
<com.android.media.remotedisplay.RemoteDisplay: void setDescription(java.lang.String)>
<android.webkit.WebView: boolean zoomOut()>
<com.android.systemui.statusbar.policy.ScrollAdapter: android.view.View getHostView()>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.input.InputManagerService.KeyboardLayoutVisitor: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>
<android.content.res.ComplexColor_Accessor: android.content.res.GradientColor createGradientColorFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeath()>
<android.telecom.CallScreeningService.CallResponse.Builder: android.telecom.CallScreeningService.CallResponse.Builder setSkipCallLog(boolean)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.content.IntentFilter: void addAction(java.lang.String)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>
<android.app.job.JobParameters: int getJobId()>
<com.google.android.gles_jni.GLImpl: void glGenerateMipmapOES(int)>
<com.android.commands.svc.NfcCommand: void run(java.lang.String[])>
<com.android.server.pm.PackageManagerService: int checkPermission(java.lang.String,java.lang.String,int)>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.View getContentView()>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskWrites()>
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(int,boolean)>
<android.media.RemoteController.OnClientUpdateListener: void onClientChange(boolean)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setStatusRes(android.print.PrintJobId,int,java.lang.CharSequence)>
<android.widget.CalendarView.CalendarViewDelegate: void setMaxDate(long)>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>
<com.android.server.wm.TaskStack: boolean dimFullscreen()>
<android.filterpacks.imageproc.SepiaFilter: void <init>(java.lang.String)>
<android.widget.ViewFlipper: boolean isFlipping()>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.drawable.Icon)>
<android.app.Notification.Builder: android.app.Notification.Builder setOngoing(boolean)>
<com.android.systemui.statusbar.phone.PanelView: void cancelPeek()>
<com.android.server.am.ActivityManagerService: java.util.List getAllStackInfos()>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>
<android.widget.GridLayout: void onLayout(boolean,int,int,int,int)>
<android.app.assist.AssistStructure.WindowNode: android.app.assist.AssistStructure.ViewNode getRootViewNode()>
<android.os.TokenWatcher: void dump()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRankingUpdateLocked()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ApplicationThreadProxy: void <init>(android.os.IBinder)>
<android.database.MatrixCursor: short getShort(int)>
<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.camera2.legacy.RequestThreadManager: void quit()>
<android.opengl.GLES10: void glPixelStorei(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getEmptyShadeViewHeight()>
<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>
<android.view.View.AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<com.google.android.util.AbstractMessageParser.Part: void setMeText(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.service.dreams.DreamService: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.telecom.Call.Callback: void onCannedTextResponsesLoaded(android.telecom.Call,java.util.List)>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<com.android.server.accessibility.EventStreamTransformation: void onDestroy()>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.os.Parcel: void enforceInterface(java.lang.String)>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<android.content.ClipDescription: android.os.PersistableBundle getExtras()>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollRange()>
<com.android.server.NetworkManagementSocketTagger: void resetKernelUidStats(int)>
<com.android.uiautomator.core.UiObject: boolean waitForExists(long)>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onEmergencyCallAction()>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>
<com.android.systemui.tv.pip.PipRecentsControlsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.Layout: void draw(android.graphics.Canvas)>
<android.app.ActivityManagerProxy: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIcon(java.lang.String,int,java.lang.CharSequence)>
<android.print.pdf.PrintedPdfDocument: android.graphics.Rect getPageContentRect()>
<android.media.tv.TvTrackInfo: int hashCode()>
<android.location.Geocoder: boolean isPresent()>
<com.android.server.tv.TvInputManagerService: void onStart()>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFaceUnlockRunning(int)>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange)>
<com.android.tools.layoutlib.create.MethodListener: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.volume.VolumeDialog: void dismissH(int)>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[])>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
<android.text.style.ScaleXSpan: void <init>(float)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
<com.android.server.policy.PhoneWindowManager: int rotationForOrientationLw(int,int)>
<android.os.ParcelFileDescriptor: boolean canDetectErrors()>
<com.android.server.am.ActivityManagerService: void unregisterReceiver(android.content.IIntentReceiver)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<android.widget.TextView: void setMaxWidth(int)>
<android.opengl.GLES10: void glLightf(int,int,float)>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
<android.telephony.cdma.CdmaCellLocation: void <init>()>
<android.content.pm.ConfigurationInfo: void <init>()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<com.android.egg.neko.PrefState: void addCat(com.android.egg.neko.Cat)>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>
<com.android.systemui.ExpandHelper.Callback: void setExpansionCancelled(android.view.View)>
<com.android.server.backup.BackupManagerService: void clearBackupData(java.lang.String,java.lang.String)>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int)>
<com.android.systemui.statusbar.ExpandableView: float getShadowAlpha()>
<android.view.WindowInsets: boolean isConsumed()>
<com.android.server.notification.ConditionProviders: boolean checkType(android.os.IInterface)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri)>
<android.print.PrinterId: boolean equals(java.lang.Object)>
<android.util.SizeF: int hashCode()>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnecting(android.hardware.display.WifiDisplay)>
<android.widget.Toast: void <init>(android.content.Context)>
<com.android.server.notification.ZenModeHelper: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule,java.lang.String)>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)>
<android.graphics.Bitmap: void eraseColor(int)>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getFormat()>
<android.os.FileUriExposedException: void <init>(java.lang.String)>
<com.android.settingslib.RestrictedPreference: void setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void executePlan(com.android.systemui.recents.model.RecentsTaskLoadPlan.Options,com.android.systemui.recents.model.RecentsTaskLoader,com.android.systemui.recents.model.TaskResourceLoadQueue)>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int,long)>
<android.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>
<com.android.server.pm.ShortcutService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.SystemUIApplication: void onCreate()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void applyProvisionalSelection()>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void resolveHeaderViews()>
<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.FieldID)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<android.app.FragmentManagerImpl: boolean execPendingActions()>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void onReceive(android.content.Context,android.content.Intent)>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>(java.lang.String)>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[],boolean)>
<android.net.wifi.WifiManager.WpsCallback: void onSucceeded()>
<com.android.anqp.HSOsuProvidersElement: void <init>(com.android.anqp.Constants.ANQPElementType,java.nio.ByteBuffer)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
<android.telecom.Connection: void setVideoState(int)>
<android.os.IHardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>
<android.app.ActivityManagerProxy: boolean isBackgroundVisibleBehind(android.os.IBinder)>
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>
<android.app.Service: void stopSelf(int)>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setSyncAdapter(android.accounts.Account,java.lang.String)>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>
<com.android.documentsui.services.Job.Listener: void onFinished(com.android.documentsui.services.Job)>
<com.android.systemui.classifier.Stroke: java.util.ArrayList getPoints()>
<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(java.lang.String,int,int)>
<com.android.systemui.AutoReinflateContainer: void addInflateListener(com.android.systemui.AutoReinflateContainer.InflateListener)>
<android.os.Debug.MemoryInfo: java.lang.String getMemoryStat(java.lang.String)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceUpdated(java.lang.String,android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.systemui.statusbar.NotificationContentView: void reset()>
<com.android.systemui.recents.model.TaskStack: void addGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void receiveVerificationResponse(int)>
<android.view.IWindowManagerImpl: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>
<com.android.keyguard.KeyguardAbsKeyInputView: void showPromptReason(int)>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>
<com.android.documentsui.RecentsLoader: void onStartLoading()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAutoTimeRequired(android.content.Context)>
<android.app.Notification.Action.WearableExtender: void <init>()>
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>
<android.media.AudioRecord: android.media.AudioDeviceInfo getPreferredDevice()>
<android.media.MediaRouter.RouteGroup: android.media.MediaRouter.RouteInfo getRouteAt(int)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] computePrintedPages(android.print.PageRange[],android.print.PageRange[],int)>
<android.telecom.RemoteConference: void setCallAudioState(android.telecom.CallAudioState)>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String)>
<android.hardware.camera2.legacy.GLThreadManager: android.graphics.SurfaceTexture getCurrentSurfaceTexture()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setHomeAsUp(boolean)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isLockTaskPermitted(java.lang.String)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendTimeStamp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,long)>
<com.android.systemui.qs.QSTile.Icon: int hashCode()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addActions(java.util.List)>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder builder(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>
<android.database.sqlite.SQLiteClosable: void acquireReference()>
<android.util.AndroidRuntimeException: void <init>()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void layout()>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.ByteBuffer)>
<android.view.View: int getPaddingBottom()>
<android.widget.VideoView: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String getPassword()>
<com.android.settingslib.drawer.SettingsDrawerAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.tv.pip.PipOnboardingActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.security.keystore.KeyInfo: boolean isUserAuthenticationRequirementEnforcedBySecureHardware()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getIdentity()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabled(int)>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setColorMode(int)>
<android.widget.AdapterView: void addView(android.view.View,int)>
<android.opengl.GLES10: void glLightModelf(int,float)>
<android.hardware.GeomagneticField: float getInclination()>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>
<com.android.systemui.statusbar.car.CarBatteryController: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setAnimationsEnabled(boolean)>
<android.widget.SlidingDrawer: void open()>
<com.android.server.am.ActivityManagerService: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<com.android.server.notification.NotificationIntrusivenessExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<android.view.ViewConfiguration: int getJumpTapTimeout()>
<android.speech.tts.TextToSpeech: int setSpeechRate(float)>
<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLSurfaceView: int getDebugFlags()>
<android.drm.DrmSupportInfo: boolean equals(java.lang.Object)>
<android.widget.ProgressBar: void setProgressDrawableTiled(android.graphics.drawable.Drawable)>
<android.renderscript.Matrix4f: void translate(float,float,float)>
<com.android.systemui.recents.tv.views.TaskCardView: android.graphics.Rect getFocusedThumbnailRect()>
<com.android.settingslib.bluetooth.HidProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.app.PendingIntent getSettingsPendingIntent()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getSimPermissionChoice()>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
<android.hardware.Camera.Parameters: java.util.List getSupportedSceneModes()>
<android.content.pm.ShortcutInfo: int getRank()>
<android.transition.PathMotion: void <init>()>
<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.provider.Settings.System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: android.os.IBinder asBinder()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void hideMySoftInput(android.os.IBinder,int)>
<com.android.server.am.ActivityManagerService: void dumpHeapFinished(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.AudioDeviceInfo: int[] getSampleRates()>
<android.filterpacks.imageproc.SharpenFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.doze.DozeLog: java.lang.String pulseReasonToString(int)>
<android.renderscript.Element: android.renderscript.Element I64_4(android.renderscript.RenderScript)>
<com.android.server.usb.UsbDebuggingManager: void <init>(android.content.Context)>
<android.view.InputDevice.MotionRange: int getSource()>
<android.provider.Settings.Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<com.android.systemui.tuner.NavBarTuner: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.server.display.NightDisplayService: void onBootPhase(int)>
<com.android.systemui.screenshot.TakeScreenshotService: boolean onUnbind(android.content.Intent)>
<com.android.systemui.recents.views.TaskView: void setDimAlphaWithoutHeader(float)>
<android.webkit.WebView: boolean canZoomIn()>
<android.content.Loader: boolean isStarted()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getBottomStackSlowDownHeight()>
<com.android.server.backup.BackupManagerService: java.lang.String selectBackupTransport(java.lang.String)>
<android.app.ActivityManagerProxy: boolean requestVisibleBehind(android.os.IBinder,boolean)>
<com.android.server.am.ActivityManagerService: int getPackageProcessState(java.lang.String,java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: void setPadding(float)>
<android.os.AsyncTask: void onCancelled()>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<com.google.android.util.AbstractMessageParser.TrieNode: void <init>(java.lang.String)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createDisplayContext(android.view.Display)>
<com.android.systemui.statusbar.NotificationGuts: void onDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean deleteSharedPreferences(java.lang.String)>
<android.location.GnssStatus: int getNumSatellites()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: java.lang.String toString()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setCustomBackground(int)>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume()>
<android.app.usage.NetworkStatsManager: void registerUsageCallback(int,java.lang.String,long,android.app.usage.NetworkStatsManager.UsageCallback,android.os.Handler)>
<com.android.systemui.recents.views.TaskView: boolean onLongClick(android.view.View)>
<android.security.keystore.KeyGenParameterSpec: java.lang.String getKeystoreAlias()>
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice,int)>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>
<android.media.ImageWriter: void finalize()>
<android.media.MediaPlayer.TrackInfo: int getTrackType()>
<android.telephony.CellIdentityGsm: int describeContents()>
<android.widget.AdapterView.OnItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<android.app.Fragment: void onViewStateRestored(android.os.Bundle)>
<com.android.server.policy.PhoneWindowManager: void startedGoingToSleep(int)>
<android.widget.GridView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<com.android.anqp.OSUProvider: java.lang.String getSSID()>
<android.speech.tts.UtteranceProgressListener: void onStart(java.lang.String)>
<android.media.midi.MidiDevice: android.media.midi.MidiDevice.MidiConnection connectPorts(android.media.midi.MidiInputPort,int)>
<android.hardware.camera2.params.Face: int getScore()>
<com.android.server.content.SyncStorageEngine.EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine.EndPoint)>
<android.location.GnssNavigationMessage: int getSubmessageId()>
<android.nfc.NfcAdapter: boolean invokeBeam(android.app.Activity)>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>
<android.widget.Toolbar: void setTitleMarginEnd(int)>
<android.widget.EdgeEffect: void setSize(int,int)>
<android.media.MediaScannerConnection: void disconnect()>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: boolean isSelected(java.lang.String)>
<android.preference.SeekBarVolumizer.Callback: void onMuted(boolean,boolean)>
<android.view.ViewGroup: void removeAllViews()>
<com.android.server.AnyMotionDetector.Vector3: void <init>(long,float,float,float)>
<com.android.server.job.controllers.BatteryController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.animation.BidirectionalTypeConverter: java.lang.Object convertBack(java.lang.Object)>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void registerCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration build()>
<android.webkit.CacheManager: android.webkit.CacheManager.CacheResult getCacheFile(java.lang.String,java.util.Map)>
<android.app.MediaRouteButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.server.LockSettingsService.Lifecycle: void onBootPhase(int)>
<com.android.keyguard.KeyguardSecurityView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnected()>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>
<com.android.server.notification.CountdownConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup create(java.lang.String,android.renderscript.ScriptGroup.Future[])>
<android.text.format.Time: java.lang.String format3339(boolean)>
<android.graphics.PointF: float length()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getRssUrl(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>
<android.graphics.PathDashPathEffect_Delegate: boolean isSupported()>
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>
<android.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: android.os.IBinder asBinder()>
<com.android.server.DeviceIdleController.LocalService: void addPowerSaveTempWhitelistAppDirect(int,long,boolean,java.lang.String)>
<android.view.Display.Mode: int describeContents()>
<com.android.server.job.JobPackageTracker: void noteActive(com.android.server.job.controllers.JobStatus)>
<com.google.android.util.AbstractMessageParser.Smiley: boolean isHtml()>
<android.app.ActivityManagerProxy: void killUid(int,int,java.lang.String)>
<com.android.systemui.classifier.FalsingManager: void setNotificationExpanded()>
<android.media.MediaRecorder: void setAudioEncoder(int)>
<com.android.server.connectivity.NetworkAgentInfo: boolean satisfiesImmutableCapabilitiesOf(android.net.NetworkRequest)>
<com.android.systemui.recents.views.RecentsView: void onLayout(boolean,int,int,int,int)>
<android.media.audiofx.LoudnessEnhancer: float getTargetGain()>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacBase: void <init>(int)>
<android.app.UiAutomation: void clearWindowAnimationFrameStats()>
<com.android.server.policy.BarController: void setShowTransparent(boolean)>
<com.android.server.policy.PhoneWindowManager: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<com.android.systemui.assist.AssistDisclosure: void postShow()>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic)>
<com.android.systemui.statusbar.policy.Clock: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>
<android.hardware.camera2.params.RggbChannelVector: java.lang.String toString()>
<com.android.systemui.qs.external.TileLifecycleManager: void <init>(android.os.Handler,android.content.Context,android.service.quicksettings.IQSService,android.service.quicksettings.Tile,android.content.Intent,android.os.UserHandle)>
<android.location.LocationManager: void unregisterGnssStatusCallback(android.location.GnssStatusCallback)>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.telecom.RemoteConference: void separate(android.telecom.RemoteConnection)>
<com.android.server.job.JobStore: java.util.List getJobsByUser(int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
<android.nfc.tech.NfcF: void setTimeout(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener: void onDrawn()>
<com.android.documentsui.model.RootInfo: void <init>()>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>
<android.location.GnssMeasurementsEvent: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.view.View: android.graphics.PorterDuff.Mode getForegroundTintMode()>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitching(int)>
<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>
<android.app.ApplicationThreadProxy: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>
<com.android.systemui.tv.pip.PipControlButtonView: void setText(int)>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<android.opengl.GLES20: void glUseProgram(int)>
<com.android.settingslib.wifi.AccessPoint: int hashCode()>
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.telecom.RemoteConnection: int getState()>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<com.android.statementservice.retriever.Relation: java.lang.String getDetail()>
<android.hardware.camera2.CaptureRequest: int describeContents()>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>
<android.net.RouteInfo: boolean isDefaultRoute()>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<com.android.tools.layoutlib.java.System_Delegate: void log(java.lang.String,java.lang.Throwable)>
<android.widget.GridLayout: void onMeasure(int,int)>
<android.media.AudioFormat: int getChannelMask()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>
<com.android.keyguard.KeyguardPatternView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void lockScrollTo(android.view.View)>
<android.telephony.SubscriptionManager: boolean isNetworkRoaming(int)>
<android.app.ApplicationErrorReport.CrashInfo: void <init>()>
<com.android.systemui.recents.views.TaskView: void onClick(android.view.View)>
<com.android.server.pm.Installer: void getAppSize(java.lang.String,java.lang.String,int,int,long,java.lang.String,android.content.pm.PackageStats)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>
<android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: int getAdapterPositionAt(int)>
<android.location.GnssNavigationMessage: int describeContents()>
<org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void onTuningChanged(java.lang.String,java.lang.String)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<libcore.util.NativeAllocationRegistry_Delegate: long createFinalizer(libcore.util.NativeAllocationRegistry_Delegate.FreeFunction)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: java.lang.String glGetString(int)>
<android.provider.Settings.System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>
<android.content.Context: void startActivity(android.content.Intent)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<com.android.systemui.statusbar.policy.RotationLockController: void addRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<android.hardware.radio.RadioManager.ModuleProperties: android.hardware.radio.RadioManager.BandDescriptor[] getBands()>
<libcore.util.NativeAllocationRegistry_Delegate.FreeFunction: void free(long)>
<android.media.MediaCodec.CodecException: java.lang.String getDiagnosticInfo()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int installExistingPackageAsUser(java.lang.String,int)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<android.renderscript.Allocation: void finalize()>
<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isScreenTurnedOn()>
<android.os.MessageQueue: boolean isIdle()>
<android.widget.CalendarView: void setMaxDate(long)>
<com.android.systemui.recents.RecentsSystemUser: void sendDockingTopTaskEvent(int,android.graphics.Rect)>
<com.android.server.policy.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
<com.android.shell.BugreportProgressService: void onDestroy()>
<android.media.session.MediaController.TransportControls: void stop()>
<com.android.server.notification.ZenLog: void traceIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>
<android.view.View: void setOnHoverListener(android.view.View.OnHoverListener)>
<com.android.server.media.MediaRouterService: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatar(android.graphics.Bitmap)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<android.view.View: void setPivotY(float)>
<android.graphics.drawable.LayerDrawable: void setLayerGravity(int,int)>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>
<android.hardware.radio.RadioManager.FmBandDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.service.voice.VoiceInteractionSession: int getUserDisabledShowContext()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup)>
<com.android.systemui.statusbar.stack.StackScrollState: void removeViewStateForView(android.view.View)>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.common.Utils: int floorLog2(float)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onDetachedFromWindow()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingUriPermission(android.net.Uri,int)>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>
<android.text.style.LeadingMarginSpan.Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<com.android.server.am.ActivityManagerService: void requestBugReport(int)>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(com.android.settingslib.wifi.AccessPoint,android.content.Context,com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache,int,boolean)>
<android.app.job.JobInfo: int getId()>
<android.text.GreedyLineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<com.android.server.statusbar.StatusBarManagerService: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<android.hardware.usb.UsbEndpoint: int getAttributes()>
<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>
<android.text.method.ArrowKeyMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<com.android.tools.layoutlib.java.Objects: boolean equals(java.lang.Object,java.lang.Object)>
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)>
<com.android.systemui.tv.pip.PipManager.Listener: void onShowPipMenu()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getSource()>
<com.android.systemui.tuner.TunerService: void reregisterAll()>
<com.android.systemui.qs.tiles.BluetoothTile: android.content.Intent getLongClickIntent()>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getRightPreview()>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>
<android.net.ip.IpManager.Callback: void onProvisioningFailure(android.net.LinkProperties)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void <init>(android.hardware.Camera)>
<com.android.systemui.recents.views.RecentsView: void onDetachedFromWindow()>
<com.android.uiautomator.core.UiDevice: void unfreezeRotation()>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
<android.content.res.BridgeTypedArray: void sealArray()>
<com.android.documentsui.DocumentsActivity: java.lang.String getDrawerTitle()>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>
<android.widget.AnalogClock: void <init>(android.content.Context)>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setRandomizedEncryptionRequired(boolean)>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package)>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<com.android.anqp.Constants: long getInteger(java.nio.ByteBuffer,java.nio.ByteOrder,int)>
<com.android.server.connectivity.NetworkNotificationManager: void showToast(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>
<android.widget.AbsListView: void requestDisallowInterceptTouchEvent(boolean)>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>
<android.view.ViewStructure: void setClassName(java.lang.String)>
<com.android.server.usb.UsbService: void allowUsbDebugging(boolean,java.lang.String)>
<android.database.MatrixCursor: float getFloat(int)>
<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener: void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice)>
<android.widget.AbsSeekBar: boolean getSplitTrack()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.DebugFlagsChangedEvent)>
<android.opengl.GLES30: void glReadBuffer(int)>
<android.telecom.DisconnectCause: void <init>(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.commands.sm.Sm: void runGetPrimaryStorageUuid()>
<android.widget.AutoCompleteTextView: void dismissDropDown()>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 minus(com.android.server.AnyMotionDetector.Vector3)>
<com.android.server.backup.AccountSyncSettingsBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.policy.CastController.Callback: void onCastDevicesChanged()>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>
<com.android.settingslib.applications.ApplicationsState.AppEntry: void ensureLabel(android.content.Context)>
<android.app.usage.UsageEvents.Event: java.lang.String getClassName()>
<android.opengl.GLES31: void glMemoryBarrier(int)>
<android.app.ActivityManagerProxy: void suppressResizeConfigChanges(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isGroupExpanded()>
<android.speech.tts.SynthesisCallback: boolean hasFinished()>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStopped(boolean)>
<com.android.server.policy.ImmersiveModeConfirmation: boolean onPowerKeyDown(boolean,long,boolean,boolean)>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>
<android.widget.Space: void <init>(android.content.Context)>
<android.widget.AlphabetIndexer: int getSectionForPosition(int)>
<android.graphics.Rect: void <init>(int,int,int,int)>
<com.google.android.util.AbstractMessageParser.Photo: boolean isHtml()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOut()>
<android.app.Activity: void setProgress(int)>
<android.view.ViewGroup: void onStopNestedScroll(android.view.View)>
<android.view.KeyEvent.DispatcherState: void reset()>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
<android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>
<android.util.LruCache: java.lang.String toString()>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void resume()>
<android.app.ApplicationThreadProxy: void scheduleConfigurationChanged(android.content.res.Configuration)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>
<android.widget.ViewAnimator: void removeAllViews()>
<com.android.server.am.DumpHeapProvider: java.lang.String getType(android.net.Uri)>
<com.android.systemui.DessertCaseView: void start()>
<com.android.systemui.statusbar.stack.AmbientState: void setLayoutHeight(int)>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetBottom(int,int)>
<android.widget.TextView: void setElegantTextHeight(boolean)>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>
<android.net.IpPrefix: int getPrefixLength()>
<com.android.server.policy.PhoneWindowManager: void setTvPipVisibilityLw(boolean)>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>
<android.util.LongSparseArray: void append(long,java.lang.Object)>
<android.app.ActionBar: void setIcon(int)>
<android.renderscript.ScriptIntrinsicBLAS: void ZGERC(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>
<android.accessibilityservice.AccessibilityService.MagnificationController: void addListener(android.accessibilityservice.AccessibilityService.MagnificationController.OnMagnificationChangedListener,android.os.Handler)>
<com.android.systemui.qs.QSPanel: void onDetachedFromWindow()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector childSelector(com.android.uiautomator.core.UiSelector)>
<android.widget.CursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<com.android.systemui.SwipeHelper: void onMoveUpdate(android.view.View,float,float)>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera.PreviewCallback)>
<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRules(java.lang.String,java.lang.String)>
<android.os.UserManager: java.lang.String getUserName()>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.telephony.SignalStrength: boolean isGsm()>
<com.android.systemui.statusbar.policy.ZenModeController: void removeCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<android.content.AsyncTaskLoader: boolean onCancelLoad()>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.graphics.Path: void moveTo(float,float)>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void startIntensityAnimation(android.animation.ValueAnimator.AnimatorUpdateListener,boolean,long,android.animation.Animator.AnimatorListener)>
<android.view.textservice.TextInfo: int getSequence()>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.preload.Main: void main(java.lang.String[])>
<android.location.Location: boolean hasAltitude()>
<android.widget.AbsListView: void onFilterComplete(int)>
<android.app.VoiceInteractor.PickOptionRequest.Option: java.lang.CharSequence getLabel()>
<com.android.documentsui.DocumentsApplication: com.android.documentsui.ThumbnailCache getThumbnailsCache(android.content.Context,android.graphics.Point)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isSummaryOfSuppressedGroup(android.service.notification.StatusBarNotification)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustGrantedWithFlags(int,int)>
<com.android.gallery3d.glrenderer.GLPaint: int getColor()>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.LayoutLog getLog()>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>
<android.graphics.Paint: float descent()>
<android.graphics.drawable.ScaleDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean hasLockscreenWallpaper()>
<android.app.FragmentTransaction: android.app.FragmentTransaction show(android.app.Fragment)>
<com.android.hotspot2.omadm.OMAScalar: void marshal(java.io.OutputStream,int)>
<com.android.systemui.statusbar.DismissView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AdapterView: void addView(android.view.View)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle)>
<android.util.MonthDisplayHelper: int getDayAt(int,int)>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>
<android.transition.ChangeScroll: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.os.Messenger: android.os.IBinder getBinder()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void clearNotificationEffects()>
<com.android.egg.neko.Cat: int getBodyColor()>
<com.google.android.gles_jni.GLImpl: void glBlendFunc(int,int)>
<com.android.anqp.eap.EAPMethod: int match(com.android.hotspot2.pps.Credential)>
<android.view.IWindowManagerImpl: void endProlongedAnimations()>
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)>
<com.android.systemui.egg.MLand: void onSizeChanged(int,int,int,int)>
<android.app.Activity: android.view.View findViewById(int)>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: java.lang.String toString()>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateSerialNumber(java.math.BigInteger)>
<android.webkit.WebSettings: void setAllowFileAccessFromFileURLs(boolean)>
<com.android.uiautomator.core.UiDevice: void setOrientationNatural()>
<android.widget.GridLayout.LayoutParams: int hashCode()>
<android.content.ClipData: android.content.ClipData.Item getItemAt(int)>
<android.text.style.SuperscriptSpan: int describeContents()>
<android.app.ApplicationErrorReport.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.nan.TlvBufferUtils.TlvElement: java.lang.String getString()>
<com.android.systemui.statusbar.policy.MobileSignalController: void unregisterListener()>
<com.android.uiautomator.core.UiDevice: boolean isNaturalOrientation()>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onPause()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>
<android.widget.TimePicker: void setHour(int)>
<com.android.layoutlib.bridge.impl.ResourceHelper: int getColor(java.lang.String)>
<android.media.MediaPlayer: void start()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setMenuVisibility(boolean)>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab)>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()>
<com.android.systemui.statusbar.CommandQueue: void preloadRecentApps()>
<android.telecom.ConnectionService: void addExistingConnection(android.telecom.PhoneAccountHandle,android.telecom.Connection)>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig.Builder setRds(boolean)>
<android.view.MotionEvent: int getActionButton()>
<android.media.AudioTrack: float getMinVolume()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: com.google.android.util.AbstractMessageParser.FlickrPhoto matchURL(java.lang.String,java.lang.String)>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,int)>
<android.widget.Toolbar: java.lang.CharSequence getTitle()>
<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>
<android.bluetooth.le.AdvertiseSettings: java.lang.String toString()>
<com.android.server.accessibility.AutoclickController: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<android.widget.ViewSwitcher: void <init>(android.content.Context)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void reset()>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>
<android.view.Window: void clearFlags(int)>
<com.android.tools.layoutlib.java.Objects: int hashCode(java.lang.Object)>
<com.android.gallery3d.glrenderer.GLCanvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<android.content.ComponentName: int hashCode()>
<android.content.Intent: void setClipData(android.content.ClipData)>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.assist.AssistStructure.ViewNode: int getChildCount()>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationAtEnd()>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: void <init>(android.content.Context)>
<android.media.MediaMetadataRetriever: void release()>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDismissAllInProgress()>
<android.content.ClipData.Item: void <init>(android.content.Intent)>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: java.lang.String toString()>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.RootCursorWrapper: java.lang.String getString(int)>
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.app.Activity: void setFeatureDrawableResource(int,int)>
<android.bluetooth.le.AdvertiseSettings: int getTxPowerLevel()>
<com.android.photos.views.TiledImageView: void destroy()>
<android.view.ViewDebug.ViewOperation: java.lang.Object[] pre()>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)>
<android.content.pm.PackageParser.Package: void setApplicationInfoFlags(int,int)>
<android.view.View: android.view.ViewParent getParentForAccessibility()>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>
<android.widget.DigitalClock: void <init>(android.content.Context)>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.preference.MultiSelectListPreference: int findIndexOfValue(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isAddOrRemoveAnimationPending()>
<android.widget.Toolbar: int getTitleMarginBottom()>
<android.media.AudioRecord: int getRecordingState()>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.app.job.JobInfo: long getIntervalMillis()>
<android.os.Debug: long getNativeHeapAllocatedSize()>
<android.widget.DialerFilter: void onFinishInflate()>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
<android.media.MediaPlayer.TrackInfo: android.media.MediaFormat getFormat()>
<android.service.voice.VoiceInteractionService: boolean isActiveService(android.content.Context,android.content.ComponentName)>
<android.widget.AbsListView: void deferNotifyDataSetChanged()>
<com.android.sharedstoragebackup.SharedStorageAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.layoutlib.bridge.impl.RenderAction: android.content.res.Configuration getConfiguration(com.android.ide.common.rendering.api.RenderParams)>
<android.os.storage.StorageVolume: android.content.Intent createAccessIntent(java.lang.String)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.ActivityManagerService: void resizeStack(int,android.graphics.Rect,boolean,boolean,boolean,int)>
<android.graphics.Paint: float getStrokeMiter()>
<android.hardware.camera2.impl.CameraDeviceImpl: void setSessionListener(android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK)>
<android.widget.TableLayout: java.lang.CharSequence getAccessibilityClassName()>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte[])>
<com.android.systemui.recents.model.Task: boolean isFreeformTask()>
<android.net.nsd.NsdManager.RegistrationListener: void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int)>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>
<android.net.Uri: java.lang.String toString()>
<android.widget.TextView: int length()>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String)>
<android.webkit.CacheManager.CacheResult: java.lang.String getETag()>
<com.android.uiautomator.core.UiDevice: void wakeUp()>
<android.content.pm.PackageInstaller.SessionInfo: android.graphics.Bitmap getAppIcon()>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean isStateful()>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>
<android.content.Context: boolean migrateDatabaseFrom(android.content.Context,java.lang.String)>
<android.view.SearchEvent: android.view.InputDevice getInputDevice()>
<com.android.settingslib.net.ChartDataLoader: void onStopLoading()>
<android.graphics.BitmapRegionDecoder: int getWidth()>
<com.android.server.policy.EnableAccessibilityController: boolean onTouchEvent(android.view.MotionEvent)>
<android.location.LocationListener: void onProviderDisabled(java.lang.String)>
<android.view.textservice.SuggestionsInfo: int getCookie()>
<android.telephony.CellSignalStrength: int getDbm()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isMedia()>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>
<com.android.server.policy.PhoneWindowManager: int getMaxWallpaperLayer()>
<android.renderscript.FieldPacker: void addI32(int)>
<android.content.Context: android.content.res.Resources getResources()>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>
<android.app.ActivityManagerProxy: void reportActivityFullyDrawn(android.os.IBinder)>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>
<android.media.AudioFormat.Builder: android.media.AudioFormat build()>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.server.pm.PackageManagerService: void clearPackagePreferredActivities(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.mtp.MtpObjectInfo: int getImagePixHeight()>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setName(java.lang.String)>
<com.android.systemui.classifier.SpeedEvaluator: float evaluate(float)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>
<com.android.systemui.recents.tv.views.RecentsTvView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: void setComponents(com.android.systemui.RecentsComponent,com.android.systemui.stackdivider.Divider,com.android.systemui.statusbar.phone.NavigationBarView)>
<com.android.documentsui.ProviderExecutor: com.android.documentsui.ProviderExecutor forAuthority(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.io.InputStream)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.PopupWindow: int getWidth()>
<android.net.ConnectivityManager: int getNetworkPreference()>
<android.app.usage.NetworkStats: boolean getNextBucket(android.app.usage.NetworkStats.Bucket)>
<android.util.Xml: android.util.Xml.Encoding findEncodingByName(java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: int getBackgroundColorForExpansionState()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean)>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.model.Task: void removeCallback(com.android.systemui.recents.model.Task.TaskCallbacks)>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>
<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)>
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>
<android.app.assist.AssistContent: java.lang.String getStructuredData()>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createPostponeInstallPolicy()>
<android.telecom.InCallService.VideoCall: void unregisterCallback(android.telecom.InCallService.VideoCall.Callback)>
<android.app.assist.AssistStructure.WindowNode: int getHeight()>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle convertCameraAreaToActiveArrayRectangle(android.graphics.Rect,android.hardware.camera2.legacy.ParameterUtils.ZoomData,android.hardware.Camera.Area)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)>
<com.android.systemui.AutoReinflateContainer.InflateListener: void onInflated(android.view.View)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>
<com.android.hotspot2.pps.Policy: void <init>(com.android.hotspot2.omadm.OMANode)>
<com.android.server.backup.BackupManagerService.FullBackupPreflight: int preflightFullBackup(android.content.pm.PackageInfo,android.app.IBackupAgent)>
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,android.view.animation.Interpolator,long)>
<com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result removeChild(java.lang.Object,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.server.notification.ScheduleConditionProvider: void onBootComplete()>
<android.view.IWindowManagerImpl: void startFreezingScreen(int,int)>
<com.android.gallery3d.exif.Rational: java.lang.String toString()>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<com.android.server.job.controllers.BatteryController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<com.android.documentsui.CreateDirectoryFragment: void show(android.app.FragmentManager)>
<android.graphics.Path_Delegate: boolean hasPoints()>
<com.android.systemui.volume.MediaSessions: void onActiveSessionsUpdatedH(java.util.List)>
<android.renderscript.AllocationAdapter: void setX(int)>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.webkit.WebView.HitTestResult: int getType()>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setExpandingEnabled(boolean)>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>
<com.android.systemui.SystemUI: java.lang.Object getComponent(java.lang.Class)>
<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void showRecentApps(boolean,boolean)>
<android.widget.DatePicker: void setMaxDate(long)>
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)>
<android.renderscript.ScriptIntrinsicBLAS: void DSPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.systemui.qs.tiles.UserDetailView: com.android.systemui.qs.tiles.UserDetailView inflate(android.content.Context,android.view.ViewGroup,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isBouncerShowing()>
<android.widget.PopupWindow: void setWidth(int)>
<com.android.systemui.statusbar.NotificationGuts: void onAttachedToWindow()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStopTiming(android.os.Bundle)>
<com.android.server.SystemConfig: android.util.ArrayMap getDisabledUntilUsedPreinstalledCarrierAssociatedApps()>
<android.graphics.drawable.ShapeDrawable: boolean isStateful()>
<android.renderscript.FieldPacker: android.renderscript.Long2 subLong2()>
<android.media.TimedMetaData: long getTimestamp()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView createView(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getCookie(java.lang.Object)>
<android.os.BinderProxy: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<com.android.systemui.qs.QSTileBaseView: void onLayout(boolean,int,int,int,int)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(java.lang.String)>
<android.widget.Gallery: void setUnselectedAlpha(float)>
<com.android.server.midi.MidiService: void registerListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<android.media.RemoteController.OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController.MetadataEditor)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focused(boolean)>
<android.content.pm.LauncherActivityInfo: long getFirstInstallTime()>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asLandscape()>
<com.google.android.util.AbstractMessageParser.Format: boolean setCaps()>
<android.graphics.drawable.AnimationDrawable: void run()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.LocationController getLocationController()>
<android.util.ArrayMap: int hashCode()>
<com.android.server.pm.PackageManagerService: boolean isUpgrade()>
<android.view.Window: boolean isActive()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setShowingLegacyBackground(boolean)>
<android.content.Context: android.content.ContentResolver getContentResolver()>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int,float)>
<com.android.server.net.NetworkStatsCollection: long getFirstAtomicBucketMillis()>
<android.renderscript.ScriptIntrinsicBLAS: void CGERC(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>
<com.android.server.print.PrintManagerService: void onStopUser(int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>
<android.telecom.TelecomAnalytics.SessionTiming: java.lang.Integer getKey()>
<android.app.UiAutomation: android.os.ParcelFileDescriptor executeShellCommand(java.lang.String)>
<com.android.systemui.tuner.KeycodeSelectionHelper: android.content.Intent getSelectImageIntent()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void runAfterAnimationFinished(java.lang.Runnable)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean,boolean)>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void <init>(com.android.systemui.recents.views.RecentsView)>
<android.database.CursorWindow: java.lang.String toString()>
<com.android.systemui.statusbar.BaseStatusBar: void hideRecentApps(boolean,boolean)>
<com.android.systemui.settings.ToggleSlider: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.PseudoGridView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.GlobalSetting: void onChange(boolean)>
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getInitialFocusState()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setVisibility(int)>
<android.service.notification.NotificationListenerService: void requestRebind(android.content.ComponentName)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleFinishedGoingToSleep(int)>
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.gesture.GestureLibrary: void setSequenceType(int)>
<com.android.hotspot2.WifiNetworkAdapter: android.net.wifi.WifiConfiguration getActiveWifiConfig()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context)>
<android.telecom.Connection: void destroy()>
<android.os.TransactionTooLargeException: void <init>(java.lang.String)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice,int)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>
<com.android.server.am.ActivityManagerService: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean inFinalizer()>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean hasPinnedHeadsUp()>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector index(int)>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
<android.app.ActionBar: int getDisplayOptions()>
<android.webkit.WebView: int computeHorizontalScrollOffset()>
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>
<android.hardware.fingerprint.IFingerprintDaemon: int cancelEnrollment()>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>
<com.example.android.networkusage.SettingsActivity: void onPause()>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.activity.HideRecentsEvent)>
<com.android.server.input.InputManagerService: void setCustomPointerIcon(android.view.PointerIcon)>
<com.android.systemui.qs.QSTile.Host: java.util.Collection getTiles()>
<android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onExpandingFinished()>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.PackageItemInfo)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>
<android.app.ActivityManager.TaskDescription: void <init>(android.app.ActivityManager.TaskDescription)>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context)>
<android.bluetooth.le.ScanResult: void writeToParcel(android.os.Parcel,int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.widget.AdapterViewFlipper: boolean isAutoStart()>
<android.content.ComponentName: boolean equals(java.lang.Object)>
<android.os.Debug: int setGlobalAllocationLimit(int)>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: com.android.ide.common.rendering.api.Result preAnimation()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setClipTopAmount(int)>
<android.widget.ActionMenuView: void setPopupTheme(int)>
<android.gesture.GestureOverlayView: void setGestureColor(int)>
<com.android.systemui.recents.RecentsActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.GridLayout: int getOrientation()>
<android.util.StateSet: boolean stateSetMatches(int[],int)>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void <init>(com.android.systemui.statusbar.stack.NotificationStackScrollLayout)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>
<android.media.audiofx.Equalizer: short getNumberOfPresets()>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
<android.view.animation.Transformation: void <init>()>
<android.os.Process: android.os.UserHandle myUserHandle()>
<android.util.Range: java.lang.Comparable getUpper()>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void onTaskViewSizeChanged(int,int)>
<android.graphics.drawable.ShapeDrawable: int getAlpha()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedGoingToSleep()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void remove(long)>
<android.animation.LayoutTransition: boolean isRunning()>
<android.service.notification.NotificationListenerService: void onDestroy()>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData.Builder setTxFilter(byte[],int)>
<com.android.systemui.assist.AssistManager: void onConfigurationChanged()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnDismissListener(android.content.DialogInterface.OnDismissListener)>
<com.google.android.gles_jni.GLImpl: void glLineWidthx(int)>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.media.tv.TvView.TimeShiftPositionCallback: void onTimeShiftStartPositionChanged(java.lang.String,long)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.view.KeyEvent: boolean hasNoModifiers()>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>
<com.android.systemui.DessertCaseView.RescalingContainer: void setView(com.android.systemui.DessertCaseView)>
<android.graphics.Xfermode_Delegate: android.graphics.Xfermode_Delegate getDelegate(long)>
<com.android.systemui.recents.views.TaskStackView: void onMeasure(int,int)>
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean disable()>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
<android.telephony.TelephonyManager: boolean isWorldPhone()>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSIconView createTileView(android.content.Context)>
<android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
<android.view.ViewGroup: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View)>
<android.printservice.PrintJob: java.lang.String getAdvancedStringOption(java.lang.String)>
<android.webkit.WebView: void clearFormData()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void finish(boolean)>
<android.graphics.ComposePathEffect_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationStartX(float)>
<android.content.Context: int checkCallingPermission(java.lang.String)>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.hardware.camera2.params.TonemapCurve: void <init>(float[],float[],float[])>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getBadgedApplicationLabel(android.content.pm.ApplicationInfo,int)>
<android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
<android.widget.TextView: void setHyphenationFrequency(int)>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getWindowRect()>
<android.webkit.WebViewProvider.ViewDelegate: void setOverScrollMode(int)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>
<android.widget.Spinner: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean wasJustClicked()>
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.camera2.impl.CameraMetadataNative.Key: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getMaxContentHeight()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>
<android.hardware.camera2.CaptureRequest.Builder: android.hardware.camera2.CaptureRequest build()>
<android.os.Process: long getStartUptimeMillis()>
<android.hardware.Camera.Parameters: void setRotation(int)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void stop()>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void addOnScrollListener(android.support.v7.widget.RecyclerView.OnScrollListener)>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,java.nio.FloatBuffer)>
<com.android.server.connectivity.NetworkAgentInfo: long getLingerExpiry()>
<android.inputmethodservice.Keyboard: void setVerticalGap(int)>
<com.android.server.pm.PermissionsState: void copyFrom(com.android.server.pm.PermissionsState)>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>
<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getHomeActivityPackageName()>
<android.view.Window: void setAllowReturnTransitionOverlap(boolean)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void prepareExpansionChanged(com.android.systemui.statusbar.stack.StackScrollState)>
<android.app.AlertDialog: void <init>(android.content.Context)>
<android.view.View: android.view.ViewOverlay getOverlay()>
<android.util.AttributeSet: int getAttributeCount()>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
<com.android.systemui.statusbar.policy.UserSwitcherController: java.lang.String getCurrentUserName(android.content.Context)>
<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>
<android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>
<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.renderscript.Matrix2f: void loadScale(float,float)>
<com.android.systemui.qs.QSDualTileLabel: void setText(java.lang.CharSequence)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<com.android.server.am.ActivityManagerService: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>
<android.media.audiofx.BassBoost: void <init>(int,int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>
<android.telephony.TelephonyManager: int getPhoneType()>
<com.android.printspooler.util.ApprovedPrintServices: java.util.Set getApprovedServices()>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.print.PrintAttributes: int describeContents()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.os.IBinder asBinder()>
<android.filterfw.core.FilterContext.OnFrameReceivedListener: void onFrameReceived(android.filterfw.core.Filter,android.filterfw.core.Frame,java.lang.Object)>
<android.hardware.GeomagneticField: float getX()>
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context)>
<android.opengl.GLES10: void glActiveTexture(int)>
<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent createEvent(int)>
<android.media.audiofx.Equalizer: int getCenterFreq(short)>
<android.app.Notification.Action.WearableExtender: void <init>(android.app.Notification.Action)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,java.lang.String,android.net.NetworkInfo.DetailedState,boolean,java.lang.String)>
<android.widget.PopupWindow: void setElevation(float)>
<android.opengl.GLES20: void glGenerateMipmap(int)>
<com.android.systemui.statusbar.NotificationContentView: int getContentHeight()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getRotation()>
<android.graphics.drawable.LayerDrawable: void setDrawable(int,android.graphics.drawable.Drawable)>
<android.widget.ExpandableListAdapter: void onGroupExpanded(int)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onManualRuleChanged(android.service.notification.ZenModeConfig.ZenRule)>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>
<android.media.tv.TvInputManager.TvInputCallback: void onInputAdded(java.lang.String)>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void <init>()>
<com.android.hotspot2.osu.XMLParser: void <init>(java.io.InputStream)>
<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>
<com.android.systemui.statusbar.BaseStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<android.widget.DatePicker: void setEnabled(boolean)>
<android.provider.DocumentsProvider: void revokeDocumentPermission(java.lang.String)>
<com.android.preload.DeviceUtils: java.lang.String getBuildType(com.android.ddmlib.IDevice)>
<android.media.MediaRouter.UserRouteInfo: void setRemoteControlClient(android.media.RemoteControlClient)>
<android.net.wifi.nan.TlvBufferUtils.TlvElement: int getInt()>
<android.content.res.Configuration: android.os.LocaleList getLocales()>
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>
<android.widget.Toolbar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<android.sax.EndElementListener: void end()>
<android.media.MediaRouter.Callback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>
<android.util.Printer: void println(java.lang.String)>
<android.widget.CalendarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES10: void glPopMatrix()>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawColor(int,android.graphics.PorterDuff.Mode)>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<com.android.server.Watchdog: void setAllowRestart(boolean)>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder addMessage(java.lang.String)>
<android.telecom.Connection: void setDialing()>
<android.app.ActionBar.Tab: android.graphics.drawable.Drawable getIcon()>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.lang.String[],int)>
<android.hardware.camera2.legacy.RequestHolder: boolean jpegType(android.view.Surface)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>
<com.android.server.clipboard.ClipboardService: android.content.ClipData getPrimaryClip(java.lang.String)>
<android.os.Process: int myPid()>
<android.media.MediaMetadataEditor: void removeEditableKeys()>
<android.media.Rating: boolean isRated()>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotEnabled()>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>
<android.app.ProgressDialog: void onStart()>
<android.widget.TextView: void endBatchEdit()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void sleep(long)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOff()>
<com.android.documentsui.OpenExternalDirectoryActivity: void onDestroy()>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTrackballEvent(android.view.MotionEvent)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void addCategoryListener(com.android.settingslib.drawer.SettingsDrawerActivity.CategoryListener)>
<android.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)>
<android.renderscript.Long4: void <init>()>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onBatteryLevelChanged(int,boolean,boolean)>
<android.widget.GridView: int computeVerticalScrollRange()>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isNetworkLoggingEnabled()>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<android.graphics.Canvas_Delegate: void native_drawLine(long,float,float,float,float,long)>
<android.view.View: boolean performHapticFeedback(int)>
<com.android.systemui.recents.misc.Utilities: void scaleRectAboutCenter(android.graphics.RectF,float)>
<android.graphics.Atlas.SlicePolicy.SplitDecision: boolean splitHorizontal(int,int,int,int)>
<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>
<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>
<com.android.server.tv.TvInputManagerService: void onBootPhase(int)>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismissWithAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.mtp.MtpDocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentTextureIndex()>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setIcon(java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void getStackTransform(float,float,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.os.ParcelFileDescriptor: void finalize()>
<com.android.preload.DumpTableModel: int getRowCount()>
<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>
<android.renderscript.Short4: void <init>()>
<com.android.server.notification.ZenModeHelper: void requestFromListener(android.content.ComponentName,int)>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Element: int getBytesSize()>
<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>
<javax.microedition.khronos.opengles.GL10: void glNormal3x(int,int,int)>
<android.media.Image.Plane: int getPixelStride()>
<android.media.effect.EffectFactory: android.media.effect.Effect createEffect(java.lang.String)>
<com.android.statementservice.retriever.Statement: boolean equals(java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasUserSetupCompleted()>
<com.android.settingslib.drawer.DashboardCategory: void removeTile(com.android.settingslib.drawer.Tile)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.String,int)>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>
<android.os.BinderProxy: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.MediaRouteButton: void onAttachedToWindow()>
<android.util.AttributeSet: java.lang.String getAttributeValue(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>
<android.os.Parcel: void writeInt(int)>
<android.telecom.RemoteConference.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConference,java.util.List)>
<android.os.Parcel: float[] createFloatArray()>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<com.android.systemui.egg.MLand: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.uiautomator.core.UiObject: boolean performMultiPointerGesture(android.view.MotionEvent.PointerCoords[][])>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>
<com.android.anqp.eap.VendorSpecificAuth: void <init>(int,java.nio.ByteBuffer)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<android.app.backup.FullBackup.BackupScheme: android.util.ArraySet maybeParseAndGetCanonicalExcludePaths()>
<android.graphics.Movie: void finalize()>
<android.view.MotionEvent: void transform(android.graphics.Matrix)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getPositionDescription()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void preloadRawTasks(boolean)>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPort(int)>
<com.android.settingslib.net.ChartDataLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,com.android.settingslib.AppItem,int)>
<android.animation.Keyframes.FloatKeyframes: float getFloatValue(float)>
<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.RemoteInputController: boolean isSpinning(java.lang.String)>
<android.app.DatePickerDialog: void updateDate(int,int,int)>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<com.android.location.fused.FusionEngine: void onProviderDisabled(java.lang.String)>
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void unregisterMoveCallback(android.content.pm.PackageManager.MoveCallback)>
<com.android.documentsui.Events: boolean isShiftPressed(android.view.MotionEvent)>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>
<android.service.dreams.DreamService: void setInteractive(boolean)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: int getTypeLabelResource(int)>
<com.android.server.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)>
<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper.Callback)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAccessibilityServiceDisallowed(android.content.Context,java.lang.String,int)>
<android.view.MotionEvent: long getHistoricalEventTime(int)>
<android.gesture.GestureOverlayView: long getFadeOffset()>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK getDeviceStateCallback()>
<com.android.server.am.ActivityManagerService: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<com.android.server.accessibility.AutoclickController: void onKeyEvent(android.view.KeyEvent,int)>
<android.opengl.GLES20: void glLineWidth(float)>
<android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>
<android.view.ActionMode: void setTitle(int)>
<android.graphics.Canvas_Delegate: int native_getWidth(long)>
<com.android.uiautomator.core.UiDevice: void setOrientationLeft()>
<com.android.layoutlib.bridge.android.BridgeWindow: void updatePointerIcon(float,float)>
<com.android.systemui.statusbar.policy.PreviewInflater: android.content.pm.ActivityInfo getTargetActivityInfo(android.content.Context,android.content.Intent,int,boolean)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.provider.SyncStateContract.Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>
<android.widget.ExpandableListView.ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>
<android.media.tv.TvInputManager: java.util.List getTvInputList()>
<com.android.gallery3d.common.Utils: void closeSilently(android.os.ParcelFileDescriptor)>
<android.app.ActionBar: void removeTabAt(int)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onChanged()>
<android.os.Messenger: int hashCode()>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: com.android.systemui.statusbar.ExpandableNotificationRow getNotificationParent()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
<com.android.systemui.qs.tiles.IntentTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<android.text.LoginFilter: void onInvalidCharacter(char)>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.pps.HomeSP getHomeSP(java.lang.String)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>
<com.android.systemui.statusbar.NotificationContentView: void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController)>
<android.widget.VideoView: boolean canSeekForward()>
<com.android.server.accessibility.KeyEventDispatcher: void flush(com.android.server.accessibility.AccessibilityManagerService.Service)>
<android.content.pm.PackageInstaller: void updateSessionAppLabel(int,java.lang.CharSequence)>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String)>
<com.android.systemui.statusbar.phone.QSTileHost: void openPanels()>
<android.text.style.TtsSpan.TelephoneBuilder: void <init>()>
<android.graphics.Matrix: int hashCode()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setExpanded(boolean)>
<android.app.ActivityManagerProxy: void sendIdleJobTrigger()>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.am.ActivityManagerService: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<android.hardware.Camera.Parameters: void setRecordingHint(boolean)>
<android.text.style.TtsSpan.VerbatimBuilder: void <init>(java.lang.String)>
<android.widget.GridView: void setVerticalSpacing(int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setNoCrop(boolean)>
<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)>
<android.content.pm.LabeledIntent: void readFromParcel(android.os.Parcel)>
<android.util.SparseLongArray: int size()>
<android.view.KeyboardShortcutInfo: int getKeycode()>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: java.lang.CharSequence getMessage()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectNetwork()>
<com.android.server.am.ActivityManagerService: boolean moveTopActivityToPinnedStack(int,android.graphics.Rect)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>
<com.android.systemui.usb.UsbConfirmActivity: void onCreate(android.os.Bundle)>
<android.hardware.Camera.Parameters: void setGpsAltitude(double)>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayDisconnected()>
<android.app.Dialog: void setContentView(int)>
<android.graphics.drawable.RotateDrawable: float getPivotX()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<com.android.server.search.SearchManagerService.Lifecycle: void onCleanupUser(int)>
<android.widget.Toolbar: void setNavigationContentDescription(int)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String)>
<android.opengl.GLES32: void glBlendFuncSeparatei(int,int,int,int,int)>
<android.app.Activity: void setActionBar(android.widget.Toolbar)>
<com.android.systemui.qs.QSIconView: void disableAnimation()>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: float getXVelocity()>
<android.renderscript.Float2: void <init>(float,float)>
<com.android.server.policy.PhoneWindowManager: void systemBooted()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<android.database.CursorWrapper: int getInt(int)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean isTileAdded(android.content.Context,android.content.ComponentName)>
<com.android.systemui.statusbar.SignalClusterView: void onRtlPropertiesChanged(int)>
<android.os.Parcel: void writeByte(byte)>
<com.android.server.am.BatteryStatsService: void noteWifiOn()>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<android.app.KeyguardManager: boolean isKeyguardSecure()>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>
<android.filterpacks.imageproc.LomoishFilter: void setupPorts()>
<android.graphics.Canvas_Delegate: void nativeDrawBitmapMesh(long,android.graphics.Bitmap,int,int,float[],int,int[],int,long)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isShowing()>
<android.text.style.SuggestionSpan: java.lang.String getLocale()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setUsername(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.recents.model.TaskStack: void <init>()>
<android.os.UEventObserver.UEvent: java.lang.String toString()>
<android.media.session.MediaSession.Token: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.RestrictedPreference: void checkRestrictionAndSetDisabled(java.lang.String)>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<android.telecom.CallScreeningService: void onScreenCall(android.telecom.Call.Details)>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>
<android.os.PowerManager.WakeLock: boolean isHeld()>
<android.view.ScaleGestureDetector: boolean isInProgress()>
<android.app.ActionBar: void setCustomView(int)>
<com.android.commands.media.Media: void main(java.lang.String[])>
<com.android.server.am.ActivityManagerService: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>
<android.view.InputEvent: boolean isFromSource(int)>
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>
<android.telephony.CellSignalStrengthWcdma: int getAsuLevel()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.AbsListView: int getChoiceMode()>
<android.media.AudioTrack: int setBufferSizeInFrames(int)>
<android.widget.RemoteViews: void <init>(android.os.Parcel)>
<android.view.MotionEvent: int axisFromString(java.lang.String)>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryPreProcessings(int)>
<com.android.systemui.recents.RecentsImpl: void onAnimationFinished()>
<android.os.Debug: void resetGlobalExternalFreedCount()>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.phone.LockIcon: void setScreenOn(boolean)>
<com.android.systemui.recents.events.EventBus: void send(com.android.systemui.recents.events.EventBus.Event)>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.hardware.camera2.utils.TaskDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener)>
<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>
<android.telecom.TelecomManager: android.net.Uri getAdnUriForPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readFullLongArray(java.io.DataInputStream)>
<android.os.LocaleList: boolean equals(java.lang.Object)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<android.media.midi.MidiDevice: android.media.midi.MidiDeviceInfo getInfo()>
<android.media.ImageWriter: void close()>
<com.android.systemui.recents.misc.Utilities: android.view.ViewStub findViewStubById(android.view.View,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.hotspot2.osu.WiFiKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
<android.telephony.CellInfo: boolean equals(java.lang.Object)>
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeySize(int)>
<com.android.settingslib.wifi.AccessPointPreference: void updateBadge(android.content.Context)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot restoreTo(int)>
<com.android.systemui.assist.AssistOrbView: void reset()>
<android.view.View: void setScaleX(float)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: android.animation.ObjectAnimator animateTransitionTo(android.view.View,float)>
<android.telephony.CellSignalStrengthLte: void writeToParcel(android.os.Parcel,int)>
<android.telephony.IccOpenLogicalChannelResponse: java.lang.String toString()>
<android.filterpacks.imageproc.AutoFixFilter: void <init>(java.lang.String)>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>
<android.text.style.TextAppearanceSpan: int getTextStyle()>
<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.RecentsActivity: void onNewIntent(android.content.Intent)>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>
<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>
<android.os.Parcel: float readFloat()>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup create()>
<android.app.NotificationManager: java.util.Map getAutomaticZenRules()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.ColorFilter getColorFilter()>
<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>
<android.app.FragmentHostCallback: boolean onShouldSaveFragmentState(android.app.Fragment)>
<com.android.systemui.statusbar.ExpandableView: boolean isGroupExpansionChanging()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setUserLocked(boolean)>
<android.util.JsonReader: double nextDouble()>
<android.mtp.MtpObjectInfo: int getFormat()>
<android.content.pm.PackageParser.Component: android.content.ComponentName getComponentName()>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>
<com.android.documentsui.BaseActivity: com.android.documentsui.State getDisplayState()>
<com.android.hotspot2.AppBridge: void showDeauth(java.lang.String,boolean,int,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void onAttachedToWindow()>
<com.android.keyguard.KeyguardPINView: void resetState()>
<com.android.server.am.ActivityManagerService: void resizeTask(int,android.graphics.Rect,int)>
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>
<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>
<com.android.systemui.statusbar.ExpandableView: boolean isChangingPosition()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void setProperty(java.lang.String,java.lang.Object)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onPipEntered()>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: void validateSql(java.lang.String,android.os.CancellationSignal)>
<com.android.systemui.qs.tiles.WorkModeTile: android.content.Intent getLongClickIntent()>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.util.Collection getDevices()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>
<android.app.VoiceInteractor.PickOptionRequest.Option: android.app.VoiceInteractor.PickOptionRequest.Option addSynonym(java.lang.CharSequence)>
<android.widget.ViewAnimator: void showPrevious()>
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>
<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>
<android.app.ActivityManagerProxy: int getPackageProcessState(java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>
<com.android.hotspot2.OMADMAdapter: java.lang.String getDevID()>
<android.graphics.Region: void <init>(android.graphics.Region)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onUnlockMethodStateChanged()>
<android.telephony.CellIdentityWcdma: void writeToParcel(android.os.Parcel,int)>
<android.telecom.TelecomManager: boolean handleMmi(java.lang.String,android.telecom.PhoneAccountHandle)>
<com.android.systemui.ExpandHelper: void onlyObserveMovements(boolean)>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.content.res.ComplexColor getComplexColor(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.DataSaverController getDataSaverController()>
<android.nfc.tech.MifareClassic: int getBlockCount()>
<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager.RegistrationListener)>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>
<android.widget.BaseAdapter: int getViewTypeCount()>
<android.renderscript.FieldPacker: android.renderscript.Double3 subDouble3()>
<android.os.Parcel: int dataPosition()>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,int,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>
<com.android.systemui.qs.TileLayout: void removeAllViews()>
<android.os.IPowerManager: boolean isDeviceIdleMode()>
<android.content.res.Resources.Theme: int getChangingConfigurations()>
<android.app.usage.UsageEvents: int describeContents()>
<com.android.systemui.statusbar.tv.TvStatusBar: void showScreenPinningRequest(int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void handleAttemptLockout(long)>
<android.nfc.NdefMessage: int hashCode()>
<android.graphics.Rect: void offsetTo(int,int)>
<com.android.keyguard.KeyguardDisplayManager: void show()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<android.app.Activity: void onWindowFocusChanged(boolean)>
<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>
<android.content.res.Resources.Theme: android.graphics.drawable.Drawable getDrawable(int)>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getInstalledAccessibilityServiceList(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>
<com.android.systemui.stackdivider.MinimizedDockShadow: void onLayout(boolean,int,int,int,int)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxHeight(int)>
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<com.android.documentsui.DocumentClipper: java.util.List getDocumentsFromClipData(android.content.ClipData)>
<com.android.server.am.ActivityManagerService: void enterSafeMode()>
<android.service.carrier.CarrierMessagingService: void onSendDataSms(byte[],int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<android.widget.NumberPicker: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>
<android.security.keystore.KeyNotYetValidException: void <init>()>
<com.android.server.am.BatteryStatsService: long getAwakeTimeBattery()>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>
<android.telecom.VideoProfile: void <init>(int,int)>
<android.app.RemoteInput.Builder: android.app.RemoteInput build()>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnectionFailed()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removeOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<android.app.ActivityManagerProxy: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)>
<com.android.server.ServiceThread: void run()>
<com.android.keyguard.KeyguardDisplayManager: void <init>(android.content.Context)>
<com.android.systemui.qs.customize.TileAdapter: com.android.systemui.qs.customize.TileAdapter.Holder onCreateViewHolder(android.view.ViewGroup,int)>
<android.hardware.Camera.Parameters: void remove(java.lang.String)>
<android.graphics.drawable.DrawableContainer: boolean canApplyTheme()>
<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<com.android.systemui.qs.SecureSetting: void handleValueChanged(int,boolean)>
<android.media.tv.TvView: void setZOrderMediaOverlay(boolean)>
<android.content.ContentValues: void clear()>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>
<android.app.ActivityManagerProxy: java.util.List getAppTasks(java.lang.String)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(java.lang.String)>
<android.hardware.camera2.legacy.CaptureCollector: void failAll()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>
<android.media.session.MediaSession.Callback: void onPause()>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.webkit.WebResourceRequest: boolean isRedirect()>
<android.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>
<com.android.documentsui.dirlist.DocumentHolder: void <init>(android.content.Context,android.view.ViewGroup,int)>
<android.widget.ImageButton: java.lang.CharSequence getAccessibilityClassName()>
<android.app.Activity: void enterPictureInPictureMode()>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.content.pm.PackageInstaller.SessionCallback: void onFinished(int,boolean)>
<com.android.systemui.classifier.FalsingManager: void onUnlockHintStarted()>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.State newTileState()>
<com.android.systemui.recents.RecentsActivity: void onStop()>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: com.android.systemui.statusbar.phone.PlatformVelocityTracker obtain()>
<com.android.systemui.statusbar.notification.HeaderTransformState: void recycle()>
<com.android.systemui.power.PowerNotificationWarnings: void showInvalidChargerWarning()>
<com.android.systemui.statusbar.NotificationData: void <init>(com.android.systemui.statusbar.NotificationData.Environment)>
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter.ViewBinder getViewBinder()>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onDoubleTap(android.view.MotionEvent,int)>
<android.text.HtmlToSpannedConverter: void endDocument()>
<android.graphics.ColorMatrix: void setYUV2RGB()>
<android.app.ActionBar: java.lang.CharSequence getSubtitle()>
<com.android.server.fingerprint.EnrollClient: boolean onRemoved(int,int)>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: int getIntrinsicHeight()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.printspooler.widget.PrintContentView: int getChildDrawingOrder(int,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String getId()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void addSwipedOutNotification(java.lang.String)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(android.view.View[],java.lang.Runnable)>
<android.content.pm.LauncherApps: void pinShortcuts(java.lang.String,java.util.List,android.os.UserHandle)>
<com.android.systemui.qs.customize.QSCustomizer: void hide(int,int)>
<android.webkit.WebSettings: void setDefaultFontSize(int)>
<android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
<android.app.NotificationManager: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<android.view.animation.Animation: boolean hasEnded()>
<android.graphics.Path: void toggleInverseFillType()>
<android.transition.PatternPathMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.drawable.UserIconDrawable: int getIntrinsicHeight()>
<android.app.Notification.Builder: android.app.Notification.Builder setPriority(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBootCompleted()>
<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>
<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.RestrictedPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)>
<android.graphics.Paint_Delegate: java.awt.Stroke getJavaStroke()>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: java.util.List getVolumes()>
<android.content.pm.PackageInstaller: void uninstall(java.lang.String,android.content.IntentSender)>
<com.android.server.tv.UinputBridge: void clear(android.os.IBinder)>
<com.android.preload.DeviceUtils: boolean hasPrebuiltBootImage(com.android.ddmlib.IDevice)>
<android.bluetooth.BluetoothGattCallback: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)>
<android.location.Location: float getBearing()>
<android.util.Property: void set(java.lang.Object,java.lang.Object)>
<android.view.KeyEvent: boolean isCtrlPressed()>
<android.view.MotionEvent.PointerCoords: void clear()>
<android.service.media.CameraPrewarmService: void onPrewarm()>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.ScriptIntrinsic3DLUT create(android.renderscript.RenderScript,android.renderscript.Element)>
<com.android.server.wm.DisplaySettings: void readSettingsLocked()>
<android.webkit.WebView: void clearClientCertPreferences(java.lang.Runnable)>
<android.view.View: void refreshDrawableState()>
<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.commands.am.Am: void main(java.lang.String[])>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm)>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestFocus(int,android.graphics.Rect)>
<android.nfc.NfcAdapter: boolean isEnabled()>
<com.android.hotspot2.asn1.Asn1Constructed: java.lang.String indent(int)>
<android.hardware.radio.RadioManager.ProgramInfo: int getSubChannel()>
<android.content.Context: java.io.File getNoBackupFilesDir()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>
<com.android.settingslib.net.DataUsageController: void <init>(android.content.Context)>
<android.widget.OverScroller: int getStartY()>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>
<com.android.location.provider.LocationProviderBase: int onGetStatus(android.os.Bundle)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.content.Intent)>
<com.android.hotspot2.utils.HTTPRequest: java.nio.ByteBuffer getPayload()>
<android.net.LocalSocket: void shutdownInput()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean isTaSupported()>
<android.widget.ListView: boolean isOpaque()>
<android.app.VoiceInteractor.ConfirmationRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>
<android.telecom.Connection: void setPulling()>
<com.android.server.usage.AppIdleHistory: void setThresholds(long,long)>
<android.view.View: boolean willNotCacheDrawing()>
<android.hardware.Camera.Parameters: void setFocusMode(java.lang.String)>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>
<com.android.server.trust.TrustArchive: void logDevicePolicyChanged()>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.AudioManager: boolean isBluetoothScoOn()>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setBackgroundBottom(int)>
<com.android.preload.DumpTableModel: java.lang.String getColumnName(int)>
<android.graphics.Path: void reset()>
<android.os.IRecoverySystem: boolean clearBcb()>
<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>
<android.widget.Toolbar: boolean showOverflowMenu()>
<com.android.server.policy.WakeGestureListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.printspooler.model.PrintSpoolerService: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)>
<android.speech.tts.TextToSpeech: java.util.Set getAvailableLanguages()>
<android.widget.TextView: int getCompoundPaddingStart()>
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.core.UiDevice getUiDevice()>
<android.content.SyncResult: boolean hasHardError()>
<com.android.systemui.tuner.TunerZenModePanel: void onDetachedFromWindow()>
<com.android.systemui.recents.events.ui.ShowApplicationInfoEvent: void <init>(com.android.systemui.recents.model.Task)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void openDrawer()>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.net.NetworkStatsHistory.ParcelUtils: long[] readLongArray(android.os.Parcel)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showKeyguard()>
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeType(int)>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>
<com.android.documentsui.GridItemThumbnail: void <init>(android.content.Context)>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.app.Fragment: android.transition.Transition getExitTransition()>
<com.android.documentsui.DocumentsToolbar.OnActionViewCollapsedListener: void onActionViewCollapsed()>
<android.content.res.ColorStateList: int getDefaultColor()>
<com.android.systemui.statusbar.BaseStatusBar: java.lang.String getCurrentMediaNotificationKey()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setExpansion(float)>
<android.renderscript.Allocation: int getUsage()>
<com.android.server.HardwarePropertiesManagerService: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>
<android.content.BroadcastReceiver.PendingResult: void setResult(int,java.lang.String,android.os.Bundle)>
<com.android.externalstorage.ExternalStorageProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.bluetooth.le.AdvertiseData: int describeContents()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isHtml()>
<android.util.Range: java.lang.String toString()>
<android.hardware.camera2.utils.ArrayUtils: int[] toIntArray(java.util.List)>
<android.content.ContentProviderOperation: java.lang.String toString()>
<android.graphics.drawable.Icon: void loadDrawableAsync(android.content.Context,android.os.Message)>
<android.app.NativeActivity: void surfaceRedrawNeeded(android.view.SurfaceHolder)>
<com.android.systemui.recents.views.TaskView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void <init>(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: void configureOutputs(java.util.List)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void cancelDragAndDrop(android.os.IBinder)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startLaunchTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.graphics.drawable.PaintDrawable: void <init>(int)>
<android.database.CursorWrapper: boolean isBeforeFirst()>
<com.android.externalstorage.ExternalStorageProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureStarted()>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<android.widget.GridLayout: void setUseDefaultMargins(boolean)>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedWeekBackgroundColor(int)>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.widget.TextView,int)>
<android.os.storage.MountServiceInternal.ExternalStorageMountPolicy: boolean hasExternalStorage(int,java.lang.String)>
<com.android.systemui.qs.external.TileServices: android.service.quicksettings.Tile getTile(android.os.IBinder)>
<com.android.future.usb.UsbAccessory: java.lang.String getModel()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToBinaryString(int)>
<android.app.FragmentManager: int getBackStackEntryCount()>
<com.android.systemui.statusbar.ActivatableNotificationView: void onFinishInflate()>
<com.android.systemui.recents.tv.animations.DismissAnimationsHolder: void <init>(com.android.systemui.recents.tv.views.TaskCardView)>
<com.android.server.backup.AccountSyncSettingsBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<com.android.documentsui.Events.MotionInputEvent: boolean isActionUp()>
<android.hardware.Camera.Parameters: int getMaxNumDetectedFaces()>
<android.view.TextureView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
<android.app.admin.DevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>
<com.android.gallery3d.exif.ExifInterface: void resetTagDefinitions()>
<com.android.systemui.recents.misc.DozeTrigger: boolean isDozing()>
<android.app.Notification.Style: android.widget.RemoteViews getStandardView(int)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord getItem(int)>
<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>
<com.android.server.notification.EventConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.statementservice.retriever.Utils: java.lang.String computeNormalizedSha256Fingerprint(byte[])>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbConfiguration getConfiguration(int)>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(java.io.InputStream)>
<android.hardware.radio.RadioTuner.Callback: void onConfigurationChanged(android.hardware.radio.RadioManager.BandConfig)>
<android.net.wifi.WifiEnterpriseConfig: int getPhase2Method()>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetInitialHeader()>
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>
<com.android.server.usb.UsbService.Lifecycle: void onStart()>
<android.text.style.ScaleXSpan: int describeContents()>
<com.android.gallery3d.glrenderer.GLCanvas: void setSize(int,int)>
<android.util.apk.ApkSignatureSchemeV2Verifier.DataSource: void feedIntoMessageDigests(java.security.MessageDigest[],long,int)>
<android.opengl.GLES20: void glAttachShader(int,int)>
<com.android.shell.BugreportProgressService: void onCreate()>
<android.graphics.Canvas: void restoreToCount(int)>
<android.service.quicksettings.TileService: void showDialog(android.app.Dialog)>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void removeNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>
<com.android.settingslib.RestrictedPreferenceHelper: void onAttachedToHierarchy()>
<com.android.settingslib.HelpUtils: android.content.Intent getHelpIntent(android.content.Context,java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glBlendFunc(int,int)>
<android.graphics.Region: void <init>(android.graphics.Rect)>
<android.view.IWindowManagerImpl: void addWindowToken(android.os.IBinder,int)>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void requestFocus(boolean)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void removeFromOverlay(android.view.View)>
<android.graphics.Paint_Delegate: int getJavaJoin()>
<android.os.storage.StorageVolume: java.lang.String dump()>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.model.TaskStack getStack()>
<com.android.tools.layoutlib.java.System_Delegate: long bootTime()>
<com.android.hotspot2.omadm.OMAConstants: java.lang.String deserializeString(java.io.InputStream)>
<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>
<com.google.android.util.AbstractMessageParser.MusicTrack: void <init>(java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>
<com.android.server.usb.UsbDebuggingManager: void allowUsbDebugging(boolean,java.lang.String)>
<android.provider.Settings.Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.mtp.MtpObjectInfo: long getDateModified()>
<com.android.documentsui.dirlist.DirectoryFragment: void onBindDocumentHolder(com.android.documentsui.dirlist.DocumentHolder,android.database.Cursor)>
<android.telephony.CellIdentityGsm: int getMcc()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.lang.String,int)>
<android.os.LocaleList: java.lang.String toLanguageTags()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isPanelFullyCollapsed()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>(android.os.Parcel)>
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.content.Intent.FilterComparison: int hashCode()>
<android.telecom.Connection.VideoProvider: void onSetDisplaySurface(android.view.Surface)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultVoiceSubId()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void topAppWindowChanged(boolean)>
<android.hardware.camera2.DngCreator: void writeImage(java.io.OutputStream,android.media.Image)>
<android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)>
<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>
<com.android.hotspot2.omadm.MOManager: java.lang.String getString(com.android.hotspot2.omadm.OMANode,java.lang.String)>
<android.drm.DrmRights: java.lang.String getMimeType()>
<com.android.uiautomator.core.UiObject: boolean longClickTopLeft()>
<android.speech.SpeechRecognizer: void stopListening()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isUpgrade()>
<android.content.ClipDescription: java.lang.String[] filterMimeTypes(java.lang.String)>
<com.android.server.net.LockdownVpnTracker: void init()>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context)>
<android.animation.AnimatorSet: long getDuration()>
<android.view.animation.AnimationSet: void setRepeatMode(int)>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: boolean hasPreferredData(java.lang.Object,java.lang.Object)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrc()>
<com.android.server.MmsServiceBroker: void systemRunning()>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: int read(byte[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>
<com.android.server.twilight.TwilightManager: void registerListener(com.android.server.twilight.TwilightListener,android.os.Handler)>
<com.google.android.gles_jni.GLImpl: void glPolygonOffset(float,float)>
<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>
<com.android.server.connectivity.IpConnectivityMetrics.Impl: int logEvent(android.net.ConnectivityMetricsEvent)>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int,int)>
<android.content.pm.PackageInstaller.Session: java.io.InputStream openRead(java.lang.String)>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onIdle()>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setBadgeIfManagedUser(android.content.Context,int)>
<android.print.PrintAttributes.Resolution: int getVerticalDpi()>
<android.app.Notification.MessagingStyle.Message: java.lang.String getDataMimeType()>
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,float[],int)>
<com.android.systemui.statusbar.ExpandableView: void setTranslation(float)>
<com.android.hotspot2.asn1.Asn1Object: java.lang.String toSimpleString()>
<android.view.OrientationListener: void disable()>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDeleteReturns()>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<android.widget.TableLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.car.CarStatusBar: void showBatteryView()>
<com.android.layoutlib.bridge.android.BridgePackageManager: byte[] getEphemeralCookie()>
<com.google.android.gles_jni.GLImpl: void glNormal3f(float,float,float)>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRequiredStrongAuthTimeout(android.content.ComponentName,long,boolean)>
<android.view.ViewPropertyAnimator: void start()>
<com.android.systemui.statusbar.policy.ZenModeController: int getCurrentUser()>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>
<android.media.AudioRecordingConfiguration: int describeContents()>
<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersAdded(java.util.List)>
<com.android.documentsui.dirlist.DirectoryFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.printspooler.model.CustomPrinterIconCache: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<android.widget.TextView: void <init>(android.content.Context)>
<com.android.server.pm.Installer: void clearAppProfiles(java.lang.String)>
<com.android.systemui.volume.VolumeDialogController: void setVolumePolicy(android.media.VolumePolicy)>
<com.android.externalstorage.TestDocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
<com.android.systemui.SwipeHelper: android.animation.ObjectAnimator createTranslationAnimation(android.view.View,float)>
<android.provider.SyncStateContract.Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.content.Intent: java.util.Set getCategories()>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setIcon(java.lang.String)>
<android.net.RouteInfo: android.net.IpPrefix getDestination()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants.State)>
<android.media.RemoteController.OnClientUpdateListener: void onClientTransportControlUpdate(int)>
<android.telecom.Call: void disconnect()>
<com.android.hotspot2.osu.OSUInfo: com.android.anqp.OSUProvider getOSUProvider()>
<android.app.FragmentManagerImpl: java.lang.String toString()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice,int,long)>
<android.graphics.drawable.AnimatedVectorDrawable: void start()>
<com.android.systemui.ExpandHelper.Callback: void setUserExpandedChild(android.view.View,boolean)>
<android.net.LocalServerSocket: void close()>
<com.android.server.media.MediaSessionRecord: void onDestroy()>
<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>
<android.database.sqlite.SQLiteConstraintException: void <init>()>
<com.android.hotspot2.omadm.OMAScalar: com.android.hotspot2.omadm.OMAScalar reparent(com.android.hotspot2.omadm.OMAConstructed)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBitmap(android.graphics.Bitmap)>
<android.app.ApplicationThreadProxy: void scheduleExit()>
<android.media.AudioFormat: void writeToParcel(android.os.Parcel,int)>
<android.animation.AnimatorSet: java.lang.String toString()>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: boolean addOneIntentFilterVerification(int,int,int,android.content.IntentFilter,java.lang.String)>
<android.app.Fragment: android.os.Bundle getArguments()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: int getInputMethodWindowVisibleHeight()>
<com.android.systemui.statusbar.ExpandableView: float getTranslation()>
<com.android.documentsui.SaveFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.widget.TextView: void setCursorVisible(boolean)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void removeCallback(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.support.DesignLibUtil: void setTitle(android.view.View,java.lang.String)>
<com.android.documentsui.RootCursorWrapper: int getType(int)>
<android.media.RingtoneManager: void setType(int)>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)>
<com.android.server.ServiceWatcher: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.service.notification.ZenModeConfig.EventInfo: int resolveUserId(int)>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.widget.EditText: void extendSelection(int)>
<com.android.server.pm.PackageInstallerService: int createSession(android.content.pm.PackageInstaller.SessionParams,java.lang.String,int)>
<android.graphics.drawable.RippleDrawable: void setHotspotBounds(int,int,int,int)>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode.ThreadPolicy)>
<android.hardware.usb.UsbConfiguration: int getInterfaceCount()>
<com.android.settingslib.Utils: boolean isSystemPackage(android.content.res.Resources,android.content.pm.PackageManager,android.content.pm.PackageInfo)>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.view.View: int getScrollBarStyle()>
<com.android.systemui.settings.ToggleSlider: void onAttachedToWindow()>
<android.service.voice.VoiceInteractionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.media.MediaRouter.SimpleCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<android.media.Ringtone: void finalize()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.app.Notification)>
<com.android.systemui.statusbar.KeyboardShortcuts: void dismiss()>
<android.graphics.Gradient_Delegate.GradientPaint: void <init>(int[],float[],android.graphics.Shader.TileMode)>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionFinished()>
<com.android.server.usage.UnixCalendar: void addMonths(int)>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>
<android.location.Criteria: void setAltitudeRequired(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<com.android.systemui.screenshot.ScreenshotServiceErrorReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.hardware.Camera: android.hardware.Camera open(int)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSingleLineWidthIndention(int)>
<com.android.systemui.qs.QSDetailItems: void setItemsVisible(boolean)>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>
<android.widget.TextView: void onScreenStateChanged(int)>
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
<android.widget.Toolbar: int getCurrentContentInsetLeft()>
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>
<com.android.server.pm.PackageManagerService: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.graphics.Canvas_Delegate: android.graphics.Canvas_Delegate getDelegate(android.graphics.Canvas)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,java.lang.String)>
<android.util.FloatProperty: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.layoutlib.bridge.android.BridgeXmlBlockParser getCurrentParser()>
<android.os.BatteryStats.LevelStepTracker: long getDurationAt(int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>
<android.content.res.ObbInfo: java.lang.String toString()>
<android.content.IntentFilter: void addDataPath(java.lang.String,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setOnClickListener(android.view.View.OnClickListener)>
<android.drm.DrmManagerClient: void release()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getAllPermissionGroups(int)>
<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(int[],int)>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.AES: void engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<com.android.hotspot2.omadm.OMANode: java.util.Collection getChildren()>
<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
<com.android.anqp.eap.InnerAuthEAP: com.android.anqp.eap.EAP.EAPMethodID getEAPMethodID()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void setMoreText(android.widget.TextView)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getTopPadding()>
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.telephony.PhoneNumberUtils: java.lang.CharSequence createTtsSpannable(java.lang.CharSequence)>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,java.lang.String,byte[],byte[])>
<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward(int)>
<android.widget.ListPopupWindow: android.view.View getAnchorView()>
<com.android.photos.SimpleBitmapRegionDecoder: int getWidth()>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.widget.Toolbar: int getPopupTheme()>
<com.android.systemui.assist.AssistManager: android.content.ComponentName getVoiceInteractorComponentName()>
<com.android.hotspot2.asn1.Asn1Integer: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer)>
<android.app.ApplicationThreadProxy: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.transition.Scene: void <init>(android.view.ViewGroup)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean canChildBeExpanded(android.view.View)>
<com.android.systemui.SwipeHelper: boolean swipedFastEnough()>
<com.android.server.AnyMotionDetector: int getStationaryStatus()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAcquired()>
<com.android.hotspot2.omadm.XMLNode: java.util.Map getAttributes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceOwner(android.content.ComponentName,int)>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.os.ParcelUuid[] getUuids()>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>
<android.widget.NumberPicker: int computeVerticalScrollRange()>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionResumed()>
<com.android.documentsui.FilteringCursorWrapper: int getType(int)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void fadeGrayscale(android.widget.ImageView,boolean,long)>
<com.android.systemui.volume.VolumeDialogController: void destroy()>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder generation(int)>
<com.android.server.pm.PermissionsState: int getPermissionFlags(java.lang.String,int)>
<com.android.systemui.stackdivider.DividerWindowManager: void setSlippery(boolean)>
<com.android.server.AnyMotionDetector.Vector3: java.lang.String toString()>
<android.text.SpannableStringBuilder: java.lang.String toString()>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>
<com.android.systemui.stackdivider.DividerWindowManager: void setTouchable(boolean)>
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>
<com.android.gallery3d.glrenderer.GLCanvas: void recoverFromLightCycle()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: int getOnNotificationPostedTrim(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<android.util.AttributeSet: java.lang.String getIdAttribute()>
<android.telecom.PhoneAccount: android.graphics.drawable.Icon getIcon()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfApplicationIsSuspended(android.content.Context,java.lang.String,int)>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,int)>
<android.printservice.PrintJob: void setStatus(int)>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.media.MediaActionSound: void release()>
<android.os.Parcel: void readStringArray(java.lang.String[])>
<android.hardware.soundtrigger.SoundTrigger.GenericRecognitionEvent: void <init>(int,int,boolean,int,int,int,boolean,android.media.AudioFormat,byte[])>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>
<com.android.mtp.AppFuse.Callback: long getFileSize(int)>
<com.android.systemui.recents.views.TaskStackView: boolean isTouchPointInView(float,float,com.android.systemui.recents.views.TaskView)>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>
<android.view.WindowManagerPolicy.WindowState: android.view.IApplicationToken getAppToken()>
<com.android.systemui.recents.views.TaskStackView: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,int[],int)>
<android.hardware.camera2.params.LensShadingMap: void copyGainFactors(float[],int)>
<android.animation.Animator.AnimatorPauseListener: void onAnimationResume(android.animation.Animator)>
<com.android.settingslib.bluetooth.PanProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.server.pm.PackageManagerService: int checkUidSignatures(int,int)>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>
<android.view.View: void getLocationOnScreen(int[])>
<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.view.Display: int getHeight()>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>
<android.location.GpsStatus.Listener: void onGpsStatusChanged(int)>
<com.android.server.job.controllers.TimeController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<com.android.server.connectivity.NetdEventListenerService: void onConnectEvent(int,int,int,java.lang.String,int,int)>
<android.bluetooth.BluetoothGattDescriptor: boolean setValue(byte[])>
<com.android.hotspot2.Utils: java.lang.String roamingConsortiumsToString(long[])>
<android.database.sqlite.SQLiteDoneException: void <init>()>
<android.media.SubtitleTrack.RenderingWidget: void onAttachedToWindow()>
<com.android.commands.svc.Svc.Command: void run(java.lang.String[])>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectCleartextNetwork()>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setDevice(android.media.AudioDeviceInfo)>
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView.OnDismissListener)>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>
<android.speech.tts.TextToSpeechService: int onIsValidVoiceName(java.lang.String)>
<com.android.server.notification.SystemConditionProviderService: void dumpUpcomingTime(java.io.PrintWriter,java.lang.String,long,long)>
<android.view.Display: float getRefreshRate()>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(android.view.View)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)>
<android.location.LocationProvider: boolean supportsAltitude()>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setOverExpansion(float,boolean)>
<android.os.BatteryStats.LevelStepTracker: void decodeEntryAt(int,java.lang.String)>
<android.view.View: int generateViewId()>
<com.android.commands.uiautomator.EventsCommand: java.lang.String detailedOptions()>
<android.service.dreams.DreamService: void onDreamingStopped()>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
<android.net.ConnectivityManager: boolean requestBandwidthUpdate(android.net.Network)>
<com.android.gallery3d.exif.ExifInterface: boolean addDateTimeStampTag(int,long,java.util.TimeZone)>
<android.telecom.Connection.VideoProvider: void onSetPreviewSurface(android.view.Surface)>
<com.android.server.wm.AppWindowAnimator: void <init>(com.android.server.wm.AppWindowToken)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.util.ArrayList getAuthoritiesForAccountType(java.lang.String)>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>
<android.webkit.WebResourceRequest: java.util.Map getRequestHeaders()>
<com.android.providers.settings.SettingsProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean isVr()>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.util.LruCache: void <init>(int)>
<com.android.egg.neko.Cat: android.graphics.drawable.Icon recompressIcon(android.graphics.drawable.Icon)>
<com.android.server.net.NetworkPolicyManagerService: void removeRestrictBackgroundWhitelistedUid(int)>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>
<android.widget.TextView: void setHint(int)>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<android.accessibilityservice.AccessibilityService.MagnificationController: float getScale()>
<android.os.Parcel: double readDouble()>
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>
<android.hardware.Camera.FaceDetectionListener: void onFaceDetection(android.hardware.Camera.Face[],android.hardware.Camera)>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long3)>
<android.app.ActivityManagerProxy: void setUserIsMonkey(boolean)>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context)>
<android.telecom.Connection: int getAddressPresentation()>
<com.android.systemui.qs.QSAnimator: void onRtlChanged()>
<android.media.MediaRouter.RouteInfo: int getDeviceType()>
<javax.microedition.khronos.opengles.GL10: void glColor4f(float,float,float,float)>
<android.app.Notification.Builder: android.app.Notification.Builder setChronometerCountDown(boolean)>
<android.database.Cursor: boolean requery()>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig getConfig(android.content.Context,java.lang.String)>
<android.media.tv.TvInputService.RecordingSession: void notifyRecordingStopped(android.net.Uri)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>
<android.mtp.MtpObjectInfo: java.lang.String getName()>
<com.android.uiautomator.core.UiDevice: void clearLastTraversedText()>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>
<com.android.systemui.qs.QSFooter: boolean hasFooter()>
<android.widget.TextView: int getExtendedPaddingTop()>
<android.widget.SimpleAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>
<android.content.res.TypedArray: boolean hasValueOrEmpty(int)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>
<android.service.carrier.CarrierMessagingService.SendSmsResult: int getMessageRef()>
<com.android.server.wm.WindowLayersController: void <init>(com.android.server.wm.WindowManagerService)>
<com.android.server.am.ActivityManagerService: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<com.android.layoutlib.bridge.impl.GcSnapshot: int size()>
<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>
<android.app.ApplicationThreadProxy: void scheduleEnterAnimationComplete(android.os.IBinder)>
<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAffiliatedUser()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: void killPackageDependents(java.lang.String,int)>
<com.android.server.AttributeCache.Entry: void <init>(android.content.Context,android.content.res.TypedArray)>
<android.print.PrinterId: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: void noteAlarmFinish(android.content.IIntentSender,int,java.lang.String)>
<com.android.systemui.qs.QSDualTileLabel: void setFirstLineCaret(android.graphics.drawable.Drawable)>
<com.android.server.PersistentDataBlockService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPermissionReviewModeEnabled()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onExpansionChanged(boolean,boolean)>
<com.android.server.am.ActivityManagerService: void initPowerManagement()>
<com.android.gallery3d.common.Utils: float clamp(float,float,float)>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>
<android.preference.GenericInflater.Parent: void addItemFromInflater(java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glRotatex(int,int,int,int)>
<com.android.systemui.qs.QuickQSPanel: int getNumQuickTiles(android.content.Context)>
<android.view.VelocityTracker: float getYVelocity(int)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotAfter()>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<android.util.ArraySet: void <init>()>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>
<com.android.layoutlib.bridge.bars.StatusBar: android.widget.TextView getStyleableTextView()>
<com.android.server.backup.Trampoline: boolean setBackupPassword(java.lang.String,java.lang.String)>
<android.hardware.Camera.Parameters: boolean isZoomSupported()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter.ViewHolder: void onClick(android.view.View)>
<android.telecom.InCallService.VideoCall: void setPreviewSurface(android.view.Surface)>
<com.android.server.InputMethodManagerService: void showMySoftInput(android.os.IBinder,int)>
<android.telecom.ParcelableCallAnalytics.AnalyticsEvent: void <init>(int,long)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.widget.MediaController.MediaPlayerControl: int getAudioSessionId()>
<android.media.soundtrigger.SoundTriggerDetector.Callback: void onAvailabilityChanged(int)>
<android.os.Parcel: android.util.Size readSize()>
<android.os.Process: long getElapsedCpuTime()>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>
<com.android.systemui.recents.RecentsActivity: void onDestroy()>
<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>
<android.widget.ScrollView: void onStopNestedScroll(android.view.View)>
<android.graphics.drawable.GradientDrawable: boolean getUseLevel()>
<android.database.Cursor: int getType(int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener.Observer: void dataSetChanged()>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.location.GnssMeasurementsEvent: int describeContents()>
<com.android.settingslib.bluetooth.HeadsetProfile: void finalize()>
<android.media.AudioManager: int getMode()>
<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onLayout(boolean,int,int,int,int)>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onCancel()>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<android.graphics.drawable.GradientDrawable: void setColor(int)>
<android.app.NotificationManager: void cancelAll()>
<com.android.server.AppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.view.View: void dispatchWindowFocusChanged(boolean)>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>
<com.android.anqp.OSUProvider: int hashCode()>
<com.android.systemui.ResizingSpace: void onMeasure(int,int)>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<android.media.AudioMixPort: boolean equals(java.lang.Object)>
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUriForPath(java.lang.String)>
<android.hardware.camera2.legacy.LegacyExceptionUtils: int throwOnError(int)>
<android.hardware.camera2.params.ColorSpaceTransform: int hashCode()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setConnectable(boolean)>
<com.android.layoutlib.bridge.Bridge: int getApiLevel()>
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>
<com.android.server.am.ActivityManagerService: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(android.renderscript.Matrix4f)>
<android.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)>
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<com.android.nfc_extras.EeAlreadyOpenException: void <init>()>
<android.widget.Gallery: boolean showContextMenu(float,float)>
<com.android.printspooler.ui.FusedPrintersProvider: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwner(int)>
<android.graphics.RectF: boolean contains(float,float,float,float)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.ControllerActivityCounter getModemControllerActivity()>
<com.android.systemui.egg.MLand: void hideSplash()>
<android.media.MediaFormat: void <init>()>
<com.android.server.net.LockdownVpnTracker: void augmentNetworkInfo(android.net.NetworkInfo)>
<android.widget.ScrollView: android.os.Parcelable onSaveInstanceState()>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.Throwable getCause(java.lang.Throwable)>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>
<android.security.keystore.KeyGenParameterSpec.Builder: void <init>(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glDepthMask(boolean)>
<com.android.server.backup.BackupManagerService: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver)>
<android.text.method.ArrowKeyMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<android.content.res.Configuration: void setLocales(android.os.LocaleList)>
<android.transition.ArcMotion: void setMinimumVerticalAngle(float)>
<com.android.server.trust.TrustAgentWrapper: void onUnlockAttempt(boolean)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setHasContent(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)>
<android.renderscript.Script: void setVar(int,boolean)>
<android.widget.SearchView: java.lang.CharSequence getQueryHint()>
<com.android.location.provider.FusedLocationHardwareSink: void onStatusChanged(int)>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,java.nio.IntBuffer)>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.systemui.stackdivider.DividerWindowManager: void <init>(android.content.Context)>
<com.android.settingslib.SuggestionParser: boolean isCategoryDone(java.lang.String)>
<android.telecom.Connection: void onReject()>
<android.app.ApplicationThreadProxy: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int,int)>
<android.graphics.Paint: boolean isAntiAlias()>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>
<android.hardware.camera2.utils.TaskDrainer: void taskFinished(java.lang.Object)>
<android.os.BaseBundle: void putAll(android.os.PersistableBundle)>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<android.hardware.camera2.params.MeteringRectangle: int getWidth()>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>
<com.android.server.display.RampAnimator.Listener: void onAnimationEnd()>
<android.webkit.WebSettings: boolean supportMultipleWindows()>
<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.service.notification.ZenModeConfig.Diff: java.lang.String toString()>
<com.android.server.backup.Trampoline: java.lang.String getDestinationString(java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.telecom.Connection: int getCallerDisplayNamePresentation()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setProgress(android.print.PrintJobId,float)>
<com.android.hotspot2.osu.service.SubscriptionTimer: void <init>(com.android.hotspot2.osu.OSUManager,com.android.hotspot2.WifiNetworkAdapter,android.content.Context)>
<android.app.Notification.MessagingStyle.Message: java.lang.CharSequence getText()>
<android.media.AudioManager: void setStreamSolo(int,boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: android.view.View getCurrentView()>
<android.view.IWindowManagerImpl: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isDismissed()>
<com.android.systemui.classifier.Stroke: int getCount()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isHeadsUp()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onMeasure(int,int)>
<android.hardware.soundtrigger.SoundTrigger.GenericSoundModel: void writeToParcel(android.os.Parcel,int)>
<android.location.GnssStatusCallback: void onFirstFix(int)>
<android.os.Debug: int getBinderProxyObjectCount()>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: int readInt()>
<android.util.Base64OutputStream: void write(byte[],int,int)>
<android.text.SpannedString: void <init>(java.lang.CharSequence)>
<android.graphics.PaintFlagsDrawFilter_Delegate: boolean isSupported()>
<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onServiceFound(android.net.nsd.NsdServiceInfo)>
<com.android.commands.svc.DataCommand: java.lang.String longHelp()>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isUserLocked()>
<android.widget.Editor.SuggestionsPopupWindow: int clipVertically(int)>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>
<android.view.KeyEvent: java.lang.String toString()>
<android.media.midi.MidiDeviceStatus: void writeToParcel(android.os.Parcel,int)>
<android.view.FrameMetrics: void <init>(android.view.FrameMetrics)>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.widget.LinearLayout: void setBaselineAligned(boolean)>
<com.android.systemui.statusbar.ExpandableView: boolean areChildrenExpanded()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onAttachedToWindow()>
<com.android.server.am.BatteryStatsService: void noteDeviceIdleMode(int,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.util.Map getAll()>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.bluetooth.le.AdvertiseData: void writeToParcel(android.os.Parcel,int)>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.Class)>
<android.transition.Slide: void captureEndValues(android.transition.TransitionValues)>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.params.Face convertFaceFromLegacy(android.hardware.Camera.Face,android.graphics.Rect,android.hardware.camera2.legacy.ParameterUtils.ZoomData)>
<com.android.server.am.ActivityManagerService: boolean isUserStopped(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reboot(android.content.ComponentName)>
<android.net.Uri: android.net.Uri normalizeScheme()>
<android.webkit.WebView: void postVisualStateCallback(long,android.webkit.WebView.VisualStateCallback)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isVolumeRestricted()>
<android.view.Window: android.transition.Transition getEnterTransition()>
<android.view.ViewStub: void setInflatedId(int)>
<com.android.server.AttributeCache: com.android.server.AttributeCache.Entry get(java.lang.String,int,int[],int)>
<com.android.gallery3d.common.Utils: void debug(java.lang.String,java.lang.Object[])>
<android.widget.SimpleAdapter: java.lang.Object getItem(int)>
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.service.quicksettings.Tile: void setState(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: int getVisibility()>
<com.android.server.LockSettingsStrongAuth: void requireStrongAuth(int,int)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onMalformedPdfFile()>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,float[])>
<android.opengl.GLES20: java.lang.String glGetString(int)>
<com.android.server.pm.PermissionsState: java.util.List getInstallPermissionStates()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onConnect(com.android.media.remotedisplay.RemoteDisplay)>
<android.app.Activity: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>
<android.telecom.Call: void putExtras(android.os.Bundle)>
<com.android.systemui.qs.PagedTileLayout.TilePage: boolean updateResources()>
<android.app.SearchableInfo: int getVoicePromptTextId()>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>
<com.android.systemui.recents.views.FixedSizeImageView: void requestLayout()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>
<android.widget.NumberPicker: void setOnScrollListener(android.widget.NumberPicker.OnScrollListener)>
<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<com.android.systemui.statusbar.notification.TextViewTransformState: void initFrom(android.view.View)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView.OnDismissAction,boolean)>
<android.widget.ShareActionProvider: boolean hasSubMenu()>
<android.view.animation.AnimationSet: void reset()>
<android.service.dreams.DreamService: void onPanelClosed(int,android.view.Menu)>
<com.android.anqp.eap.Credential: int hashCode()>
<com.android.systemui.statusbar.policy.SecurityController: void onUserSwitched(int)>
<android.hardware.Camera.Parameters: void setExposureCompensation(int)>
<com.android.systemui.statusbar.ExpandableView: void getDrawingRect(android.graphics.Rect)>
<com.android.systemui.recents.misc.Utilities: java.lang.String dumpRect(android.graphics.Rect)>
<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>
<android.provider.Contacts.People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>
<android.renderscript.Matrix2f: void scale(float,float)>
<com.android.keyguard.NumPadKey: void onLayout(boolean,int,int,int,int)>
<android.widget.TimePicker.TimePickerDelegate: boolean isEnabled()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,boolean)>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.UserInfoController getUserInfoController()>
<com.android.settingslib.drawer.ProfileSelectDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.server.notification.ManagedServices: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.recents.tv.views.TaskCardView: android.view.View getThumbnailView()>
<com.android.systemui.assist.AssistManager: void hideAssist()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: boolean checkType(android.os.IInterface)>
<com.android.layoutlib.bridge.android.BridgeContext: void addViewKey(android.view.View,java.lang.Object)>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServicesForUser(int)>
<android.service.quicksettings.Tile: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.notification.ProgressTransformState: void recycle()>
<com.android.server.AppOpsService: void systemReady()>
<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>
<android.service.quicksettings.Tile: java.lang.CharSequence getContentDescription()>
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>
<android.text.style.TextAppearanceSpan: int getTextSize()>
<com.android.hotspot2.osu.HTTPHandler: void <init>(java.nio.charset.Charset,com.android.hotspot2.osu.OSUSocketFactory,java.lang.String,byte[])>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result render(boolean)>
<android.app.ActivityManagerProxy: void keyguardWaitingForActivityDrawn()>
<android.graphics.Region: boolean set(android.graphics.Region)>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcherShowing(boolean,boolean)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.telecom.ParcelableCallAnalytics.EventTiming: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.RecentsComponent: void preloadRecents()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
<com.android.server.am.ActivityManagerService: boolean testIsSystemReady()>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onEndFailure(com.android.ddmlib.Client,java.lang.String)>
<com.android.hotspot2.WifiNetworkAdapter: void deleteNetwork(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void resetBackgroundAlpha()>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>
<android.transition.Explode: void captureStartValues(android.transition.TransitionValues)>
<com.android.hotspot2.asn1.Asn1Integer: boolean isBigValue()>
<android.view.textservice.SpellCheckerSession: void cancel()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: void <init>(boolean,boolean,android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra[],byte[])>
<android.os.UserManager: java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence,android.os.UserHandle)>
<com.android.server.am.ActivityManagerService: android.graphics.Point getAppTaskThumbnailSize()>
<com.android.systemui.statusbar.phone.QSTileHost: void addTile(android.content.ComponentName)>
<android.content.SyncResult: int describeContents()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void measureContents(int,int)>
<com.android.hotspot2.omadm.OMANode: void toString(java.lang.StringBuilder,int)>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>
<android.graphics.Paint: boolean isElegantTextHeight()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void animateTranslateNotification(float)>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<android.service.voice.VoiceInteractionSession: boolean[] onGetSupportedCommands(java.lang.String[])>
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder,android.content.res.Configuration,boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUserSwitch(int)>
<com.android.photos.views.BlockingGLTextureView: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>
<com.android.systemui.qs.customize.CustomizeTileView: void setShowAppLabel(boolean)>
<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)>
<com.android.documentsui.BaseActivity: com.android.documentsui.model.DocumentInfo getCurrentDirectory()>
<android.view.ViewGroup: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
<android.telephony.CellIdentityCdma: int getNetworkId()>
<android.location.Address: void clearLongitude()>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setInput(android.renderscript.Allocation)>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>
<android.renderscript.Element.Builder: android.renderscript.Element create()>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void <init>(org.objectweb.asm.ClassVisitor)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onDestroy()>
<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaCodec.CodecException: boolean isRecoverable()>
<android.location.Criteria: int getAccuracy()>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRootOneshot(java.lang.String,java.lang.String)>
<com.android.server.policy.RecentApplicationsBackground: void onDetachedFromWindow()>
<android.widget.ViewSwitcher: java.lang.CharSequence getAccessibilityClassName()>
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isConnectable()>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>
<android.widget.AbsListView.MultiChoiceModeListener: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>
<android.app.FragmentManager: android.app.Fragment findFragmentById(int)>
<com.android.systemui.qs.QSTile.SignalState: java.lang.StringBuilder toStringBuilder()>
<com.android.systemui.qs.external.TileServices: boolean isSecure()>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable,int)>
<com.android.systemui.doze.DozeLog: void traceProximityResult(android.content.Context,boolean,long,int)>
<android.widget.NumberPicker: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.media.MediaExtractor: boolean hasCacheReachedEndOfStream()>
<android.view.View: int getHeight()>
<com.android.systemui.classifier.FalsingManager: void onNotificationDismissed()>
<android.app.ActivityManager.MemoryInfo: int describeContents()>
<com.android.systemui.statusbar.stack.ViewState: void copyFrom(com.android.systemui.statusbar.stack.ViewState)>
<android.view.KeyEvent: boolean isFunctionPressed()>
<android.util.Base64OutputStream: void write(int)>
<com.android.documentsui.model.DocumentInfo: boolean isPartial()>
<com.android.systemui.statusbar.NotificationContentView: void setShowingLegacyBackground(boolean)>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.location.GnssNavigationMessage.Callback: void onStatusChanged(int)>
<android.service.dreams.DreamService: void onAttachedToWindow()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onReset(com.android.systemui.statusbar.ExpandableView)>
<android.os.BatteryStats.Uid: int getMobileRadioActiveCount(int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec.BufferInfo,long)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayAdded(int)>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>
<android.media.audiofx.Virtualizer.Settings: java.lang.String toString()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setOccluded(boolean,boolean)>
<android.app.Instrumentation: void startProfiling()>
<android.widget.TextView: int getSelectionEnd()>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,int[],int)>
<com.android.gallery3d.glrenderer.BasicTexture: int getId()>
<android.text.Editable.Factory: android.text.Editable newEditable(java.lang.CharSequence)>
<com.android.systemui.DessertCaseView.RescalingContainer: void <init>(android.content.Context)>
<com.android.systemui.qs.QSTile: void refreshState(java.lang.Object)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setDuration(long)>
<android.graphics.drawable.DrawableContainer: int getAlpha()>
<android.widget.RelativeLayout.LayoutParams: void <init>(int,int)>
<android.graphics.drawable.GradientDrawable: int[] getColors()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onCameraHintStarted()>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>
<com.android.documentsui.FilesActivity: void onPostCreate(android.os.Bundle)>
<com.android.printspooler.model.PageContentRepository: void destroy(java.lang.Runnable)>
<android.app.ActionBar: void setHomeAsUpIndicator(int)>
<com.android.server.am.ActivityManagerService: boolean switchUser(int)>
<android.widget.Spinner: void setGravity(int)>
<android.graphics.drawable.shapes.RectShape: void <init>()>
<com.android.systemui.recents.RecentsActivity: void onStart()>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String,java.lang.Throwable)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec build()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent)>
<android.filterfw.core.StopWatchMap: void <init>()>
<android.media.audiofx.Equalizer.Settings: void <init>(java.lang.String)>
<android.os.Message: android.os.Bundle getData()>
<android.hardware.Camera.Size: boolean equals(java.lang.Object)>
<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(boolean)>
<com.android.systemui.recents.RecentsImpl: void <init>(android.content.Context)>
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<com.android.systemui.qs.tiles.CastTile: android.content.Intent getLongClickIntent()>
<android.hardware.camera2.DngCreator: void writeByteBuffer(java.io.OutputStream,android.util.Size,java.nio.ByteBuffer,long)>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.ZoomData convertScalerCropRegion(android.graphics.Rect,android.graphics.Rect,android.util.Size,android.hardware.Camera.Parameters)>
<com.android.server.pm.PackageManagerService: java.lang.String getDefaultBrowserPackageName(int)>
<com.android.server.Watchdog: void init(android.content.Context,com.android.server.am.ActivityManagerService)>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressTintMode()>
<android.view.OrientationListener: void enable()>
<com.android.MainActivity.OSUService: int onStartCommand(android.content.Intent,int,int)>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.media.midi.MidiManager: void openDevice(android.media.midi.MidiDeviceInfo,android.media.midi.MidiManager.OnDeviceOpenedListener,android.os.Handler)>
<android.app.ActionBar.OnNavigationListener: boolean onNavigationItemSelected(int,long)>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>
<com.android.server.input.InputManagerService: void <init>(android.content.Context)>
<android.view.ViewTreeObserver.OnDrawListener: void onDraw()>
<com.android.server.am.CompatModePackages: void handlePackageUninstalledLocked(java.lang.String)>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>
<android.graphics.drawable.VectorDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.doze.DozeHost: void addCallback(com.android.systemui.doze.DozeHost.Callback)>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)>
<android.view.InputDevice.MotionRange: float getFuzz()>
<android.webkit.WebView: void stopLoading()>
<com.android.documentsui.UriDerivativeLoader: void onReset()>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: int getColumnCount()>
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)>
<android.app.FragmentHostCallback: void onRequestPermissionsFromFragment(android.app.Fragment,java.lang.String[],int)>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: long getPrimaryStorageSize()>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>
<android.widget.TabWidget: void addView(android.view.View)>
<android.view.InputDevice: boolean hasMicrophone()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setBouncerShowing(boolean)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onPause()>
<android.mtp.MtpObjectInfo: long getThumbPixHeightLong()>
<android.hardware.camera2.utils.TaskSingleDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener)>
<android.media.audiofx.Visualizer: void release()>
<com.android.systemui.recents.tv.RecentsTvImpl: void startRecentsActivity(android.app.ActivityManager.RunningTaskInfo,boolean,boolean,int)>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getDeviceOwnerUserId()>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh create()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPoint(float,float,android.graphics.Paint)>
<android.hardware.usb.UsbConfiguration: int getMaxPower()>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setText(java.lang.CharSequence)>
<android.widget.TextView: void onMeasure(int,int)>
<com.android.documentsui.FilesActivity: void onResume()>
<android.util.EventLogTags: void <init>()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>
<com.android.systemui.doze.DozeHost: boolean isNotificationLightOn()>
<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<com.android.hotspot2.Utils: long parseMac(java.lang.String)>
<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void <init>(java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>
<android.hardware.camera2.impl.CameraMetadataNative: void readFromParcel(android.os.Parcel)>
<android.view.Window: void setFeatureDrawableResource(int,int)>
<android.preference.Preference: void setSummary(int)>
<com.android.systemui.statusbar.ExpandableView: void setActualHeight(int)>
<android.graphics.drawable.Drawable: void clearColorFilter()>
<android.widget.SearchView: void setImeOptions(int)>
<com.android.gallery3d.glrenderer.BasicTexture: void <init>(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<android.graphics.Paint: float measureText(char[],int,int)>
<android.util.AtomicFile: void delete()>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: boolean handleMessage(android.os.Message)>
<android.graphics.MaskFilter_Delegate: android.graphics.MaskFilter_Delegate getDelegate(long)>
<com.android.hotspot2.osu.OSUInfo: java.util.Set getIconLanguages()>
<com.android.systemui.recents.model.FilteredTaskList: void updateFilteredTasks()>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int,int)>
<android.graphics.Path_Delegate: void lineTo(float,float)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean canConfigBluetooth()>
<com.android.systemui.qs.tiles.NightDisplayTile: java.lang.CharSequence getTileLabel()>
<android.view.IWindowManagerImpl: void setFocusedApp(android.os.IBinder,boolean)>
<android.graphics.Path: boolean isConvex()>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<com.android.systemui.assist.AssistOrbView: void startEnterAnimation()>
<com.android.systemui.egg.MLand: void L(java.lang.String,java.lang.Object[])>
<android.os.Bundle: java.lang.String toString()>
<com.android.systemui.statusbar.phone.QSTileHost: void startActivityDismissingKeyguard(android.content.Intent)>
<android.net.NetworkRequest: int hashCode()>
<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.text.format.Time: boolean before(android.text.format.Time)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
<com.android.server.VibratorService: void onInputDeviceAdded(int)>
<com.android.systemui.qs.external.CustomTile: void onTileChanged(android.content.ComponentName)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<android.view.View.OnContextClickListener: boolean onContextClick(android.view.View)>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int)>
<android.provider.Settings.Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<com.android.systemui.recents.Recents: void showPrevAffiliatedTask()>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>
<android.telecom.InCallService.VideoCall: void registerCallback(android.telecom.InCallService.VideoCall.Callback,android.os.Handler)>
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()>
<android.graphics.Paint_Delegate: int getAlpha()>
<android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>
<android.graphics.Paint_Delegate: java.util.List getFonts()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<android.nfc.Tag: android.nfc.Tag rediscover()>
<android.text.method.BaseMovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.systemui.statusbar.ActivatableNotificationView: void drawableHotspotChanged(float,float)>
<android.media.effect.EffectContext: android.media.effect.EffectContext createWithCurrentGlContext()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isPackageSuspended(android.content.ComponentName,java.lang.String)>
<android.print.PrintJob: boolean isCompleted()>
<com.android.printspooler.util.ApprovedPrintServices: void unregisterChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.tv.pip.PipControlButtonView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.BaseStatusBar: void handleVisibleToUserChanged(boolean)>
<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>
<com.android.server.wm.BlackFrame: void kill()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void pokeDrawLock(android.os.IBinder)>
<android.nfc.tech.Ndef: boolean isWritable()>
<android.media.AsyncPlayer: void stop()>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<android.media.MediaRouter.RouteCategory: java.util.List getRoutes(java.util.List)>
<android.media.MediaRouter.RouteCategory: int getSupportedTypes()>
<android.media.DrmInitData: android.media.DrmInitData.SchemeInitData get(java.util.UUID)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addInnerPackageMapOrThrow(java.lang.String,java.lang.String)>
<com.android.systemui.stackdivider.Divider: com.android.systemui.stackdivider.DividerView getView()>
<android.location.Address: java.lang.String getLocality()>
<android.text.style.ScaleXSpan: int getSpanTypeId()>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser create(java.io.InputStream,java.lang.String)>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>
<com.android.systemui.statusbar.BaseStatusBar: void notifyHeadsUpScreenOff()>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>
<android.content.Loader: void deliverResult(java.lang.Object)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setVaryingColor(boolean)>
<com.android.future.usb.UsbAccessory: int hashCode()>
<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>
<android.net.wifi.WifiManager.WifiLock: void acquire()>
<com.android.systemui.statusbar.notification.NotificationMediaTemplateViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>
<android.graphics.Paint: void setTextSize(float)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldHideNotifications(int)>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.net.wifi.WifiScanner.BssidListener: void onFound(android.net.wifi.ScanResult[])>
<android.media.AudioDevicePort: java.lang.String toString()>
<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>
<android.widget.CalendarView: void setDateTextAppearance(int)>
<com.android.systemui.statusbar.NotificationContentView: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.systemui.statusbar.tv.TvStatusBar: void removeIcon(java.lang.String)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.Bridge: void setLog(com.android.ide.common.rendering.api.LayoutLog)>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificate(java.security.cert.X509Certificate)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setDozing(boolean,boolean)>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>
<android.text.method.DateTimeKeyListener: int getInputType()>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender.UnreadConversation getUnreadConversation()>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.LayoutLog getLog()>
<android.view.View: void setRight(int)>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>
<com.android.server.LocationManagerService: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.widget.DatePicker: int getDayOfMonth()>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>
<com.android.server.backup.BackupManagerService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameWidth(float)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,android.net.NetworkInfo.DetailedState,boolean,java.lang.String)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,java.lang.Object)>
<com.android.hotspot2.pps.HomeSP: void <init>(java.util.Map,java.lang.String,java.util.HashSet,java.util.Set,java.util.Set,java.util.List,java.lang.String,java.lang.String,com.android.hotspot2.pps.Credential,com.android.hotspot2.pps.Policy,int,java.util.Map,com.android.hotspot2.pps.UpdateInfo,com.android.hotspot2.pps.SubscriptionParameters,int)>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: android.graphics.Point createAbsolutePoint(android.graphics.Point)>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getProfileOwnerName()>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>
<com.android.server.hdmi.HdmiCecStandbyModeHandler: void <init>(com.android.server.hdmi.HdmiControlService,com.android.server.hdmi.HdmiCecLocalDeviceTv)>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>
<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.systemui.qs.tiles.NightDisplayTile: boolean isAvailable()>
<android.widget.VideoView: void onLayout(boolean,int,int,int,int)>
<android.print.PrintJobId: int describeContents()>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>
<com.android.systemui.qs.QSTile.Host: void collapsePanels()>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context)>
<com.android.systemui.Prefs: void putInt(android.content.Context,java.lang.String,int)>
<android.view.ViewGroup: void removeViews(int,int)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent)>
<android.widget.CalendarView.CalendarViewDelegate: void setFocusedMonthDateColor(int)>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>
<com.android.server.am.BatteryStatsService: java.lang.String getPlatformLowPowerStats()>
<com.android.server.location.LocationProviderProxy: com.android.internal.location.ProviderProperties getProperties()>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>
<com.android.preload.Main: java.util.Map findAndGetClassData(com.android.ddmlib.IDevice,java.lang.String)>
<android.transition.TransitionSet: int getTransitionCount()>
<com.android.systemui.statusbar.BaseStatusBar: android.content.pm.PackageManager getPackageManagerForUser(android.content.Context,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checkable(boolean)>
<android.os.AsyncTask: boolean cancel(boolean)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString()>
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>
<com.android.server.media.MediaSessionRecord: boolean isTransportControlEnabled()>
<android.preference.MultiSelectListPreference: java.util.Set getValues()>
<javax.microedition.khronos.opengles.GL10: void glSampleCoverage(float,boolean)>
<com.android.keyguard.KeyguardHostView: void dispatchDraw(android.graphics.Canvas)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context)>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUri(java.lang.String)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPath(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onDragDownReset()>
<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.media.AudioTrack: android.media.AudioDeviceInfo getRoutedDevice()>
<com.android.commands.am.Am: void onRun()>
<android.view.View: boolean isSaveEnabled()>
<com.android.systemui.statusbar.ScrimView: void setChangeRunnable(java.lang.Runnable)>
<com.android.hotspot2.osu.OSUInfo: void setIconStatus(com.android.hotspot2.osu.OSUInfo.IconStatus)>
<android.graphics.Matrix: void setSkew(float,float)>
<android.app.ActivityManagerProxy: void setLockScreenShown(boolean,boolean)>
<android.os.PowerManagerInternal.LowPowerModeListener: void onLowPowerModeChanged(boolean)>
<android.widget.TextView: int getTotalPaddingStart()>
<android.view.View: void setRotation(float)>
<com.android.systemui.qs.QSPanel: void showEdit(android.view.View)>
<android.widget.ViewFlipper: boolean isAutoStart()>
<android.provider.SyncStateContract.Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<android.webkit.WebViewProvider.ViewDelegate: void onVisibilityChanged(android.view.View,int)>
<android.app.FragmentController: android.app.FragmentController createController(android.app.FragmentHostCallback)>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<android.hardware.camera2.impl.CameraCaptureSessionCore: void replaceSessionClose()>
<com.android.anqp.eap.InnerAuthEAP: int hashCode()>
<com.android.gallery3d.glrenderer.RawTexture: void <init>(int,int,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController: float getDarkIntensity(android.graphics.Rect,android.view.View,float)>
<android.media.MediaSync: void <init>()>
<android.media.audiofx.Equalizer: short getCurrentPreset()>
<android.graphics.DiscretePathEffect: void <init>(float,float)>
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>
<android.telecom.Connection: void setCallerDisplayName(java.lang.String,int)>
<com.android.systemui.recents.tv.views.TaskCardView: boolean isInDismissState()>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: void <init>(android.graphics.Rect,int)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.android.preload.classdataretrieval.hprof.Hprof: void <init>(int)>
<android.widget.ListView: void layoutChildren()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder addNameParameter(java.lang.String)>
<android.net.http.SslError: int getPrimaryError()>
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>
<android.provider.ContactsContract: boolean isProfileId(long)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String bytesToHexString(byte[],boolean)>
<android.opengl.GLES10: void glStencilMask(int)>
<android.preference.Preference: java.lang.String getDependency()>
<com.android.keyguard.KeyguardPINView: void startAppearAnimation()>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(int[])>
<com.android.location.provider.LocationRequestUnbundled: int getQuality()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent)>
<android.widget.NumberPicker: void setMaxValue(int)>
<com.android.server.am.InstrumentationReporter: void reportFinished(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telecom.RemoteConference.Callback: void onStateChanged(android.telecom.RemoteConference,int,int)>
<android.widget.NumberPicker: int getMaxValue()>
<android.widget.CheckedTextView: void setVisibility(int)>
<com.android.hotspot2.omadm.OMAConstructed: void marshal(java.io.OutputStream,int)>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>
<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: java.lang.String toString()>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(long)>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>
<android.media.AudioTrack.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioRouting)>
<android.view.Display: int getDisplayId()>
<android.media.AudioManager: void adjustVolume(int,int)>
<android.graphics.Camera: void save()>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>
<com.android.gallery3d.exif.ExifInterface: double convertLatOrLongToDouble(com.android.gallery3d.exif.Rational[],java.lang.String)>
<android.app.FragmentManagerImpl: void dispatchPause()>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>
<android.webkit.WebResourceResponse: int getStatusCode()>
<android.telephony.NeighboringCellInfo: int getRssi()>
<com.google.android.gles_jni.GLImpl: void glDisableClientState(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void dumpStatisticsAndClear()>
<com.android.server.net.NetworkStatsRecorder.RemoveUidRewriter: void <init>(long,int[])>
<com.android.anqp.eap.NonEAPInnerAuth: void <init>(java.lang.String)>
<android.renderscript.FieldPacker: android.renderscript.Float4 subFloat4()>
<android.util.ArrayMap: void ensureCapacity(int)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityForOriginationEnd(java.util.Date)>
<android.telephony.CellSignalStrengthLte: int describeContents()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void <init>(android.content.Context)>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<android.location.GnssMeasurement: long getReceivedSvTimeUncertaintyNanos()>
<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>
<android.media.tv.TvInputService.Session: android.view.View onCreateOverlayView()>
<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void onShortcutKeyPressed(long)>
<android.widget.ListView: void onFinishInflate()>
<android.app.DialogFragment: void dismissAllowingStateLoss()>
<android.ddm.DdmHandleProfiling: void connected()>
<android.media.session.MediaController.Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>
<android.content.SyncResult: java.lang.String toString()>
<com.android.documentsui.dirlist.RenameDocumentFragment: void onSaveInstanceState(android.os.Bundle)>
<android.telephony.CellSignalStrengthGsm: void writeToParcel(android.os.Parcel,int)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet()>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedDocument(java.lang.String,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.media.AudioPortConfig: int channelMask()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPassword(java.lang.String)>
<android.graphics.Canvas_Delegate: boolean native_clipRegion(long,long,int)>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.notification.TransformState: void resetTransformedView()>
<android.os.BatteryStats.Uid.Proc: long getForegroundTime(int)>
<android.inputmethodservice.KeyboardView: boolean handleBack()>
<android.content.ClipDescription: java.lang.String getMimeType(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.util.AbstractMessageParser.Smiley: void <init>(java.lang.String)>
<com.android.server.notification.NotificationDelegate: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path.Op)>
<android.bluetooth.BluetoothGattServerCallback: void onMtuChanged(android.bluetooth.BluetoothDevice,int)>
<com.android.printspooler.ui.PageAdapter: void stopPreloadContent()>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager.DiscoveryListener)>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>
<android.media.MediaCodec.CryptoInfo.Pattern: int getSkipBlocks()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.media.MediaCryptoException: void <init>(java.lang.String)>
<android.graphics.RoundRectangle: boolean intersects(double,double,double,double)>
<com.android.documentsui.services.FileOperations: android.content.Intent createBaseIntent(int,android.content.Context,java.lang.String,java.util.List,com.android.documentsui.model.DocumentInfo,com.android.documentsui.model.DocumentStack)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result animate(java.lang.Object,java.lang.String,boolean,com.android.ide.common.rendering.api.IAnimationListener)>
<android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
<com.android.systemui.classifier.PointerCountClassifier: float getFalseTouchEvaluation(int)>
<com.android.server.clipboard.ClipboardService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: void notifyBarPanelExpansionChanged()>
<android.opengl.GLES32: void glSamplerParameterIiv(int,int,int[],int)>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureResultKeys()>
<android.app.assist.AssistStructure.ViewNode: int getTextStyle()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setColorFilter(android.graphics.ColorFilter)>
<com.android.layoutlib.bridge.android.BridgeContext: android.os.Looper getMainLooper()>
<android.ddm.DdmHandleThread: void connected()>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>
<android.util.TimingLogger: void reset(java.lang.String,java.lang.String)>
<android.text.style.LocaleSpan: int describeContents()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean isStateful()>
<com.android.settingslib.accounts.AuthenticatorHelper: void listenToAccountUpdates()>
<android.media.MediaRouter.RouteInfo: int getVolumeHandling()>
<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ExpandableView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setFormat(android.media.AudioFormat)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>
<android.os.Debug: boolean waitingForDebugger()>
<android.app.FragmentController: boolean execPendingActions()>
<com.android.systemui.recents.views.AnimationProps: android.animation.AnimatorSet createAnimator(java.util.List)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getTimeCacheMaxAge()>
<android.hardware.Camera.Parameters: float getFocalLength()>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>
<android.view.View: int getVisibility()>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.widget.ImageView: void setImageAlpha(int)>
<android.graphics.drawable.DrawableContainer: int getOpacity()>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnBranded()>
<com.android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>
<android.content.CursorLoader: void setProjection(java.lang.String[])>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>
<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>
<com.android.printspooler.model.RemotePrintDocument: boolean update(android.print.PrintAttributes,android.print.PageRange[],boolean)>
<com.android.server.policy.PhoneWindowManager: void getContentRectLw(android.graphics.Rect)>
<android.content.res.BridgeAssetManager: com.android.ide.common.rendering.api.AssetRepository getAssetRepository()>
<android.graphics.Paint: float getTextScaleX()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean resolveThemeAttribute(int,android.util.TypedValue,boolean)>
<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onDragDownReset()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCountMax()>
<android.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<com.android.server.usb.UsbHostManager: void setCurrentSettings(com.android.server.usb.UsbSettingsManager)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onSetVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<android.accounts.Account: void <init>(android.os.Parcel)>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>
<android.view.View: int getPaddingLeft()>
<com.android.server.job.controllers.DeviceIdleJobsController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>
<android.opengl.GLES32: void glGetSamplerParameterIiv(int,int,int[],int)>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>
<com.android.server.accessibility.EventStreamTransformation: void onKeyEvent(android.view.KeyEvent,int)>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.BroadcastQueue: void backgroundServicesFinishedLocked(int)>
<com.android.server.audio.AudioService.VolumeController: void postVolumeChanged(int,int)>
<android.app.Instrumentation: void onStart()>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.KernelID getKernelID()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>
<android.app.ActionBar: void setHomeButtonEnabled(boolean)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void <init>(android.content.Context)>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>
<android.speech.tts.Voice: int getLatency()>
<android.graphics.drawable.GradientDrawable: void setShape(int)>
<com.android.anqp.OSUProvider: java.lang.String toString()>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>
<android.animation.LayoutTransition.TransitionListener: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getWidth()>
<android.widget.NumberPicker: void onLayout(boolean,int,int,int,int)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.BluetoothAdapter: void stopLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void updateDrawer()>
<android.net.LinkProperties: java.lang.String getInterfaceName()>
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissInvalidChargerWarning()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportFailedPasswordAttempt(int)>
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>
<com.android.server.BrickReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.gesture.GestureOverlayView: boolean isGesturing()>
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(int,int)>
<com.android.server.usage.UnixCalendar: void setTimeInMillis(long)>
<android.content.Loader: boolean onCancelLoad()>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>
<com.android.systemui.tv.pip.PipManager: void closePip()>
<com.android.egg.neko.Cat: void logAdd(android.content.Context)>
<com.android.server.net.NetworkPolicyManagerService: void unregisterListener(android.net.INetworkPolicyListener)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,int[],int)>
<com.android.systemui.statusbar.policy.DataSaverController: void setDataSaverEnabled(boolean)>
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition(int)>
<com.android.settingslib.net.SummaryForAllUidLoader: void onStartLoading()>
<android.telecom.RemoteConnection.VideoProvider: void setDisplaySurface(android.view.Surface)>
<android.graphics.pdf.PdfRenderer: int getPageCount()>
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>
<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>
<android.nfc.tech.NfcV: int getMaxTransceiveLength()>
<android.preference.EditTextPreference: java.lang.String getText()>
<com.android.systemui.statusbar.policy.SignalController: java.lang.String getStringIfExists(int)>
<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.telecom.RemoteConference: int getConnectionCapabilities()>
<android.graphics.SurfaceTexture.OnFrameAvailableListener: void onFrameAvailable(android.graphics.SurfaceTexture)>
<android.media.audiofx.AudioEffect.OnControlStatusChangeListener: void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)>
<com.android.server.pm.UserManagerService: long getUserCreationTime(int)>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4x(int,int,int,int,int)>
<android.text.style.TtsSpan.DateBuilder: void <init>()>
<android.opengl.GLES10: void glDepthMask(boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitParameterType()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<android.text.method.LinkMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.app.ActivityManagerProxy: void notifyPinnedStackAnimationEnded()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateY()>
<com.android.printspooler.model.RemotePrintDocument: void clearUpdateError()>
<android.app.ActivityManagerProxy: void killAllBackgroundProcesses()>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[])>
<android.text.TextPaint: void set(android.text.TextPaint)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: boolean glIsFramebufferOES(int)>
<com.android.server.connectivity.NetworkAgentInfo: int compareTo(com.android.server.connectivity.NetworkAgentInfo)>
<android.media.Image: void close()>
<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()>
<android.telecom.InCallService: java.util.List getCalls()>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isDeviceIdleMode()>
<android.bluetooth.BluetoothHealthCallback: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.telecom.Call: void sendCallEvent(java.lang.String,android.os.Bundle)>
<android.widget.SlidingDrawer: boolean isOpened()>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>
<android.view.Window: android.view.Window getContainer()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getDoNotAskCredentialsOnBoot()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo getCollectionInfo()>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(java.lang.String)>
<android.telephony.CellIdentityCdma: int getLongitude()>
<com.android.server.trust.TrustManagerService: void <init>(android.content.Context)>
<com.android.keyguard.EmergencyButton.EmergencyButtonCallback: void onEmergencyButtonClickedWhenInCall()>
<com.android.server.am.ActivityManagerService: void setAlwaysFinish(boolean)>
<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.commands.ime.Ime: void run(java.lang.String[])>
<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.documentsui.dirlist.DocumentHolder: void setHighlighted(boolean)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.content.res.ColorStateList: int describeContents()>
<android.webkit.WebViewProvider.ViewDelegate: boolean shouldDelayChildPressedState()>
<com.android.location.provider.FusedLocationHardware: void stopBatching(int)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri,long,long)>
<com.android.uiautomator.core.UiDevice: void setOrientationRight()>
<android.view.Window: void setTitleColor(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAffiliationIds(android.content.ComponentName,java.util.List)>
<android.view.View.MeasureSpec: int getMode(int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitBaseType(char)>
<android.app.FragmentManager: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.android.systemui.statusbar.RemoteInputController: void addCallback(com.android.systemui.statusbar.RemoteInputController.Callback)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeResourceValue(int,int)>
<com.android.server.am.ActivityManagerService: void activitySlept(android.os.IBinder)>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>
<com.android.server.am.ActivityManagerService: void setImmersive(android.os.IBinder,boolean)>
<android.app.KeyguardManager: boolean isDeviceSecure()>
<android.database.AbstractWindowedCursor: short getShort(int)>
<com.android.systemui.statusbar.ExpandableView: void setHideSensitiveForIntrinsicHeight(boolean)>
<android.view.DragAndDropPermissions: void release()>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int,int)>
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getActivityLogo(android.content.pm.ActivityInfo)>
<android.app.Fragment: android.app.Fragment getTargetFragment()>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
<com.android.egg.neko.NekoLockedActivity: void onCreate(android.os.Bundle)>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<com.android.documentsui.MessageBar: void setInfo(java.lang.String)>
<com.android.server.wm.AppTransition: void dump(java.io.PrintWriter,java.lang.String)>
<android.graphics.SurfaceTexture: void finalize()>
<com.android.server.accessibility.AutoclickController: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.filterpacks.imageproc.DuotoneFilter: void process(android.filterfw.core.FilterContext)>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>
<android.content.ClipboardManager: void removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>
<android.app.job.JobScheduler: void cancel(int)>
<com.android.systemui.volume.VolumeUI: void start()>
<android.telephony.CellIdentityLte: int getTac()>
<android.mtp.MtpObjectInfo: long getImagePixWidthLong()>
<android.telephony.CellIdentityWcdma: int describeContents()>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager.Query)>
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()>
<com.android.documentsui.services.Job.Listener: void onStart(com.android.documentsui.services.Job)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<android.widget.DatePicker: boolean getSpinnersShown()>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>
<com.google.android.gles_jni.GLImpl: void glFogx(int,int)>
<android.app.Activity: void onStop()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActiveQueueItemId(long)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespace()>
<android.content.pm.PackageInstaller: java.util.List getAllSessions()>
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int nextTag()>
<android.widget.MultiAutoCompleteTextView: java.lang.CharSequence getAccessibilityClassName()>
<android.view.View: void computeScroll()>
<android.graphics.Point: int describeContents()>
<android.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction.Builder setTextureMatrixEnable(boolean)>
<com.android.commands.hid.Event: int getVendorId()>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,java.lang.Object)>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect createRect(android.util.Size)>
<com.android.systemui.SwipeHelper: void setPagingTouchSlop(float)>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>
<android.content.pm.ResolveInfo: int describeContents()>
<android.widget.Editor.UndoInputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<com.android.tools.layoutlib.create.MethodListener: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void findAndUpdateMediaNotifications()>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<android.os.BatteryStats.Counter: int getCountLocked(int)>
<android.content.pm.PackageItemInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.view.View: int getSuggestedMinimumHeight()>
<android.widget.PopupWindow: boolean isAttachedInDecor()>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.view.MotionEvent: int getMetaState()>
<android.view.inputmethod.InputBinding: int getPid()>
<com.android.systemui.statusbar.NotificationBackgroundView: void drawableStateChanged()>
<com.android.server.usb.UsbService: boolean isFunctionEnabled(java.lang.String)>
<android.media.TimedText: android.graphics.Rect getBounds()>
<android.printservice.PrinterDiscoverySession: java.util.List getTrackedPrinters()>
<com.android.server.notification.NotificationManagerService.NotificationRankers: boolean checkType(android.os.IInterface)>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<android.accessibilityservice.AccessibilityService.MagnificationController: float getCenterX()>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setTitle(java.lang.CharSequence)>
<com.android.documentsui.model.DurableUtils: byte[] writeToArray(com.android.documentsui.model.Durable)>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void resize()>
<android.content.res.BridgeTypedArray: int getInt(int,int)>
<android.hardware.radio.RadioManager.AmBandDescriptor: int hashCode()>
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.net.Uri)>
<com.android.server.policy.BarController: void adjustSystemUiVisibilityLw(int,int)>
<android.content.SyncResult: java.lang.String toDebugString()>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.telephony.ServiceState: java.lang.String toString()>
<android.nfc.NfcAdapter: void disableReaderMode(android.app.Activity)>
<android.app.Activity: void onProvideAssistData(android.os.Bundle)>
<com.android.hotspot2.omadm.OMAConstructed: java.lang.String getScalarValue(java.util.Iterator)>
<android.widget.Toast: android.view.View getView()>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.telephony.CellSignalStrengthCdma: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setYuvFormat(int)>
<com.android.server.notification.NotificationDelegate: void onNotificationClick(int,int,java.lang.String)>
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnRestricted()>
<com.android.hotspot2.osu.XMLParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void applyFlags(android.app.AlertDialog)>
<android.widget.ScrollView: int computeVerticalScrollOffset()>
<android.inputmethodservice.KeyboardView: void swipeUp()>
<android.webkit.WebChromeClient.FileChooserParams: boolean isCaptureEnabled()>
<com.android.systemui.statusbar.policy.DataSaverController: void <init>(android.content.Context)>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>
<android.media.AudioManager: void setStreamVolume(int,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean requestRectangleOnScreen(android.graphics.Rect)>
<android.telecom.Call: void conference(android.telecom.Call)>
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
<com.android.systemui.statusbar.ExpandableView: int getMinClipTopAmount()>
<com.android.providers.settings.SettingsProvider: java.lang.String settingTypeToString(int)>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>
<android.widget.Toolbar: void setSubtitleTextColor(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onDensityOrFontScaleChanged()>
<android.media.tv.TvTrackInfo: int getVideoWidth()>
<android.app.admin.DevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobStateChanged(android.print.PrintJobInfo)>
<android.view.ContextThemeWrapper: void setTheme(int)>
<android.text.format.Time: boolean after(android.text.format.Time)>
<com.android.systemui.recents.views.TaskViewHeader: void setShouldDarkenBackgroundColor(boolean)>
<com.android.uiautomator.core.UiDevice: void resetWatcherTriggers()>
<android.widget.ProgressBar: void setProgress(int)>
<com.android.server.am.ActivityManagerService: void addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport.CrashInfo)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>
<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>
<android.view.View: boolean requestFocus(int)>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
<android.security.KeyChainException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[])>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>
<android.renderscript.ScriptIntrinsicBLAS: void SGER(float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>
<com.android.printspooler.ui.PageAdapter: void onOrientationChanged()>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution)>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<com.android.systemui.recents.tv.animations.HomeRecentsEnterExitAnimationHolder: void setEnterFromHomeStartingAnimationValues(boolean)>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>
<android.widget.ListPopupWindow: android.widget.ListView getListView()>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>
<android.app.Notification.MessagingStyle.Message: long getTimestamp()>
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup)>
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.notification.ManagedServices: void onUserUnlocked(int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean setInputMethodEnabled(java.lang.String,boolean)>
<com.android.server.policy.PhoneWindowManager: boolean isDockSideAllowed(int)>
<android.media.tv.TvInputInfo.Builder: void <init>(android.content.Context,android.content.ComponentName)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,float[],int)>
<android.telephony.ServiceState: int describeContents()>
<android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)>
<android.telecom.Conference: void setConnectionProperties(int)>
<android.media.midi.MidiSender: void connect(android.media.midi.MidiReceiver)>
<com.android.server.media.MediaSessionRecord: int getUserId()>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>
<android.view.textservice.SpellCheckerSubtype: int hashCode()>
<android.graphics.drawable.AnimationDrawable: void start()>
<com.android.server.notification.CountdownConditionProvider: android.service.notification.IConditionProvider asInterface()>
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.content.res.Configuration: boolean equals(java.lang.Object)>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>
<android.widget.AnalogClock: void onAttachedToWindow()>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<android.os.RemoteCallbackList: void kill()>
<android.net.wifi.nan.PublishSettings.Builder: android.net.wifi.nan.PublishSettings.Builder setPublishType(int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getCameraLensCoverState()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOff()>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>
<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>
<android.graphics.drawable.BitmapDrawable: boolean isStateful()>
<android.hardware.radio.RadioManager.BandDescriptor: int hashCode()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int nextToken()>
<com.android.systemui.recents.views.TaskViewHeader: void onTaskViewSizeChanged(int,int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
<android.provider.Settings.Global: android.net.Uri getUriFor(java.lang.String)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.transition.TransitionSet: android.transition.TransitionSet setStartDelay(long)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getDeviceOwnerComponent(boolean)>
<com.android.systemui.statusbar.policy.BatteryController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ActionBar: float getElevation()>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onDragCancelled(android.view.View)>
<android.text.method.ReplacementTransformationMethod: char[] getOriginal()>
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearCrossProfileIntentFilters(int)>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] getPackagesForUid(int)>
<android.transition.Scene: void setExitAction(java.lang.Runnable)>
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()>
<android.location.Location: void dump(android.util.Printer,java.lang.String)>
<android.service.voice.VoiceInteractionSession.CommandRequest: void sendIntermediateResult(android.os.Bundle)>
<android.renderscript.Element: android.renderscript.Element YUV(android.renderscript.RenderScript)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: boolean isEmptyElementTag()>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
<android.widget.TableLayout: boolean isShrinkAllColumns()>
<android.graphics.drawable.LayerDrawable: boolean canApplyTheme()>
<com.android.hotspot2.osu.XMLParser: com.android.hotspot2.omadm.XMLNode getRoot()>
<android.telephony.CellIdentityGsm: boolean equals(java.lang.Object)>
<android.hardware.Camera.Parameters: void setFocusAreas(java.util.List)>
<android.view.animation.Animation: void setRepeatMode(int)>
<android.util.ArrayMap: java.lang.Object removeAt(int)>
<com.android.commands.svc.PowerCommand: java.lang.String shortHelp()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setPinned(boolean)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: void updateTracker(long,boolean,boolean)>
<com.android.server.accessibility.MotionEventInjector: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.layoutlib.bridge.Bridge: java.util.concurrent.locks.ReentrantLock getLock()>
<android.bluetooth.le.ScanRecord: java.lang.String getDeviceName()>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: boolean setSize(android.graphics.Rect)>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,byte[])>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setPageCount(int)>
<com.android.server.pm.Installer: void linkFile(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: int getOpacity()>
<com.google.android.util.AbstractMessageParser.Format: boolean controlCaps()>
<android.content.pm.Signature: char[] toChars(char[],int[])>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<com.android.server.pm.PackageInstallerService: android.content.pm.IPackageInstallerSession openSession(int)>
<android.net.SSLSessionCache: void <init>(android.content.Context)>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setContentBackground(int,boolean,com.android.systemui.statusbar.NotificationContentView)>
<android.view.ViewStructure: void setId(int,java.lang.String,java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()>
<android.widget.NumberPicker: int getSolidColor()>
<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>
<com.android.systemui.Prefs: long getLong(android.content.Context,java.lang.String,long)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>
<com.android.hotspot2.osu.OSUManager: com.android.hotspot2.OMADMAdapter getOMADMAdapter()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector scrollable(boolean)>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.statusbar.NotificationGuts: void drawableHotspotChanged(float,float)>
<android.location.GpsSatellite: boolean hasAlmanac()>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateNotBefore(java.util.Date)>
<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationContentView getPublicLayout()>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>
<com.android.systemui.keyboard.BluetoothDialog: void <init>(android.content.Context)>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getDefaultRootBlocking(com.android.documentsui.State)>
<android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void onDensityOrFontScaleChanged()>
<android.media.MediaMetadataRetriever: void finalize()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void onRemoteInputActive(boolean)>
<android.content.pm.ServiceInfo: java.lang.String toString()>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onError(java.lang.String)>
<android.os.Binder: int getCallingPid()>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>
<android.media.MediaPlayer: void reset()>
<com.android.systemui.qs.external.CustomTile: int getUser()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void fillRect(float,float,float,float,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void fadeKeyguardAfterLaunchTransition(java.lang.Runnable,java.lang.Runnable)>
<android.graphics.Camera: void <init>()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()>
<com.android.hotspot2.WifiNetworkAdapter: android.net.wifi.WifiConfiguration getWifiConfig(com.android.hotspot2.pps.HomeSP)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHintFinished()>
<android.bluetooth.le.ScanFilter: void writeToParcel(android.os.Parcel,int)>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void intersect(java.util.Collection)>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
<android.content.res.Resources: float getFraction(int,int,int)>
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)>
<android.view.textservice.SpellCheckerSubtype: void <init>(int,java.lang.String,java.lang.String)>
<android.content.pm.ComponentInfo: int getBannerResource()>
<android.view.MotionEvent.PointerCoords: void <init>()>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>
<com.android.server.notification.CountdownConditionProvider: void onSubscribe(android.net.Uri)>
<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>
<android.app.Notification.MessagingStyle: java.util.List getMessages()>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>
<com.android.preload.actions.ComputeThresholdAction: void <init>(java.lang.String,com.android.preload.DumpTableModel,int,java.lang.String)>
<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,int[],int)>
<android.opengl.GLES32: void glGetnUniformiv(int,int,int,java.nio.IntBuffer)>
<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>
<android.app.admin.DevicePolicyManager: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<android.telecom.Conference: android.telecom.StatusHints getStatusHints()>
<android.util.FloatProperty: void setValue(java.lang.Object,float)>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>
<android.util.SparseIntArray: int get(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>
<android.text.style.StyleSpan: void <init>(int)>
<com.android.systemui.classifier.HistoryEvaluator: void <init>()>
<com.android.systemui.recents.misc.FreePathInterpolator: float getInterpolation(float)>
<com.android.systemui.statusbar.BaseStatusBar: void createAndAddWindows()>
<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>
<android.widget.ImageView: void onVisibilityAggregated(boolean)>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>()>
<com.android.systemui.statusbar.policy.LocationController: boolean isLocationEnabled()>
<android.provider.DocumentsContract: android.net.Uri copyDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri)>
<com.android.server.audio.AudioService.Lifecycle: void onStart()>
<com.android.systemui.qs.QSTile.Host: void startActivityDismissingKeyguard(android.content.Intent)>
<android.service.media.MediaBrowserService: void onLoadItem(java.lang.String,android.service.media.MediaBrowserService.Result)>
<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>
<com.google.android.util.AbstractMessageParser.Part: java.util.ArrayList getTokens()>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAuthFailed()>
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.server.am.ActivityManagerService: void moveTasksToFullscreenStack(int,boolean)>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
<com.android.systemui.usb.UsbDebuggingActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void handleSystemNavigationKey(int)>
<com.android.systemui.recents.RecentsSystemUser: void registerNonSystemUserCallbacks(android.os.IBinder,int)>
<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
<android.renderscript.FieldPacker: void addU32(long)>
<com.android.systemui.volume.Events: void writeState(long,com.android.systemui.volume.VolumeDialogController.State)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: boolean markSupported()>
<com.android.documentsui.SaveFragment: void show(android.app.FragmentManager,java.lang.String,java.lang.String)>
<com.android.server.SystemConfig: android.util.ArrayMap getPermissions()>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[])>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<com.android.documentsui.ProviderExecutor: void execute(android.os.AsyncTask,java.lang.Object[])>
<com.android.documentsui.StressProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.media.MediaFormat: boolean containsKey(java.lang.String)>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>
<android.hardware.Sensor: boolean isWakeUpSensor()>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>
<com.android.systemui.classifier.AnglesClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.am.BatteryStatsService: void noteScreenBrightness(int)>
<android.content.pm.LauncherApps: boolean isActivityEnabled(android.content.ComponentName,android.os.UserHandle)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>
<android.os.health.HealthStats: boolean hasTimers(int)>
<android.location.GnssMeasurement: double getPseudorangeRateUncertaintyMetersPerSecond()>
<android.hardware.camera2.utils.TypeReference: int hashCode()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void setReceiver(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver)>
<com.android.location.provider.FusedLocationHardware: void updateBatchingOptions(int,com.android.location.provider.GmsFusedBatchOptions)>
<com.android.server.retaildemo.UserInactivityCountdownDialog: void show()>
<android.widget.PopupWindow: void setContentView(android.view.View)>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: boolean onKeyDown(int,android.view.KeyEvent)>
<android.animation.Animator: void pause()>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>
<android.app.assist.AssistStructure.ViewNode: int getScrollX()>
<android.view.Display.HdrCapabilities: int[] getSupportedHdrTypes()>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int,int,int)>
<android.telecom.RemoteConnection.Callback: void onConnectionEvent(android.telecom.RemoteConnection,java.lang.String,android.os.Bundle)>
<com.android.server.pm.Installer: void destroyAppProfiles(java.lang.String)>
<android.view.ViewGroup: int getPersistentDrawingCache()>
<android.media.MediaDrm.ProvisionRequest: java.lang.String getDefaultUrl()>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<com.android.systemui.SystemUIFactory: void <init>()>
<android.media.SoundPool: void setLoop(int,int)>
<android.bluetooth.BluetoothGattDescriptor: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.NotificationGuts getExposedGuts()>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void onRecentsPaused()>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>
<com.android.systemui.egg.MLand: float clamp(float)>
<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<android.telecom.Call: void playDtmfTone(char)>
<android.media.NotProvisionedException: void <init>(java.lang.String)>
<android.widget.TabHost.IndicatorStrategy: android.view.View createIndicatorView()>
<android.widget.AutoCompleteTextView.OnDismissListener: void onDismiss()>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int)>
<com.android.systemui.recents.tv.views.RecentsTvView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.NextAlarmController getNextAlarmController()>
<javax.microedition.khronos.opengles.GL11: void glBindBuffer(int,int)>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>
<android.renderscript.ScriptC: void <init>(int,android.renderscript.RenderScript)>
<android.renderscript.ScriptIntrinsicBLAS: void DTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>
<com.android.server.storage.DiskStatsLoggingService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.server.pm.Policy: boolean hasGlobalSeinfo()>
<android.location.GnssMeasurement: int describeContents()>
<com.android.keyguard.KeyguardUpdateMonitor: void setCurrentUser(int)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setLanguage(java.lang.String)>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDescription(java.lang.CharSequence)>
<android.content.IntentFilter: void <init>(android.content.IntentFilter)>
<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>
<android.content.res.AssetManager.AssetInputStream: void close()>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.NotificationData.Entry getEntry(java.lang.String)>
<com.android.systemui.tv.pip.PipControlButtonView: void setImageResource(int)>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>
<android.location.Address: android.os.Bundle getExtras()>
<android.webkit.WebView: void setBackgroundColor(int)>
<android.content.IntentFilter: void setPriority(int)>
<android.view.View: java.util.ArrayList getFocusables(int)>
<android.net.ConnectivityManager: void registerDefaultNetworkCallback(android.net.ConnectivityManager.NetworkCallback)>
<com.android.systemui.classifier.Point: float dotProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser create(java.io.File)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(int[],int)>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: void <init>(int,int)>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.ToggleRecentsEvent)>
<com.android.systemui.recents.views.AnimationProps: void <init>(int,int,android.view.animation.Interpolator,android.animation.Animator.AnimatorListener)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isKeyguardCurrentlySecure()>
<android.view.inputmethod.InputMethodManager_Accessor: void resetInstance()>
<android.media.audiofx.PresetReverb.Settings: void <init>(java.lang.String)>
<android.view.Display.Mode: int hashCode()>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>
<android.content.res.BridgeTypedArray: boolean hasValue(int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceAddress(java.lang.String)>
<com.android.systemui.stackdivider.DividerView: void onBusEvent(com.android.systemui.recents.events.ui.RecentsDrawnEvent)>
<com.android.server.policy.BarController: boolean isTransientShowRequested()>
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glScalex(int,int,int)>
<android.app.job.JobInfo: long getFlexMillis()>
<android.net.RouteInfo: boolean matches(java.net.InetAddress)>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void updateInvertHelper()>
<android.opengl.GLES32: void glTexBuffer(int,int,int)>
<android.hardware.camera2.CameraDevice.StateCallback: void onDisconnected(android.hardware.camera2.CameraDevice)>
<com.android.uiautomator.core.UiObject: boolean swipeDown(int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean canConfigBluetooth()>
<com.android.systemui.statusbar.policy.BluetoothController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BluetoothController.Callback)>
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.app.Fragment: android.app.Fragment getParentFragment()>
<com.android.hotspot2.utils.HTTPRequest: java.nio.ByteBuffer getBinaryPayload()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>
<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildType(int,int)>
<android.telephony.IccOpenLogicalChannelResponse: void writeToParcel(android.os.Parcel,int)>
<com.android.server.trust.TrustAgentWrapper: long getScheduledRestartUptimeMillis()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getVersion(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getDefaultBrowserPackageNameAsUser(int)>
<android.os.BatteryStats.HistoryItem: void <init>(long,android.os.Parcel)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>
<android.widget.AbsSeekBar: void setTickMark(android.graphics.drawable.Drawable)>
<android.graphics.RectF: void set(android.graphics.RectF)>
<android.view.ShadowPainter: void drawRectangleShadow(java.awt.Graphics2D,int,int,int,int)>
<com.android.printspooler.widget.PrintContentView: void openOptions()>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.content.ContentProviderProxy: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.TwoLineListItem: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.qs.QSPanel.Callback: void onShowingDetail(com.android.systemui.qs.QSTile.DetailAdapter,int,int)>
<android.net.ConnectivityManager: boolean bindProcessToNetwork(android.net.Network)>
<android.view.KeyEvent: boolean isSymPressed()>
<com.android.systemui.statusbar.AlphaImageView: boolean hasOverlappingRendering()>
<com.android.documentsui.RecentsCreateFragment: void show(android.app.FragmentManager)>
<com.android.systemui.volume.SegmentedButtons: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.IntentSender: java.lang.String getTargetPackage()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpPinnedModeChanged(boolean)>
<android.renderscript.FieldPacker: android.renderscript.Short4 subShort4()>
<android.opengl.GLES32: void glPopDebugGroup()>
<android.util.BridgeXmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<com.android.server.DeviceIdleController: void onBootPhase(int)>
<android.view.Menu: int size()>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>
<android.service.voice.VoiceInteractionSession: void onTaskStarted(android.content.Intent,int)>
<com.android.server.hdmi.HdmiControlService.SendMessageCallback: void onSendCompleted(int)>
<android.view.animation.BounceInterpolator: void <init>()>
<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(android.animation.Animator)>
<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>
<com.android.server.trust.TrustAgentWrapper: boolean isConnected()>
<android.graphics.Paint: void setFakeBoldText(boolean)>
<android.media.midi.MidiDeviceInfo: int getType()>
<com.android.egg.neko.NekoTile: void onStartListening()>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>
<com.android.server.InputMethodManagerService: void setImeWindowStatus(android.os.IBinder,int,int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.UserInfoController getUserInfoController()>
<android.animation.Animator: long getStartDelay()>
<com.android.systemui.qs.QSTile: void clearState()>
<android.nfc.tech.NfcA: void setTimeout(int)>
<com.android.printservice.recommendation.util.NsdResolveQueue: com.android.printservice.recommendation.util.NsdResolveQueue getInstance()>
<android.app.ActionBar: int getHideOffset()>
<com.android.hotspot2.utils.HTTPResponse: java.lang.String getHeader(java.lang.String)>
<android.app.UiAutomation: void waitForIdle(long,long)>
<android.view.WindowInsets: boolean hasSystemWindowInsets()>
<android.media.session.MediaController.Callback: void onAudioInfoChanged(android.media.session.MediaController.PlaybackInfo)>
<com.android.settingslib.bluetooth.PbapServerProfile: java.lang.String toString()>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>
<com.android.keyguard.CarrierText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.LauncherApps.Callback: void onPackagesSuspended(java.lang.String[],android.os.UserHandle)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.widget.ExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.documentsui.dirlist.IconHelper: void setThumbnailsEnabled(boolean)>
<com.google.android.gles_jni.GLImpl: void glRenderbufferStorageOES(int,int,int,int)>
<com.android.systemui.recents.model.Task: void setGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<android.view.Choreographer_Delegate: void doFrame(long)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void onWallpaperChanged()>
<android.telecom.Phone.Listener: void onSilenceRinger(android.telecom.Phone)>
<android.app.Instrumentation: void stopAllocCounting()>
<android.filterpacks.imageproc.SaturateFilter: void <init>(java.lang.String)>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getClosestChildAtRawPosition(float,float)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.documentsui.DirectoryResult: void close()>
<com.android.location.provider.ActivityRecognitionEvent: int getEventType()>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteCancelled()>
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>
<com.android.server.job.JobSchedulerShellCommand: void onHelp()>
<android.content.ContextWrapper: java.io.File[] getObbDirs()>
<com.android.hotspot2.pps.Credential: com.android.anqp.eap.EAPMethod getEAPMethod()>
<android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>
<android.app.LocalActivityManager: void dispatchResume()>
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)>
<android.view.IWindowManagerImpl: void setAppVisibility(android.os.IBinder,boolean)>
<android.media.PlaybackParams: int describeContents()>
<android.view.WindowManagerGlobal_Delegate: void setWindowManagerService(android.view.IWindowManager)>
<android.content.pm.PackageInstaller.SessionParams: void setSize(long)>
<android.app.PendingIntent: void send()>
<com.android.server.net.NetworkStatsCollection: void removeUids(int[])>
<com.android.uiautomator.core.UiDevice: void dumpWindowHierarchy(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.app.ActivityManagerProxy: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>
<android.view.MotionEvent: int getToolType(int)>
<com.android.layoutlib.bridge.android.BridgeContext: void setBridgeInflater(android.view.BridgeInflater)>
<com.android.server.usb.UsbMidiDevice: void close()>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
<com.android.settingslib.drawable.UserIconDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.server.accessibility.AccessibilityManagerService: void interrupt(int)>
<android.content.SharedPreferences: android.content.SharedPreferences.Editor edit()>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onServiceDied()>
<javax.microedition.khronos.opengles.GL10: void glScalex(int,int,int)>
<android.telecom.Call: int getState()>
<android.media.audiopolicy.AudioMixingRule.Builder: void <init>()>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<com.android.systemui.tuner.TunerService: void showResetRequest(android.content.Context,java.lang.Runnable)>
<com.android.server.audio.AudioService.VolumeStreamState: void setAllIndexesToMax()>
<com.android.server.wallpaper.WallpaperManagerService: int getHeightHint()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLockAffordanceVisible()>
<com.android.uiautomator.core.UiDevice: void waitForIdle(long)>
<com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String,java.io.FileDescriptor[])>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.statusbar.notification.HeaderTransformState: void setVisible(boolean,boolean)>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceAdded(int)>
<com.android.systemui.statusbar.notification.ActionListTransformState: void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: int getIfd()>
<android.transition.Fade: void <init>()>
<com.android.hotspot2.WifiNetworkAdapter: void initialize()>
<android.hardware.camera2.CaptureRequest.Builder: void removeTarget(android.view.Surface)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setInput(java.io.InputStream,java.lang.String)>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>
<android.telephony.CellInfoGsm: boolean equals(java.lang.Object)>
<android.hardware.camera2.utils.ArrayUtils: java.util.List convertStringListToIntList(java.util.List,java.lang.String[],int[])>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withYieldAllowed(boolean)>
<com.android.hotspot2.asn1.Asn1Object: java.nio.ByteBuffer getPayload()>
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<com.android.systemui.statusbar.phone.LightStatusBarController: void setFingerprintUnlockController(com.android.systemui.statusbar.phone.FingerprintUnlockController)>
<android.os.health.HealthStats: int getMeasurementsKeyAt(int)>
<com.android.server.accessibility.AccessibilityManagerService: void disableAccessibilityService(android.content.ComponentName,int)>
<android.os.HardwarePropertiesManager: float[] getDeviceTemperatures(int,int)>
<android.media.MediaRouter.RouteGroup: void removeRoute(int)>
<android.view.WindowManagerPolicy.WindowState: boolean isInMultiWindowMode()>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>
<android.graphics.Paint: void clearShadowLayer()>
<android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
<android.opengl.GLES32: void glTexBufferRange(int,int,int,int,int)>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>
<android.content.pm.ShortcutInfo: long getLastChangedTimestamp()>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(android.media.RemoteDisplayState.RemoteDisplayInfo)>
<android.widget.RelativeLayout: void onMeasure(int,int)>
<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>
<android.view.animation.Animation: long computeDurationHint()>
<android.view.View: int getLayoutDirection()>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<com.android.server.pm.UserRestrictionsUtils: void applyUserRestrictions(android.content.Context,int,android.os.Bundle,android.os.Bundle)>
<android.widget.SearchView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOn()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void repositionChild(android.view.IWindow,int,int,int,int,long,android.graphics.Rect)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void onUserSwitched(int)>
<android.content.Loader: void onStartLoading()>
<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>
<com.android.layoutlib.bridge.android.support.DrawerLayoutUtil: void openDrawer(android.view.View,java.lang.String)>
<android.util.Size: java.lang.String toString()>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void getFocusedRect(android.graphics.Rect)>
<android.view.View: void setBottom(int)>
<android.view.View: float getRightFadingEdgeStrength()>
<android.renderscript.Matrix4f: void <init>()>
<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>
<android.view.View: void setPointerIcon(android.view.PointerIcon)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void addNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int)>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setAudioFormat(android.media.AudioFormat)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int available()>
<android.renderscript.BaseObj: java.lang.String getName()>
<android.service.voice.VoiceInteractionSession: void onRequestCommand(android.service.voice.VoiceInteractionSession.CommandRequest)>
<android.accounts.Account: java.lang.String toString()>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>
<com.android.systemui.statusbar.ExpandableView: int getActualHeight()>
<android.telecom.Connection: java.lang.String propertiesToString(int)>
<android.renderscript.Allocation: void copyFromUnchecked(short[])>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>
<android.util.Property: android.util.Property of(java.lang.Class,java.lang.Class,java.lang.String)>
<com.android.systemui.qs.PagedTileLayout: void setPageListener(com.android.systemui.qs.PagedTileLayout.PageListener)>
<android.content.SharedPreferences.Editor: void apply()>
<com.android.server.pm.ShortcutService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.Switch: void toggle()>
<com.android.systemui.recents.events.EventBus: void registerInterprocessAsCurrentUser(android.content.Context,java.lang.Object)>
<android.util.MonthDisplayHelper: void <init>(int,int,int)>
<com.android.server.connectivity.NetdEventListenerService: void dump(java.io.PrintWriter)>
<com.android.systemui.recents.misc.Utilities: float unmapRange(float,float,float)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(java.lang.String,java.lang.String,int)>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>
<com.android.systemui.statusbar.SignalClusterView: void onLayout(boolean,int,int,int,int)>
<android.os.IPowerManager: boolean setPowerSaveMode(boolean)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardSimPukView: boolean shouldLockout(long)>
<android.widget.TabWidget: void setLeftStripDrawable(int)>
<android.app.DownloadManager.Request: void <init>(android.net.Uri)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int)>
<android.view.ViewGroup: void removeView(android.view.View)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void updateGrayscale(android.widget.ImageView,boolean)>
<android.media.session.MediaSession.Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleOrBehindKeyguardLw()>
<android.widget.HorizontalScrollView: boolean fullScroll(int)>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback,android.os.Handler)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,short[])>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>
<android.content.Context: void sendStickyBroadcast(android.content.Intent)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.tools.layoutlib.create.OverrideMethod: double invokeD(java.lang.String,boolean,java.lang.Object)>
<android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
<com.android.systemui.statusbar.notification.TransformState: com.android.systemui.statusbar.notification.TransformState createFrom(android.view.View)>
<android.renderscript.Element: android.renderscript.Element F16_2(android.renderscript.RenderScript)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToHexString(int,boolean,int)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putLong(java.lang.String,long)>
<com.android.hotspot2.osu.commands.ClientCertInfo: java.util.List getIssuerNames()>
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>
<com.android.systemui.qs.QSAnimator: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.printspooler.widget.PrintContentView: void onClick(android.view.View)>
<android.hardware.SensorManager: boolean isDynamicSensorDiscoverySupported()>
<android.telecom.RemoteConnection: void abort()>
<android.os.Debug: int getThreadAllocCount()>
<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String,java.lang.String)>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<android.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>
<android.os.storage.IMountService.Stub: void <init>()>
<com.android.mtp.AppFuse.Callback: void closeFileHandle(long)>
<android.os.Debug: int setAllocationLimit(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void doKeyguardTimeout(android.os.Bundle)>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int save()>
<android.content.pm.PermissionInfo: int describeContents()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
<com.android.documentsui.RootsLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.State)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: android.view.WindowManagerPolicy.InputConsumer addInputConsumer(android.os.Looper,android.view.InputEventReceiver.Factory)>
<android.content.ComponentName: void <init>(android.os.Parcel)>
<com.android.systemui.recents.model.TaskStack.DockState.ViewState: void update(android.content.Context)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<com.android.server.print.PrintManagerService: void onStart()>
<android.renderscript.Element: android.renderscript.Element U64_4(android.renderscript.RenderScript)>
<com.android.commands.uiautomator.RunTestCommand: void <init>()>
<android.view.View: boolean isVerticalScrollBarEnabled()>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>
<android.graphics.Bitmap_Delegate: void change()>
<android.graphics.drawable.LayerDrawable: void setLayerInsetLeft(int,int)>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>
<com.android.hotspot2.utils.HTTPResponse: java.io.InputStream getPayloadStream()>
<android.view.View: boolean isTextAlignmentResolved()>
<com.android.systemui.volume.SpTexts: int add(android.widget.TextView)>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>
<android.bluetooth.BluetoothDevice: java.lang.String toString()>
<android.app.AutomaticZenRule: long getCreationTime()>
<android.media.AudioManager: int getStreamVolume(int)>
<android.view.animation.Transformation: int getTransformationType()>
<android.graphics.Path_Delegate: boolean isEmpty()>
<android.app.usage.UsageEvents: void writeToParcel(android.os.Parcel,int)>
<android.nfc.cardemulation.HostApduService: void onDeactivated(int)>
<com.android.server.notification.ZenLog: void traceNotIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo.LingerTimer: void <init>(android.net.NetworkRequest,long)>
<android.media.MediaRouter.Callback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<com.android.hotspot2.asn1.Asn1Oid: java.util.Collection getChildren()>
<android.view.IWindowManagerImpl: android.graphics.Rect getBoundsForNewConfiguration(int)>
<android.nfc.cardemulation.NfcFCardEmulation: boolean enableService(android.app.Activity,android.content.ComponentName)>
<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkState getNetworkState()>
<com.android.systemui.SwipeHelper.Callback: android.view.View getChildAtPosition(android.view.MotionEvent)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleLw()>
<com.android.layoutlib.bridge.impl.RenderAction: void checkLock()>
<android.renderscript.ScriptIntrinsicBLAS: void CHPMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>
<com.android.systemui.recents.events.EventBus: void dump(java.lang.String,java.io.PrintWriter)>
<android.telephony.CellIdentityGsm: int getLac()>
<android.media.AudioRecord: android.media.AudioDeviceInfo getRoutedDevice()>
<com.android.server.am.HealthStatsBatteryStatsWriter: void writeServ(android.os.health.HealthStatsWriter,android.os.BatteryStats.Uid.Pkg.Serv)>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>(java.lang.String)>
<com.android.systemui.settings.ToggleSlider: void setMirror(com.android.systemui.settings.ToggleSlider)>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>
<android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>
<android.app.AlertDialog.Builder: android.content.Context getContext()>
<com.android.systemui.statusbar.phone.ScrimController: void animateKeyguardUnoccluding(long)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>
<com.android.commands.hid.Event.Reader: com.android.commands.hid.Event getNextEvent()>
<android.telecom.Call.Details: int getCallProperties()>
<android.location.GnssNavigationMessageEvent.Callback: void onGnssNavigationMessageReceived(android.location.GnssNavigationMessageEvent)>
<com.android.systemui.recents.tv.animations.ViewFocusAnimator: void <init>(com.android.systemui.recents.tv.views.TaskCardView)>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>()>
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.documentsui.model.DocumentInfo: boolean isWriteSupported()>
<android.widget.Switch: void jumpDrawablesToCurrentState()>
<android.preference.Preference: android.os.Bundle getExtras()>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction.Builder setExtras(android.os.Bundle)>
<android.service.quicksettings.Tile: void setLabel(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.LockIcon: void setTransientFpError(boolean)>
<android.widget.RemoteViews: void <init>(android.widget.RemoteViews,android.widget.RemoteViews)>
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void <init>(android.content.Context)>
<android.os.StatFs: int getBlockCount()>
<com.android.server.pm.PackageManagerService: void restorePreferredActivities(byte[],int)>
<android.app.Dialog: void onContentChanged()>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)>
<android.media.tv.TvRecordingClient: void stopRecording()>
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getUidForSharedUser(java.lang.String)>
<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void setScrollYPos(android.view.View,int)>
<android.content.RestrictionEntry: java.lang.String[] getChoiceValues()>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setX(int)>
<android.view.Display: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: com.android.internal.app.IAppOpsService getAppOpsService()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void removeAllChildren()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onOverScrolled(int,int,boolean,boolean)>
<android.security.keystore.KeyNotYetValidException: void <init>(java.lang.String)>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(int,boolean)>
<android.widget.TextView: void setAutoLinkMask(int)>
<android.graphics.Interpolator: void <init>(int)>
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>
<android.util.EventLogTags: android.util.EventLogTags.Description get(int)>
<android.widget.ViewAnimator: void removeViews(int,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getProfiles()>
<android.bluetooth.BluetoothHealthAppConfiguration: int describeContents()>
<com.android.server.accessibility.MotionEventInjector: void onDestroy()>
<com.android.server.pm.UserManagerService: boolean isSameProfileGroup(int,int)>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Matrix2f: void loadIdentity()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getWidth()>
<android.telecom.DisconnectCause: int getTone()>
<android.service.dreams.DreamService: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.assist.AssistContent: boolean isAppProvidedWebUri()>
<android.view.OrientationEventListener: boolean canDetectOrientation()>
<android.util.LruCache: int size()>
<com.android.systemui.tv.pip.PipMenuActivity: void onPipEntered()>
<android.net.wifi.WifiEnterpriseConfig: void setPassword(java.lang.String)>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>
<android.media.AudioManager: void playSoundEffect(int,float)>
<android.util.TypedValue: float getFloat()>
<android.app.FragmentHostCallback: void onInvalidateOptionsMenu()>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.LinearLayout: int getDividerPadding()>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>
<android.graphics.Canvas_Delegate: void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForOriginationEnd()>
<android.view.View: boolean callOnClick()>
<android.graphics.Bitmap: void setConfig(android.graphics.Bitmap.Config)>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request,java.lang.String)>
<android.text.method.ArrowKeyMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.stackdivider.DividerView: void setMinimizedDockStack(boolean,long)>
<com.android.hotspot2.pps.HomeSP: com.android.hotspot2.pps.Policy getPolicy()>
<com.android.gallery3d.exif.ExifInterface: short getOrientationValueForRotation(int)>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>
<com.android.gallery3d.glrenderer.GLES20Canvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>
<com.android.systemui.qs.QSTile.Icon: int getPadding()>
<android.net.NetworkInfo: int describeContents()>
<android.widget.AbsListView: boolean isItemChecked(int)>
<com.android.systemui.recents.Recents: com.android.systemui.recents.misc.SystemServicesProxy getSystemServices()>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMANode replaceNode(com.android.hotspot2.omadm.OMANode,com.android.hotspot2.omadm.OMANode)>
<android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController,boolean)>
<android.widget.DayPickerPagerAdapter.OnDaySelectedListener: void onDaySelected(android.widget.DayPickerPagerAdapter,android.icu.util.Calendar)>
<android.graphics.Paint: float getRunAdvance(char[],int,int,int,int,boolean,int)>
<android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate: void setName(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void notificationLightOff()>
<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)>
<com.android.systemui.statusbar.NotificationData: boolean shouldSuppressScreenOn(java.lang.String)>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>
<com.android.keyguard.KeyguardPinBasedInputView: void onFinishInflate()>
<android.nfc.Tag: byte[] getId()>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>
<com.android.settingslib.BatteryInfo: void getBatteryInfo(android.content.Context,com.android.settingslib.BatteryInfo.Callback,boolean)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onOpened(android.hardware.camera2.CameraDevice)>
<android.view.View.AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.telephony.TelephonyManager: boolean setPreferredNetworkTypeToGlobal()>
<com.android.systemui.recents.views.TaskView: void onTaskStackIdChanged()>
<com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,int[],int)>
<android.printservice.PrinterDiscoverySession: void onStartPrinterDiscovery(java.util.List)>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.server.backup.Trampoline: void setBackupProvisioned(boolean)>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isVolumeRestricted()>
<com.android.systemui.recents.views.AnimationProps: com.android.systemui.recents.views.AnimationProps setInterpolator(int,android.view.animation.Interpolator)>
<android.preference.DialogPreference: android.app.Dialog getDialog()>
<android.os.ParcelFileDescriptor: java.lang.String toString()>
<com.android.printspooler.ui.SelectPrinterActivity: void onLoadFinished(android.content.Loader,java.util.List)>
<android.opengl.GLES32: void glTexStorage3DMultisample(int,int,int,int,int,int,boolean)>
<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void setDefaultDirection(boolean)>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
<android.app.ApplicationThreadProxy: void scheduleCancelVisibleBehind(android.os.IBinder)>
<android.preference.PreferenceCategory: boolean shouldDisableDependents()>
<android.content.pm.LauncherApps.ShortcutQuery: android.content.pm.LauncherApps.ShortcutQuery setPackage(java.lang.String)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putShort(int,short)>
<android.view.IWindowManagerImpl: int getPendingAppTransition()>
<android.widget.AbsListView: int getLeftPaddingOffset()>
<com.android.server.updates.SmsShortCodesInstallReceiver: void <init>()>
<android.graphics.Canvas_Delegate: boolean native_isOpaque(long)>
<android.app.DialogFragment: void onAttach(android.content.Context)>
<android.location.GnssStatus.Callback: void onStarted()>
<com.android.systemui.qs.tiles.HotspotTile: void setListening(boolean)>
<android.transition.TransitionInflater: android.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup)>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>
<android.telecom.DisconnectCause: java.lang.String getReason()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setUserLocked(boolean)>
<android.graphics.Color: float luminance(int)>
<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionMultiThumbFuture(android.view.IAppTransitionAnimationSpecsFuture,android.os.IRemoteCallback,boolean)>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>
<com.android.server.am.ActivityManagerService: void registerTaskStackListener(android.app.ITaskStackListener)>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>
<android.widget.AbsListView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>
<com.android.settingslib.bluetooth.PanProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(int,int[])>
<com.android.server.job.controllers.TimeController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<com.android.systemui.statusbar.policy.ZenModeController: void addCallback(com.android.systemui.statusbar.policy.ZenModeController.Callback)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float,float)>
<com.android.keyguard.NumPadKey: void doHapticKeyClick()>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkSelfPermission(java.lang.String)>
<com.android.preload.actions.ScanPackageAction: void run()>
<com.android.systemui.qs.QSTile.Host: void startRunnableDismissingKeyguard(java.lang.Runnable)>
<com.android.server.am.BatteryStatsService: void noteBleScanStopped(android.os.WorkSource)>
<android.service.notification.NotificationListenerService: void onInterruptionFilterChanged(int)>
<com.android.systemui.statusbar.policy.BluetoothController: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.google.android.util.SmileyParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<android.view.Window: void setWindowAnimations(int)>
<com.google.android.gles_jni.GLImpl: void glOrthox(int,int,int,int,int,int)>
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders.Config getConfig()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,boolean,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expand(boolean)>
<com.android.keyguard.KeyguardHostView: void finish(boolean)>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.text.StaticLayout: android.text.Layout.Directions getLineDirections(int)>
<android.webkit.WebView: void goForward()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.net.NetworkStats.Entry: boolean isNegative()>
<android.hardware.Sensor: java.lang.String toString()>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onPowerSaveChanged(boolean)>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.content.AsyncQueryHandler: void handleMessage(android.os.Message)>
<com.android.server.pm.PackageManagerService: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>
<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>
<android.opengl.GLES32: void glGetTexParameterIuiv(int,int,java.nio.IntBuffer)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedGoingToSleep(int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitResourceMismatches()>
<android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>
<com.android.server.am.ActivityManagerService: void setActivityController(android.app.IActivityController,boolean)>
<android.text.HtmlToSpannedConverter: void processingInstruction(java.lang.String,java.lang.String)>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetTop(int,int)>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>
<com.android.systemui.recents.views.TaskViewHeader: void bindToTask(com.android.systemui.recents.model.Task,boolean,boolean)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getSecondaryProgressTintMode()>
<android.view.View: float getTranslationY()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.android.keyguard.KeyguardHostView: void cleanUp()>
<android.graphics.drawable.BitmapDrawable: boolean onStateChange(int[])>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName()>
<android.graphics.drawable.VectorDrawable: void setAlpha(int)>
<com.android.server.input.InputManagerService: void setInputFilter(android.view.IInputFilter)>
<android.util.PathParser_Delegate: android.util.PathParser_Delegate.PathDataNode[] getPathDataNodes()>
<android.hardware.camera2.CameraDevice: void createCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.net.wifi.WifiScanner.ScanData: int getFlags()>
<com.android.server.am.ActivityManagerService: android.os.Bundle getAssistContextExtras(int)>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>
<android.app.ActivityManager: void clearWatchHeapLimit()>
<com.android.server.am.BroadcastQueue: com.android.server.am.BroadcastRecord getMatchingOrderedReceiver(android.os.IBinder)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues)>
<com.android.systemui.SystemUIService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.Debug: int getGlobalExternalAllocSize()>
<android.printservice.PrinterDiscoverySession: void onDestroy()>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(int[])>
<android.graphics.Rect: void offset(int,int)>
<com.android.systemui.stackdivider.WindowManagerProxy: void setTouchRegion(android.graphics.Rect)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>
<android.widget.TextView: void setMaxEms(int)>
<android.view.Window: void setDefaultWindowFormat(int)>
<com.android.systemui.recents.views.TaskView: void showActionButton(boolean,int)>
<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createStackOnDisplay(int)>
<android.os.Handler: void handleMessage(android.os.Message)>
<com.android.systemui.volume.VolumeDialogMotion: boolean isAnimating()>
<com.android.hotspot2.osu.OSUManager: void provisioningFailed(java.lang.String,java.lang.String,com.android.hotspot2.pps.HomeSP,int)>
<android.widget.AutoCompleteTextView: void performCompletion()>
<com.google.android.gles_jni.GLImpl: void glClearColor(float,float,float,float)>
<android.animation.AnimatorSet: void resume()>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onMouseLeaveFromEdge()>
<com.android.systemui.statusbar.NotificationData: void updateRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.qs.QSPanel: void handleShowDetail(com.android.systemui.qs.QSPanel.Record,boolean)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>
<com.android.server.am.ActivityManagerService: boolean finishActivityAffinity(android.os.IBinder)>
<com.google.android.util.AbstractMessageParser.Part: com.google.android.util.AbstractMessageParser.Token getMediaToken()>
<com.android.server.am.ActivityManagerService: boolean startBinderTracking()>
<android.view.ViewStructure: int getChildCount()>
<android.widget.NumberPicker: void computeScroll()>
<com.android.settingslib.graph.UsageView: void setDividerLoc(int)>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(byte[])>
<android.renderscript.AllocationAdapter: void setY(int)>
<android.os.PowerManager: boolean isScreenOn()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<android.telecom.PhoneAccountHandle: void <init>(android.content.ComponentName,java.lang.String,android.os.UserHandle)>
<android.util.ArraySet: java.lang.Object valueAt(int)>
<com.android.tools.layoutlib.create.LogAbortException: void error(com.android.tools.layoutlib.create.Log)>
<com.android.documentsui.services.FileOperationService: void onStart(com.android.documentsui.services.Job)>
<android.content.RestrictionEntry: int describeContents()>
<com.android.systemui.statusbar.policy.ZenModeController: long getNextAlarm()>
<com.android.systemui.statusbar.tv.TvStatusBar: void topAppWindowChanged(boolean)>
<android.webkit.WebViewProvider.ViewDelegate: void onFinishTemporaryDetach()>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String getActivity()>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>
<android.opengl.GLES32: void glTexParameterIuiv(int,int,int[],int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<com.android.preload.actions.ReloadListAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,javax.swing.DefaultListModel)>
<android.util.SizeF: void <init>(float,float)>
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceDataUuid()>
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>
<android.net.TrafficStats: int getThreadStatsTag()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void registerStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onRemoved()>
<android.graphics.PathEffect_Delegate: java.lang.String getSupportMessage()>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.hotspot2.omadm.NodeAttribute: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.media.projection.MediaProjectionManagerService: void onStart()>
<android.widget.TextView: int getCurrentHintTextColor()>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<com.android.hotspot2.asn1.Asn1Oid: java.lang.String toString()>
<android.view.ViewGroup.MarginLayoutParams: boolean isMarginRelative()>
<android.view.ActionMode: void setCustomView(android.view.View)>
<android.renderscript.FieldPacker: void addBoolean(boolean)>
<com.android.uiautomator.core.UiDevice: boolean swipe(int,int,int,int,int)>
<android.bluetooth.le.AdvertiseSettings: int describeContents()>
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>
<com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm: void <init>(android.content.Context)>
<android.text.StaticLayout: boolean getLineContainsTab(int)>
<com.android.server.notification.EventConditionProvider: void attachBase(android.content.Context)>
<com.android.gallery3d.glrenderer.BitmapTexture: void onFreeBitmap(android.graphics.Bitmap)>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>
<android.app.PendingIntent: int describeContents()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isContentExpandable()>
<com.android.systemui.qs.tiles.IntentTile: android.content.Intent getLongClickIntent()>
<android.text.style.TtsSpan: void <init>(java.lang.String,android.os.PersistableBundle)>
<com.android.printspooler.renderer.PdfManipulationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.model.Task: void copyFrom(com.android.systemui.recents.model.Task)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<android.media.MediaSync: android.media.PlaybackParams getPlaybackParams()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onError(android.hardware.camera2.CameraDevice,int)>
<com.android.keyguard.KeyguardHostView: boolean interceptMediaKey(android.view.KeyEvent)>
<android.net.MailTo: java.lang.String getTo()>
<com.android.anqp.ANQPElement: com.android.anqp.Constants.ANQPElementType getID()>
<com.android.hotspot2.osu.commands.MOData: java.lang.String toString()>
<android.telecom.Connection: void onReject(java.lang.String)>
<com.android.server.DeviceIdleController.LocalService: void setAlarmsActive(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurningOn()>
<android.database.CursorWindow: boolean putNull(int,int)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.input.InputManagerService: void tryPointerSpeed(int)>
<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>
<android.database.SQLException: void <init>(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.util.List getAllPackages()>
<android.view.IWindowManagerImpl: void setStrictModeVisualIndicatorPreference(java.lang.String)>
<com.android.systemui.qs.QSAnimator: void setOnKeyguard(boolean)>
<android.telecom.Conference: void destroy()>
<android.util.Base64: byte[] decode(byte[],int,int,int)>
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.view.View: int getMeasuredWidthAndState()>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener: void onVerticalChanged(boolean)>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
<android.app.Notification.CarExtender: void <init>()>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompleted()>
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)>
<android.media.MediaRouter.UserRouteInfo: void setVolume(int)>
<android.net.LinkProperties: java.util.List getDnsServers()>
<android.text.Layout: int getLineBottom(int)>
<com.android.settingslib.deviceinfo.PrivateStorageInfo: long getTotalSize(android.os.storage.VolumeInfo,long)>
<com.android.server.pm.UserRestrictionsUtils: void readRestrictions(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>
<com.android.systemui.statusbar.TransformableView: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void computeCurrentVelocity(int)>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String)>
<com.android.printspooler.util.MediaSizeUtils: android.print.PrintAttributes.MediaSize getDefault(android.content.Context)>
<android.view.ViewGroup: void onDetachedFromWindow()>
<android.telephony.CellIdentityGsm: int getMnc()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>
<com.android.server.notification.PriorityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>
<android.media.MediaDescription.Builder: void <init>()>
<com.android.systemui.BatteryMeterDrawable: void onPowerSaveChanged(boolean)>
<com.android.server.pm.Installer: void setWarnIfHeld(java.lang.Object)>
<android.drm.DrmSupportInfo: java.lang.String getDescription()>
<android.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>
<android.widget.ScrollView: void onNestedScroll(android.view.View,int,int,int,int)>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>
<android.hardware.radio.RadioMetadata.Builder: android.hardware.radio.RadioMetadata.Builder putInt(java.lang.String,int)>
<android.view.textservice.TextInfo: void <init>(android.os.Parcel)>
<android.app.Notification.BigPictureStyle: void <init>(android.app.Notification.Builder)>
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>
<android.media.MediaPlayer: int getVideoHeight()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter.ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.commands.sm.Sm: void runFormat()>
<android.media.MediaSyncEvent: int getAudioSessionId()>
<android.graphics.drawable.LayerDrawable: int addLayer(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onLockedRemoteInput(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View)>
<android.printservice.PrintJob: boolean block(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionRunning()>
<com.android.systemui.recents.events.ui.DraggingInRecentsEvent: void <init>(float)>
<com.android.systemui.tuner.ClipboardView: void onPrimaryClipChanged()>
<com.android.printspooler.renderer.IPdfEditor: int openDocument(android.os.ParcelFileDescriptor)>
<android.widget.MediaController: void show(int)>
<android.view.Window: void setSharedElementsUseOverlay(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getMaxTranslationDistance()>
<android.filterpacks.imageproc.NegativeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.os.SynchronousResultReceiver.Result: void <init>(int,android.os.Bundle)>
<android.location.SettingInjectorService: void <init>(java.lang.String)>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>
<com.android.server.backup.BackupManagerService.BackupRestoreTask: void operationComplete(long)>
<com.android.systemui.qs.tiles.CastTile: int getMetricsCategory()>
<android.media.browse.MediaBrowser: void getItem(java.lang.String,android.media.browse.MediaBrowser.ItemCallback)>
<android.service.voice.VoiceInteractionSession: void closeSystemDialogs()>
<android.os.Trace: void endSection()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.ShowApplicationInfoEvent)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRemovingAdmin(android.content.ComponentName,int)>
<android.graphics.Region: boolean union(android.graphics.Rect)>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void setDark(boolean,boolean,long)>
<com.android.settingslib.drawer.UserAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.view.PointerIcon: boolean equals(java.lang.Object)>
<android.widget.NumberPicker: void drawableStateChanged()>
<android.media.MediaExtractor: int getSampleTrackIndex()>
<com.android.keyguard.KeyguardAbsKeyInputView: void onFinishInflate()>
<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager.WpsCallback)>
<com.android.systemui.classifier.FalsingManager: com.android.systemui.classifier.FalsingManager getInstance(android.content.Context)>
<com.android.settingslib.drawer.DashboardCategory: int describeContents()>
<android.os.health.HealthStats: int getTimersKeyCount()>
<android.service.notification.ConditionProviderService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.RemoteViews: void setAccessibilityTraversalAfter(int,int)>
<android.webkit.WebViewProvider.ViewDelegate: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.widget.AutoCompleteTextView: void clearListSelection()>
<com.android.systemui.recents.Recents: com.android.systemui.recents.model.RecentsTaskLoader getTaskLoader()>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>
<android.widget.TimePicker: void <init>(android.content.Context)>
<android.speech.RecognitionService: android.os.IBinder onBind(android.content.Intent)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void onPostExecute(java.lang.Boolean)>
<com.android.documentsui.model.RootInfo: boolean isExternalStorage()>
<com.android.egg.neko.Cat: void draw(android.graphics.Canvas)>
<com.android.server.job.JobStore.JobStatusFunctor: void process(com.android.server.job.controllers.JobStatus)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryInputEnabled(boolean)>
<android.provider.CalendarContract.EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>
<android.animation.LayoutTransition: void <init>()>
<android.view.View: void setTextAlignment(int)>
<android.util.Size: void <init>(int,int)>
<android.view.InputDevice: boolean supportsSource(int)>
<android.security.KeyPairGeneratorSpec: boolean isEncryptionRequired()>
<android.widget.QuickContactBadge: void drawableHotspotChanged(float,float)>
<android.renderscript.Element: android.renderscript.Element I8_2(android.renderscript.RenderScript)>
<android.location.Criteria: void setPowerRequirement(int)>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>
<android.app.job.JobInfo.TriggerContentUri: boolean equals(java.lang.Object)>
<android.app.Fragment: java.lang.String getString(int)>
<com.android.systemui.statusbar.phone.SettingsButton: void startContinuousSpin()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: boolean isHierarchical()>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View,float,float)>
<com.android.systemui.qs.tiles.UserDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.glrenderer.RawTexture: boolean isOpaque()>
<android.inputmethodservice.KeyboardView: void swipeDown()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void recreateNotificationHeader(android.view.View.OnClickListener,android.service.notification.StatusBarNotification)>
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>
<com.android.systemui.statusbar.ServiceMonitor.Callbacks: void onNoService()>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>
<android.widget.ImageView: void clearColorFilter()>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setErrorMessage(java.lang.CharSequence)>
<android.net.wifi.WifiManager.WifiLock: void setWorkSource(android.os.WorkSource)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>
<android.provider.Contacts.Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.widget.BaseAdapter: boolean areAllItemsEnabled()>
<android.os.BatteryStats.HistoryItem: void readFromParcel(android.os.Parcel)>
<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>
<android.net.ip.IpManager.ProvisioningConfiguration: java.lang.String toString()>
<android.media.AudioTrack: int getAudioFormat()>
<android.gesture.Gesture: int getStrokesCount()>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>
<android.media.session.MediaSession.Callback: boolean onMediaButtonEvent(android.content.Intent)>
<com.android.settingslib.drawer.SettingsDrawerAdapter: java.lang.Object getItem(int)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<com.android.hotspot2.WifiNetworkAdapter: com.android.hotspot2.PasspointMatch matchProviderWithCurrentNetwork(java.lang.String)>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context)>
<android.webkit.WebResourceRequest: java.lang.String getMethod()>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>
<android.content.pm.RegisteredServicesCache.ServiceInfo: java.lang.String toString()>
<android.widget.EditText: boolean getDefaultEditable()>
<android.content.pm.PermissionGroupInfo: void <init>()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onDebug()>
<com.android.commands.pm.Pm: int run(java.lang.String[])>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>
<com.android.hotspot2.osu.service.RedirectListener: void <init>(com.android.hotspot2.osu.OSUManager,java.lang.String)>
<android.util.LruCache: int createCount()>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<android.webkit.WebViewProvider.ViewDelegate: void setLayerType(int,android.graphics.Paint)>
<android.media.AudioManager: void playSoundEffect(int)>
<android.app.Instrumentation.ActivityMonitor: int getHits()>
<com.android.systemui.volume.ZenFooter: boolean isZen()>
<android.media.session.PlaybackState.CustomAction: int describeContents()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.graphics.Path)>
<com.android.systemui.BatteryMeterDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setNextAlarmController(com.android.systemui.statusbar.policy.NextAlarmController)>
<android.webkit.WebView: void stopLoading()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDestroy()>
<android.media.Ringtone: boolean isPlaying()>
<android.os.BatteryStats.LevelStepTracker: void encodeEntryAt(int,java.lang.StringBuilder)>
<android.app.ActivityManagerProxy: boolean moveTopActivityToPinnedStack(int,android.graphics.Rect)>
<com.google.android.gles_jni.GLImpl: void glFogf(int,float)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onCreate(android.os.Bundle)>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setDark(boolean)>
<android.os.Bundle: void remove(java.lang.String)>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>
<android.view.View: boolean requestFocusFromTouch()>
<android.widget.Chronometer: android.widget.Chronometer.OnChronometerTickListener getOnChronometerTickListener()>
<com.android.server.usb.UsbDebuggingManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.service.notification.NotificationListenerService.Ranking: java.lang.String getKey()>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>
<android.bluetooth.BluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<com.android.server.wm.DimLayer: void printTo(java.lang.String,java.io.PrintWriter)>
<android.preference.PreferenceActivity: boolean onIsMultiPane()>
<android.os.WorkSource: int describeContents()>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>
<com.android.documentsui.model.RootInfo: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedWakingUp()>
<android.widget.TextView: android.os.LocaleList getTextLocales()>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void writeComplete()>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<com.android.systemui.statusbar.ExpandableView: void setLayerType(int,android.graphics.Paint)>
<com.android.server.connectivity.KeepaliveTracker: void handleCheckKeepalivesStillValid(com.android.server.connectivity.NetworkAgentInfo)>
<com.android.layoutlib.bridge.impl.RenderAction: void <init>(com.android.ide.common.rendering.api.RenderParams)>
<android.content.ContentProviderClient: android.net.Uri uncanonicalize(android.net.Uri)>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>
<android.media.AudioManager: boolean isMicrophoneMute()>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>
<android.renderscript.Element: android.renderscript.Element U16_3(android.renderscript.RenderScript)>
<android.hardware.Camera.Parameters: void setGpsProcessingMethod(java.lang.String)>
<com.android.systemui.statusbar.notification.HybridGroupManager: android.widget.TextView bindOverflowNumber(android.widget.TextView,int)>
<android.os.Debug: void resetGlobalExternalFreedSize()>
<android.preference.Preference: java.lang.CharSequence getTitle()>
<com.android.systemui.statusbar.BaseStatusBar: void toggleSplitScreen()>
<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<android.graphics.Camera: void restore()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notifyFpAuthModeChanged()>
<android.preference.DialogPreference: void setPositiveButtonText(int)>
<android.app.job.JobService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onResume()>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>
<com.android.server.backup.KeyValueBackupJob: void cancel(android.content.Context)>
<android.telecom.VideoProfile.CameraCapabilities: int getWidth()>
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.os.UserHandle: android.os.UserHandle getUserHandleForUid(int)>
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>
<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>
<android.app.Activity: void setIntent(android.content.Intent)>
<android.media.MediaExtractor: java.util.Map getPsshInfo()>
<android.widget.AbsSeekBar: void setTickMarkTintMode(android.graphics.PorterDuff.Mode)>
<android.app.admin.DeviceAdminReceiver: void onReadyForUserInitialization(android.content.Context,android.content.Intent)>
<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>
<android.widget.TextView: int getImeOptions()>
<com.android.keyguard.KeyguardHostView: void onFinishInflate()>
<android.app.WallpaperManager: void clear()>
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLES31Ext.DebugProcKHR: void onMessage(int,int,int,int,java.lang.String)>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnChildLocationsChangedListener: void onChildLocationsChanged(com.android.systemui.statusbar.stack.NotificationStackScrollLayout)>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>
<com.android.systemui.statusbar.car.CarStatusBar: void userSwitched(int)>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
<com.android.settingslib.Utils: com.android.settingslib.drawable.UserIconDrawable getUserIcon(android.content.Context,android.os.UserManager,android.content.pm.UserInfo)>
<android.media.SoundPool: void <init>(int,int,int)>
<com.android.systemui.statusbar.CommandQueue: void toggleSplitScreen()>
<com.android.server.notification.SystemConditionProviderService: void onBootComplete()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onStartedGoingToSleep()>
<android.hardware.camera2.params.LensShadingMap: int hashCode()>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onMouseHoverAtTop()>
<android.os.BatteryManager: int getIntProperty(int)>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.view.ViewStructure: void setCheckable(boolean)>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isUserExpanded()>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void onDraw(android.graphics.Canvas)>
<android.transition.TransitionSet: android.transition.TransitionSet removeListener(android.transition.Transition.TransitionListener)>
<com.android.systemui.qs.external.CustomTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>
<android.media.session.MediaController.TransportControls: void skipToQueueItem(long)>
<android.view.BridgeInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.View: void onAnimationStart()>
<android.ext.shared.Version: int getVersionCode()>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onDisconnected()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onDetachedFromWindow()>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>
<android.database.MatrixCursor: int getCount()>
<com.android.server.usb.UsbHostManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>
<android.widget.Toolbar: int getContentInsetEnd()>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>
<com.android.server.backup.Trampoline: void fullRestore(android.os.ParcelFileDescriptor)>
<android.hardware.radio.RadioManager.ProgramInfo: int getSignalStrength()>
<android.text.style.URLSpan: java.lang.String getURL()>
<android.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.print.PrinterCapabilitiesInfo: int hashCode()>
<com.android.systemui.keyguard.KeyguardViewMediator: void dismiss(boolean)>
<android.media.ImageWriter: android.media.ImageWriter newInstance(android.view.Surface,int)>
<android.app.Presentation: void show()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>
<android.media.tv.TvView.TvInputCallback: void onTracksChanged(java.lang.String,java.util.List)>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)>
<android.database.CursorWindow: void setStartPosition(int)>
<com.android.MainActivity.OSUService: void onCreate()>
<android.app.ActivityManagerProxy: void noteAlarmStart(android.content.IIntentSender,int,java.lang.String)>
<com.android.systemui.recents.events.ui.TaskViewDismissedEvent: void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.AnimationProps)>
<android.net.Uri: java.lang.String getUserInfo()>
<com.android.server.statusbar.StatusBarManagerService: void expandNotificationsPanel()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: java.lang.String toString()>
<com.android.statementservice.retriever.AbstractAsset: boolean followInsecureInclude()>
<android.graphics.Matrix_Delegate: java.awt.geom.AffineTransform getAffineTransform()>
<com.android.systemui.recents.views.TaskStackViewScroller: void setStackScroll(float,com.android.systemui.recents.views.AnimationProps)>
<android.telecom.Conference: int getVideoState()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setClockVisibility(boolean)>
<android.widget.RatingBar: int getNumStars()>
<android.hardware.display.VirtualDisplay: android.view.Surface getSurface()>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>
<com.android.systemui.statusbar.phone.StatusBarIconController: int getTint(android.graphics.Rect,android.view.View,int)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Bitmap.CompressFormat convertExtensionToCompressFormat(java.lang.String)>
<com.android.server.backup.AccountSyncSettingsBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dump(java.lang.String,java.io.PrintWriter)>
<android.bluetooth.BluetoothServerSocket: java.lang.String toString()>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.media.MediaRouter.RouteCategory: java.lang.String toString()>
<android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>
<android.app.SearchableInfo: int getHintId()>
<android.media.AudioTrack: int write(short[],int,int,int)>
<com.android.settingslib.RestrictedLockImageSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<android.preference.Preference: void setSelectable(boolean)>
<android.content.ContentProviderProxy: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<android.widget.ImageView: void <init>(android.content.Context)>
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)>
<com.android.hotspot2.osu.IconCache: void startIconQuery(com.android.hotspot2.osu.OSUInfo,java.util.List)>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>
<com.android.server.am.LockTaskNotify: void <init>(android.content.Context)>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>
<com.android.server.am.ActivityManagerService: void keyguardGoingAway(int)>
<android.net.wifi.WifiManager: boolean pingSupplicant()>
<com.android.systemui.statusbar.phone.StatusBarIconController: android.util.ArraySet getIconBlacklist(java.lang.String)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationEnd(android.animation.Animator)>
<android.os.Handler: boolean post(java.lang.Runnable)>
<android.os.FileObserver: void startWatching()>
<com.android.systemui.volume.VolumeDialog.Callback: void onZenPrioritySettingsClicked()>
<android.view.IWindowManagerImpl: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>
<android.hardware.camera2.legacy.RequestThreadManager: void start()>
<com.android.server.net.NetworkStatsCollection: long getEndMillis()>
<com.android.layoutlib.bridge.impl.ResourceHelper: boolean getBooleanThemeValue(com.android.ide.common.rendering.api.RenderResources,java.lang.String,boolean,boolean)>
<com.google.android.gles_jni.GLImpl: void glLineWidth(float)>
<android.nfc.tech.MifareClassic: int blockToSector(int)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<android.net.ip.IpManager.Callback: void onNewDhcpResults(android.net.DhcpResults)>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String renameDocument(java.lang.String,java.lang.String)>
<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater getLayoutInflater()>
<com.android.documentsui.DirectoryLoader: com.android.documentsui.DirectoryResult loadInBackground()>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>
<com.android.server.appwidget.AppWidgetService: void onUnlockUser(int)>
<com.android.server.accounts.AccountManagerBackupHelper: void <init>(com.android.server.accounts.AccountManagerService,android.accounts.AccountManagerInternal)>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskReads()>
<android.content.res.TypedArray_Delegate: boolean getValueAt(android.content.res.TypedArray,int,android.util.TypedValue)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetRelative(int,int,int,int,int)>
<android.app.ActivityManagerProxy: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>
<android.hardware.camera2.CameraCaptureSession: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoPixelAspectRatio(float)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void updateLeftAffordance()>
<com.android.settingslib.Utils: java.lang.String getBatteryStatus(android.content.res.Resources,android.content.Intent,boolean)>
<com.android.server.usb.UsbService: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void getStableInsets(android.graphics.Rect)>
<android.view.View: void buildDrawingCache(boolean)>
<android.content.pm.PackageParser.PackageLite: java.util.List getAllCodePaths()>
<com.android.location.provider.FusedProvider: void setFusedLocationHardware(com.android.location.provider.FusedLocationHardware)>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.app.PendingIntent)>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>
<android.content.SharedPreferences.OnSharedPreferenceChangeListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.hardware.camera2.params.InputConfiguration: int getHeight()>
<android.widget.Spinner: void onDetachedFromWindow()>
<com.android.systemui.SwipeHelper: void setLongPressListener(com.android.systemui.SwipeHelper.LongPressListener)>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
<android.hardware.radio.RadioManager.ProgramInfo: android.hardware.radio.RadioMetadata getMetadata()>
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord[])>
<com.android.systemui.recents.events.component.ScreenPinningRequestEvent: void <init>(android.content.Context,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void updateEntry(boolean)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<com.android.server.AppOpsService.ClientState: void <init>(android.os.IBinder)>
<com.android.documentsui.GridItemThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void save(int)>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile.ServiceListener,int)>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>
<android.widget.RemoteViews: int describeContents()>
<android.net.VpnService: boolean protect(java.net.Socket)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationValidWhileOnBody(boolean)>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>
<android.telephony.CellIdentityLte: int getMcc()>
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>
<com.android.systemui.recents.RecentsActivity: void onCreate(android.os.Bundle)>
<com.android.commands.svc.UsbCommand: java.lang.String longHelp()>
<android.widget.TextView: boolean performLongClick()>
<android.view.ViewTreeObserver.OnWindowFocusChangeListener: void onWindowFocusChanged(boolean)>
<android.media.tv.TvInputService.Session: void notifyVideoUnavailable(int)>
<com.google.android.maps.MapView: int getLatitudeSpan()>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<com.android.settingslib.drawable.CircleFramedDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.hotspot2.osu.OSUInfo: java.util.Set getServiceLocales()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.NetworkController getNetworkController()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void expansionStateChanged(boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<android.graphics.drawable.RippleDrawable: void getOutline(android.graphics.Outline)>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[])>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.systemui.recents.RecentsImplProxy: void toggleRecents(int)>
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()>
<android.content.RestrictionEntry: void setAllSelectedStrings(java.lang.String[])>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String)>
<android.widget.QuickContactBadge: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>
<android.media.tv.TvInputService.Session: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<javax.microedition.khronos.opengles.GL10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.widget.VideoView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivity(android.content.Intent,boolean,android.graphics.drawable.Drawable.Callback)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable.ConstantState getConstantState()>
<android.widget.RatingBar: float getRating()>
<com.android.server.usage.AppIdleHistory: void reportUsageLocked(java.lang.String,int,long)>
<com.android.server.policy.WindowOrientationListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.ScrimController: void setKeyguardShowing(boolean)>
<android.content.pm.FeatureGroupInfo: void <init>(android.content.pm.FeatureGroupInfo)>
<android.view.animation.LayoutAnimationController: float getDelay()>
<android.net.wifi.nan.PublishSettings.Builder: android.net.wifi.nan.PublishSettings.Builder setPublishCount(int)>
<com.android.settingslib.wifi.AccessPoint: long getSeen()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelCollapsed()>
<android.app.ActivityManagerProxy: void startConfirmDeviceCredentialIntent(android.content.Intent)>
<com.android.systemui.recents.events.ui.DismissTaskViewEvent: void <init>(com.android.systemui.recents.views.TaskView)>
<android.util.Base64: byte[] decode(byte[],int)>
<android.opengl.GLES20: void glViewport(int,int,int,int)>
<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<com.android.server.am.ActivityManagerService: void performIdleMaintenance()>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecuritySelection()>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onAccessPointChanged(com.android.settingslib.wifi.AccessPoint)>
<android.location.GnssNavigationMessage: byte[] getData()>
<android.os.Parcel: java.io.Serializable readSerializable()>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>
<android.graphics.Path_Delegate: void reset()>
<com.android.server.DeviceIdleController.LocalService: void setJobsActive(boolean)>
<android.app.Application: void registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<com.android.server.backup.KeyValueBackupJob: void schedule(android.content.Context,long)>
<android.mtp.MtpDeviceInfo: int[] getOperationsSupported()>
<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistAppInternal(java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: boolean hasDrawnLw()>
<com.android.systemui.qs.tiles.BatteryTile: int getMetricsCategory()>
<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void scrollBy(int)>
<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>
<com.android.systemui.tv.pip.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.BatteryMeterDrawable: void setAlpha(int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setEnterFadeDuration(int)>
<com.android.commands.ime.Ime: void main(java.lang.String[])>
<com.android.systemui.statusbar.BaseStatusBar: void workAroundBadLayerDrawableOpacity(android.view.View)>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>
<android.speech.tts.Voice: java.util.Set getFeatures()>
<com.android.server.am.ActivityManagerService: void setFocusedStack(int)>
<com.android.server.am.CompatModePackages: boolean getFrontActivityAskCompatModeLocked()>
<android.media.MediaRouter.RouteInfo: void requestSetVolume(int)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isConnectable()>
<com.android.server.fingerprint.ClientMonitor: boolean onAuthenticated(int,int)>
<android.content.res.AssetManager: void finalize()>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.backup.IFullBackupRestoreObserver: void onRestorePackage(java.lang.String)>
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.widget.ArrayAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>
<android.filterpacks.imageproc.LomoishFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.database.CursorWindow: int getType(int,int)>
<android.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: boolean considerDesc(java.lang.String)>
<android.graphics.Path: void setLastPoint(float,float)>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>
<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,int,android.content.Context)>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>
<android.view.InputDevice: java.util.List getMotionRanges()>
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.widget.DigitalClock: void onDetachedFromWindow()>
<android.widget.AbsListView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.widget.Toast: float getHorizontalMargin()>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>
<com.android.hotspot2.omadm.MOTree: void <init>(com.android.hotspot2.omadm.XMLNode,java.lang.String)>
<com.android.hotspot2.osu.ClientKeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])>
<android.renderscript.ScriptIntrinsicBLAS: void DTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.telephony.TelephonyManager: boolean isSmsCapable()>
<com.android.systemui.tv.pip.PipControlsView: void <init>(android.content.Context)>
<android.webkit.DateSorter: int getIndex(long)>
<android.animation.ValueAnimator: void resume()>
<android.telecom.VideoProfile: int getQuality()>
<android.renderscript.Allocation: void copyFrom(int[])>
<android.view.WindowInsets: void <init>(android.view.WindowInsets)>
<android.os.Debug: void resetGlobalExternalAllocSize()>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onTaskViewSizeChanged(int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.widget.ListView: void onDetachedFromWindow()>
<android.text.style.RelativeSizeSpan: int describeContents()>
<com.android.server.usb.UsbPortManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setRandomizedEncryptionRequired(boolean)>
<android.hardware.camera2.legacy.CaptureCollector: boolean hasPendingPreviewCaptures()>
<android.app.NativeActivity: void onSaveInstanceState(android.os.Bundle)>
<android.content.ContentProviderOperation: boolean isUpdate()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void invalidateRenderingSize()>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setPadding(int,int,int,int)>
<com.android.systemui.recents.views.TaskStackView: void onStackScrollChanged(float,float,com.android.systemui.recents.views.AnimationProps)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onPhoneStateChanged(int)>
<android.app.AutomaticZenRule: java.lang.String toString()>
<com.android.systemui.qs.QSTileBaseView: void <init>(android.content.Context,com.android.systemui.qs.QSIconView)>
<com.android.server.notification.ZenModeFiltering: void recordCall(com.android.server.notification.NotificationRecord)>
<com.android.server.wm.TaskTapPointerEventListener: void onPointerEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory: com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator iterator()>
<android.nfc.tech.MifareClassic: void transfer(int)>
<com.android.systemui.recents.views.AnimateableViewBounds: void reset()>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.content.res.BridgeAssetManager: void <init>()>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.am.ActivityManagerService: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
<android.content.BroadcastReceiver.PendingResult: void setResultExtras(android.os.Bundle)>
<android.graphics.RectF: void union(float,float)>
<com.android.systemui.statusbar.NotificationOverflowContainer: void setDark(boolean,boolean,long)>
<android.telecom.Call.Details: int getCallCapabilities()>
<android.nfc.cardemulation.OffHostApduService: android.os.IBinder onBind(android.content.Intent)>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(java.nio.FloatBuffer)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void <init>()>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>
<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>
<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<com.android.server.wallpaper.WallpaperManagerService: boolean hasNamedWallpaper(java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: void <init>(android.content.Context)>
<com.android.documentsui.RecentsLoader.RecentsTask: void runInternal()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void reset()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent)>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap)>
<com.android.server.usb.UsbPortManager: void setPortRoles(java.lang.String,int,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isChildInGroupWithSummary(android.service.notification.StatusBarNotification)>
<com.android.systemui.tuner.TunerZenModePanel: boolean isEditing()>
<android.bluetooth.BluetoothGattService: boolean addService(android.bluetooth.BluetoothGattService)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.widget.AbsListView: void onNestedScroll(android.view.View,int,int,int,int)>
<android.media.AudioRouting.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioRouting)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void setVisible(boolean)>
<android.inputmethodservice.InputMethodService: void onInitializeInterface()>
<com.android.systemui.qs.QSTile: void handleClearState()>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void setShowingLegacyBackground(boolean)>
<android.view.View: float getScaleY()>
<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>
<android.view.View: int getForegroundGravity()>
<android.provider.Contacts.ContactMethods: java.lang.Object decodeImProtocol(java.lang.String)>
<com.android.server.usb.UsbService: void setPortRoles(java.lang.String,int,int)>
<android.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.location.GnssStatus: int getSvid(int)>
<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>
<android.telecom.RemoteConference: java.util.List getConnections()>
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>
<android.util.SparseBooleanArray: boolean get(int)>
<com.android.settingslib.drawer.TileUtils: java.util.List getCategories(android.content.Context,java.util.HashMap)>
<com.google.android.util.AbstractMessageParser: void parse()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: void <init>(int,int,int,int,int)>
<com.android.tools.layoutlib.java.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
<android.app.ActivityOptions: void update(android.app.ActivityOptions)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,float,boolean)>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()>
<android.view.ActionMode: void setSubtitle(java.lang.CharSequence)>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)>
<android.security.keystore.AndroidKeyStoreHmacSpi.HmacSHA224: void <init>()>
<android.media.MediaFormat: java.lang.String toString()>
<com.android.server.notification.NotificationIntrusivenessExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<android.os.health.HealthStats: boolean hasMeasurement(int)>
<android.hardware.camera2.legacy.ParameterUtils: java.lang.String stringFromArea(android.hardware.Camera.Area)>
<com.android.systemui.recents.model.Task.TaskKey: void setStackId(int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice findDevice(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.PanelView: boolean isDozing()>
<com.android.systemui.statusbar.phone.ScrimController: void setExcludedBackgroundArea(android.graphics.Rect)>
<android.app.Fragment: void onPictureInPictureModeChanged(boolean)>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.database.CursorWindow: int describeContents()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteUpdate(android.media.session.MediaSession.Token,java.lang.String,android.media.session.MediaController.PlaybackInfo)>
<com.android.statementservice.retriever.AbstractAssetMatcher: int getMatchedLookupKey()>
<com.android.server.DropBoxManagerService: com.android.internal.os.IDropBoxManagerService getServiceStub()>
<android.widget.AbsListView: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: void setForegroundActivity(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure(int)>
<com.android.server.midi.MidiService: void openBluetoothDevice(android.os.IBinder,android.bluetooth.BluetoothDevice,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.location.provider.ActivityRecognitionProvider: java.lang.String[] getSupportedActivities()>
<com.android.server.notification.ConditionProviders: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.providers.settings.SettingsProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>
<android.view.WindowCallback: boolean onSearchRequested()>
<android.app.Activity: void setResult(int)>
<com.android.documentsui.DocumentsActivity: void onAppPicked(android.content.pm.ResolveInfo)>
<android.hardware.camera2.params.LensShadingMap: float getGainFactor(int,int,int)>
<android.widget.CursorAdapter: int getCount()>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>
<com.android.printspooler.model.PrintSpoolerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.tiles.WifiTile.CallbackInfo: java.lang.String toString()>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onDraw(android.graphics.Canvas)>
<android.graphics.Region: boolean contains(int,int)>
<android.view.Display: int getWidth()>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.os.DeadObjectException: void <init>()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onInflate(android.view.ViewStub,android.view.View)>
<android.view.View: void sendAccessibilityEvent(int)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: int hashCode()>
<android.graphics.Typeface: boolean isItalic()>
<com.android.systemui.recents.views.RecentsViewTouchHandler: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.View: void requestApplyInsets()>
<android.webkit.WebView: void clearCache(boolean)>
<android.media.AudioManager: void setMode(int)>
<com.android.hotspot2.utils.HTTPRequest: void <init>(java.lang.String,java.nio.charset.Charset,com.android.hotspot2.utils.HTTPMessage.Method,java.net.URL,java.lang.String,boolean)>
<android.os.StrictMode: void enableDefaults()>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>
<com.android.systemui.tv.pip.PipRecentsControlsView: void <init>(android.content.Context)>
<com.android.documentsui.dirlist.Model.UpdateListener: void onModelUpdate(com.android.documentsui.dirlist.Model)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setChildTransferInProgress(boolean)>
<com.android.hotspot2.utils.HTTPMessage: java.util.Map getHeaders()>
<android.view.View: void onDraw(android.graphics.Canvas)>
<com.android.server.media.MediaSessionRecord: int getOptimisticVolume()>
<android.transition.ChangeScroll: void captureStartValues(android.transition.TransitionValues)>
<android.os.CancellationSignal: boolean isCanceled()>
<com.android.systemui.recents.views.TaskViewHeader: void onConfigurationChanged()>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.service.notification.StatusBarNotification: int getUserId()>
<android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>
<android.speech.tts.TextToSpeech: int setAudioAttributes(android.media.AudioAttributes)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setService(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.tools.layoutlib.create.AsmGenerator: void setCopyFiles(java.util.Map)>
<android.widget.ActivityChooserModel.HistoricalRecord: int hashCode()>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>
<android.hardware.camera2.utils.SizeAreaComparator: android.util.Size findLargestByArea(java.util.List)>
<android.view.Window: android.os.Bundle saveHierarchyState()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>
<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>
<android.widget.HorizontalScrollView: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.qs.customize.TileAdapter: android.support.v7.widget.GridLayoutManager.SpanSizeLookup getSizeLookup()>
<com.android.server.media.MediaSessionRecord: java.lang.String toString()>
<com.android.server.pm.PackageManagerService: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>
<com.android.documentsui.SearchViewManager.SearchManagerListener: void onSearchFinished()>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.FieldID getFieldID_Input()>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context)>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>
<com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm: boolean isTransformAvailable(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>
<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>
<android.telephony.TelephonyManager: int getDataState()>
<com.android.printspooler.widget.PrintContentView: void onLayout(boolean,int,int,int,int)>
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,int,int)>
<android.view.accessibility.AccessibilityEvent: int describeContents()>
<android.view.ActionMode: boolean isTitleOptional()>
<android.media.AudioTrack: int write(byte[],int,int)>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateToFullShade(long)>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>
<android.media.tv.TvView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.ExpandableView: void setHideSensitive(boolean,boolean,long,long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean keepInParent()>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.documentsui.RootsCache: java.util.Collection getMatchingRootsBlocking(com.android.documentsui.State)>
<com.android.gallery3d.exif.ExifTag: byte[] getStringByte()>
<android.speech.RecognitionService.Callback: void bufferReceived(byte[])>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyListenerHintsChangedLocked(int)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>
<com.android.settingslib.Utils: int getBatteryLevel(android.content.Intent)>
<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>
<com.android.server.net.NetworkStatsRecorder: void recordSnapshotLocked(android.net.NetworkStats,java.util.Map,com.android.internal.net.VpnInfo[],long)>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance()>
<android.telephony.CellIdentityWcdma: int getCid()>
<android.os.IRecoverySystem: boolean uncrypt(java.lang.String,android.os.IRecoverySystemProgressListener)>
<android.app.FragmentManager: boolean executePendingTransactions()>
<android.app.FragmentController: void dispatchDestroy()>
<android.filterpacks.imageproc.VignetteFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>
<com.google.android.gles_jni.GLImpl: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.renderscript.Script: long getVarJ(int)>
<android.location.LocationManager: void unregisterGnssStatusCallback(android.location.GnssStatus.Callback)>
<android.app.backup.FullBackup.BackupScheme: java.util.Map maybeParseAndGetCanonicalIncludePaths()>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<com.android.hotspot2.asn1.OidMappings: boolean isIDAttribute(com.android.hotspot2.asn1.Asn1Oid)>
<android.os.Binder: void finalize()>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: int currentSegment(float[])>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void <init>(com.android.ide.common.rendering.api.ResourceReference,com.android.ide.common.rendering.api.AdapterBinding,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,float,boolean)>
<android.app.ActionBar: boolean isHideOnContentScrollEnabled()>
<com.android.server.connectivity.NetworkAgentInfo: void updateLingerTimer()>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(int[],int)>
<com.android.server.pm.UserManagerService: int[] getUserIds()>
<android.media.session.MediaSession: android.media.session.MediaController getController()>
<android.media.MediaRecorder: void setVideoEncoder(int)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.tools.layoutlib.java.Charsets: byte[] toIsoLatin1Bytes(char[],int,int)>
<android.util.ArraySet: void addAll(android.util.ArraySet)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>
<android.app.job.JobInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.telephony.TelephonyManager: boolean hasCarrierPrivileges()>
<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.accounts.AuthenticatorHelper: android.graphics.drawable.Drawable getDrawableForType(android.content.Context,java.lang.String)>
<android.hardware.camera2.legacy.GLThreadManager: void waitUntilIdle()>
<com.android.settingslib.applications.ApplicationsState: android.os.Looper getBackgroundLooper()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getDurationMs()>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>
<com.android.systemui.qs.PagedTileLayout.TilePage: boolean isFull()>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(android.util.Rational[],int)>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<android.text.HtmlToSpannedConverter: void startDocument()>
<android.renderscript.Matrix2f: void multiply(android.renderscript.Matrix2f)>
<android.widget.Editor.SuggestionsPopupWindow: boolean isShowingUp()>
<android.hardware.usb.UsbInterface: int getEndpointCount()>
<com.android.systemui.qs.external.CustomTile: void updateState(android.service.quicksettings.Tile)>
<com.google.android.collect.Sets: android.util.ArraySet newArraySet(java.lang.Object[])>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,java.nio.IntBuffer)>
<android.widget.Editor.EditOperation: void forceMergeWith(android.widget.Editor.EditOperation)>
<com.android.preload.ui.NullProgressMonitor: boolean isCanceled()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void onBusEvent(com.android.systemui.recents.events.activity.AppTransitionFinishedEvent)>
<android.animation.AnimatorSet: void playSequentially(java.util.List)>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.hotspot2.Utils: void delay(long)>
<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>
<android.database.CursorWindow: boolean putLong(long,int,int)>
<com.android.server.policy.BurnInProtectionHelper: void cancelBurnInProtection()>
<android.hardware.radio.RadioManager.AmBandDescriptor: void writeToParcel(android.os.Parcel,int)>
<com.android.uiautomator.core.UiObject: boolean isFocused()>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.inputmethod.InputMethodInfo: int describeContents()>
<android.hardware.usb.UsbInterface: java.lang.String getName()>
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>
<android.filterpacks.imageproc.FillLightFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.hotspot2.osu.OSUInfo: java.util.Set getNameLocales()>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>
<android.app.SearchableInfo: boolean autoUrlDetect()>
<com.android.server.am.BatteryStatsService: void noteNetworkStatsEnabled()>
<com.android.commands.sm.Sm: void runGetFbeMode()>
<android.security.KeyChainException: void <init>(java.lang.Throwable)>
<android.opengl.GLES20: void glClearStencil(int)>
<com.android.server.job.controllers.ConnectivityController: void onNetworkActive()>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryEffects()>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>
<android.view.View: void getHitRect(android.graphics.Rect)>
<com.android.systemui.statusbar.stack.AmbientState: float getMaxHeadsUpTranslation()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getImeSwitchButton()>
<android.media.MediaDescription: java.lang.CharSequence getTitle()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result moveChild(android.view.ViewGroup,android.view.View,int,java.util.Map,com.android.ide.common.rendering.api.IAnimationListener)>
<android.widget.AbsListView: void setFastScrollStyle(int)>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getHeadsUpChild()>
<android.content.res.Resources.Theme: android.content.res.Resources getResources()>
<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection.Callback,android.os.Handler)>
<com.android.systemui.volume.ZenModePanel: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.camera2.CaptureResult: java.util.List getKeys()>
<android.widget.AbsListView: int getCheckedItemCount()>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void showPromptReason(int)>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>
<javax.microedition.khronos.opengles.GL10: void glLoadIdentity()>
<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener: void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice)>
<android.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)>
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.server.firewall.IntentFirewall.AMSInterface: int checkComponentPermission(java.lang.String,int,int,int,boolean)>
<com.android.printservice.recommendation.plugin.samsung.MDnsUtils: java.lang.String getString(byte[])>
<android.renderscript.Element: java.lang.String getSubElementName(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getManagedUserBadgedDrawable(android.graphics.drawable.Drawable,android.graphics.Rect,int)>
<android.widget.ActionMenuView: int getPopupTheme()>
<android.drm.DrmEvent: int getUniqueId()>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onNewIntent(android.content.Intent)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getDocID()>
<android.graphics.RectF: void union(float,float,float,float)>
<com.android.documentsui.State: void initAcceptMimes(android.content.Intent)>
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>
<com.android.server.backup.BackupManagerService: void <init>(android.content.Context,com.android.server.backup.Trampoline)>
<com.android.server.pm.Installer: void restoreconAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName(android.content.Context)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: int computeMaxKeyguardNotifications(int)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getCurrentUser()>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJson()>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.ArraySet: java.lang.Object removeAt(int)>
<com.android.systemui.statusbar.notification.TransformState: void disappear(float,com.android.systemui.statusbar.TransformableView)>
<android.net.VpnService: boolean protect(java.net.DatagramSocket)>
<android.graphics.drawable.shapes.RectShape: void getOutline(android.graphics.Outline)>
<android.hardware.usb.UsbConfiguration: java.lang.String toString()>
<android.widget.HorizontalScrollView: void addView(android.view.View,int)>
<android.util.LruCache: int missCount()>
<com.android.systemui.statusbar.notification.TransformState: com.android.systemui.statusbar.notification.TransformState obtain()>
<android.hardware.usb.UsbDevice: int getDeviceProtocol()>
<android.app.admin.SystemUpdatePolicy: int getInstallWindowEnd()>
<android.widget.TableRow.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: int getConnectedWifiLevel()>
<com.android.systemui.qs.external.TileServices: void onDialogHidden(android.os.IBinder)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDismissOnMenuPressed()>
<android.os.DeadObjectException: void <init>(java.lang.String)>
<android.graphics.Canvas_Delegate: int native_save(long,int)>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>
<android.telephony.ServiceState: void setIsManualSelection(boolean)>
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>
<com.android.server.NativeDaemonEvent: void checkCode(int)>
<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<com.android.server.backup.BackupManagerService: void setAutoRestore(boolean)>
<com.android.keyguard.KeyguardHostView: void onPause()>
<android.util.SparseIntArray: int size()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.content.ComponentName getEffectsSuppressor()>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.database.CursorWindow: boolean allocRow()>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,int[],int)>
<com.android.location.provider.ProviderRequestUnbundled: java.util.List getLocationRequests()>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<android.print.PrintDocumentInfo.Builder: void <init>(java.lang.String)>
<android.media.tv.TvInputService.RecordingSession: void onStopRecording()>
<android.app.admin.DevicePolicyManager: boolean removeKeyPair(android.content.ComponentName,java.lang.String)>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.ParceledListSlice retrieveSecurityLogs(android.content.ComponentName)>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>
<android.util.SparseArray: int indexOfKey(int)>
<android.view.LayoutInflater.Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.widget.PopupMenu.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.webkit.WebResourceError: int getErrorCode()>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.usb.UsbDevice: java.lang.String getManufacturerName()>
<com.android.server.Watchdog.Monitor: void monitor()>
<android.hardware.camera2.CameraCaptureSession: void stopRepeating()>
<android.animation.ValueAnimator.AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element.DataType,int)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPicture(android.graphics.Picture)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: boolean equals(java.lang.Object)>
<android.opengl.GLES20: boolean glIsTexture(int)>
<android.app.admin.SystemUpdatePolicy: android.app.admin.SystemUpdatePolicy createAutomaticInstallPolicy()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<com.android.server.pm.PackageManagerService: boolean isUidPrivileged(int)>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>
<android.app.IntentService: void setIntentRedelivery(boolean)>
<com.android.server.updates.TzDataInstallReceiver: void install(byte[],int)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getCurrent()>
<android.app.SearchManager: void stopSearch()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<android.widget.TextView: void setMaxHeight(int)>
<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>()>
<com.android.hotspot2.osu.OSUManager: boolean startUserInput(java.net.URL,android.net.Network)>
<android.webkit.WebView: int findAll(java.lang.String)>
<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>
<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxOES(int,int,int,int,int)>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>
<android.app.ActionBar: void setHideOffset(int)>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)>
<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void reboot(boolean,java.lang.String,boolean)>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(int)>
<android.database.CursorWindow: void freeLastRow()>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checked(boolean)>
<android.hardware.camera2.legacy.RequestHolder: boolean isOutputAbandoned()>
<android.webkit.WebView: void onWindowVisibilityChanged(int)>
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.ActivityView.ActivityViewCallback: void onAllActivitiesComplete(android.app.ActivityView)>
<android.gesture.Gesture: void <init>()>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(long)>
<android.util.BridgeXmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.app.Dialog: void show()>
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>
<android.net.UrlQuerySanitizer: void <init>()>
<android.telecom.InCallService: void onConnectionEvent(android.telecom.Call,java.lang.String,android.os.Bundle)>
<com.android.systemui.qs.tiles.UserDetailView: void createAndSetAdapter(com.android.systemui.statusbar.policy.UserSwitcherController)>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekDayTextAppearance()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void applyState(com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.RenderSession createSession(com.android.ide.common.rendering.api.SessionParams)>
<android.widget.TableRow.LayoutParams: void <init>(int,int)>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.TimePickerDialog: void updateTime(int,int)>
<android.media.midi.MidiDeviceInfo: int describeContents()>
<android.app.LoaderManager: android.content.Loader getLoader(int)>
<android.telecom.Call.Details: android.net.Uri getHandle()>
<android.widget.AbsListView: void setVelocityScale(float)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.graphics.drawable.RotateDrawable: void <init>()>
<com.android.systemui.qs.customize.QSCustomizer: void setQsContainer(com.android.systemui.qs.QSContainer)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: com.android.systemui.statusbar.ExpandableNotificationRow getLogicalGroupSummary(android.service.notification.StatusBarNotification)>
<android.view.ViewParent: boolean isTextDirectionResolved()>
<android.hardware.Camera: void startFaceDetection()>
<android.database.MergeCursor: java.lang.String getString(int)>
<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setListening(boolean)>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.ViewGroup)>
<android.app.Instrumentation: void setInTouchMode(boolean)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>
<android.view.Window: void setElevation(float)>
<com.android.hotspot2.utils.HTTPRequest: void send(java.io.OutputStream)>
<com.android.server.pm.PackageManagerService: boolean isPackageSuspendedForUser(java.lang.String,int)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getDeviceOwnerName()>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: void initDocumentHolder(com.android.documentsui.dirlist.DocumentHolder)>
<com.android.systemui.recents.misc.Utilities: int clamp(int,int,int)>
<com.android.systemui.recents.views.TaskStackView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.photos.BitmapRegionTileSource: int getTileSize()>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.documentsui.model.DocumentInfo: int getCursorInt(android.database.Cursor,java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedWakingUp()>
<android.graphics.RoundRectangle: void setFrame(double,double,double,double)>
<android.hardware.display.VirtualDisplay.Callback: void onPaused()>
<android.view.inputmethod.InputMethod: void unbindInput()>
<android.graphics.drawable.VectorDrawable_Delegate.VNativeObject: void setName(java.lang.String)>
<android.text.style.TextAppearanceSpan: int describeContents()>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String toHtml(boolean)>
<com.android.systemui.statusbar.stack.ScrollContainer: void requestDisallowDismiss()>
<android.os.StatFs: long getAvailableBytes()>
<android.media.ImageWriter: void queueInputImage(android.media.Image)>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.app.ActivityManagerProxy: int[] getRunningUserIds()>
<android.os.BinderProxy: void finalize()>
<android.view.View: void addFocusables(java.util.ArrayList,int)>
<com.android.systemui.qs.QSTile: android.content.Intent getLongClickIntent()>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<com.android.systemui.qs.tiles.IntentTile: void handleClick()>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setInvalidatedByBiometricEnrollment(boolean)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<com.android.keyguard.KeyguardHostView: void dispatchSystemUiVisibilityChanged(int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>
<android.telecom.PhoneAccount: android.os.Bundle getExtras()>
<android.transition.Transition: android.transition.Transition removeTarget(int)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.ScrimController createScrimController(com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,android.view.View,com.android.systemui.statusbar.phone.LockscreenWallpaper)>
<android.media.AudioDeviceCallback: void onAudioDevicesAdded(android.media.AudioDeviceInfo[])>
<android.security.keystore.AndroidKeyStoreHmacSpi.HmacSHA256: void <init>()>
<com.android.documentsui.FilesJankPerfTest: void tearDownInLoop()>
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserWhitelistedApps()>
<android.widget.OverScroller: boolean computeScrollOffset()>
<com.android.uiautomator.core.UiObject: boolean swipeUp(int)>
<com.android.server.connectivity.LingerMonitor: boolean isNotificationEnabled(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>
<android.app.FragmentController: void dispatchResume()>
<com.android.printspooler.model.RemotePrintDocument: boolean isDestroyed()>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>
<com.android.server.print.PrintManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.NextAlarmController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<com.android.hotspot2.omadm.MOTree: void marshal(java.io.OutputStream)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>
<com.android.systemui.statusbar.BaseStatusBar: void dismissPopups()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerType(org.objectweb.asm.Type)>
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<com.android.server.am.ActivityManagerService: boolean releaseActivityInstance(android.os.IBinder)>
<com.android.systemui.statusbar.StatusBarIconView: com.android.internal.statusbar.StatusBarIcon getStatusBarIcon()>
<android.content.res.Resources.NotFoundException: void <init>()>
<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<com.android.nfc_extras.NfcExecutionEnvironment: void open()>
<com.android.systemui.qs.QSTileBaseView: android.view.View updateAccessibilityOrder(android.view.View)>
<android.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)>
<android.media.tv.TvInputService.Session: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.server.usage.UnixCalendar: void addYears(int)>
<android.widget.GridView: int computeVerticalScrollOffset()>
<android.mtp.MtpEvent: int getObjectPropCode()>
<android.preference.DialogPreference: int getDialogLayoutResource()>
<android.media.SubtitleController.Renderer: boolean supports(android.media.MediaFormat)>
<com.android.systemui.statusbar.NotificationBackgroundView: boolean hasOverlappingRendering()>
<com.android.providers.settings.SettingsProvider: java.lang.String keyToString(int)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<com.android.systemui.qs.QSDetailItems: void setItems(com.android.systemui.qs.QSDetailItems.Item[])>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)>
<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo getDocumentInfo()>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>
<android.webkit.WebView: boolean pageDown(boolean)>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>
<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void init(android.animation.AnimatorSet)>
<com.android.systemui.tv.pip.PipManager: void removeMediaListener(com.android.systemui.tv.pip.PipManager.MediaListener)>
<android.app.AutomaticZenRule: void setInterruptionFilter(int)>
<com.android.server.usage.UnixCalendar: long getTimeInMillis()>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>
<android.view.IWindowManagerImpl: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>
<android.app.Fragment: void onAttach(android.app.Activity)>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName()>
<android.os.Handler: android.os.Message obtainMessage()>
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()>
<android.os.RemoteCallbackList: void finishBroadcast()>
<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>
<com.android.providers.settings.SettingsHelper: java.lang.String onBackupValue(java.lang.String,java.lang.String)>
<android.hardware.camera2.utils.CloseableLock: android.hardware.camera2.utils.CloseableLock.ScopedLock acquireExclusiveLock()>
<android.location.GnssMeasurement: int getState()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvx(int,int,int)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>
<android.net.wifi.RttManager.ResponderConfig: int describeContents()>
<com.android.keyguard.NumPadKey: void onMeasure(int,int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhotoURL(java.lang.String,java.lang.String)>
<com.google.android.collect.Sets: android.util.ArraySet newArraySet()>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>
<android.widget.ViewFlipper: void <init>(android.content.Context)>
<android.widget.ScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate: void <init>()>
<android.app.TabActivity: void <init>()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>
<android.app.FragmentTransaction: android.app.FragmentTransaction hide(android.app.Fragment)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: java.util.ArrayList getVisibleDockStates()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean isUnlockingWithFingerprintAllowed()>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>
<com.android.server.policy.PhoneWindowManager: void startKeyguardExitAnimation(long,long)>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyCollapsed()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<com.android.systemui.statusbar.phone.ScrimController: void setDrawBehindAsSrc(boolean)>
<android.media.MediaCodec.CodecException: boolean isTransient()>
<android.media.MediaRouter.RouteInfo: void setTag(java.lang.Object)>
<android.telephony.NeighboringCellInfo: int describeContents()>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>
<com.android.egg.neko.NekoService: void cancelJob(android.content.Context)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForDelete(java.lang.String,int,java.lang.String)>
<com.android.systemui.tuner.TunerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.app.Activity: boolean requestVisibleBehind(boolean)>
<android.media.MediaSync: void flush()>
<android.view.View: void setFocusableInTouchMode(boolean)>
<com.android.anqp.Constants: java.lang.String getString(java.nio.ByteBuffer,int,java.nio.charset.Charset,boolean)>
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long,int)>
<android.preference.Preference: boolean persistString(java.lang.String)>
<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>
<com.android.systemui.qs.QSContainer: void onRtlPropertiesChanged(int)>
<com.android.settingslib.net.DataUsageController: void setNetworkController(com.android.settingslib.net.DataUsageController.NetworkNameProvider)>
<com.android.server.display.DisplayManagerService: void systemReady(boolean,boolean)>
<android.graphics.drawable.RippleDrawable: void invalidateSelf()>
<com.android.systemui.qs.QSTile: void addCallback(com.android.systemui.qs.QSTile.Callback)>
<android.app.VoiceInteractor.Prompt: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Bitmap: int describeContents()>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>
<com.google.android.gles_jni.EGLImpl: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<com.android.server.search.Searchables: void updateSearchableList()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.inputmethodservice.Keyboard.Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>
<android.database.AbstractCursor: boolean isBeforeFirst()>
<android.app.Fragment: android.transition.Transition getReturnTransition()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setAttentionLight(boolean,int)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateHeight()>
<com.android.server.net.NetworkStatsRecorder: android.net.NetworkStats.Entry getTotalSinceBootLocked(android.net.NetworkTemplate)>
<com.android.gallery3d.exif.ExifInterface: void setExif(java.util.Collection)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: int hashCode()>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>
<android.view.RectShadowPainter: void paintShadow(android.graphics.Outline,float,android.graphics.Canvas)>
<android.app.assist.AssistContent: void setStructuredData(java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: android.view.View getStatusBarView()>
<android.location.GnssNavigationMessage: int getMessageId()>
<android.service.voice.VoiceInteractionSessionService: void onLowMemory()>
<android.app.Activity: void startActivities(android.content.Intent[])>
<android.media.tv.TvInputService.Session: void notifyTimeShiftStatusChanged(int)>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>
<android.os.Parcel: java.lang.String readString()>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>
<android.hardware.camera2.params.LensShadingMap: int getGainFactorCount()>
<android.graphics.Paint: void setFilterBitmap(boolean)>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void <init>(java.lang.String)>
<android.webkit.WebView: boolean canGoBack()>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.MediaDescription: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioTrack: int getPositionNotificationPeriod()>
<android.view.ViewGroup: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,float[],int)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator build()>
<android.drm.DrmSupportInfo: int hashCode()>
<android.hardware.camera2.params.ColorSpaceTransform: boolean equals(java.lang.Object)>
<android.provider.CalendarContract.Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
<android.view.TextureView: void onSizeChanged(int,int,int,int)>
<android.widget.TextView: int getMinHeight()>
<com.android.egg.neko.NekoService: void registerJobIfNeeded(android.content.Context,long)>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
<android.database.Cursor: android.os.Bundle getExtras()>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<android.media.tv.TvView: void onVisibilityChanged(android.view.View,int)>
<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoFrameRate(float)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void computeScroll()>
<android.view.View: boolean hasTransientState()>
<android.view.View: void invalidate(android.graphics.Rect)>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<com.android.printspooler.model.PageContentRepository: void <init>(android.content.Context)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.graphics.Rect: boolean intersect(int,int,int,int)>
<android.text.Layout: float getSpacingMultiplier()>
<android.database.Cursor: float getFloat(int)>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.NotificationHeaderUtil.ResultApplicator: void apply(android.view.View,boolean)>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>
<com.android.hotspot2.omadm.OMANode: boolean isLeaf()>
<com.android.systemui.tuner.TunerZenModePanel: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean canViewBeDismissed()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void show()>
<android.view.Window: android.transition.Transition getExitTransition()>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>
<com.android.server.NativeDaemonEvent: boolean isClassClientError()>
<com.android.gallery3d.glrenderer.GLCanvas: void rotate(float,float,float,float)>
<com.android.systemui.volume.VolumeDialogComponent: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.printspooler.ui.SelectPrinterActivity: void onSaveInstanceState(android.os.Bundle)>
<android.widget.RemoteViews: void setChronometerCountDown(int,boolean)>
<android.opengl.GLES10: void glClearDepthf(float)>
<android.media.session.MediaController.TransportControls: void seekTo(long)>
<com.android.settingslib.drawer.UserAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.webkit.WebViewProvider.ViewDelegate: android.os.Handler getHandler(android.os.Handler)>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>
<android.net.wifi.WifiInfo: int getRssi()>
<com.android.systemui.classifier.SpeedRatioEvaluator: float evaluate(float)>
<android.hardware.usb.UsbDevice: int getDeviceClass()>
<android.view.animation.Animation: void start()>
<android.content.Entity: void <init>(android.content.ContentValues)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(android.view.View)>
<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>
<android.security.keystore.KeyProtection: boolean isUserAuthenticationRequired()>
<android.util.SparseArray: int size()>
<android.widget.VideoView: boolean canPause()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.Scroller: boolean computeScrollOffset()>
<com.android.server.am.BatteryStatsService: void noteStopSensor(int,int)>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getUidPersistBytes(long)>
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.opengl.GLES32: int glGetDebugMessageLog(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<com.android.documentsui.Events.MotionInputEvent: boolean isActionDown()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>
<android.graphics.pdf.PdfDocument: void writeTo(java.io.OutputStream)>
<android.ddm.DdmHandleNativeHeap: void connected()>
<com.android.documentsui.Display: float density(android.content.Context)>
<android.widget.CheckedTextView: android.os.Parcelable onSaveInstanceState()>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.graphics.drawable.DrawableWrapper: int getChangingConfigurations()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<com.android.server.backup.Trampoline: void initialize(int)>
<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>
<android.media.tv.TvRecordingClient.RecordingCallback: void onRecordingStopped(android.net.Uri)>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,int[],int)>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AbsSpinner: void setSelection(int,boolean)>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>
<com.android.systemui.qs.tiles.WorkModeTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getStackActionButtonRect()>
<com.android.hotspot2.asn1.Asn1Object: java.nio.ByteBuffer getPayload(int)>
<com.android.systemui.recents.events.ui.StackViewScrolledEvent: void updateY(int)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onCreate()>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>()>
<android.view.MenuItem: int getItemId()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeType()>
<android.app.Notification.CarExtender: void <init>(android.app.Notification)>
<android.net.VpnService: boolean setUnderlyingNetworks(android.net.Network[])>
<com.android.server.display.NightDisplayService: void onStart()>
<android.media.RemoteDisplay.Listener: void onDisplayDisconnected()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInDataUsageSave()>
<com.android.server.usb.UsbPortManager: void removeSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
<android.print.PrintJobInfo.Builder: void <init>(android.print.PrintJobInfo)>
<com.android.keyguard.SecurityMessageDisplay: void setTimeout(int)>
<com.android.settingslib.wifi.AccessPoint: boolean isSaved()>
<android.graphics.ColorFilter_Delegate: java.lang.String getSupportMessage()>
<android.app.job.JobInfo: boolean isRequireDeviceIdle()>
<com.android.systemui.qs.tiles.IntentTile: void handleUserSwitch(int)>
<android.content.CursorLoader: void <init>(android.content.Context)>
<android.view.WindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<com.android.server.net.NetworkStatsAccess: boolean isAccessibleToUser(int,int,int)>
<org.apache.http.conn.ssl.X509HostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>
<android.os.Looper: void prepare()>
<com.android.server.job.controllers.StateController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.view.View: void setForegroundGravity(int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getTileSize()>
<com.android.server.trust.TrustArchive: void logRevokeTrust(int,android.content.ComponentName)>
<com.example.android.networkusage.NetworkActivity: void onDestroy()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isGoingToNotificationShade()>
<com.android.systemui.settings.BrightnessController: void <init>(android.content.Context,android.widget.ImageView,com.android.systemui.settings.ToggleSlider)>
<android.net.wifi.WifiManager: boolean reassociate()>
<com.android.server.accessibility.KeyboardInterceptor: void clearEvents(int)>
<com.android.systemui.statusbar.policy.WifiSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>
<com.android.hotspot2.pps.Credential: boolean equals(java.lang.Object)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)>
<android.hardware.usb.UsbConfiguration: android.hardware.usb.UsbInterface getInterface(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>
<android.os.Debug.MemoryInfo: int getTotalSwappablePss()>
<android.renderscript.Script: android.renderscript.Script.FieldID createFieldID(int,android.renderscript.Element)>
<com.android.server.net.NetworkStatsRecorder: void forcePersistLocked(long)>
<com.android.keyguard.AlphaOptimizedLinearLayout: boolean hasOverlappingRendering()>
<android.view.IWindowManagerImpl: boolean isKeyguardSecure()>
<com.android.systemui.doze.DozeLog: void traceScreenOn()>
<com.android.server.restrictions.RestrictionsManagerService: void onStart()>
<android.service.wallpaper.WallpaperService: void onCreate()>
<com.android.server.power.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void setDimAlpha(float)>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: boolean canReorderNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStart()>
<android.media.RemoteControlClient: void setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>
<android.widget.Spinner: void setPromptId(int)>
<android.telephony.TelephonyManager: java.lang.String getIccAuthentication(int,int,java.lang.String)>
<com.android.systemui.statusbar.notification.ProgressTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<android.telecom.Conference: void setDialing()>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>
<android.media.audiofx.Virtualizer.Settings: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: void performIdleMaintenance()>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentTitle(java.lang.CharSequence)>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<android.graphics.Paint: void <init>()>
<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>
<android.widget.AbsListView: void onOverScrolled(int,int,boolean,boolean)>
<android.widget.AdapterViewFlipper: void setAutoStart(boolean)>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>
<android.widget.ExpandableListAdapter: long getChildId(int,int)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setMenuVisibility(boolean,boolean)>
<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>
<android.drm.DrmStore.DrmObjectType: void <init>()>
<android.preference.RingtonePreference: int getRingtoneType()>
<android.renderscript.Short3: void <init>(short,short,short)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>
<android.telecom.RemoteConnection: void unhold()>
<android.opengl.GLES11: boolean glIsEnabled(int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>
<android.media.MediaRouter.RouteInfo: int getPlaybackType()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<android.widget.AdapterView: android.view.View getSelectedView()>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addKernel(android.renderscript.Script.KernelID,android.renderscript.Type,java.lang.Object[])>
<android.graphics.Shader_Delegate: android.graphics.Shader_Delegate getDelegate(long)>
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>
<com.android.systemui.classifier.SpeedClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>
<android.content.Intent: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>
<com.android.server.am.ActivityManagerService: void signalPersistentProcesses(int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>
<com.android.systemui.qs.QSTile.DetailAdapter: android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup)>
<android.telecom.InCallService: void <init>()>
<android.hardware.camera2.CameraAccessException: int getReason()>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setHasCustomPrinterIcon(boolean)>
<android.graphics.drawable.BitmapDrawable: void setAutoMirrored(boolean)>
<com.android.systemui.statusbar.phone.PanelBar: void panelExpansionChanged(float,boolean)>
<android.media.tv.TvInputService.Session: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.security.KeyPairGeneratorSpec: android.content.Context getContext()>
<com.android.server.audio.AudioService.VolumeController: java.lang.String toString()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setIsChildInGroup(boolean,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.tuner.TunerFragment: void onResume()>
<com.android.preload.DeviceUtils: com.android.ddmlib.IDevice[] findDevices(int)>
<android.service.notification.ZenModeConfig.EventInfo: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitMultiANewArrayInsn(java.lang.String,int)>
<android.graphics.NinePatch: java.lang.String getName()>
<android.accounts.AccountManager: boolean notifyAccountAuthenticated(android.accounts.Account)>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterf(int,float)>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>
<com.android.documentsui.services.Job.Listener: void onProgress(com.android.documentsui.services.CopyJob)>
<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: int getCount()>
<android.text.format.Time: void set(android.text.format.Time)>
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>
<com.android.documentsui.dirlist.FragmentTuner.SelectionDetails: boolean containsPartialFiles()>
<com.google.android.util.AbstractMessageParser.Html: void <init>(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: int getCurrentUser()>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportSimUnlocked(int)>
<com.android.server.am.CompatModePackages: int getPackageScreenCompatModeLocked(java.lang.String)>
<android.os.Debug: int getGlobalExternalAllocCount()>
<com.android.server.wm.DockedStackDividerController: void getDimBounds(android.graphics.Rect)>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>
<javax.microedition.khronos.opengles.GL10: void glNormalPointer(int,int,java.nio.Buffer)>
<android.widget.AbsListView: void setChoiceMode(int)>
<android.graphics.Matrix_Delegate: float[] makeValues(java.awt.geom.AffineTransform)>
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.ScriptIntrinsicBlend create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintScreenTimeout(int)>
<android.media.AudioManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>
<android.graphics.Canvas_Delegate: void native_drawPoints(long,float[],int,int,long)>
<com.android.settingslib.bluetooth.PanProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(android.os.Parcel)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getPeekHeight()>
<com.android.settingslib.graph.UsageView: void setSideLabels(java.lang.CharSequence[])>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
<com.android.systemui.statusbar.NotificationContentView: void setHeadsUp(boolean)>
<android.view.View: void onProvideVirtualStructure(android.view.ViewStructure)>
<android.app.ActivityManager: int getLargeMemoryClass()>
<android.provider.DocumentsContract: android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String)>
<android.app.Dialog: void closeOptionsMenu()>
<android.service.media.MediaBrowserService: android.media.session.MediaSession.Token getSessionToken()>
<com.android.systemui.analytics.DataCollector: void setNotificationExpanded()>
<android.view.MotionEvent: int getPointerId(int)>
<android.graphics.RoundRectangle: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
<android.widget.RemoteViews: void setLabelFor(int,int)>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>
<com.android.systemui.recents.model.Task: void notifyTaskDataLoaded(android.graphics.Bitmap,android.graphics.drawable.Drawable,android.app.ActivityManager.TaskThumbnailInfo)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStartUser(int)>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.RelativeLayout: int getGravity()>
<android.content.ComponentName: int compareTo(android.content.ComponentName)>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
<com.android.systemui.recents.misc.SystemServicesProxy: int getSystemSetting(android.content.Context,java.lang.String)>
<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.ProviderInfo: int describeContents()>
<android.app.NotificationManager: void setNotificationPolicy(android.app.NotificationManager.Policy)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.settingslib.RestrictedPreference: boolean isDisabledByAdmin()>
<android.hardware.usb.UsbAccessory: int hashCode()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfRestrictionEnforced(android.content.Context,java.lang.String,int)>
<com.android.documentsui.FilteringCursorWrapper: boolean isNull(int)>
<android.util.SizeF: float getWidth()>
<android.nfc.tech.MifareClassic: void increment(int,int)>
<android.webkit.FindActionModeCallback.NoAction: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<com.android.systemui.statusbar.notification.TransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,float[],int)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isAutoConnectable()>
<android.graphics.Matrix: void mapVectors(float[],float[])>
<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>
<android.widget.TabWidget: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<android.preference.PreferenceActivity: boolean onIsHidingHeaders()>
<com.android.systemui.qs.QSDetail: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.server.am.BatteryStatsService: void noteResetCamera()>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String getDocumentType(java.lang.String)>
<android.hardware.hdmi.HdmiControlManager.VendorCommandListener: void onControlStateChanged(boolean,int)>
<android.widget.AnalogClock: void onMeasure(int,int)>
<com.android.systemui.tuner.DemoModeFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<android.view.Window: void setSoftInputMode(int)>
<android.telecom.Connection.VideoProvider: void <init>()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String,java.lang.String)>
<com.android.systemui.volume.MediaSessions: void postUpdateSessions()>
<com.android.commands.dpm.Dpm: void main(java.lang.String[])>
<android.graphics.RadialGradient_Delegate: java.awt.Paint getJavaPaint()>
<com.android.systemui.statusbar.policy.BatteryController: boolean isPowerSave()>
<android.view.WindowCallback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable)>
<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>
<android.widget.CalendarView: long getMinDate()>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsDateTimeStampTag(long)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController)>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.settingslib.RestrictedPreferenceHelper: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)>
<android.os.Environment: java.io.File getRootDirectory()>
<android.app.Service: void onDestroy()>
<android.graphics.YuvImage: int getHeight()>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>
<com.android.systemui.qs.SecureSetting: void setUserId(int)>
<android.media.AudioTrack: void addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,android.os.Handler)>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>
<android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate: void <init>(android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate)>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setDigests(java.lang.String[])>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceRemoved(android.media.midi.MidiDeviceInfo)>
<android.graphics.Paint_Delegate: int getJavaCap()>
<com.android.hotspot2.utils.HTTPResponse: java.nio.ByteBuffer getPayload()>
<android.webkit.WebResourceResponse: void setStatusCodeAndReasonPhrase(int,java.lang.String)>
<android.widget.AbsListView: void smoothScrollToPosition(int,int)>
<android.graphics.drawable.LayerDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.media.MediaExtractor: void unselectTrack(int)>
<android.widget.ListPopupWindow: void setHeight(int)>
<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>
<com.android.systemui.statusbar.policy.KeyButtonView: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.ServiceManagerProxy: void <init>(android.os.IBinder)>
<com.android.keyguard.KeyguardPatternView: void reset()>
<android.util.SparseLongArray: long valueAt(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<com.android.hotspot2.Utils: java.lang.String getMccMnc(java.util.List)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory getAccessory(android.content.Intent)>
<com.android.systemui.qs.QSTile: void handleRefreshState(java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getStorageEncryptionStatus(java.lang.String,int)>
<android.view.View: void setFocusable(boolean)>
<com.android.systemui.statusbar.phone.LockIcon: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isDeviceInVrMode()>
<android.mtp.MtpEvent: int getStorageId()>
<com.android.hotspot2.pps.DomainMatcher: java.lang.String toString()>
<com.android.keyguard.KeyguardSimPinView: void onAttachedToWindow()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(int)>
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setScreenOn(boolean)>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onDetachedFromWindow()>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>
<com.android.systemui.statusbar.phone.LockIcon: void update(boolean)>
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceProvisioned()>
<android.graphics.RoundRectangle: boolean contains(double,double)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.database.Cursor: int getPosition()>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.view.View: boolean hasOnClickListeners()>
<com.android.server.wm.DisplaySettings: void getOverscanLocked(java.lang.String,java.lang.String,android.graphics.Rect)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.health.HealthStats: java.util.Map getMeasurements(int)>
<android.text.style.AlignmentSpan: android.text.Layout.Alignment getAlignment()>
<android.view.ViewDebug: void stopHierarchyTracing()>
<com.android.settingslib.animation.AppearAnimationUtils: long calculateDelay(int,int)>
<android.speech.RecognitionListener: void onEvent(int,android.os.Bundle)>
<android.hardware.radio.RadioManager.ProgramInfo: boolean isStereo()>
<com.android.systemui.recents.views.RecentsView: void onMeasure(int,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getNamespaceCount(int)>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<android.net.wifi.WifiManager: int getWifiState()>
<android.app.Notification.WearableExtender: boolean getStartScrollBottom()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onLockedNotificationImportanceChange(com.android.keyguard.KeyguardHostView.OnDismissAction)>
<android.nfc.tech.NfcF: byte[] getSystemCode()>
<android.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>
<android.location.LocationManager: boolean addNmeaListener(android.location.OnNmeaMessageListener,android.os.Handler)>
<com.android.server.pm.Installer: void dexopt(java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String extractImage(java.lang.String)>
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)>
<com.android.systemui.statusbar.policy.SignalController: void dump(java.io.PrintWriter)>
<com.android.server.SystemConfig: android.util.ArraySet getBackupTransportWhitelist()>
<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.widget.TextView: void onEditorAction(int)>
<android.os.UserManager: boolean isUserRunningAndUnlocked()>
<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>
<android.widget.TextView: int getTotalPaddingBottom()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getOrdinal()>
<android.graphics.RectF: void inset(float,float)>
<android.database.MergeCursor: long getLong(int)>
<android.telecom.Connection: void setStatusHints(android.telecom.StatusHints)>
<android.util.BridgeXmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.os.Parcel: void writeArray(java.lang.Object[])>
<android.app.Activity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<com.android.server.pm.PermissionsState: int[] computeGids(int)>
<android.app.ActionBar: void setSubtitle(int)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onClosed(android.hardware.camera2.CameraCaptureSession)>
<android.widget.SimpleAdapter: android.widget.SimpleAdapter.ViewBinder getViewBinder()>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<android.opengl.GLES32: void glBlendEquationi(int,int)>
<android.media.AudioRecord: android.media.AudioFormat getFormat()>
<com.android.server.trust.TrustAgentWrapper: boolean isTrusted()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.app.ActivityManagerProxy: void resizePinnedStack(android.graphics.Rect,android.graphics.Rect)>
<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService.Insets)>
<android.telephony.SubscriptionInfo: int getMcc()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateResources()>
<android.util.Property: java.lang.Object get(java.lang.Object)>
<com.android.settingslib.RestrictedLockUtils: boolean isAdminInCurrentUserOrProfile(android.content.Context,android.content.ComponentName)>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityForConsumptionEnd()>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderDrawable: void <init>(com.android.ide.common.rendering.api.DrawableParams)>
<android.graphics.drawable.Drawable: int getAlpha()>
<android.media.AudioManager: android.media.AudioDeviceInfo[] getDevices(int)>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<com.android.server.tv.TvRemoteService: void onStart()>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void hideNotificationIconArea(boolean)>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.ResourceReference resolveId(int)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void removeUserId(int)>
<com.android.documentsui.model.DocumentInfo: boolean isRenameSupported()>
<android.webkit.WebViewProvider.ViewDelegate: boolean setFrame(int,int,int,int)>
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setCurrentView(android.view.View)>
<android.view.Window: void makeActive()>
<android.widget.PopupWindow: void setTouchable(boolean)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaFormat getDefaultFormat()>
<android.os.BatteryStats.Uid: void noteWifiScanStartedLocked(long)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getHostView()>
<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>
<android.filterpacks.imageproc.ImageSlicer: void process(android.filterfw.core.FilterContext)>
<com.android.commands.uiautomator.Launcher.Command: void <init>(java.lang.String)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getPrimaryUser()>
<android.widget.EdgeEffect: void onPull(float)>
<com.android.gallery3d.glrenderer.GLCanvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.fingerprint.ClientMonitor: int stop(boolean)>
<com.android.systemui.qs.tiles.DndTile: boolean isCombinedIcon(android.content.Context)>
<com.android.preload.DumpTableModel: void clear()>
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>
<android.hardware.Camera.Parameters: void setJpegThumbnailSize(int,int)>
<android.app.admin.DevicePolicyManager: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<com.android.keyguard.KeyguardHostView: boolean handleBackKey()>
<com.android.settingslib.drawable.UserIconDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onExpandedByGesture(boolean)>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: int getActivityStackId(android.os.IBinder)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(java.lang.Object[][],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<android.opengl.GLES32: java.lang.String glGetObjectLabel(int,int)>
<com.android.server.trust.TrustManagerService: void onBootPhase(int)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitEnd()>
<android.app.ActionBar: void setSelectedNavigationItem(int)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String)>
<android.widget.Spinner: void setEnabled(boolean)>
<android.print.pdf.PrintedPdfDocument: int getPageWidth()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<android.view.View: int getTextAlignment()>
<com.android.keyguard.EmergencyCarrierArea: void onFinishInflate()>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String)>
<android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerController getInstance()>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.tuner.PreviewNavInflater: void onAttachedToWindow()>
<android.graphics.Matrix: void setTranslate(float,float)>
<android.view.inputmethod.InputConnectionWrapper: boolean requestCursorUpdates(int)>
<com.android.systemui.power.PowerNotificationWarnings: void dismissLowBatteryWarning()>
<com.android.server.connectivity.KeepalivePacketData.InvalidPacketException: void <init>(int)>
<com.android.keyguard.KeyguardPINView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>
<android.net.Proxy: java.lang.String getDefaultHost()>
<android.widget.AbsListView: long[] getCheckedItemIds()>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.FieldID getFieldID_Input()>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>
<android.graphics.Paint: int getOffsetForAdvance(char[],int,int,int,int,boolean,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onBackPressed()>
<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDark(boolean,boolean,android.graphics.PointF)>
<com.android.hotspot2.omadm.MOTree: com.android.hotspot2.omadm.MOTree unmarshal(java.io.InputStream)>
<com.android.gallery3d.common.Utils: int nextPowerOf2(int)>
<android.os.IPowerManager: void boostScreenBrightness(long)>
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: java.util.Map getDefaultProperties()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: boolean shouldDelayChildPressedState()>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistInternal()>
<com.android.systemui.qs.QSContainer: void animateHeaderSlidingOut()>
<android.view.View: void buildLayer()>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context)>
<com.android.systemui.recents.tv.views.RecentsTvView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.KeyguardPINView: void showUsabilityHint()>
<android.util.Base64InputStream: int available()>
<com.android.server.notification.CountdownConditionProvider: void onConnected()>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeathOnFileUriExposure()>
<com.android.server.job.JobPackageTracker: void dump(java.io.PrintWriter,java.lang.String,int)>
<android.telecom.Connection: android.os.Bundle getExtras()>
<com.android.anqp.eap.NonEAPInnerAuth: java.lang.String getOMAtype()>
<android.widget.ActionMenuView.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.opengl.GLES20: void glValidateProgram(int)>
<android.webkit.WebResourceRequest: boolean hasGesture()>
<com.android.systemui.recents.views.AnimateableViewBounds: void <init>(android.view.View,int)>
<android.service.notification.StatusBarNotification: boolean isClearable()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<android.content.SharedPreferences: boolean contains(java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<com.android.server.am.BatteryStatsService: long computeBatteryTimeRemaining()>
<com.android.systemui.egg.MLand: float lerp(float,float,float)>
<android.view.Window: void setAllowEnterTransitionOverlap(boolean)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.graphics.Matrix_Delegate: void set(float[])>
<android.content.ClipData: int getItemCount()>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy build()>
<com.android.systemui.stackdivider.DividerView: int growsRecents()>
<android.content.res.BridgeTypedArray: android.content.res.Resources getResources()>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)>
<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>
<android.media.MediaDrmException: void <init>(java.lang.String)>
<android.hardware.camera2.CaptureRequest: int hashCode()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<android.renderscript.Script.LaunchOptions: int getYEnd()>
<android.graphics.drawable.RotateDrawable: float getFromDegrees()>
<com.android.server.pm.PackageManagerService: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.StackScrollerDecorView: void onFinishInflate()>
<com.android.systemui.statusbar.stack.AmbientState: java.util.ArrayList getDraggedViews()>
<android.graphics.pdf.PdfRenderer.Page: void finalize()>
<android.content.pm.Signature: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.QSTileHost: void startActivityDismissingKeyguard(android.app.PendingIntent)>
<android.widget.TextView: void setTextSize(int,float)>
<com.android.server.am.ActivityManagerService: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.telecom.Connection: void setConnectionCapabilities(int)>
<com.android.server.backup.NotificationBackupHelper: byte[] getBackupPayload(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: boolean isTagCountDefined(int)>
<android.view.inputmethod.CursorAnchorInfo: int hashCode()>
<com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider findConditionProvider(android.content.ComponentName)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: void <init>(android.content.Context,android.net.Uri,int)>
<android.widget.AlphabetIndexer: void <init>(android.database.Cursor,int,java.lang.CharSequence)>
<android.os.Parcel: void readLongArray(long[])>
<android.widget.AbsListView.SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>
<com.android.server.wm.AppWindowAnimator: void clearAnimation()>
<android.widget.ListView: void smoothScrollToPosition(int)>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isEmptyElementTag()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter hasDelays()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.systemui.recents.tv.RecentsTvImpl: void onVisibilityChanged(android.content.Context,boolean)>
<android.print.PrinterCapabilitiesInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: java.lang.CharSequence getMessage()>
<android.widget.Toolbar: int getCurrentContentInsetStart()>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
<com.android.documentsui.model.DocumentStack: int describeContents()>
<android.widget.Toolbar: void setContentInsetStartWithNavigation(int)>
<com.android.systemui.statusbar.policy.NetworkController: void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>
<android.content.IntentFilter: int countActions()>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>
<android.app.LocalActivityManager: void removeAllActivities()>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.tv.pip.PipManager.Listener: void onMoveToFullscreen()>
<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>
<android.media.SubtitleTrack.RenderingWidget: void onDetachedFromWindow()>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData.Builder setTxFilter(byte[],int)>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.server.net.NetworkStatsCollection: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>
<com.android.systemui.statusbar.policy.BluetoothController: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbDevice)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isCurrentProfile(int)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setFractionalPart(java.lang.String)>
<android.hardware.camera2.CameraCaptureSession: android.hardware.camera2.CameraDevice getDevice()>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context)>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void <init>(java.lang.String,com.android.ddmlib.IDevice)>
<android.content.Context: boolean isDeviceProtectedStorage()>
<com.android.systemui.statusbar.phone.BarTransitions: void setAlwaysOpaque(boolean)>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>
<android.os.Debug: void startAllocCounting()>
<android.provider.DocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener: void <init>(android.content.Context,com.android.printservice.recommendation.plugin.samsung.ServiceListener.Observer,java.lang.String[])>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>
<com.android.systemui.BatteryMeterDrawable: void setDarkIntensity(float)>
<android.hardware.radio.RadioManager.ModuleProperties: java.lang.String getSerial()>
<android.media.RemoteDisplay.Listener: void onDisplayConnected(android.view.Surface,int,int,int,int)>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String,java.lang.String[])>
<android.text.util.Linkify.MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>
<android.view.View: boolean dispatchNestedFling(float,float,boolean)>
<android.widget.Adapter: boolean isEmpty()>
<android.content.ContextWrapper: void setTheme(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.webkit.CookieManager: boolean acceptThirdPartyCookies(android.webkit.WebView)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.awt.image.BufferedImage,java.util.Set,com.android.resources.Density)>
<com.android.server.am.ProcessStatsService: void writeStateAsyncLocked()>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.RestrictionEntry: java.lang.String[] getChoiceEntries()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectCustomSlowCalls()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.view.View: void onDetachedFromWindow()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>
<com.android.mtp.MtpDocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.text.BidiFormatter: boolean isRtl(java.lang.String)>
<android.media.session.MediaController.TransportControls: void setRating(android.media.Rating)>
<com.android.anqp.eap.InnerAuthEAP: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getCodeCacheDir()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String eventTypeToString(int)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>
<android.view.inputmethod.EditorInfo: void makeCompatible(int)>
<com.android.server.firewall.Filter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<android.nfc.cardemulation.CardEmulation: boolean registerAidsForService(android.content.ComponentName,java.lang.String,java.util.List)>
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.app.ActivityManagerProxy: boolean testIsSystemReady()>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean customTransformTarget(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState)>
<com.android.server.am.BatteryStatsService: void noteWifiScanStarted(int)>
<android.provider.Settings.System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onClockVisibilityChanged()>
<com.android.location.provider.ActivityRecognitionProvider.Sink: void onActivityChanged(com.android.location.provider.ActivityChangedEvent)>
<com.android.server.pm.PackageManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.view.SubMenu: void clearHeader()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.layoutlib.bridge.BridgeRenderSession: boolean isAlphaChannelImage()>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: com.android.server.net.NetworkStatsService.NetworkStatsSettings.Config getDevConfig()>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>
<android.content.res.ColorStateList: void <init>(int[][],int[])>
<android.webkit.WebView: void clearView()>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>
<android.webkit.WebView: boolean canGoBack()>
<android.text.Selection: void setSelection(android.text.Spannable,int,int)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<com.android.location.provider.ActivityRecognitionProvider: boolean flush()>
<com.android.systemui.statusbar.phone.QSTileHost: void startRunnableDismissingKeyguard(java.lang.Runnable)>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>
<com.android.server.connectivity.NetworkDiagnostics.Measurement: java.lang.String toString()>
<com.android.server.firewall.IntentFirewall: boolean checkBroadcast(android.content.Intent,int,int,java.lang.String,int)>
<com.android.server.net.NetworkStatsCollection: void recordData(com.android.server.net.NetworkIdentitySet,int,int,int,long,long,android.net.NetworkStats.Entry)>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>
<android.widget.ImageSwitcher: java.lang.CharSequence getAccessibilityClassName()>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>
<com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent: void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.RecentsViewTouchHandler)>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>
<android.app.NativeActivity: void onStart()>
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>
<com.android.shell.BugreportStorageProvider: android.net.Uri getNotificationUri()>
<android.net.LocalServerSocket: void <init>(java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector classNameMatches(java.lang.String)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats querySummary(int,java.lang.String,long,long)>
<com.android.systemui.RecentsComponent: void showRecents(boolean,boolean)>
<android.telecom.Connection: void removeExtras(java.util.List)>
<com.android.systemui.analytics.DataCollector: void onNotificationDismissed()>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
<com.android.systemui.statusbar.phone.BarTransitions: int getMode()>
<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<android.media.PlaybackParams: android.media.PlaybackParams setAudioFallbackMode(int)>
<android.widget.OverScroller: void abortAnimation()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHBMV(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void setVisible(boolean)>
<com.android.layoutlib.bridge.util.DynamicIdMap: void <init>(int)>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: android.media.AudioFormat getCaptureAudioFormat()>
<com.android.gallery3d.glrenderer.RawTexture: int getTarget()>
<android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
<com.android.server.backup.ShortcutBackupHelper: void <init>()>
<android.telecom.Phone.Listener: void onCallAudioStateChanged(android.telecom.Phone,android.telecom.CallAudioState)>
<android.media.session.MediaSession: void release()>
<android.telecom.GatewayInfo: java.lang.String getGatewayProviderPackageName()>
<android.content.CursorLoader: java.lang.String getSortOrder()>
<android.widget.ExpandableListAdapter: boolean areAllItemsEnabled()>
<android.util.Rational: java.lang.String toString()>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setCarMode(boolean)>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>
<android.app.ActionBar.LayoutParams: void <init>(int,int,int)>
<android.hardware.display.VirtualDisplay: void resize(int,int,int)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: boolean isValid()>
<android.os.BatteryStats.Uid: long getMobileRadioApWakeupCount(int)>
<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLevelChange(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledPackages(int)>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>
<com.android.media.remotedisplay.RemoteDisplay: int getPresentationDisplayId()>
<android.media.Rating: void writeToParcel(android.os.Parcel,int)>
<android.media.session.PlaybackState.CustomAction.Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>
<android.webkit.WebView: boolean zoomIn()>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.widget.AutoCompleteTextView: int getListSelection()>
<android.renderscript.Matrix4f: void scale(float,float,float)>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSErrorHandler getErrorHandler()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void removeServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>
<android.widget.Editor.SuggestionsPopupWindow: int getVerticalLocalPosition(int)>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>
<com.android.egg.neko.Cat: void tint(int,android.graphics.drawable.Drawable[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<android.telecom.PhoneAccount: java.util.List getSupportedUriSchemes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDeviceProvisioningConfigApplied()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: android.view.View getMirror()>
<com.android.hotspot2.asn1.Asn1Integer: long getValue()>
<android.widget.MediaController: void <init>(android.content.Context)>
<com.android.server.notification.SystemConditionProviderService: android.service.notification.IConditionProvider asInterface()>
<com.android.server.twilight.TwilightState: boolean equals(com.android.server.twilight.TwilightState)>
<android.content.pm.ShortcutManager: void reportShortcutUsed(java.lang.String)>
<com.android.systemui.qs.external.CustomTile: void handleDestroy()>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getSharedPreferencesPath(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>
<android.hardware.hdmi.HdmiTvClient.InputChangeListener: void onChanged(android.hardware.hdmi.HdmiDeviceInfo)>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStopped(java.lang.String)>
<android.app.usage.NetworkStatsManager: void registerUsageCallback(int,java.lang.String,long,android.app.usage.NetworkStatsManager.UsageCallback)>
<android.util.SparseLongArray: void append(int,long)>
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager getParentProfileInstance(android.content.ComponentName)>
<android.telecom.RemoteConnection.Callback: void onExtrasChanged(android.telecom.RemoteConnection,android.os.Bundle)>
<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>
<android.net.WebAddress: void <init>(java.lang.String)>
<com.android.systemui.qs.tiles.WifiTile: boolean shouldAnnouncementBeDelayed()>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
<android.graphics.Region: boolean quickContains(int,int,int,int)>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])>
<android.app.ActivityManager: boolean isRunningInTestHarness()>
<android.view.WindowInsets: int getStableInsetBottom()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerMessage(java.lang.String,int)>
<android.media.MediaDrm: android.media.MediaDrm.ProvisionRequest getProvisionRequest()>
<android.security.KeyStoreParameter.Builder: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void updatePreviews()>
<android.location.GnssStatus: float getAzimuthDegrees(int)>
<android.util.JsonReader: int nextInt()>
<com.android.server.am.ActivityManagerService: void setVrThread(int)>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController.ChargingTracker getTracker()>
<com.android.settingslib.drawer.Tile: void readFromParcel(android.os.Parcel)>
<android.hardware.Camera: void unlock()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onDisplayStateChange(int)>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>
<android.location.Location: void setSpeed(float)>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(short[],int)>
<android.view.KeyCharacterMap: int get(int,int)>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow()>
<android.hardware.camera2.CameraCaptureSession: void close()>
<com.android.hotspot2.asn1.DecodeException: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String detailedOptions()>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback)>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>
<android.animation.ValueAnimator: void setStartDelay(long)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>
<com.android.preload.classdataretrieval.ClassDataRetriever: java.util.Map getClassData(com.android.ddmlib.Client)>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<android.view.MotionEvent: float getToolMajor()>
<android.app.backup.BackupAgent: void onQuotaExceeded(long,long)>
<com.android.server.TextServicesManagerService: void setSpellCheckerEnabled(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void setHeadsUpUser(int)>
<com.android.settingslib.bluetooth.MapProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String,int)>
<com.android.layoutlib.bridge.MockView: void addView(android.view.View,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getClearAllHeight()>
<com.android.systemui.qs.QSPanel.QSTileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<com.android.systemui.BatteryMeterDrawable: void disableShowPercent()>
<android.widget.ViewAnimator: boolean getAnimateFirstView()>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void acquireSuspendBlocker()>
<android.service.wallpaper.WallpaperService.Engine: void setOffsetNotificationsEnabled(boolean)>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: int adjustSystemUiVisibilityLw(int)>
<android.view.KeyboardShortcutInfo: void <init>(java.lang.CharSequence,char,int)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String formatKernelVersion(java.lang.String)>
<android.telecom.RemoteConference.Callback: void onConnectionAdded(android.telecom.RemoteConference,android.telecom.RemoteConnection)>
<android.app.ActivityManager.TaskDescription: int describeContents()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void scanForAccessPoints()>
<com.android.gallery3d.exif.ExifTag: int getElementSize(short)>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>
<com.android.settingslib.wifi.AccessPoint: boolean isConnectable()>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(int,int)>
<android.nfc.FormatException: void <init>(java.lang.String,java.lang.Throwable)>
<android.util.ArraySet: int indexOf(java.lang.Object)>
<android.view.BridgeInflater: void postInflateProcess(android.view.View)>
<android.os.Debug.InstructionCount: void <init>()>
<com.android.systemui.volume.SegmentedButtons: android.widget.Button inflateButton()>
<android.gesture.GestureLibrary: boolean save()>
<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)>
<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.Stream: android.security.keymaster.OperationResult update(byte[])>
<android.nfc.FormatException: void <init>(java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: boolean equals(java.lang.Object)>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>
<android.media.tv.TvView: java.util.List getTracks(int)>
<android.graphics.PathDashPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.documentsui.FilesActivityPerfTest: java.lang.String getTestingProviderAuthority()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateDimmed()>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.app.Activity: void dismissKeyboardShortcutsHelper()>
<android.media.tv.TvInputManager.TvInputCallback: void onTvInputInfoUpdated(android.media.tv.TvInputInfo)>
<com.android.systemui.statusbar.phone.NavigationBarView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.content.ClipDescription: void setExtras(android.os.PersistableBundle)>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void stealFocusFrom(com.android.systemui.statusbar.policy.RemoteInputView)>
<com.android.server.LocationManagerService: int resolutionLevelToOp(int)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setNumber(java.lang.String)>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>
<com.android.systemui.statusbar.BaseStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<android.media.midi.MidiDevice.MidiConnection: void close()>
<android.graphics.Rect: float exactCenterX()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getTitle(android.content.res.Resources)>
<android.app.Notification.WearableExtender: java.util.List getPages()>
<android.widget.RemoteViews: java.lang.String getPackage()>
<com.android.server.trust.TrustArchive: void logAgentStopped(int,android.content.ComponentName)>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>
<com.android.hotspot2.omadm.NodeAttribute: java.lang.String getName()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void process(android.filterfw.core.FilterContext)>
<com.android.systemui.qs.QSTile.Callback: void onShowDetail(boolean)>
<android.filterpacks.imageproc.TintFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>
<com.android.systemui.classifier.SpeedClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.midi.MidiReceiver: void send(byte[],int,int)>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isInteractive()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<android.mtp.MtpObjectInfo: int getThumbPixHeight()>
<android.hardware.camera2.marshal.Marshaler: int getNativeSize()>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>
<android.media.tv.TvView.TvInputCallback: void onContentBlocked(java.lang.String,android.media.tv.TvContentRating)>
<android.os.BatteryStats.Uid.Wakelock: android.os.BatteryStats.Timer getWakeTime(int)>
<android.net.http.SslCertificate.DName: void <init>(java.lang.String)>
<android.drm.DrmInfoRequest: java.util.Iterator iterator()>
<android.hardware.radio.RadioTuner.Callback: void onAntennaState(boolean)>
<android.graphics.PorterDuffColorFilter_Delegate: boolean isSupported()>
<android.provider.ContactsContract.PinnedPositions: void pin(android.content.ContentResolver,long,int)>
<android.util.BridgeXmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int add(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<android.view.inputmethod.BaseInputConnection: boolean requestCursorUpdates(int)>
<com.android.systemui.stackdivider.DividerView: void setAdjustedForIme(boolean,long)>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: android.content.Context getContext()>
<com.android.systemui.volume.ZenFooter: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportFailedFingerprintAttempt(int)>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<android.view.OrientationListener: void onSensorChanged(int,float[])>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void addQsTile(android.content.ComponentName)>
<com.android.documentsui.BaseActivity: void notifyDirectoryLoaded(android.net.Uri)>
<android.media.tv.TvInputInfo.Builder: android.media.tv.TvInputInfo.Builder setTunerCount(int)>
<android.app.Notification: java.lang.String getSortKey()>
<android.inputmethodservice.Keyboard: int getKeyHeight()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.QSFooter: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<android.widget.ZoomButton: boolean onLongClick(android.view.View)>
<android.database.CursorWrapper: void setExtras(android.os.Bundle)>
<com.android.systemui.assist.AssistOrbView: void onDraw(android.graphics.Canvas)>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.view.Display.Mode: boolean equals(java.lang.Object)>
<android.transition.Visibility: java.lang.String[] getTransitionProperties()>
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: java.lang.String getDefaultUrl()>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,float[],int)>
<android.opengl.GLES20: void glPolygonOffset(float,float)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean loadInBackground()>
<android.app.Activity: boolean isChangingConfigurations()>
<com.android.systemui.statusbar.car.CarBatteryController: void stopListening()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataEnabled(boolean)>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.animation.StateListAnimator: void <init>()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setNotificationParent(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.widget.Switch: android.graphics.PorterDuff.Mode getThumbTintMode()>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>
<com.android.systemui.statusbar.phone.SettingsButton: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>
<android.view.View: void setBackgroundColor(int)>
<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.server.pm.PackageManagerService: int getPrivateFlagsForUid(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexiOES(int,int,int,int,int)>
<android.graphics.Paint_Delegate: android.graphics.Shader_Delegate getShader()>
<android.app.admin.DevicePolicyManager: boolean setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.ZenModeController getZenModeController()>
<android.content.pm.PackageParser.Service: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ServiceInfo)>
<com.android.server.wallpaper.WallpaperManagerService: boolean isSetWallpaperAllowed(java.lang.String)>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
<android.service.voice.VoiceInteractionSession.CommandRequest: void sendResult(android.os.Bundle)>
<com.android.systemui.statusbar.ActivatableNotificationView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getHeaderTranslation()>
<android.content.ContextWrapper: java.lang.String getSystemServiceName(java.lang.Class)>
<android.content.ContentValues: java.lang.String toString()>
<com.android.documentsui.LocalPreferences: void setShowDeviceRoot(android.content.Context,int,boolean)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector text(java.lang.String)>
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>
<android.telecom.ConnectionService: void onConference(android.telecom.Connection,android.telecom.Connection)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetAllocation(android.renderscript.Allocation,android.renderscript.Mesh.Primitive)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserInfoChanged(int)>
<android.graphics.Paint: void setFlags(int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.os.BinderProxy: boolean pingBinder()>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.server.Watchdog: void processStarted(java.lang.String,int)>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void setContentHeight(int,int)>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>
<android.renderscript.ScriptIntrinsicBLAS: void SSYMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getTaskRect()>
<com.android.systemui.classifier.HumanInteractionClassifier: java.lang.String getTag()>
<android.view.View: int getPaddingRight()>
<com.android.server.net.NetworkStatsRecorder.RemoveUidRewriter: void write(java.io.OutputStream)>
<android.database.Cursor: boolean isFirst()>
<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onSoundModelUpdate(android.hardware.soundtrigger.SoundTrigger.SoundModelEvent)>
<android.widget.GridView: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: void releasePersistableUriPermission(android.net.Uri,int,int)>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glRenderbufferStorageOES(int,int,int,int)>
<android.inputmethodservice.KeyboardView: void swipeLeft()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setTitle(java.lang.CharSequence)>
<android.content.res.BridgeTypedArray: void setTheme(android.content.res.Resources.Theme)>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy getThreadPolicy()>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>
<com.android.layoutlib.bridge.util.DynamicIdMap: java.lang.Integer getId(com.android.resources.ResourceType,java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int)>
<android.graphics.drawable.Drawable: boolean setLevel(int)>
<com.android.systemui.tuner.TunerService: void start()>
<android.view.IWindowManagerImpl: void setTvPipVisibility(boolean)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<android.app.ActionBar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>
<android.app.backup.BackupAgent: void onCreate()>
<com.android.settingslib.drawer.ProfileSelectDialog: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.midi.MidiInputPort: void close()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startKeyguard()>
<android.animation.LayoutTransition: long getStartDelay(int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])>
<com.android.printspooler.widget.CustomErrorEditText: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onCreate(android.os.Bundle)>
<com.android.anqp.eap.EAPMethod: java.lang.String toString()>
<com.android.server.TextServicesManagerService: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>
<android.widget.CalendarView: void setDate(long,boolean,boolean)>
<android.location.GnssMeasurement: double getCarrierPhase()>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent)>
<android.nfc.cardemulation.CardEmulation: android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)>
<android.widget.CompoundButton: java.lang.CharSequence getAccessibilityClassName()>
<com.google.android.gles_jni.EGLDisplayImpl: void <init>(long)>
<com.android.server.am.DumpHeapProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleased(int)>
<android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback: void onComplete(int)>
<com.android.systemui.statusbar.SystemBars: long onServiceStartAttempt()>
<com.android.systemui.classifier.SpeedAnglesClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>
<com.android.systemui.qs.external.TileServices: void setMemoryPressure(boolean)>
<com.android.settingslib.wifi.AccessPoint: void clearConfig()>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createUnEnrollIntent()>
<android.graphics.drawable.StateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(int,int,int,int)>
<android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,java.nio.IntBuffer)>
<com.android.server.power.PowerManagerService: void lowLevelReboot(java.lang.String)>
<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService.Result)>
<android.database.CursorWrapper: void deactivate()>
<com.android.uiautomator.core.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>
<android.view.View: void cancelPendingInputEvents()>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>
<android.content.ClipDescription: void <init>(java.lang.CharSequence,java.lang.String[])>
<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>
<android.location.Address: void setUrl(java.lang.String)>
<android.graphics.Rect: boolean isEmpty()>
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)>
<android.telephony.CellSignalStrengthWcdma: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,int[],int)>
<com.android.server.display.WifiDisplayController.Listener: void onScanStarted()>
<android.graphics.Point: java.lang.String toString()>
<android.speech.tts.Voice: java.lang.String toString()>
<android.service.dreams.DreamService: void wakeUp()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<android.transition.Transition: android.transition.Transition removeTarget(android.view.View)>
<android.view.FrameStats: int getFrameCount()>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: java.lang.String toString()>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.app.Dialog: boolean onSearchRequested()>
<android.net.wifi.WifiEnterpriseConfig: void setIdentity(java.lang.String)>
<android.telecom.Conference: void onConnectionAdded(android.telecom.Connection)>
<com.android.systemui.volume.VolumeDialogController: void userActivity()>
<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.settingslib.Utils: java.lang.String formatPercentage(long,long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enableSystemApp(android.content.ComponentName,java.lang.String)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.tools.layoutlib.create.ICreateInfo: java.util.Map getInjectedMethodsMap()>
<com.android.anqp.HSIconFileElement: java.lang.String toString()>
<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>
<android.database.Cursor: boolean isBeforeFirst()>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<android.widget.AbsListView: void setTranscriptMode(int)>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>
<com.android.systemui.tv.pip.PipControlsView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void handleVisibleToUserChanged(boolean)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplaySessionInfo(android.hardware.display.WifiDisplaySessionInfo)>
<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)>
<com.android.systemui.statusbar.BaseStatusBar: void animateCollapsePanels(int,boolean)>
<android.os.BatteryStats.ControllerActivityCounter: android.os.BatteryStats.LongCounter getRxTimeCounter()>
<com.android.documentsui.UriDerivativeLoader: void cancelLoadInBackground()>
<android.app.Fragment: void onDestroyView()>
<android.content.ContextWrapper: java.io.File getSharedPreferencesPath(java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void clickTile(android.content.ComponentName)>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>
<com.android.server.job.controllers.StateController: void rescheduleForFailure(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<android.net.wifi.nan.TlvBufferUtils.TlvElement: short getShort()>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>
<android.widget.Editor.HandleView: boolean isShowing()>
<com.android.printspooler.ui.PageAdapter: void update(android.print.PageRange[],android.print.PageRange[],int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<android.widget.TableLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionMatches(java.lang.String)>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent: void <init>(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction)>
<com.android.systemui.statusbar.ExpandableNotificationRow: float getTranslation()>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void goToSleep(long,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean panelEnabled()>
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>
<android.text.format.Time: boolean parse3339(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo)>
<android.util.LruCache: void <init>(int)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>
<android.speech.tts.Voice: int getQuality()>
<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.android.systemui.statusbar.phone.PanelBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.BatteryMeterDrawable: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setUnreadConversation(android.app.Notification.CarExtender.UnreadConversation)>
<android.database.AbstractCursor: java.lang.String getString(int)>
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>
<android.widget.TextView: boolean onPreDraw()>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.view.WindowManagerPolicy.WindowState: int getSystemUiVisibility()>
<android.nfc.tech.NfcF: int getMaxTransceiveLength()>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>
<com.android.systemui.statusbar.stack.AmbientState: void setDismissAllInProgress(boolean)>
<android.widget.TextClock: void <init>(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glTexGenf(int,int,float)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>
<android.content.Context: android.graphics.drawable.Drawable getWallpaper()>
<android.hardware.Camera.Parameters: int getMinExposureCompensation()>
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.layoutlib.bridge.impl.RenderDrawable: java.awt.image.BufferedImage getImage(int,int)>
<android.os.Parcel: double[] createDoubleArray()>
<android.nfc.tech.TagTechnology: android.nfc.Tag getTag()>
<android.telecom.RemoteConference: void hold()>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<android.util.ArraySet: boolean removeAll(android.util.ArraySet)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnError(int)>
<android.renderscript.Program.BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,java.lang.String)>
<com.android.documentsui.dirlist.IconHelper: void <init>(android.content.Context,int)>
<android.media.MediaPlayer.TrackInfo: java.lang.String toString()>
<android.view.InputDevice: java.lang.String getDescriptor()>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>
<com.android.commands.dpm.Dpm: void onRun()>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>
<com.android.egg.neko.Food: void <init>(int)>
<android.graphics.NinePatch: void finalize()>
<android.widget.GridLayout: void onViewAdded(android.view.View)>
<com.android.systemui.classifier.DurationCountClassifier: java.lang.String getTag()>
<android.hardware.Camera.Parameters: java.lang.String getColorEffect()>
<com.android.systemui.ExpandHelper.Callback: void setUserLockedChild(android.view.View,boolean)>
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()>
<android.view.ViewTreeObserver: void removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onContextClick(android.view.MotionEvent)>
<android.webkit.WebView: void clearMatches()>
<android.widget.QuickContactBadge: void <init>(android.content.Context)>
<android.text.LineWidth: void <init>(float,int,float)>
<android.net.LinkAddress: int describeContents()>
<android.accessibilityservice.AccessibilityService.GestureResultCallback: void onCancelled(android.accessibilityservice.GestureDescription)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean canChildBeDismissed(android.view.View)>
<android.net.LocalSocket: void <init>()>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<com.android.anqp.eap.VendorSpecificAuth: java.lang.String toString()>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig.Builder setEa(boolean)>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>
<android.database.CursorWrapper: boolean moveToPrevious()>
<com.android.hotspot2.osu.service.RedirectListener: boolean waitForUser()>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>
<android.media.session.MediaController.PlaybackInfo: int getPlaybackType()>
<android.widget.AbsListView: void setSelector(int)>
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()>
<com.android.settingslib.RestrictedLockImageSpan: void <init>(android.content.Context)>
<com.android.hotspot2.pps.Credential: long getCtime()>
<android.app.assist.AssistStructure.ViewNode: int getScrollY()>
<com.android.hotspot2.omadm.OMANode: java.lang.String getName()>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>
<com.android.systemui.doze.DozeService: void onAttachedToWindow()>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>
<com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute: void <init>(int,com.android.nfc_extras.NfcExecutionEnvironment)>
<android.database.Cursor: int getColumnCount()>
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean isActiveTile()>
<com.android.server.media.MediaRouterService: void systemRunning()>
<com.android.systemui.qs.QSTile: void setDetailListening(boolean)>
<com.android.systemui.statusbar.car.CarBatteryController: void addStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<android.view.InputEvent: long getEventTime()>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>
<com.android.statementservice.DirectStatementService: android.os.IBinder onBind(android.content.Intent)>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>
<android.preference.TwoStatePreference: boolean isChecked()>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>
<android.opengl.GLES10: void glMaterialf(int,int,float)>
<com.android.systemui.statusbar.phone.NavigationBarView: void reorient()>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest,boolean)>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>
<android.media.MediaCodecInfo.VideoCapabilities: boolean isSizeSupported(int,int)>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>
<android.gesture.GestureOverlayView: int getGestureColor()>
<android.content.Intent: boolean hasFileDescriptors()>
<org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
<android.util.LongSparseArray: void removeAt(int)>
<com.android.uiautomator.core.UiScrollable: int getMaxSearchSwipes()>
<android.net.wifi.WifiScanner.ScanData: void <init>(android.net.wifi.WifiScanner.ScanData)>
<android.net.NetworkScorerAppManager.NetworkScorerAppData: java.lang.String toString()>
<android.content.pm.Signature: java.lang.String toCharsString()>
<android.widget.Toolbar: void setContentInsetsAbsolute(int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>
<android.view.View: boolean isHorizontalScrollBarEnabled()>
<com.android.systemui.assist.AssistOrbView: void onLayout(boolean,int,int,int,int)>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: void onDoubleTapAndHold(android.view.MotionEvent,int)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onEnterAnimationComplete()>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>
<android.media.MediaCodec: void signalEndOfInputStream()>
<android.view.accessibility.AccessibilityNodeInfo: void recycle()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isHtml()>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.media.MediaSessionService: void onSwitchUser(int)>
<android.security.net.config.XmlConfigSource.ParserException: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<com.android.preload.Main: com.android.preload.classdataretrieval.ClassDataRetriever getClassDataRetriever()>
<com.android.server.am.ActivityManagerService: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getOrCreateCompilerPackageStats(android.content.pm.PackageParser.Package)>
<javax.microedition.khronos.egl.EGL10: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeName(int)>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>
<android.hardware.Camera.Parameters: float getExposureCompensationStep()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
<android.media.midi.MidiDeviceInfo: int getInputPortCount()>
<com.android.systemui.qs.tiles.UserTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.graphics.Path_Delegate: void rQuadTo(float,float,float,float)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()>
<com.android.systemui.recents.model.Task.TaskKey: boolean equals(java.lang.Object)>
<android.database.CursorWindow: boolean isLong(int,int)>
<android.app.DialogFragment: boolean getShowsDialog()>
<android.telecom.PhoneAccountHandle: int hashCode()>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getBluetoothState()>
<com.android.keyguard.KeyguardStatusView: boolean hasOverlappingRendering()>
<android.view.ViewGroupOverlay: void add(android.view.View)>
<android.widget.Chronometer: void stop()>
<com.android.systemui.classifier.GestureClassifier: float getFalseTouchEvaluation(int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawCircle(float,float,float,android.graphics.Paint)>
<com.android.server.pm.PackageManagerService: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>
<android.media.audiofx.AudioEffect.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Service: void onRebind(android.content.Intent)>
<android.database.CursorWrapper: boolean isClosed()>
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>
<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
<com.android.gallery3d.glrenderer.UploadedTexture: void onFreeBitmap(android.graphics.Bitmap)>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>
<com.android.server.notification.EventConditionProvider: void onSubscribe(android.net.Uri)>
<android.service.dreams.DreamService: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void getPackageSizeInfoAsUser(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<com.android.systemui.qs.QSPanel: void drawTile(com.android.systemui.qs.QSPanel.TileRecord,com.android.systemui.qs.QSTile.State)>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: float getAttributeFloatValue(int,float)>
<android.os.StatFs: void restat(java.lang.String)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getRenamedClasses()>
<com.android.systemui.classifier.Point: float getAngle(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<com.android.systemui.qs.QSDetail: void onConfigurationChanged(android.content.res.Configuration)>
<android.preference.Preference: void onBindView(android.view.View)>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<com.android.systemui.statusbar.car.CarNavigationButton: void setSelected(boolean,boolean)>
<android.print.pdf.PrintedPdfDocument: int getPageHeight()>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.app.Notification.BigTextStyle: void <init>(android.app.Notification.Builder)>
<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>
<com.android.systemui.analytics.SensorLoggerSession: long getStartTimestampMillis()>
<android.util.AtomicFile: java.io.FileInputStream openRead()>
<com.android.systemui.qs.QSDualTileLabel: void setTypeface(android.graphics.Typeface)>
<android.media.browse.MediaBrowser: android.os.Bundle getExtras()>
<com.android.server.pm.PackageManagerService: void clearApplicationProfileData(java.lang.String)>
<android.media.UnsupportedSchemeException: void <init>(java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: java.lang.String toString()>
<android.graphics.drawable.GradientDrawable: float getGradientCenterX()>
<android.webkit.WebView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryUpdated(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.StatusBarNotification)>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.CaptureRequest.Builder createReprocessCaptureRequest(android.hardware.camera2.TotalCaptureResult)>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>
<android.renderscript.AllocationAdapter: void setLOD(int)>
<android.app.ActivityManagerProxy: boolean isAssistDataAllowedOnCurrentActivity()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setForceEphemeralUsers(android.content.ComponentName,boolean)>
<android.media.AudioTrack: int getPlaybackRate()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void abortCaptures()>
<android.content.res.Resources: int getColor(int)>
<android.hardware.SensorManager: float getAltitude(float,float)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void <init>(android.content.Context)>
<android.view.Display.Mode: int getPhysicalHeight()>
<android.widget.TextView: int getInputType()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onReset(com.android.systemui.statusbar.ExpandableView)>
<android.view.View: int getSuggestedMinimumWidth()>
<android.content.pm.ShortcutInfo: boolean isEnabled()>
<com.android.systemui.recents.views.AnimationProps: com.android.systemui.recents.views.AnimationProps setDuration(int,int)>
<com.android.server.am.BatteryStatsService: void noteVibratorOn(int,long)>
<android.preference.Preference: int getPersistedInt(int)>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>
<com.android.systemui.qs.QSContainer: void onFinishInflate()>
<com.android.gallery3d.glrenderer.UploadedTexture: void recycle()>
<com.android.server.statusbar.StatusBarManagerInternal: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>
<android.hardware.Camera.PreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)>
<com.android.server.VibratorService: void onInputDeviceChanged(int)>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>
<android.renderscript.Allocation: void copyFromUnchecked(byte[])>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>
<android.widget.PopupWindow: void setSoftInputMode(int)>
<com.android.server.notification.ManagedServices: android.util.ArraySet loadComponentNamesFromSetting(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: boolean glIsEnabled(int)>
<android.widget.TextView: void drawableHotspotChanged(float,float)>
<com.android.server.backup.BackupManagerService: void fullRestore(android.os.ParcelFileDescriptor)>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult.Key,java.lang.Object)>
<com.android.server.am.ActivityManagerService: void backgroundResourcesReleased(android.os.IBinder)>
<com.android.server.soundtrigger.SoundTriggerInternal: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<android.text.style.AbsoluteSizeSpan: int getSize()>
<com.android.systemui.qs.external.TileServiceManager: void setLastUpdate(long)>
<android.graphics.PorterDuffColorFilter_Delegate: java.lang.String getSupportMessage()>
<android.util.SparseArray: java.lang.Object get(int)>
<com.android.hotspot2.omadm.XMLNode: com.android.hotspot2.omadm.XMLNode getParent()>
<android.hardware.Camera.Parameters: java.lang.String getAntibanding()>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,int[],int)>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy: void <init>(com.android.systemui.shortcut.ShortcutKeyServiceProxy.Callbacks)>
<android.nfc.NdefMessage: byte[] toByteArray()>
<com.android.systemui.volume.VolumeDialog: void onTuningChanged(java.lang.String,java.lang.String)>
<android.app.admin.DevicePolicyManager: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,float[],int)>
<android.util.EventLogTags: void <init>(java.io.BufferedReader)>
<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.view.View: boolean isActivated()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>
<com.android.systemui.recents.model.Task: void notifyTaskDataUnloaded(android.graphics.Bitmap,android.graphics.drawable.Drawable)>
<com.android.documentsui.dirlist.MultiSelectManager: void toggleSelection(java.lang.String)>
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>
<com.android.gallery3d.common.Utils: long clamp(long,long,long)>
<android.hardware.camera2.CaptureRequest.Key: boolean equals(java.lang.Object)>
<android.view.ViewStructure: int getTextSelectionEnd()>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int)>
<com.android.location.provider.ProviderPropertiesUnbundled: java.lang.String toString()>
<android.database.Cursor: double getDouble(int)>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Region: boolean equals(java.lang.Object)>
<android.graphics.Typeface: boolean isBold()>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLanguageTag()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivity(android.content.Intent,boolean)>
<android.service.quicksettings.TileService: void onDestroy()>
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.NotificationGuts: void onFinishInflate()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
<com.android.printspooler.ui.PrintActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.nfc.cardemulation.HostNfcFService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.pm.PackageManagerService: void restoreDefaultApps(byte[],int)>
<android.hardware.camera2.params.MeteringRectangle: int hashCode()>
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>
<android.ddm.DdmHandleNativeHeap: void disconnected()>
<android.media.MediaRouter.UserRouteInfo: void setDescription(java.lang.CharSequence)>
<com.android.server.updates.CertPinInstallReceiver: void <init>()>
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<android.hardware.usb.UsbRequest: void <init>()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addSearchDomain(java.lang.String)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setDescription(java.lang.CharSequence)>
<android.bluetooth.le.AdvertiseSettings: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>
<android.app.Activity: void onProvideAssistContent(android.app.assist.AssistContent)>
<android.media.session.PlaybackState.CustomAction: java.lang.CharSequence getName()>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: boolean equals(java.lang.Object)>
<android.renderscript.ProgramFragment.Builder: void <init>(android.renderscript.RenderScript)>
<android.webkit.WebIconDatabase: void removeAllIcons()>
<com.android.systemui.statusbar.notification.ActionListTransformState: com.android.systemui.statusbar.notification.ActionListTransformState obtain()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<com.android.server.notification.ScheduleConditionProvider: void <init>()>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(float)>
<com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>
<android.webkit.WebView: boolean onDragEvent(android.view.DragEvent)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDXor()>
<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>
<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>
<android.app.FragmentManagerImpl: boolean isDestroyed()>
<com.android.server.ConsumerIrService: boolean hasIrEmitter()>
<com.android.settingslib.net.UidDetailProvider: void clearCache()>
<android.os.RemoteException: void <init>()>
<android.telephony.ServiceState: int hashCode()>
<android.app.Activity: void onResume()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFormats()>
<android.animation.AnimatorListenerAdapter: void onAnimationResume(android.animation.Animator)>
<android.content.pm.PackageInfo: void <init>()>
<android.view.View: void setScrollIndicators(int)>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package)>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<android.widget.TextView: void setLineSpacing(float,float)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean onBackPressed()>
<android.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
<android.database.CursorWindow: boolean isString(int,int)>
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result getViewParent(java.lang.Object)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>
<com.android.server.pm.UserManagerService: boolean isDemoUser(int)>
<com.android.location.provider.LocationProviderBase: void onEnable()>
<android.app.VoiceInteractor.Request: android.app.Activity getActivity()>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void <init>(android.util.DisplayMetrics)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postAnimateOpenPanels()>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.BaseStatusBar: void setInteracting(int,boolean)>
<com.android.server.pm.PermissionsState: boolean updatePermissionFlagsForAllPermissions(int,int,int)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToString(long,int)>
<android.view.Window: void setStatusBarColor(int)>
<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: com.android.systemui.statusbar.ExpandableNotificationRow getGroupSummary(android.service.notification.StatusBarNotification)>
<android.widget.TextView: void setEnabled(boolean)>
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.res.Resources: void finishPreloading()>
<android.view.ActionProvider: boolean hasSubMenu()>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>
<android.transition.Transition: java.lang.String[] getTransitionProperties()>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy.Builder setLooper(android.os.Looper)>
<android.view.Window.Callback: void onActionModeStarted(android.view.ActionMode)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToOctalString(long)>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCameraCapabilitiesChanged(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile.CameraCapabilities)>
<com.android.systemui.statusbar.phone.StatusBarIconList: int size()>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>
<android.widget.CursorAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>
<android.widget.AbsListView: android.widget.AbsListView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.TextView: void setIncludeFontPadding(boolean)>
<com.android.systemui.recents.misc.Utilities: float computeContrastBetweenColors(int,int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,java.lang.String[],java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>
<com.android.systemui.recents.model.TaskStack: int getFreeformTaskCount()>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>
<android.opengl.GLES32: void glGetTexParameterIiv(int,int,int[],int)>
<com.android.tools.layoutlib.create.FieldInjectorAdapter: void <init>(org.objectweb.asm.ClassVisitor)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: int getName()>
<com.android.server.input.InputManagerService: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void notificationLightPulse(int,int,int)>
<com.android.server.media.MediaSessionService: void onStopUser(int)>
<com.android.systemui.stackdivider.WindowManagerProxy: com.android.systemui.stackdivider.WindowManagerProxy getInstance()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerNames(java.lang.String[])>
<com.android.server.backup.PermissionBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<com.android.server.audio.AudioService.VolumeController: void postDismiss()>
<com.android.settingslib.drawable.UserIconDrawable: void invalidateSelf()>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getInputMethodList()>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getPositionDescription()>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onActivityDrawn()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setEmailArguments(java.lang.String,java.lang.String)>
<com.android.systemui.tuner.TunerService: boolean isTunerEnabled(android.content.Context)>
<com.android.systemui.stackdivider.DividerView: void resizeStackDelayed(int,int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<com.android.server.policy.LogDecelerateInterpolator: float getInterpolation(float)>
<android.widget.TextView: void setTextScaleX(float)>
<android.os.ConditionVariable: void <init>(boolean)>
<android.hardware.Camera.Parameters: void set(java.lang.String,java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo: void <init>(android.os.Messenger,com.android.internal.util.AsyncChannel,android.net.Network,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.content.Context,android.os.Handler,android.net.NetworkMisc,android.net.NetworkRequest,com.android.server.ConnectivityService)>
<android.widget.CalendarView: void setShownWeekCount(int)>
<android.app.IActivityManager.ContentProviderHolder: int describeContents()>
<com.android.hotspot2.osu.commands.GetCertData: java.lang.String getUserName()>
<android.renderscript.ScriptIntrinsicBLAS: void CTRMM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.AppOpsService: void resetAllModes(int,java.lang.String)>
<com.android.hotspot2.osu.OSUManager: boolean isOSU(java.lang.String)>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>
<com.android.server.backup.PermissionBackupHelper: byte[] getBackupPayload(java.lang.String)>
<com.android.server.pm.PackageInstallerSession: void removeSplit(java.lang.String)>
<com.android.server.input.InputManagerService: int onShellCommand(com.android.server.input.InputManagerService.Shell,java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.os.BaseBundle: java.util.Set keySet()>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageHeight()>
<com.android.systemui.qs.QSTile: void refreshState()>
<android.widget.Scroller: void setFriction(float)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setAirplaneMode(boolean)>
<com.android.printservice.recommendation.util.DiscoveryListenerMultiplexer: void addListener(android.net.nsd.NsdManager,java.lang.String,android.net.nsd.NsdManager.DiscoveryListener)>
<com.android.tools.layoutlib.create.DelegateClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int)>
<android.app.Activity: void finish()>
<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>
<android.filterpacks.imageproc.PosterizeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.webkit.WebView.VisualStateCallback: void onComplete(long)>
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.server.am.AppTimeTracker: void dump(java.io.PrintWriter,java.lang.String,boolean)>
<com.android.systemui.SystemUIFactory: com.android.systemui.assist.AssistManager createAssistManager(com.android.systemui.statusbar.BaseStatusBar,android.content.Context)>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>
<android.view.View: void requestFitSystemWindows()>
<android.widget.PopupWindow: void setExitTransition(android.transition.Transition)>
<android.os.storage.StorageVolume: int describeContents()>
<android.net.RouteInfo: java.lang.String getInterface()>
<com.android.settingslib.bluetooth.PanProfile: int getOrdinal()>
<com.android.systemui.SwipeHelper.Callback: boolean isAntiFalsingNeeded()>
<com.android.systemui.classifier.Stroke: float getEndPointLength()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: java.lang.String toJson()>
<android.app.usage.NetworkStats.Bucket: long getTxBytes()>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void setUp()>
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>
<android.view.View: boolean isInEditMode()>
<com.android.systemui.qs.QSTile: void fireScanStateChanged(boolean)>
<android.graphics.Matrix: boolean preSkew(float,float)>
<android.preference.TwoStatePreference: boolean getDisableDependentsState()>
<android.app.ActivityManagerProxy: void resumeAppSwitches()>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>
<android.renderscript.Script.FieldBase: android.renderscript.Element getElement()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.server.power.ScreenOnBlocker: void acquire()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: float extractSize(java.lang.String)>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.SystemUIApplication: void startServicesIfNeeded()>
<android.provider.Settings.NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(java.lang.String)>
<com.android.server.emergency.EmergencyAffordanceService: void onBootPhase(int)>
<android.app.Activity: boolean onNavigateUp()>
<android.service.voice.VoiceInteractionSession.Request: int getCallingUid()>
<android.media.FaceDetector: void finalize()>
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.view.MotionEvent: float getHistoricalX(int,int)>
<android.app.Activity: void setContentView(android.view.View)>
<com.android.server.am.CompatModePackages: int computeCompatModeLocked(android.content.pm.ApplicationInfo)>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
<com.android.systemui.assist.AssistManager: void launchVoiceAssistFromKeyguard()>
<android.media.audiofx.EnvironmentalReverb: short getDensity()>
<android.view.ViewStub: void <init>(android.content.Context)>
<com.android.systemui.statusbar.ScrimView: boolean hasOverlappingRendering()>
<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onVoiceAssistHintStarted()>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.media.tv.TvRecordingClient.RecordingCallback: void onConnectionFailed(java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionStarting(long,long)>
<android.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>
<com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver: void onDied()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onDismiss()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeLeft()>
<android.view.View: boolean isAccessibilityFocused()>
<android.widget.ListAdapter: boolean isEnabled(int)>
<android.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)>
<android.graphics.RectF: void sort()>
<android.service.notification.ZenModeConfig.Migration: android.service.notification.ZenModeConfig migrate(android.service.notification.ZenModeConfig.XmlV1)>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.Menu,java.lang.String,java.lang.String)>
<android.os.Looper: android.os.MessageQueue myQueue()>
<android.util.EventLog: int writeEvent(int,long)>
<android.app.usage.ConfigurationStats: long getLastTimeActive()>
<android.widget.CheckedTextView: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void startPreHideAnimation(java.lang.Runnable)>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.nfc.tech.NfcB: byte[] getApplicationData()>
<android.animation.AnimatorSet: void end()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>
<android.database.DataSetObservable: void notifyInvalidated()>
<com.android.server.trust.TrustManagerService: void onUnlockUser(int)>
<android.widget.PopupWindow: android.transition.Transition getExitTransition()>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>
<android.widget.Scroller: void <init>(android.content.Context)>
<android.renderscript.ScriptIntrinsicBLAS: void SSPMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>
<android.app.ActivityManagerProxy: boolean isTopActivityImmersive()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
<android.widget.ListPopupWindow: int getAnimationStyle()>
<android.view.LayoutInflater: void <init>(android.content.Context)>
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>
<android.media.audiopolicy.AudioPolicy.Builder: void setAudioPolicyStatusListener(android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener)>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.BitmapRegionTileSource.BitmapSource.State getLoadingState()>
<com.android.server.content.SyncStorageEngine.EndPoint: java.lang.String toString()>
<android.content.pm.ShortcutManager: boolean isRateLimitingActive()>
<android.text.method.MultiTapKeyListener: int getInputType()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setGroupExpanded(android.service.notification.StatusBarNotification,boolean)>
<android.opengl.GLES10: void glFogx(int,int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int getPointerLayer()>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: java.util.Map setProvisionalSelection(java.util.Set)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<com.android.systemui.tuner.TunerService: void reloadSetting(android.net.Uri)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSize: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.hardware.camera2.CaptureRequest.Builder: void addTarget(android.view.Surface)>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(android.net.Uri)>
<com.android.systemui.statusbar.policy.SignalController: boolean isDirty()>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.notification.ImageTransformState: void disappear(float,com.android.systemui.statusbar.TransformableView)>
<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker.OnValueChangeListener)>
<com.android.documentsui.Snackbars: android.support.design.widget.Snackbar makeSnackbar(android.app.Activity,java.lang.CharSequence,int)>
<android.media.MediaRecorder: void start()>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>
<android.util.TimingLogger: void addSplit(java.lang.String)>
<android.content.Loader.ForceLoadContentObserver: boolean deliverSelfNotifications()>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.textservice.TextInfo: java.lang.String getText()>
<android.database.AbstractWindowedCursor: boolean hasWindow()>
<com.android.keyguard.KeyguardUpdateMonitor: void setHasLockscreenWallpaper(boolean)>
<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void CSYMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback: void onChanged(int)>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.media.AudioFormat.Builder: void <init>(android.media.AudioFormat)>
<com.android.server.am.CompatModePackages: void setPackageNotifyUnsupportedZoomLocked(java.lang.String,boolean)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getName()>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>
<android.content.ContentValues: java.util.Set valueSet()>
<android.graphics.Canvas_Delegate: void native_setHighContrastText(long,boolean)>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView.OnScrollListener)>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean hasUserChangedExpansion()>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long[])>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: void <init>(android.content.Context,android.bluetooth.BluetoothDevice,com.android.bluetoothmidiservice.BluetoothMidiService)>
<android.hardware.GeomagneticField: float getZ()>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<com.android.server.pm.ShortcutService: java.lang.String injectGetLocaleTagsForUser(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isTrackingBlocked()>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>
<android.graphics.Paint: float measureText(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addPostCollapseAction(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.BridgeContext: void disposeResources()>
<com.android.systemui.volume.VolumePrefs: void registerCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.content.Loader: boolean takeContentChanged()>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>
<android.widget.Adapter: int getItemViewType(int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionStartsWith(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationData.Entry getEntry()>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addCapability(int)>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.ManagedServiceInfo getServiceFromTokenLocked(android.os.IInterface)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothSupported()>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: java.util.Map getClassData(com.android.ddmlib.Client)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void pause()>
<android.preference.PreferenceFragment: void onStop()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void <init>()>
<com.android.systemui.recents.tv.animations.RecentsRowFocusAnimationHolder: void startFocusLossAnimation()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiInfo getInfo()>
<com.android.documentsui.RecentsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.database.sqlite.SQLiteDebug.DbStats: void <init>(java.lang.String,long,long,int,int,int,int)>
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>
<android.os.storage.IMountShutdownObserver.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.systemui.qs.tiles.WifiTile: java.lang.String composeChangeAnnouncement()>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrolledPixels(float,boolean,boolean)>
<android.os.Debug: int getThreadAllocSize()>
<com.android.systemui.tv.pip.PipRecentsOverlayManager.Callback: void onRecentsFocused()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isHomeStack(int)>
<android.widget.ListPopupWindow: void setHorizontalOffset(int)>
<com.android.systemui.statusbar.CommandQueue: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList computeAllTasksList()>
<android.os.Debug: void resetGlobalClassInitCount()>
<android.widget.TextView: int getHighlightColor()>
<android.preference.Preference: void setShouldDisableView(boolean)>
<android.text.style.TtsSpan.TextBuilder: void <init>()>
<android.widget.Toolbar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<com.android.preload.actions.ComputeThresholdXAction: void run()>
<android.animation.AnimationThread: void postAnimation()>
<android.os.Debug: int getBinderDeathObjectCount()>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<com.android.anqp.eap.NonEAPInnerAuth: void <init>(com.android.anqp.eap.NonEAPInnerAuth.NonEAPType)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintHideIcon(boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean canConfigWifi()>
<com.android.server.notification.ZenModeHelper: void setSuppressedEffects(long)>
<com.android.server.fingerprint.FingerprintUtils: com.android.server.fingerprint.FingerprintUtils getInstance()>
<android.telecom.Conference: java.lang.String toString()>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void systemReady()>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
<com.android.server.usb.UsbService: void clearUsbDebuggingKeys()>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR2K(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>
<android.content.IntentSender: int describeContents()>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForPreviewsEmpty(long,java.util.concurrent.TimeUnit)>
<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>
<com.android.systemui.statusbar.policy.DataSaverController: boolean isDataSaverEnabled()>
<android.print.PrintAttributes.MediaSize: java.lang.String toString()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setManual(boolean)>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.pm.ShortcutService: void resetThrottling()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultDataSubId()>
<android.view.ViewGroup: void scheduleLayoutAnimation()>
<android.accounts.NetworkErrorException: void <init>()>
<android.app.DialogFragment: void setShowsDialog(boolean)>
<android.app.backup.BackupManager: void dataChanged()>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getKeySetByAliasAndPackageNameLPr(java.lang.String,java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>
<android.animation.AnimationThread: void <init>(com.android.layoutlib.bridge.impl.RenderSessionImpl,java.lang.String,com.android.ide.common.rendering.api.IAnimationListener)>
<android.service.dreams.DreamService: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: long convertTimestampToNanotime(int,long)>
<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition.TransitionListener)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasBootCompleted()>
<android.widget.CalendarView.CalendarViewDelegate: int getDateTextAppearance()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isSystemExpanded()>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addTransportType(int)>
<android.os.Debug: void resetGlobalGcInvocationCount()>
<android.renderscript.Element: int getSubElementCount()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setExpandable(boolean)>
<android.view.animation.Animation: void setZAdjustment(int)>
<android.os.TokenWatcher: boolean isAcquired()>
<com.google.android.gles_jni.EGLImpl: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.location.Geocoder: void <init>(android.content.Context)>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>
<com.android.settingslib.drawable.CircleFramedDrawable: int getIntrinsicWidth()>
<android.animation.Animator: void setupStartValues()>
<com.android.server.SystemConfig: android.util.ArraySet getLinkedApps()>
<android.media.audiofx.Equalizer: short getNumberOfBands()>
<com.android.systemui.statusbar.CommandQueue: void toggleRecentApps()>
<android.widget.TableLayout: void onMeasure(int,int)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>
<com.android.documentsui.FilteringCursorWrapper: java.lang.String getString(int)>
<android.telecom.CallScreeningService.CallResponse.Builder: android.telecom.CallScreeningService.CallResponse.Builder setSkipNotification(boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void DTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.database.CursorWindow: int getNumRows()>
<com.android.systemui.recents.views.grid.GridTaskView: void onFinishInflate()>
<android.transition.ArcMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.TextView: int getCompoundPaddingRight()>
<com.android.systemui.classifier.FalsingManager: void onBouncerHidden()>
<android.bluetooth.le.AdvertiseData: java.util.Map getServiceData()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleUserSwitchComplete(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setStatusBarState(int)>
<android.view.ViewStructure: void setElevation(float)>
<android.content.pm.PackageInstaller.SessionCallback: void onActiveChanged(int,boolean)>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>
<com.android.hotspot2.asn1.Asn1Constructed: java.lang.String toString()>
<com.android.systemui.volume.VolumeDialog: void rescheduleTimeoutH()>
<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>
<android.widget.ExpandableListView: void setSelectedGroup(int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: void <init>(int,int,boolean,int,int,int,boolean,android.media.AudioFormat,byte[],android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra[])>
<android.graphics.Path: void incReserve(int)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<com.android.server.statusbar.StatusBarManagerService: void disableForUser(int,android.os.IBinder,java.lang.String,int)>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>
<android.view.View: android.view.WindowId getWindowId()>
<android.service.notification.ConditionProviderService: void notifyCondition(android.service.notification.Condition)>
<android.text.style.SuggestionSpan: int describeContents()>
<com.android.systemui.qs.QSTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<android.graphics.drawable.DrawableWrapper: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.server.am.ActivityManagerService: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.renderscript.FieldPacker: byte[] getData()>
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>
<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>
<com.android.server.pm.PackageManagerService: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>
<android.widget.Editor.EditOperation: void undo()>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<com.android.server.usage.UsageStatsService: void onStart()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioAddress(java.lang.String)>
<android.media.MediaExtractor: int getTrackCount()>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>
<android.provider.ContactsContract.ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.systemui.tuner.TunerService: void removeTunable(com.android.systemui.tuner.TunerService.Tunable)>
<android.webkit.CookieSyncManager: void sync()>
<com.android.systemui.classifier.FalsingManager: void onQsDown()>
<android.content.RestrictionEntry: void setSelectedState(boolean)>
<com.android.server.search.SearchManagerService: void launchAssist(android.os.Bundle)>
<android.widget.AbsListView: void reclaimViews(java.util.List)>
<com.android.tools.layoutlib.create.Log: void info(java.lang.String,java.lang.Object[])>
<android.widget.TableLayout: void setStretchAllColumns(boolean)>
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript.Priority)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkController.SignalCallback,boolean)>
<com.android.server.backup.SystemBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setAvailableOffline(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void start()>
<com.android.egg.neko.Cat: android.app.Notification.Builder buildNotification(android.content.Context)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeAssetManager getAssets()>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>
<android.widget.Toolbar.LayoutParams: void <init>(int,int,int)>
<com.android.server.policy.PhoneWindowManager: boolean validateRotationAnimationLw(int,int,boolean)>
<android.view.IWindowManagerImpl: void notifyAppResumed(android.os.IBinder,boolean,boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.systemui.doze.DozeLog: void tracePulseStart(int)>
<android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>
<android.telephony.CellSignalStrength: int hashCode()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.notification.CountdownConditionProvider: void onUnsubscribe(android.net.Uri)>
<android.media.AudioTrack: int write(byte[],int,int,int)>
<android.app.NativeActivity: void onInputQueueCreated(android.view.InputQueue)>
<com.android.systemui.statusbar.NotificationContentView: void onMeasure(int,int)>
<android.app.admin.SecurityLog.SecurityEvent: java.lang.Object getData()>
<com.android.server.MountServiceIdler: void scheduleIdlePass(android.content.Context)>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityForConsumptionEnd()>
<android.preference.Preference: int getWidgetLayoutResource()>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute getCardEmulationRoute()>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreview(android.content.Intent)>
<android.bluetooth.BluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<com.android.settingslib.bluetooth.HidProfile: int getHidClassDrawable(android.bluetooth.BluetoothClass)>
<android.opengl.GLES11: void glBindBuffer(int,int)>
<android.content.IntentFilter: boolean hasCategory(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>
<android.widget.TextView: boolean onTextContextMenuItem(int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void overridePlayingAppAnimationsLw(android.view.animation.Animation)>
<android.app.job.JobInfo: boolean isPeriodic()>
<com.android.systemui.statusbar.NotificationData.Entry: boolean hasJustLaunchedFullScreenIntent()>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.EGLObjectHandle: int hashCode()>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>
<android.view.WindowManagerPolicy.WindowState: boolean isAlive()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void closeControlsIfOutsideTouch(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayerAlpha(float,float,float,float,int)>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>
<android.app.VoiceInteractor.Prompt: java.lang.CharSequence getVisualPrompt()>
<com.android.printspooler.widget.PreviewPageFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.webkit.WebSettings: int getMixedContentMode()>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>
<android.widget.CalendarView: boolean getShowWeekNumber()>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback,android.os.Handler)>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<com.android.systemui.volume.VolumeDialogComponent: void <init>(com.android.systemui.SystemUI,android.content.Context,android.os.Handler,com.android.systemui.statusbar.policy.ZenModeController)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
<com.android.commands.bu.Backup: void run()>
<android.util.SparseArray: void setValueAt(int,java.lang.Object)>
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionCallback getCallback()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<android.view.TextureView: void buildLayer()>
<com.android.systemui.statusbar.policy.MobileSignalController: boolean isEmergencyOnly()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void onInputBridgeConnected(android.os.IBinder)>
<android.os.BaseBundle: void putInt(java.lang.String,int)>
<android.telephony.CellIdentityLte: int getPci()>
<com.android.settingslib.bluetooth.MapProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<android.net.LinkProperties: int describeContents()>
<android.location.GnssMeasurementsEvent: java.lang.String toString()>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerData()>
<android.hardware.camera2.DngCreator: void finalize()>
<com.android.systemui.statusbar.GestureRecorder: void add(android.view.MotionEvent)>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double3)>
<com.android.systemui.statusbar.AlphaOptimizedView: boolean hasOverlappingRendering()>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>
<android.app.ActivityManager: void setVrThread(int)>
<android.view.ViewStub: int getLayoutResource()>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.RestrictedPreferenceHelper: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<com.android.systemui.classifier.DirectionEvaluator: float evaluate(float,float,int)>
<android.view.KeyEvent: void setSource(int)>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getPrimaryVpnName()>
<com.android.settingslib.display.DisplayDensityUtils: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context getApplicationContext()>
<android.security.keystore.AndroidKeyStoreHmacSpi.HmacSHA512: void <init>()>
<android.print.PrintJob: boolean equals(java.lang.Object)>
<android.telecom.RemoteConnection: void hold()>
<com.android.statementservice.retriever.Statement: java.lang.String toString()>
<com.android.systemui.qs.SignalTileView: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,int[],int)>
<com.android.systemui.qs.QSIconView: void setIcon(android.widget.ImageView,com.android.systemui.qs.QSTile.State)>
<android.os.BaseBundle: void putLong(java.lang.String,long)>
<android.view.View: float getRotation()>
<android.hardware.camera2.params.InputConfiguration: void <init>(int,int,int)>
<com.android.systemui.statusbar.phone.AutoTileManager: void <init>(android.content.Context,com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.server.fingerprint.RemovalClient: boolean onEnrollResult(int,int,int)>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>
<android.view.InputDevice: int getKeyboardType()>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>
<com.android.server.am.BatteryStatsService: void noteStopAudio(int)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(java.lang.Class)>
<android.printservice.PrintService: void onDisconnected()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getPrefix()>
<android.database.CursorWrapper: boolean requery()>
<android.net.LocalSocket: boolean isConnected()>
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>
<android.content.RestrictionEntry: void <init>(android.os.Parcel)>
<com.android.keyguard.KeyguardSecurityContainer: void onResume(int)>
<com.android.documentsui.Events: boolean isMouseEvent(android.view.MotionEvent)>
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>
<android.app.usage.ConfigurationStats: int getActivationCount()>
<android.location.GnssClock: double getBiasUncertaintyNanos()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void hideRecents(boolean,boolean)>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: java.lang.String toString()>
<android.widget.Switch: void setSwitchMinWidth(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.layoutlib.bridge.util.SparseWeakArray: int indexOfKey(long)>
<android.media.MediaRouter.SimpleCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.view.View: float getElevation()>
<com.android.keyguard.KeyguardSecurityContainer: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.wm.WindowManagerService.WindowChangeListener: void focusChanged()>
<android.graphics.drawable.ShapeDrawable: void getOutline(android.graphics.Outline)>
<android.media.session.PlaybackState.CustomAction: java.lang.String getAction()>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<com.android.systemui.qs.QSTile.State: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[])>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getRouteAt(int)>
<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>
<android.content.ContentProvider: void onLowMemory()>
<android.os.IPowerManager: void setStayOnSetting(int)>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<com.android.server.pm.ShortcutService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<com.android.photos.views.TiledImageRenderer.TileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>
<android.telecom.Call: void hold()>
<com.android.settingslib.drawer.SettingsDrawerAdapter: boolean isEnabled(int)>
<android.database.CursorWrapper: boolean isFirst()>
<com.android.documentsui.MessageBar: void setError(java.lang.String)>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,boolean)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getJpegThumbnailSize()>
<android.hardware.camera2.impl.CameraDeviceImpl: void setRemoteFailure(android.os.ServiceSpecificException)>
<android.view.View.OnScrollChangeListener: void onScrollChange(android.view.View,int,int,int,int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartLaunchTargetEnterAnimation(com.android.systemui.recents.views.TaskViewTransform,int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<android.app.FragmentManagerImpl: void dispatchStart()>
<com.android.documentsui.DocumentsActivity: void onPostCreate(android.os.Bundle)>
<com.android.egg.neko.Cat: void setName(java.lang.String)>
<com.android.layoutlib.bridge.BridgeRenderSession: void setElapsedFrameTimeNanos(long)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedNetworkTypes(int)>
<android.database.AbstractWindowedCursor: int getType(int)>
<javax.microedition.khronos.opengles.GL10: void glShadeModel(int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.service.textservice.SpellCheckerService.Session: java.lang.String getLocale()>
<com.android.server.am.ActivityManagerService: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>
<com.android.server.statusbar.StatusBarManagerService: void removeIcon(java.lang.String)>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>
<android.util.ArraySet: java.util.Iterator iterator()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getViewKey(android.view.View)>
<android.view.IWindowManagerImpl: boolean setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>
<android.content.Context: void setWallpaper(android.graphics.Bitmap)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>
<android.telecom.InCallService: android.telecom.CallAudioState getCallAudioState()>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<android.view.PixelCopy: void request(android.view.SurfaceView,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)>
<android.widget.DialerFilter: boolean isQwertyKeyboard()>
<android.net.wifi.ScanResult: boolean isPasspointNetwork()>
<com.android.shell.BugreportWarningActivity: void onClick(android.content.DialogInterface,int)>
<android.os.BatteryStats.Uid: boolean hasNetworkActivity()>
<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<com.android.server.fingerprint.ClientMonitor: android.hardware.fingerprint.IFingerprintDaemon getFingerprintDaemon()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeIntValue(int,int)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int compareTo(android.widget.ActivityChooserModel.ActivityResolveInfo)>
<android.util.EventLog.Event: int getProcessId()>
<com.android.layoutlib.bridge.Bridge: void setCached9Patch(java.lang.String,com.android.ninepatch.NinePatchChunk,java.lang.Object)>
<android.view.ShadowPainter: void drawSmallRectangleShadow(java.awt.Graphics2D,int,int,int,int)>
<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>
<com.android.systemui.volume.MediaSessions: void init()>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.os.Parcel: void setDataPosition(int)>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>
<android.telecom.InCallService.VideoCall.Callback: void onCameraCapabilitiesChanged(android.telecom.VideoProfile.CameraCapabilities)>
<android.app.usage.NetworkStatsManager: void unregisterUsageCallback(android.app.usage.NetworkStatsManager.UsageCallback)>
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>
<android.media.Image: android.media.Image.Plane[] getPlanes()>
<com.android.systemui.stackdivider.DividerView: com.android.systemui.stackdivider.WindowManagerProxy getWindowManagerProxy()>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<android.widget.Toolbar: void setSubtitle(int)>
<android.media.AudioTrack.Builder: android.media.AudioTrack build()>
<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController: boolean setShowMode(int)>
<javax.microedition.khronos.opengles.GL10: void glClearColorx(int,int,int,int)>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<com.android.server.pm.UserManagerService: boolean canAddMoreManagedProfiles(int,boolean)>
<android.content.ContentProviderClient: boolean release()>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiSelector getSelector()>
<android.app.job.JobInfo: long getMinPeriodMillis()>
<com.android.documentsui.RootsCache: void updateAsync(boolean)>
<com.android.settingslib.wifi.WifiTracker: void stopTracking()>
<android.content.Context: void setWallpaper(java.io.InputStream)>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>
<android.view.ViewParent: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<com.android.server.am.LockTaskNotify: void show(boolean)>
<com.android.preload.DumpTableModel: int getColumnCount()>
<android.widget.CheckedTextView: void setChecked(boolean)>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>
<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<com.android.systemui.recents.Recents: com.android.systemui.recents.RecentsDebugFlags getDebugFlags()>
<android.view.WindowManagerPolicy.PointerEventListener: void onPointerEvent(android.view.MotionEvent)>
<com.android.documentsui.model.RootInfo: boolean hasSettings()>
<com.android.documentsui.MessageBar: com.android.documentsui.MessageBar create(android.app.FragmentManager)>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.le.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)>
<android.telecom.Phone.Listener: void onBringToForeground(android.telecom.Phone,boolean)>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<com.android.location.provider.LocationRequestUnbundled: float getSmallestDisplacement()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean isCredentialProtectedStorage()>
<com.android.keyguard.KeyguardSimPinView: int getPasswordTextViewId()>
<android.view.View: void setTranslationX(float)>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<com.android.server.backup.BackupManagerService: void setBackupEnabled(boolean)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.ContentProviderResult: void <init>(android.net.Uri)>
<com.android.systemui.keyboard.KeyboardUI: void start()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot save(int)>
<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.gles_jni.GLImpl: void glColor4f(float,float,float,float)>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
<android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)>
<com.android.statementservice.retriever.Utils: java.util.List getCertFingerprintsFromPackageManager(java.lang.String,android.content.Context)>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<android.opengl.GLES32: int glGetDebugMessageLog(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES32.DebugProc: void onMessage(int,int,int,int,java.lang.String)>
<android.view.ActionMode: int getType()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnected()>
<com.android.systemui.statusbar.ExpandableView: boolean isDark()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getEphemeralApplications()>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isSecure()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: boolean hasOverlappingRendering()>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.view.Window.Callback: void onAttachedToWindow()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>
<com.android.systemui.tv.pip.PipManager: void resumePipResizing(int)>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>
<android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: boolean isVendorPrinter(android.net.nsd.NsdServiceInfo,java.lang.String[])>
<android.database.SQLException: void <init>()>
<com.android.settingslib.accounts.AuthenticatorHelper: void updateAuthDescriptions(android.content.Context)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void <init>(android.content.Context)>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>
<android.app.ActivityManagerProxy: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: com.android.systemui.statusbar.ExpandableNotificationRow getNotificationParent()>
<javax.microedition.khronos.opengles.GL10: void glScissor(int,int,int,int)>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>
<android.util.JsonReader: boolean nextBoolean()>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>
<android.media.MediaPlayer: void setAudioSessionId(int)>
<android.opengl.GLU: java.lang.String gluErrorString(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setIconAnimationRunning(boolean)>
<android.view.ShadowPainter: void drawRectangleShadow(java.awt.image.BufferedImage,int,int,int,int)>
<android.net.http.SslError: boolean hasError(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void toggleRecents(int)>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationEndY(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.hotspot2.pps.Policy: com.android.hotspot2.pps.UpdateInfo getPolicyUpdate()>
<com.android.anqp.eap.ExpandedEAPMethod: boolean equals(java.lang.Object)>
<android.gesture.GesturePoint: java.lang.Object clone()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.ZenModeFiltering: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ManagedProfileController: void setWorkModeEnabled(boolean)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void <init>(long,java.nio.ByteBuffer)>
<android.view.Window: void setFlags(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<android.provider.Contacts.Intents.UI: void <init>()>
<com.android.printspooler.model.RemotePrintDocument: void start()>
<android.util.ArrayMap: void putAll(java.util.Map)>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getManifestShortcuts(java.lang.String,int)>
<android.app.AlarmManager: void set(int,long,java.lang.String,android.app.AlarmManager.OnAlarmListener,android.os.Handler)>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(java.lang.Object)>
<com.android.systemui.SwipeHelper: void <init>(int,com.android.systemui.SwipeHelper.Callback,android.content.Context)>
<android.printservice.PrintService: void onConnected()>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>
<android.widget.AdapterViewFlipper: void stopFlipping()>
<android.service.quicksettings.TileService: void onClick()>
<com.android.systemui.ExpandHelper: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.IntentFilter: java.util.Iterator pathsIterator()>
<com.android.tools.layoutlib.create.Main: void main(java.lang.String[])>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void onFinishInflate()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActions(long)>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>
<android.content.pm.LauncherApps.Callback: void onPackagesUnavailable(java.lang.String[],android.os.UserHandle,boolean)>
<com.android.documentsui.model.DocumentInfo: void updateSelf(android.content.ContentResolver)>
<android.provider.Settings.Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void cancelDiscoverableAlarm(android.content.Context)>
<android.widget.EdgeEffect: void setColor(int)>
<android.renderscript.Matrix3f: void set(int,int,float)>
<android.graphics.Typeface: boolean equals(java.lang.Object)>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File,float,int)>
<android.drm.DrmInfo: java.util.Iterator keyIterator()>
<android.speech.tts.UtteranceProgressListener: void onAudioAvailable(java.lang.String,byte[])>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: long cancelRequest(int)>
<com.android.uiautomator.core.UiDevice: boolean pressEnter()>
<android.app.Notification.Builder: android.app.Notification.Builder setVibrate(long[])>
<com.android.systemui.recents.model.TaskStack: void setCallbacks(com.android.systemui.recents.model.TaskStack.TaskStackCallbacks)>
<android.app.assist.AssistStructure.ViewNode: boolean isCheckable()>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>
<android.os.Looper: void quit()>
<android.widget.Spinner: int getGravity()>
<android.webkit.WebChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient.FileChooserParams)>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.policy.IconUtilities: android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)>
<android.preference.TwoStatePreference: boolean shouldDisableDependents()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileEnabled(android.content.ComponentName)>
<android.view.View: boolean startNestedScroll(int)>
<com.android.fakeoemfeatures.FakeBackgroundService: void onCreate()>
<com.android.hotspot2.osu.OSUCache: void clearAll()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isBatteryLow()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void addLastDecrementRunnable(java.lang.Runnable)>
<com.android.server.fingerprint.RemovalClient: void <init>(android.content.Context,long,android.os.IBinder,android.hardware.fingerprint.IFingerprintServiceReceiver,int,int,int,boolean,java.lang.String)>
<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionSuspended()>
<android.widget.ImageButton: void <init>(android.content.Context)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.StringBuilder appendByteAsHex(java.lang.StringBuilder,byte,boolean)>
<android.content.pm.PackageInstaller.Session: java.lang.String[] getNames()>
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>
<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>
<com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>
<android.media.FaceDetector.Face: float confidence()>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekNumberColor()>
<android.renderscript.ScriptIntrinsicLUT: void setRed(int,int)>
<android.widget.Editor.HandleView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onSuccess(java.lang.String,com.android.ddmlib.Client)>
<android.opengl.GLES10: void glNormal3f(float,float,float)>
<com.android.systemui.recents.views.RecentsView: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.style.LeadingMarginSpan.LeadingMarginSpan2: int getLeadingMarginLineCount()>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.content.res.BridgeTypedArray: java.lang.CharSequence getText(int)>
<android.graphics.Canvas_Delegate: void native_drawBitmap(android.graphics.Canvas,long,android.graphics.Bitmap,float,float,float,float,float,float,float,float,long,int,int)>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.net.NetworkRequest: boolean equals(java.lang.Object)>
<android.view.MotionEvent.PointerProperties: void copyFrom(android.view.MotionEvent.PointerProperties)>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.service.notification.StatusBarNotification: boolean isOngoing()>
<android.app.Fragment: void onStart()>
<android.graphics.Paint: void setTextLocale(java.util.Locale)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<android.widget.TimePicker.TimePickerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
<com.android.documentsui.FilteringCursorWrapper: boolean onMove(int,int)>
<android.preference.Preference: java.lang.String getFragment()>
<com.android.server.pm.PackageKeySetData: void setAliases(android.util.ArrayMap)>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator keyIterator()>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean)>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>
<android.net.WebAddress: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon()>
<com.android.systemui.analytics.DataCollector: void onAffordanceSwipingStarted(boolean)>
<android.animation.ValueAnimator: void pause()>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)>
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>
<android.view.Window: void closePanel(int)>
<android.widget.TextView: int getCompoundPaddingBottom()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.view.MotionEvent: float getOrientation(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void stopWaitingForKeyguardExit()>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>
<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb.Settings)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStart()>
<com.android.tools.layoutlib.java.Objects: java.lang.Object requireNonNull(java.lang.Object)>
<android.hardware.camera2.utils.ListUtils: boolean listContains(java.util.List,java.lang.Object)>
<android.view.Window: android.view.View peekDecorView()>
<android.hardware.radio.RadioManager.BandDescriptor: int getLowerLimit()>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void stop()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void setShadeExpanded(boolean)>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>
<com.android.preload.ui.UI: void <init>(javax.swing.ListModel,javax.swing.table.TableModel,java.util.List)>
<android.content.RestrictionEntry: void setChoiceValues(java.lang.String[])>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<com.android.systemui.qs.QSContainer: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES10: void glPolygonOffset(float,float)>
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>
<android.database.CursorWindow: void clear()>
<android.os.UEventObserver.UEvent: void <init>(java.lang.String)>
<com.android.systemui.volume.MediaSessions: void destroy()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.graphics.Movie: int height()>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>
<com.android.server.notification.ScheduleConditionProvider: long getNextAlarm()>
<com.android.keyguard.KeyguardSecurityView: void showMessage(java.lang.String,int)>
<android.os.IPowerManager: void updateWakeLockUids(android.os.IBinder,int[])>
<com.android.systemui.statusbar.BaseStatusBar: void dismissKeyboardShortcuts()>
<android.database.Cursor: void close()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterface()>
<android.widget.ProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)>
<com.android.server.am.BatteryStatsService: void noteModemControllerActivity(android.telephony.ModemActivityInfo)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: boolean isDone()>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void notifyScreenOn(boolean)>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,int)>
<com.android.server.power.PowerManagerService: void lowLevelShutdown(java.lang.String)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent)>
<android.view.LayoutInflater: android.content.Context getContext()>
<com.android.systemui.volume.VolumeDialogController: void setRingerMode(int,boolean)>
<android.media.MediaRouter.RouteInfo: int getPlaybackStream()>
<com.android.hotspot2.omadm.MOTree: java.lang.String getUrn()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.telephony.CellSignalStrengthWcdma: boolean equals(java.lang.Object)>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setSubs(java.util.List)>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.hardware.camera2.impl.GetCommand: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative.Key)>
<android.media.midi.MidiOutputPort: void finalize()>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getRational(int)>
<com.android.server.LocationManagerService: void clearTestProviderEnabled(java.lang.String,java.lang.String)>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.graphics.PointF: int describeContents()>
<android.view.ViewStructure: void setClickable(boolean)>
<android.telecom.Call: android.telecom.InCallService.VideoCall getVideoCall()>
<com.android.preload.ClientUtils: void <init>()>
<android.app.Notification: void <init>()>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>
<com.android.systemui.recents.events.activity.TaskStackUpdatedEvent: void <init>(com.android.systemui.recents.model.TaskStack,boolean)>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>
<android.hardware.usb.UsbInterface: int getAlternateSetting()>
<com.android.systemui.recents.views.TaskStackViewScroller: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.keyguard.KeyguardPasswordView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.server.job.JobServiceContext: void jobFinished(int,boolean)>
<com.android.server.hdmi.SelectRequestBuffer: void set(com.android.server.hdmi.SelectRequestBuffer.SelectRequest)>
<android.service.carrier.CarrierMessagingService.SendSmsResult: void <init>(int,int)>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.systemui.statusbar.phone.ScrimController: void onExpandingFinished()>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setSwipeDeadZonePercentage(double)>
<android.speech.tts.TextToSpeech: int getMaxSpeechInputLength()>
<android.app.ActivityManagerProxy: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>
<android.bluetooth.BluetoothDevice: int hashCode()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsFramebufferOES(int)>
<android.renderscript.Matrix3f: void loadRotate(float)>
<com.google.android.util.AbstractMessageParser.Smiley: java.util.List getInfo()>
<com.android.systemui.statusbar.ServiceMonitor: void <init>(java.lang.String,boolean,android.content.Context,java.lang.String,com.android.systemui.statusbar.ServiceMonitor.Callbacks)>
<android.graphics.drawable.BitmapDrawable: boolean isAutoMirrored()>
<android.os.UserManager: boolean isUserAGoat()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long)>
<android.app.ActivityManagerProxy: int startActivityFromRecents(int,android.os.Bundle)>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<com.android.server.policy.ImmersiveModeConfirmation: android.view.WindowManager.LayoutParams getClingWindowLayoutParams()>
<android.bluetooth.BluetoothSocket: int getMaxTransmitPacketSize()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<android.graphics.FontListParser.Family: void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String)>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent)>
<android.os.BaseBundle: long getLong(java.lang.String)>
<android.app.assist.AssistStructure.ViewNode: float getTextSize()>
<android.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.webkit.ClientCertRequest: int getPort()>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(java.lang.String)>
<android.hardware.Camera: void reconnect()>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void runAtNextFrame(java.lang.Runnable)>
<android.renderscript.Matrix3f: float[] getArray()>
<android.os.CancellationSignal: void <init>()>
<android.view.animation.Animation: void finalize()>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceName(java.lang.String)>
<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>
<com.android.server.pm.IntentFilterVerificationState: int getState()>
<android.view.BridgeInflater: java.lang.String[] getClassPrefixList()>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>
<android.media.FaceDetector.Face: float eyesDistance()>
<android.telecom.Phone.Listener: void onAudioStateChanged(android.telecom.Phone,android.telecom.AudioState)>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks getCallbacks()>
<com.android.anqp.eap.InnerAuthEAP: boolean equals(java.lang.Object)>
<android.hardware.fingerprint.IFingerprintDaemon: long getAuthenticatorId()>
<com.android.server.notification.CalendarTracker: void <init>(android.content.Context,android.content.Context)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: com.android.server.net.NetworkStatsService.NetworkStatsSettings.Config getUidConfig()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<com.android.keyguard.KeyguardSimPukView: void startAppearAnimation()>
<com.android.server.InputMethodManagerService: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setBackupServiceEnabled(android.content.ComponentName,boolean)>
<android.view.ViewGroup.MarginLayoutParams: void setMarginEnd(int)>
<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>
<android.text.style.TypefaceSpan: int describeContents()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void writeToParcel(android.os.Parcel,int)>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.settingslib.RestrictedSwitchPreference: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<android.app.usage.NetworkStats.Bucket: int getTag()>
<com.android.documentsui.Events.MotionInputEvent: boolean isSecondaryButtonPressed()>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.BatteryMeterView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.SystemConfig: com.android.server.SystemConfig getInstance()>
<android.renderscript.Element: android.renderscript.Element I16_3(android.renderscript.RenderScript)>
<android.nfc.NdefRecord: int hashCode()>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.View getRootView()>
<com.android.externalstorage.TestDocumentsProvider: boolean onCreate()>
<android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)>
<com.android.server.input.InputManagerService: android.view.InputChannel monitorInput(java.lang.String)>
<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showMessage(java.lang.String,int)>
<android.media.audiofx.Equalizer: short getBand(int)>
<com.android.server.storage.FileCollector.MeasurementResult: long totalAccountedSize()>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsizedWidth(int)>
<com.android.printspooler.widget.PrintContentView: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.Paint_Delegate: void setColorFilter(long)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedWakingUp()>
<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.analytics.DataCollector: void onLeftAffordanceHintStarted()>
<com.android.server.storage.DiskStatsLoggingService: void schedule(android.content.Context)>
<com.android.systemui.recents.views.TaskView: void onSizeChanged(int,int,int,int)>
<com.android.hotspot2.pps.Credential: void <init>(com.android.hotspot2.pps.Credential,java.lang.String)>
<android.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()>
<android.app.Fragment: void onLowMemory()>
<android.graphics.drawable.LayerDrawable: int getEndPadding()>
<android.widget.SearchView: boolean isSubmitButtonEnabled()>
<com.android.systemui.qs.TileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<android.renderscript.Element: android.renderscript.Element U32_2(android.renderscript.RenderScript)>
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)>
<android.os.Debug: void resetGlobalClassInitTime()>
<android.os.IPowerManager: void nap(long)>
<android.text.format.Time: void set(long)>
<android.content.res.AssetManager.AssetInputStream: int read(byte[],int,int)>
<com.android.server.connectivity.IpConnectivityMetrics.Impl: boolean registerNetdEventCallback(android.net.INetdEventCallback)>
<android.telecom.Call: void registerCallback(android.telecom.Call.Callback,android.os.Handler)>
<android.text.OptimizingLineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<android.util.LongSparseArray: java.lang.String toString()>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.OperationApplicationException: void <init>()>
<com.android.keyguard.KeyguardSimPukView: int getPasswordTextViewId()>
<com.android.systemui.statusbar.policy.DateView: void onDetachedFromWindow()>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isInputRestricted()>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar,android.os.Handler)>
<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker.Formatter)>
<com.android.server.policy.PhoneWindowManager: void enableKeyguard(boolean)>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotSupported()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void <init>(android.content.Context,java.lang.String,java.lang.CharSequence,java.util.List)>
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm.OnEventListener)>
<android.widget.ImageSwitcher: void setImageResource(int)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getJavaPkgClasses()>
<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,java.nio.Buffer)>
<com.android.server.usb.UsbService: void clearDefaults(java.lang.String,int)>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>
<com.android.server.am.ActivityManagerService: void monitor()>
<com.android.server.connectivity.NetdEventListenerService: void onDnsEvent(int,int,int,int,java.lang.String,java.lang.String[],int,int)>
<android.widget.PopupWindow: void setFocusable(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQs()>
<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.StateChangedListener,android.content.Context,java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName,int)>
<android.view.ViewGroup: int getDescendantFocusability()>
<com.android.server.net.NetworkStatsCollection: void reset()>
<android.service.voice.VoiceInteractionSessionService: void onCreate()>
<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.uiautomator.core.UiWatcher: boolean checkForCondition()>
<com.android.systemui.tv.pip.PipRecentsOverlayManager.Callback: void onBackPressed()>
<android.widget.CompoundButton: android.graphics.PorterDuff.Mode getButtonTintMode()>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>
<android.webkit.ServiceWorkerWebSettings: boolean getBlockNetworkLoads()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void reset()>
<android.widget.RemoteViews: void setViewVisibility(int,int)>
<android.media.session.MediaController.Callback: void onQueueTitleChanged(java.lang.CharSequence)>
<android.widget.TimePicker: boolean is24HourView()>
<android.view.KeyCharacterMap: char getMatch(int,char[])>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void setEmptyDragAmount(float)>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener: void onMixStateUpdate(android.media.audiopolicy.AudioMix)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>
<android.widget.CheckBox: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.usb.UsbPortManager: void systemReady()>
<android.hardware.usb.UsbDevice: int getDeviceId()>
<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.QSTile.DrawableIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
<android.app.ActivityManager: int getLockTaskModeState()>
<android.graphics.Interpolator: void <init>(int,int)>
<android.os.ResultReceiver: int describeContents()>
<com.android.settingslib.net.ChartDataLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,com.android.settingslib.AppItem)>
<android.service.dreams.DreamService: boolean onMenuOpened(int,android.view.Menu)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeySize(int)>
<android.telephony.CellInfo: int hashCode()>
<android.content.RestrictionEntry: int getIntValue()>
<com.android.printspooler.model.CustomPrinterIconCache: void <init>(java.io.File)>
<android.view.ViewConfiguration: int getTapTimeout()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioType(int)>
<com.android.hotspot2.omadm.OMAScalar: com.android.hotspot2.omadm.OMANode getChild(java.lang.String)>
<android.net.Uri: boolean equals(java.lang.Object)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setContentRoot(android.widget.FrameLayout)>
<com.android.systemui.statusbar.NotificationContentView: void setExpandClickListener(android.view.View.OnClickListener)>
<android.view.WindowId: int describeContents()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo build()>
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.server.content.ContentService.Lifecycle: void <init>(android.content.Context)>
<android.renderscript.Element: android.renderscript.Element F64_3(android.renderscript.RenderScript)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioChannelCount(int)>
<com.android.server.storage.DeviceStorageMonitorService: void <init>(android.content.Context)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long)>
<android.service.notification.StatusBarNotification: int describeContents()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>
<android.app.job.JobInfo: int getNetworkType()>
<android.net.wifi.WifiManager: boolean isEnhancedPowerReportingSupported()>
<com.android.systemui.volume.VolumeDialogController: void <init>(android.content.Context,android.content.ComponentName)>
<android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getHeight()>
<android.graphics.drawable.PaintDrawable: void <init>()>
<com.android.systemui.qs.tiles.FlashlightTile: android.content.Intent getLongClickIntent()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void beginConfigure()>
<com.android.systemui.tv.pip.PipRecentsControlsView: void reset()>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>
<android.transition.ChangeTransform: boolean getReparentWithOverlay()>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>
<com.android.systemui.qs.QSTile: void handleLongClick()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAltSubjectMatch()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createMime(java.lang.String,byte[])>
<com.android.systemui.recents.misc.NamedCounter: void <init>(java.lang.String,java.lang.String)>
<com.android.printspooler.model.MutexFileProvider: void releaseFile()>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>
<android.renderscript.Float3: void <init>(float,float,float)>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.os.storage.IMountShutdownObserver.Stub: android.os.storage.IMountShutdownObserver asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void maybeEscalateHeadsUp()>
<com.android.documentsui.Events: boolean isActionDown(android.view.MotionEvent)>
<com.android.documentsui.Events: boolean isTouchEvent(android.view.MotionEvent)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.CameraCharacteristics createCharacteristics(android.hardware.Camera.Parameters,android.hardware.Camera.CameraInfo)>
<android.os.Bundle: void putByte(java.lang.String,byte)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ComponentInfo)>
<android.view.ScaleGestureDetector: float getPreviousSpanY()>
<android.app.usage.NetworkStats: void close()>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.documentsui.LocalPreferences: boolean getShowDeviceRoot(android.content.Context,int)>
<android.os.Handler: java.lang.String toString()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.List getViewInfos()>
<android.filterpacks.imageproc.FillLightFilter: void setupPorts()>
<com.android.wallpapercropper.CropView: void setTouchEnabled(boolean)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcExecutionEnvironment getEmbeddedExecutionEnvironment()>
<android.graphics.Canvas_Delegate: void native_setMatrix(long,long)>
<android.widget.MediaController: void onFinishInflate()>
<com.android.server.fingerprint.FingerprintUtils: void removeFingerprintIdForUser(android.content.Context,int,int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setDomain(java.lang.String)>
<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>
<com.android.systemui.statusbar.ExpandableOutlineView: void setClipTopAmount(int)>
<com.android.server.policy.PhoneWindowManager: void updateSettings()>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(java.lang.Object[],java.lang.Object)>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>
<android.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<android.util.SparseIntArray: void put(int,int)>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.media.SoundPool.Builder: void <init>()>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>
<android.graphics.PathEffect_Delegate: boolean isSupported()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setBlockFlinging(boolean)>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,float[],int)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: int navigateFocus(int,int,com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction)>
<com.android.layoutlib.bridge.Bridge: java.lang.String resolveResourceId(int[])>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>
<com.android.server.notification.CountdownConditionProvider: void attachBase(android.content.Context)>
<com.android.anqp.OSUProvider: java.lang.String getOsuNai()>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>
<android.view.accessibility.CaptioningManager: float getFontScale()>
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.content.Loader: void abandon()>
<android.view.ContextThemeWrapper: void <init>()>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>
<com.android.systemui.statusbar.BaseStatusBar: void hideRecents(boolean,boolean)>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.view.Window: boolean hasChildren()>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.content.Entity: java.util.ArrayList getSubValues()>
<android.text.style.SuggestionSpan: void <init>(android.os.Parcel)>
<android.text.BoringLayout: int getLineDescent(int)>
<com.android.location.fused.FusionEngine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.egg.MLand: void setSplash(android.view.View)>
<com.android.server.twilight.TwilightService: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack)>
<android.graphics.drawable.ShapeDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isDismissViewVisible()>
<com.android.systemui.analytics.DataCollector: void onCameraHintStarted()>
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>
<android.os.Debug.InstructionCount: boolean resetAndStart()>
<android.widget.AbsListView: int getSolidColor()>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<com.android.server.audio.AudioService.VolumeController: android.os.IBinder asBinder()>
<com.android.server.usb.UsbService: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
<com.android.layoutlib.bridge.android.BridgeContext: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.view.View: void setMinimumWidth(int)>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,java.nio.IntBuffer)>
<android.media.Cea608CCParser.DisplayListener: void onDisplayChanged(android.text.SpannableStringBuilder[])>
<com.android.documentsui.RootsList: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void removeCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>
<android.service.media.MediaBrowserService: void setSessionToken(android.media.session.MediaSession.Token)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawIntoSurfaces(android.hardware.camera2.legacy.CaptureCollector)>
<android.content.res.Configuration: boolean needNewResources(int,int)>
<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int)>
<com.android.server.usage.AppIdleHistory: void setIdle(java.lang.String,int,long)>
<android.widget.GridLayout: boolean getUseDefaultMargins()>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>
<android.telecom.CallScreeningService: void respondToCall(android.telecom.Call.Details,android.telecom.CallScreeningService.CallResponse)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.server.TextServicesManagerService.Lifecycle: void onStart()>
<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.graphics.NinePatch: int getHeight()>
<com.android.hotspot2.osu.ClientKeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>
<com.android.systemui.statusbar.ServiceMonitor: void setComponent(android.content.ComponentName)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int,int)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap.Config getConfig()>
<com.android.preload.ui.UI: void showWaitDialog()>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingFinished()>
<javax.microedition.khronos.opengles.GL10: void glPixelStorei(int,int)>
<android.bluetooth.BluetoothAdapter: void finalize()>
<com.android.systemui.qs.tiles.DndTile: void setCombinedIcon(android.content.Context,boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindRenderbufferOES(int,int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDisallowedApplication(java.lang.String)>
<android.media.MediaDrm.CryptoSession: boolean verify(byte[],byte[],byte[])>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.view.View: void onAnimationEnd()>
<com.android.systemui.volume.VolumeDialogController: void addCallback(com.android.systemui.volume.VolumeDialogController.Callbacks,android.os.Handler)>
<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<android.graphics.Movie: int width()>
<android.os.StatFs: long getAvailableBlocksLong()>
<com.android.systemui.statusbar.notification.TransformState: boolean transformViewTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.nfc_extras.EeListenModeException: void <init>(java.lang.String)>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
<android.preference.Preference: void setOrder(int)>
<android.content.IntentFilter: void <init>()>
<android.graphics.drawable.ColorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOwnScrollY(int)>
<com.android.keyguard.KeyguardSecurityView: void onResume(int)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>
<android.content.ContextWrapper: android.content.Context createDisplayContext(android.view.Display)>
<com.android.gallery3d.glrenderer.BasicTexture: int getTarget()>
<com.android.systemui.qs.tiles.BatteryTile: void setDetailListening(boolean)>
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: void <init>(int,int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.A2dpProfile getA2dpProfile()>
<android.content.ContentProviderClient: void finalize()>
<android.os.Handler: android.os.Message obtainMessage(int)>
<com.android.systemui.qs.QSTileView: void <init>(android.content.Context,com.android.systemui.qs.QSIconView,boolean)>
<com.android.gallery3d.exif.ExifInterface: void removeCompressedThumbnail()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getDepth()>
<android.graphics.Rect: void inset(int,int)>
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>
<android.content.SharedPreferences: java.util.Map getAll()>
<android.hardware.ConsumerIrManager: boolean hasIrEmitter()>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String,int)>
<android.content.pm.PackageInstaller.Session: java.io.OutputStream openWrite(java.lang.String,long,long)>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable)>
<com.android.hotspot2.omadm.XMLNode: java.util.Map getTextualAttributes()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int nextTag()>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.RenderResources getRenderResources()>
<com.android.systemui.DessertCase: void onResume()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String[] fileList()>
<android.telecom.VideoProfile: boolean isTransmissionEnabled(int)>
<android.renderscript.Int2: void <init>()>
<android.graphics.Paint: void setDither(boolean)>
<com.android.settingslib.bluetooth.HidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<android.webkit.WebViewProvider.ViewDelegate: void onAttachedToWindow()>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating()>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController: boolean removeOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float)>
<android.service.notification.ZenModeConfig.EventInfo: android.service.notification.ZenModeConfig.EventInfo copy()>
<android.widget.TableLayout: void addView(android.view.View,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glStencilOp(int,int,int)>
<android.text.method.ArrowKeyMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int,boolean)>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setAudioFormat(android.media.AudioFormat)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: boolean isIconOnLeft()>
<android.widget.DialerFilter: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.hardware.Camera.Parameters: void setJpegQuality(int)>
<android.content.pm.LauncherApps: void startShortcut(android.content.pm.ShortcutInfo,android.graphics.Rect,android.os.Bundle)>
<android.widget.AbsListView: boolean isPaddingOffsetRequired()>
<com.android.keyguard.KeyguardSimPinView: void onFinishInflate()>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>
<android.database.DataSetObservable: void notifyChanged()>
<android.graphics.drawable.LayerDrawable: void setPaddingRelative(int,int,int,int)>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void requestScrollerTopPaddingUpdate(boolean)>
<com.android.server.backup.Trampoline: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<android.media.audiofx.Visualizer: int getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)>
<com.android.systemui.classifier.FalsingLog: void log(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setFinishScrollingCallback(java.lang.Runnable)>
<com.android.systemui.recents.Recents: void preloadRecents()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>
<android.webkit.ServiceWorkerController: void setServiceWorkerClient(android.webkit.ServiceWorkerClient)>
<com.android.tools.layoutlib.create.DependencyFinder: java.util.List findDeps(java.util.List)>
<android.view.inputmethod.InputMethodManager: boolean isActive()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.HideStackActionButtonEvent)>
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>
<android.ddm.DdmHandleAppName: java.lang.String getAppName()>
<android.drm.DrmUtils: android.drm.DrmUtils.ExtendedMetadataParser getExtendedMetadataParser(byte[])>
<com.android.server.policy.BarController: com.android.server.statusbar.StatusBarManagerInternal getStatusBarInternal()>
<com.android.server.pm.PackageManagerService: boolean setEphemeralApplicationCookie(java.lang.String,byte[],int)>
<android.text.style.LineHeightSpan.WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>
<android.app.NotificationManager: void cancel(java.lang.String,int)>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.media.midi.MidiDeviceService: void onClose()>
<com.android.location.provider.GmsFusedBatchOptions: int getFlags()>
<com.android.systemui.statusbar.NotificationOverflowContainer: android.view.View getContentView()>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo getNetworkInfo()>
<android.widget.AbsListView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.backup.BackupManagerService: void fullTransportBackup(java.lang.String[])>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>
<com.android.systemui.qs.external.TileServiceManager: int getBindPriority()>
<android.widget.TextView: void setFreezesText(boolean)>
<android.telecom.RemoteConnection: java.util.List getConferenceableConnections()>
<com.android.systemui.qs.external.TileServices: void freeService(com.android.systemui.qs.external.CustomTile,com.android.systemui.qs.external.TileServiceManager)>
<android.app.DialogFragment: void setStyle(int,int)>
<android.content.RestrictionEntry: boolean equals(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: com.android.server.net.NetworkStatsService.NetworkStatsSettings.Config getXtConfig()>
<com.android.systemui.tuner.OtherPrefs: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<android.widget.VideoView: java.lang.CharSequence getAccessibilityClassName()>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>
<com.android.commands.uiautomator.EventsCommand: void <init>()>
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.media.tv.TvContentRating: boolean contains(android.media.tv.TvContentRating)>
<com.android.systemui.SwipeHelper: boolean isDismissGesture(android.view.MotionEvent)>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
<com.android.server.NativeDaemonTimeoutException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>
<com.android.documentsui.dirlist.DirectoryFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.keyguard.KeyguardSecurityContainer: void showUsabilityHint()>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>
<android.hardware.camera2.dispatch.InvokeDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.systemui.statusbar.phone.PanelView: void resetViews()>
<android.view.InputQueue.Callback: void onInputQueueCreated(android.view.InputQueue)>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
<android.content.ClipDescription: int describeContents()>
<android.widget.RelativeLayout: java.lang.CharSequence getAccessibilityClassName()>
<android.content.pm.PackageParser.Package: void setUse32bitAbi(boolean)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>
<com.android.hotspot2.osu.OSUManager: void tickleIconCache(boolean)>
<android.telecom.Conference: void setConnectionCapabilities(int)>
<com.android.systemui.qs.QSContainer: void setHeaderListening(boolean)>
<com.android.systemui.SystemUIApplication: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.KernelID getKernelID_Separate()>
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.lang.String)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<android.hardware.radio.RadioTuner.Callback: void onEmergencyAnnouncement(boolean)>
<android.app.SearchDialog.SearchBar: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>
<com.android.keyguard.KeyguardSimPinView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.SignalClusterView: boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<android.widget.AbsSeekBar: void setTickMarkTintList(android.content.res.ColorStateList)>
<android.os.BatteryStats.Uid: void noteActivityResumedLocked(long)>
<com.android.shell.BugreportStorageProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>
<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<com.android.systemui.statusbar.SystemBars: void onNoService()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getBadgedActivityIcon(android.content.pm.ActivityInfo,int)>
<android.hardware.Camera.Parameters: void setJpegThumbnailQuality(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: java.lang.String getType(android.net.Uri)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: byte[] toByteArray()>
<android.media.MediaDrm: void removeKeys(byte[])>
<android.widget.LinearLayout: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.SignalClusterView: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>
<android.app.Notification.Builder: android.app.Notification.Builder setDefaults(int)>
<com.android.hotspot2.omadm.OMAException: void <init>(java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStoppedLocked(long)>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<com.android.server.am.ActivityManagerService: void attachApplication(android.app.IApplicationThread)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Element: android.renderscript.Element I32_2(android.renderscript.RenderScript)>
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>
<com.google.android.util.AbstractMessageParser.Photo: boolean isMedia()>
<android.speech.RecognitionListener: void onEndOfSpeech()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onOverScrolled(int,int,boolean,boolean)>
<android.view.MenuItem: boolean expandActionView()>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.graphics.drawable.LayerDrawable: void setPadding(int,int,int,int)>
<android.renderscript.Matrix2f: void rotate(float)>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhotoURL(java.lang.String,java.lang.String,java.lang.String)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
<com.android.server.am.BatteryStatsService: void onLowPowerModeChanged(boolean)>
<com.android.server.pm.PackageInstallerSession: java.lang.String[] getNames()>
<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.qs.QuickTileLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.transition.Slide: int getSlideEdge()>
<com.android.server.notification.EventConditionProvider: void onConnected()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncPeriodic(long,long)>
<android.webkit.ServiceWorkerController: android.webkit.ServiceWorkerWebSettings getServiceWorkerWebSettings()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onFinishedGoingToSleep(int,boolean)>
<android.widget.TextView: java.lang.CharSequence getHint()>
<android.hardware.Camera.Parameters: void unflatten(java.lang.String)>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.widget.ViewFlipper: void stopFlipping()>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
<com.android.hotspot2.asn1.OidMappings: java.lang.String getKeyAlgoName(com.android.hotspot2.asn1.Asn1Oid)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>
<android.content.ContentValues: void <init>(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: java.util.ArrayList getViews()>
<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String adjustLanguageCode(java.lang.String)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<com.android.systemui.statusbar.policy.UserInfoController: void addListener(com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener)>
<android.view.ViewStructure: void setTransformation(android.graphics.Matrix)>
<android.net.MailTo: boolean isMailTo(java.lang.String)>
<com.android.gallery3d.glrenderer.BasicTexture: void <init>()>
<com.android.server.net.DelayedDiskWrite: void write(java.lang.String,com.android.server.net.DelayedDiskWrite.Writer,boolean)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getTarget()>
<com.android.server.InputMethodManagerService: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Component)>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setPreviewView(android.view.View)>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>
<com.android.photos.views.TiledImageRenderer: int getViewHeight()>
<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<android.speech.tts.SynthesisRequest: int getPitch()>
<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>
<android.media.MediaCodec: void release()>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>
<com.android.uiautomator.core.UiObject: boolean performTwoPointerGesture(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point,int)>
<android.renderscript.Allocation: long getTimeStamp()>
<com.android.systemui.recents.misc.SystemServicesProxy: int getProcessUser()>
<com.android.server.am.ActivityManagerService: void restart()>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>
<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.tv.pip.PipManager: void initialize(android.content.Context)>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.media.session.PlaybackState.CustomAction: java.lang.String toString()>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot saveLayer(android.graphics.RectF,android.graphics.Paint_Delegate,int)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void <init>(android.content.Context)>
<com.android.systemui.statusbar.TransformableView: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.printspooler.util.ApprovedPrintServices: void pruneApprovedServices(java.util.List)>
<com.android.systemui.SwipeHelper: void prepareDismissAnimation(android.view.View,android.animation.Animator)>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>
<android.database.AbstractCursor: float getFloat(int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long)>
<android.view.KeyCharacterMap.UnavailableException: void <init>(java.lang.String)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFpsRange()>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>
<android.transition.Transition: java.util.List getTargetIds()>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>
<android.database.AbstractCursor: byte[] getBlob(int)>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.documentsui.DocumentsApplication: void onCreate()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>
<android.media.SoundPool.Builder: android.media.SoundPool build()>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>
<android.view.KeyCharacterMap: int getKeyboardType()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRGB(int,int,int)>
<com.android.gallery3d.exif.ExifInterface: int getFlagsFromAllowedIfds(int[])>
<android.renderscript.ScriptGroup: void destroy()>
<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>
<com.android.hotspot2.pps.DomainMatcher: com.android.hotspot2.pps.DomainMatcher.Match isSubDomain(java.util.List)>
<android.security.keystore.KeyGenParameterSpec: java.math.BigInteger getCertificateSerialNumber()>
<android.content.pm.LauncherApps.Callback: void onPackageRemoved(java.lang.String,android.os.UserHandle)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
<android.telecom.StatusHints: int hashCode()>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.content.ComponentName)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onUserContextChanged()>
<com.android.systemui.statusbar.BaseStatusBar: void onLockedRemoteInput(com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View)>
<android.app.ApplicationThreadProxy: void setProcessState(int)>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>
<com.android.systemui.statusbar.NotificationGuts: void onDetachedFromWindow()>
<android.media.audiofx.Virtualizer: boolean forceVirtualizationMode(int)>
<com.android.server.net.IpConfigStore: void loge(java.lang.String)>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan build()>
<android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>
<com.android.server.tv.TvInputHal.Callback: void onStreamConfigurationChanged(int,android.media.tv.TvStreamConfig[])>
<android.database.Cursor: void deactivate()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStopped()>
<android.util.LruCache: int putCount()>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider.PipeDataWriter)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<android.widget.PopupWindow: void update(android.view.View,int,int)>
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()>
<android.graphics.Color: int alpha(int)>
<android.net.wifi.p2p.WifiP2pGroup: int describeContents()>
<android.media.session.PlaybackState: long getActions()>
<android.net.Network: void bindSocket(java.net.Socket)>
<android.view.WindowManagerInternal.AppTransitionListener: void onAppTransitionFinishedLocked(android.os.IBinder)>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String,java.lang.String)>
<android.mtp.MtpObjectInfo: int getParent()>
<com.android.server.NativeDaemonConnectorException: int getCode()>
<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.content.pm.ShortcutServiceInternal.ShortcutChangeListener: void onShortcutChanged(java.lang.String,int)>
<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onStateChanged()>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>
<com.android.server.am.UnsupportedDisplaySizeDialog: void dismiss()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<android.telecom.Conference: void removeExtras(java.lang.String[])>
<android.view.ViewConfiguration: float getScrollFriction()>
<android.widget.NumberPicker: int getMinValue()>
<android.app.ActivityGroup: void onPause()>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void <init>(com.android.settingslib.applications.ApplicationsState.AppFilter,com.android.settingslib.applications.ApplicationsState.AppFilter)>
<android.nfc.NdefMessage: int getByteArrayLength()>
<com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler: void showBatteryView()>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getXtPersistBytes(long)>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void forceMeasure()>
<com.android.systemui.egg.MLandActivity: void onCreate(android.os.Bundle)>
<android.net.http.HttpResponseCache: int getRequestCount()>
<com.android.keyguard.KeyguardPatternView: void showUsabilityHint()>
<com.android.server.usage.AppIdleHistory: void updateDisplayLocked(boolean,long)>
<com.android.server.DeviceIdleController.LocalService: void setNetworkPolicyTempWhitelistCallback(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<android.widget.TextView: int getMaxWidth()>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>
<android.app.NotificationManager.Policy: void <init>(int,int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isHeading()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerDesc(java.lang.String)>
<android.opengl.GLES32: void glTexParameterIuiv(int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.android.systemui.recents.views.RecentsView: void showEmptyView(int)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: int getExpandedHeight()>
<android.provider.Settings.Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
<com.android.server.InputMethodManagerService: void hideMySoftInput(android.os.IBinder,int)>
<com.android.gallery3d.exif.ExifInterface: int[] getAllowedIfdsFromInfo(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int movePrimaryStorage(android.os.storage.VolumeInfo)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Element: android.renderscript.Element.DataType getDataType()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>
<android.widget.RelativeLayout: int getBaseline()>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchDown()>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>
<android.app.Fragment: void setAllowReturnTransitionOverlap(boolean)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>
<android.app.usage.ConfigurationStats: long getFirstTimeStamp()>
<android.opengl.GLES30: void glEndTransformFeedback()>
<com.android.server.wm.DisplaySettings: void <init>()>
<com.android.systemui.qs.QSTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: java.lang.Runnable incrementAsRunnable()>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(int[],int)>
<javax.microedition.khronos.opengles.GL10: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>
<android.view.InputQueue.Callback: void onInputQueueDestroyed(android.view.InputQueue)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRingerModeChanged(int)>
<com.android.systemui.BatteryMeterDrawable: void setBounds(int,int,int,int)>
<com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getTransform(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getDomainSuffixMatch()>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>
<com.android.server.backup.PermissionBackupHelper: void <init>()>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void dismissKeyboardShortcutsMenu()>
<com.android.systemui.classifier.ProximityClassifier: java.lang.String getTag()>
<android.renderscript.Matrix4f: void <init>(float[])>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setAppName(java.lang.String)>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiSelector)>
<android.media.MediaRouter.SimpleCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<com.android.server.AppOpsService: void shutdown()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>
<android.printservice.PrintService: void onRequestCancelPrintJob(android.printservice.PrintJob)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeBeginSnapshot(java.lang.String)>
<android.widget.GridLayout: void setOrientation(int)>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.telephony.CellIdentityLte: int getCi()>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.util.SparseLongArray: int indexOfValue(long)>
<com.android.server.location.GeocoderProxy: com.android.server.location.GeocoderProxy createAndBind(android.content.Context,int,int,int,android.os.Handler)>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>
<com.android.server.LocationManagerService: void clearTestProviderLocation(java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)>
<android.graphics.Xfermode_Delegate: java.awt.Composite getComposite(int)>
<android.mtp.MtpEvent: int getParameter2()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeDeviceName(boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void onDensityOrFontScaleChanged()>
<android.view.Window.Callback: boolean onSearchRequested()>
<android.renderscript.Type: boolean hasMipmaps()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean hasMultipleUsers()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<android.content.res.TypedArray: int getIndex(int)>
<android.view.View: void setOnGenericMotionListener(android.view.View.OnGenericMotionListener)>
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>
<android.view.View: float getY()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<com.android.settingslib.widget.AnimatedImageView: void setImageResource(int)>
<android.widget.RemoteViews: void setAccessibilityTraversalBefore(int,int)>
<android.media.audiofx.BassBoost: void setStrength(short)>
<android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener: void onDeleteGroup(int)>
<com.android.settingslib.RestrictedLockUtils: void setTextViewAsDisabledByAdmin(android.content.Context,android.widget.TextView,boolean)>
<android.location.Address: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<android.view.LayoutInflater: android.view.LayoutInflater from(android.content.Context)>
<com.android.server.net.NetworkStatsRecorder: void maybePersistLocked(long)>
<com.android.systemui.qs.QSContainer: void notifyCustomizeChanged()>
<android.app.ActionBar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.storage.StorageVolume: int hashCode()>
<android.net.wifi.WpsInfo: int describeContents()>
<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.stack.AmbientState: void setStackTranslation(float)>
<android.renderscript.Double4: void <init>()>
<android.net.VpnService: boolean protect(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice addDevice(com.android.settingslib.bluetooth.LocalBluetoothAdapter,com.android.settingslib.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice)>
<android.location.Location: boolean isFromMockProvider()>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setDiscoverableTimeout(int)>
<android.view.View: void removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>
<com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent: com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction getDirectionFromKeyCode(int)>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int)>
<android.renderscript.ProgramStore.Builder: void <init>(android.renderscript.RenderScript)>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.app.WallpaperManager: void setResource(int)>
<com.android.server.AnyMotionDetector.Vector3: float dotProduct(com.android.server.AnyMotionDetector.Vector3)>
<com.android.hotspot2.omadm.OMAConstants: java.lang.String mapStatus(com.android.hotspot2.osu.OSUStatus)>
<com.android.systemui.classifier.SpeedClassifier: java.lang.String getTag()>
<android.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>
<com.android.systemui.recents.misc.Utilities: android.util.ArraySet arrayToSet(java.lang.Object[],android.util.ArraySet)>
<android.view.accessibility.AccessibilityWindowInfo: boolean equals(java.lang.Object)>
<com.android.server.policy.PhoneWindowManager: void startedWakingUp()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setThumbPixWidth(long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isExpanded()>
<android.graphics.Canvas_Delegate: void native_drawTextOnPath(long,char[],int,int,long,float,float,int,long,long)>
<com.android.server.usage.AppIdleHistory: void onUserRemoved(int)>
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>
<android.inputmethodservice.Keyboard.Key: void onReleased(boolean)>
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>
<javax.microedition.khronos.opengles.GL11: void glTexEnvi(int,int,int)>
<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityForConsumptionEnd()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>
<android.os.Looper: void quitSafely()>
<android.media.Ringtone: int getStreamType()>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getBadgedIcon(int)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxWidth(int)>
<android.app.backup.BackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.server.policy.EnableAccessibilityController: void disableAccessibility(android.content.Context)>
<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.telephony.CellSignalStrengthGsm: int getDbm()>
<android.os.BatteryManager: long getLongProperty(int)>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.ScriptIntrinsicConvolve3x3 create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.media.MediaDescription.Builder: android.media.MediaDescription build()>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>
<android.content.ContentResolver: void releasePersistableUriPermission(android.net.Uri,int)>
<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>
<android.nfc.tech.TagTechnology: void connect()>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOnEmptySpaceClickListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener)>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>
<android.telecom.VideoProfile: int describeContents()>
<com.android.server.notification.ScheduleConditionProvider: void attachBase(android.content.Context)>
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<com.android.server.am.ActivityManagerService: boolean isTopActivityImmersive()>
<android.app.ActivityManagerProxy: int setVrMode(android.os.IBinder,boolean,android.content.ComponentName)>
<com.android.server.media.MediaRouterService: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>
<android.appwidget.AppWidgetHost: void startListening()>
<com.android.server.am.ActivityManagerService: void setTestPssMode(boolean)>
<android.app.assist.AssistStructure.ViewNode: int getId()>
<com.android.printservice.recommendation.RemotePrintServicePlugin.OnChangedListener: void onChanged()>
<android.content.CursorLoader: android.database.Cursor loadInBackground()>
<com.android.documentsui.SectionedListAdapter: int getCount()>
<android.media.MediaRouter.VolumeCallback: void onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo,int)>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>
<com.google.android.util.AbstractMessageParser.Format: boolean isHtml()>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: int resolveId()>
<android.app.Notification.WearableExtender: boolean getHintShowBackgroundOnly()>
<com.android.server.power.ScreenOnBlocker: void release()>
<android.view.FrameStats: long getFramePresentedTimeNano(int)>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,int[],int)>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(int)>
<com.android.systemui.recents.model.FilteredTaskList: void set(java.util.List)>
<com.android.server.net.NetworkPolicyManagerService: void addUidPolicy(int,int)>
<android.database.sqlite.SQLiteStatement: long executeInsert()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<android.view.ViewStub: int getInflatedId()>
<android.widget.MediaController: void setEnabled(boolean)>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: void <init>(int,int,java.lang.String,java.lang.String,int[])>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,int,java.lang.Object)>
<com.android.systemui.qs.QSTile.DetailAdapter: java.lang.CharSequence getTitle()>
<android.print.PrintDocumentInfo: int hashCode()>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.FileA3D.EntryType getEntryType()>
<com.android.server.location.GnssLocationProvider.GnssSystemInfoProvider: int getGnssYearOfHardware()>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>
<android.view.Window: long getTransitionBackgroundFadeDuration()>
<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)>
<android.view.MenuItem: android.view.MenuItem setActionView(android.view.View)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectAll()>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>
<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>
<com.android.server.accessibility.AccessibilityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,java.lang.Object)>
<android.view.MenuItem: char getAlphabeticShortcut()>
<android.view.ActionMode.Callback2: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.graphics.drawable.LayerDrawable: int getLayerInsetStart(int)>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>
<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder excludeMixRule(int,java.lang.Object)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void toggleSplitScreenMode(int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void onSessionShown(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<android.telecom.RemoteConnection.Callback: void onCallerDisplayNameChanged(android.telecom.RemoteConnection,java.lang.String,int)>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>
<android.hardware.Sensor: java.lang.String getStringType()>
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>
<android.net.Uri: java.lang.String getAuthority()>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>
<android.os.PatternMatcher: void <init>(java.lang.String,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void cancelThumbnailTransition(int)>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>
<android.hardware.fingerprint.IFingerprintDaemon: int cancelEnumeration()>
<com.android.server.usage.AppIdleHistory: void writeAppIdleDurationsLocked()>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowVibrateHint()>
<android.view.MotionEvent: float getAxisValue(int)>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>
<android.media.midi.MidiDeviceService: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<android.renderscript.FieldPacker: android.renderscript.Float3 subFloat3()>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<com.android.server.Watchdog.HandlerChecker: int getCompletionStateLocked()>
<android.media.tv.TvRecordingClient: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.widget.ViewSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.server.pm.PermissionsState: void reset()>
<android.os.LocaleList: java.util.Locale get(int)>
<com.android.server.accessibility.AutoclickController: void onDestroy()>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,int[],int)>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>
<com.android.uiautomator.core.UiObject: boolean isCheckable()>
<android.app.FragmentHostCallback: boolean onHasView()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.anqp.Constants: java.lang.String getPrefixedString(java.nio.ByteBuffer,int,java.nio.charset.Charset)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setPanelExpanded(boolean)>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.hotspot2.WifiNetworkAdapter: android.net.wifi.WifiConfiguration getActivePasspointNetwork()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void cancelPreloadRecentApps()>
<com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent: void <init>(com.android.systemui.recents.model.Task)>
<android.database.MergeCursor: void deactivate()>
<com.android.systemui.statusbar.phone.PanelView: void startExpandMotion(float,float,boolean,float)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getKeyValidityStart()>
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
<android.content.RestrictionEntry: void setTitle(java.lang.String)>
<com.android.gallery3d.common.Utils: void swap(int[],int,int)>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<com.android.systemui.recents.RecentsActivityLaunchState: int getInitialFocusTaskIndex(int,boolean)>
<android.view.ScaleGestureDetector: float getFocusX()>
<com.android.anqp.eap.InnerAuthEAP: void <init>(int,java.nio.ByteBuffer)>
<android.util.JsonWriter: android.util.JsonWriter value(double)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>
<android.nfc.tech.NfcV: byte[] transceive(byte[])>
<com.android.documentsui.dirlist.DirectoryFragment: void reloadSearch(android.app.FragmentManager,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,java.lang.String)>
<android.view.View: android.os.Handler getHandler()>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>
<com.android.documentsui.FilteringCursorWrapper: short getShort(int)>
<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
<android.renderscript.RenderScript: void sendMessage(int,int[])>
<android.renderscript.Short3: void <init>()>
<com.android.server.policy.GlobalActions.LongPressAction: boolean onLongPress()>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>
<android.media.MediaPlayer: void prepare()>
<com.android.server.pm.Installer: void rmPackageDir(java.lang.String)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
<android.app.Fragment: boolean isRemoving()>
<android.mtp.MtpDevice: java.lang.String toString()>
<com.android.systemui.SwipeHelper: void prepareSnapBackAnimation(android.view.View,android.animation.Animator)>
<com.android.systemui.statusbar.NotificationContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.VectorDrawable: void <init>()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideStarted(boolean,float,float)>
<com.android.systemui.recents.events.EventBus.ReusableEvent: java.lang.Object clone()>
<android.widget.AdapterView: void removeView(android.view.View)>
<android.os.AsyncTask: android.os.AsyncTask.Status getStatus()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setAlpha(int)>
<android.graphics.MaskFilter_Delegate: java.lang.String getSupportMessage()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.providers.settings.SettingsBackupAgent: void onCreate()>
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.Toolbar: void setTitleMargin(int,int,int,int)>
<android.view.IWindowManagerImpl: void <init>(android.content.res.Configuration,android.util.DisplayMetrics,int,boolean)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setCustomBackground(android.graphics.drawable.Drawable)>
<android.view.View: void setScrollContainer(boolean)>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldShowOnKeyguard(android.service.notification.StatusBarNotification)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<android.widget.TextView: void setLetterSpacing(float)>
<com.android.systemui.statusbar.StatusBarIconView: void onSizeChanged(int,int,int,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurningOn(com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener)>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>
<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.hardware.camera2.params.StreamConfigurationMap: java.lang.String toString()>
<android.media.Tokenizer.OnTokenListener: void onEnd(java.lang.String)>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndicationDelayed(long)>
<android.net.NetworkStatsHistory.ParcelUtils: void writeLongArray(android.os.Parcel,long[],int)>
<com.android.printspooler.model.PageContentRepository: void finalize()>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.app.ApplicationThreadProxy: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean canConfigWifi()>
<com.android.commands.sm.Sm: void runBenchmark()>
<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>
<android.widget.AdapterViewFlipper: void setAdapter(android.widget.Adapter)>
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()>
<com.android.hotspot2.omadm.MgmtTreeRoot: void toXml(java.lang.StringBuilder)>
<com.android.hotspot2.asn1.Asn1ID: com.android.hotspot2.asn1.Asn1Class getAsn1Class()>
<com.android.commands.appwidget.AppWidget: void main(java.lang.String[])>
<android.view.View.BaseSavedState: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setRestingIndication(java.lang.String)>
<android.telephony.CellInfoWcdma: void writeToParcel(android.os.Parcel,int)>
<android.widget.GridLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>
<com.android.server.display.WifiDisplayController.Listener: void onScanFinished()>
<com.android.tools.layoutlib.java.System_Delegate: void log(java.lang.String)>
<android.hardware.camera2.utils.SizeAreaComparator: int compare(android.util.Size,android.util.Size)>
<android.graphics.NinePatch_Delegate: com.android.ninepatch.NinePatchChunk getChunk(byte[])>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setBarHeight(int)>
<android.service.quicksettings.Tile: int describeContents()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.FloatMath: float cos(float)>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>
<android.media.TimedText: java.lang.String getText()>
<android.text.BoringLayout: boolean getLineContainsTab(int)>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<android.graphics.RectF: void offset(float,float)>
<org.apache.http.conn.ssl.StrictHostnameVerifier: java.lang.String toString()>
<android.opengl.GLES31: void glSampleMaski(int,int)>
<com.android.server.NativeDaemonEvent: boolean isClassContinue()>
<android.widget.CursorTreeAdapter: java.lang.String convertToString(android.database.Cursor)>
<android.graphics.Path_Delegate: java.awt.geom.Path2D getJavaShape()>
<android.view.View: void setNextFocusForwardId(int)>
<android.hardware.Camera.Parameters: int getExposureCompensation()>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.net.wifi.WifiEnterpriseConfig: void writeToParcel(android.os.Parcel,int)>
<android.view.MotionEvent: float getAxisValue(int,int)>
<android.service.chooser.ChooserTargetService: java.util.List onGetChooserTargets(android.content.ComponentName,android.content.IntentFilter)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ApplicationInfo getApplicationInfoAsUser(java.lang.String,int,int)>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>
<com.android.systemui.recents.views.AnimationProps: long getInitialPlayTime(int)>
<android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener: void onHighTextContrastStateChanged(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>
<android.telephony.SignalStrength: int hashCode()>
<android.widget.TableLayout: boolean isColumnStretchable(int)>
<com.android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void updateExpandability(boolean,android.view.View.OnClickListener)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void startAnimationToState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackStateAnimator,long,long)>
<android.widget.Editor.HandleView: int getHorizontalGravity(boolean)>
<android.util.JsonWriter: void flush()>
<com.android.systemui.qs.QSTile: void showDetail(boolean)>
<android.media.MediaCodecInfo.VideoCapabilities: int getWidthAlignment()>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean)>
<com.android.documentsui.dirlist.Model.UpdateListener: void onModelUpdateFailed(java.lang.Exception)>
<com.android.server.net.NetworkPolicyManagerService: void setDeviceIdleMode(boolean)>
<android.database.Cursor: byte[] getBlob(int)>
<android.widget.ImageView: void setAlpha(int)>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>
<android.hardware.SensorManager: float getInclination(float[])>
<com.android.systemui.recents.views.TaskStackView: boolean useGridLayout()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void preloadPlan(com.android.systemui.recents.model.RecentsTaskLoader,int,boolean)>
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>
<android.inputmethodservice.Keyboard.Key: int[] getCurrentDrawableState()>
<android.app.Presentation: void onDisplayChanged()>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.content.pm.PackageParser.Instrumentation: java.lang.String toString()>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<com.android.location.fused.FusedLocationProvider: long onGetStatusUpdateTime()>
<android.media.SoundPool: void finalize()>
<android.graphics.FontFamily_Delegate: void setFontLocation(java.lang.String)>
<android.hardware.Camera.Parameters: void set(java.lang.String,int)>
<android.view.InputDevice: int getId()>
<android.hardware.camera2.impl.CameraDeviceImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.widget.SearchView: void setInputType(int)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>
<com.android.systemui.statusbar.tv.TvStatusBar: void toggleSplitScreenMode(int,int)>
<android.app.ActivityManagerProxy: void killApplication(java.lang.String,int,int,java.lang.String)>
<com.android.hotspot2.asn1.Asn1String: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceType(android.view.Surface)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: com.android.ide.common.rendering.api.ViewType getViewType()>
<com.android.server.display.NightDisplayService: void onCustomEndTimeChanged(com.android.internal.app.NightDisplayController.LocalTime)>
<android.text.method.ScrollingMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<com.google.android.util.AbstractMessageParser.MusicTrack: boolean isHtml()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void preloadRecentApps()>
<android.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.filterpacks.imageproc.BlackWhiteFilter: void setupPorts()>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>
<com.android.hotspot2.osu.OSUCommand: com.android.hotspot2.osu.commands.OSUCommandData getCommandData()>
<android.bluetooth.BluetoothHealthAppConfiguration: boolean equals(java.lang.Object)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getStackTasks()>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tiles.UserDetailItemView: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.session.MediaController.Callback: void onQueueChanged(java.util.List)>
<android.os.Parcel: byte readByte()>
<android.media.RemoteControlClient: android.media.RemoteControlClient.MetadataEditor editMetadata(boolean)>
<com.android.server.am.ActivityManagerService: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<com.android.settingslib.users.AppRestrictionsHelper.SelectableAppInfo: java.lang.String toString()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedSqlLiteObjects()>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>
<android.telecom.RemoteConnection: android.telecom.RemoteConnection.VideoProvider getVideoProvider()>
<android.ddm.DdmHandleViewDebug: void connected()>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int,int)>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.media.tv.TvView: void dispatchWindowFocusChanged(boolean)>
<android.view.TextureView: void draw(android.graphics.Canvas)>
<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.TextView: int getCompoundPaddingEnd()>
<android.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>
<android.media.ImageReader: android.view.Surface getSurface()>
<com.android.keyguard.PasswordTextView.UserActivityListener: void onUserActivity()>
<android.webkit.CookieSyncManager: void startSync()>
<com.android.documentsui.Events.InputEvent: boolean isSecondaryButtonPressed()>
<android.telecom.Connection.VideoProvider: void onSetZoom(float)>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>
<android.view.View: android.graphics.Matrix getMatrix()>
<android.widget.CalendarView: long getDate()>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
<android.animation.Keyframe: android.animation.Keyframe clone()>
<android.ext.services.notification.Ranker: void onNotificationPosted(android.service.notification.StatusBarNotification)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>
<com.android.systemui.recents.views.TaskView: void onTaskDataUnloaded()>
<android.media.MediaCodec.CodecException: int getErrorCode()>
<android.util.DisplayMetrics: void setToDefaults()>
<com.android.server.policy.BarController: boolean setBarShowingLw(boolean)>
<android.media.RingtoneManager: void stopPreviousRingtone()>
<android.provider.SyncStateContract.Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeResourceValue(int,int)>
<android.util.Pair: int hashCode()>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>
<android.view.animation.PathInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.admin.DevicePolicyManager: java.util.List retrieveSecurityLogs(android.content.ComponentName)>
<android.graphics.drawable.BitmapDrawable: boolean hasMipMap()>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconBitmap(android.graphics.Bitmap)>
<com.android.layoutlib.bridge.android.BridgeContext: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.media.MediaMuxer: void setLocation(float,float)>
<com.android.server.backup.BackupManagerService: boolean isBackupEnabled()>
<android.widget.TabWidget: void setDividerDrawable(int)>
<com.android.systemui.statusbar.NotificationGuts: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.documentsui.model.RootInfo: boolean isRecents()>
<com.android.photos.views.TiledImageView: void dispatchDraw(android.graphics.Canvas)>
<com.android.preload.DeviceUtils: boolean removePreloaded(com.android.ddmlib.IDevice,long)>
<android.telephony.CellInfo: int describeContents()>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>
<android.app.Activity: android.media.session.MediaController getMediaController()>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.telecom.RemoteConnection.VideoProvider: void setZoom(float)>
<com.android.gallery3d.common.Utils: java.lang.String getUserAgent(android.content.Context)>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>
<android.text.method.LinkMovementMethod: boolean canSelectArbitrarily()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.server.tv.UinputBridge: void sendPointerUp(android.os.IBinder,int)>
<android.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.systemui.classifier.AnglesClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.recents.tv.animations.HomeRecentsEnterExitAnimationHolder: void startExitAnimation(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<android.telephony.SubscriptionInfo: int describeContents()>
<com.android.server.connectivity.KeepaliveTracker: void handleStopKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,int)>
<com.android.hotspot2.osu.OSUInfo: int getAnqpDomID()>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>
<android.text.DynamicLayout: int getEllipsisCount(int)>
<android.os.ParcelFileDescriptor: int detachFd()>
<com.android.server.tv.UinputBridge: void sendTimestamp(android.os.IBinder,long)>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>
<com.android.documentsui.DocumentsActivity: void onDocumentsPicked(java.util.List)>
<android.graphics.EmbossMaskFilter_Delegate: boolean isSupported()>
<android.widget.NumberPicker: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.content.RestrictionEntry: void writeToParcel(android.os.Parcel,int)>
<android.hardware.radio.RadioManager.ModuleProperties: int describeContents()>
<com.android.documentsui.FilesJankPerfTest: void setupAndOpenInLoop()>
<android.graphics.Matrix: boolean rectStaysRect()>
<android.util.ArraySet: void <init>(int)>
<android.util.SparseLongArray: long get(int)>
<android.view.GestureDetector: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.job.JobInfo: android.app.job.JobInfo.TriggerContentUri[] getTriggerContentUris()>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>
<com.android.server.fingerprint.ClientMonitor: void destroy()>
<android.app.VoiceInteractor.Request: void onDetached()>
<android.text.style.BulletSpan: void <init>(int)>
<android.widget.AbsListView: void setFriction(float)>
<android.view.inputmethod.CursorAnchorInfo: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>
<com.android.server.backup.Trampoline: void restoreAtInstall(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>
<com.android.server.am.ActivityManagerService: void killUid(int,int,java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.layoutlib.bridge.android.BridgeContext getCurrentContext()>
<android.app.ActivityManagerProxy: void <init>(android.os.IBinder)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isAutoConnectable()>
<android.os.Bundle: void <init>(int)>
<com.android.server.content.SyncStorageEngine.DayStats: void <init>(int)>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getClassAttribute()>
<android.telephony.TelephonyManager: android.net.Uri getVoicemailRingtoneUri(android.telecom.PhoneAccountHandle)>
<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>
<android.webkit.WebView: void onFinishTemporaryDetach()>
<com.android.server.backup.BackupManagerService.BackupRestoreTask: void execute()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.content.res.ColorStateList: boolean isOpaque()>
<android.transition.ChangeBounds: void <init>()>
<android.graphics.Canvas_Delegate: void native_drawText(long,java.lang.String,int,int,float,float,int,long,long)>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.android.gallery3d.glrenderer.GLId: int generateTexture()>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setKeyguardIndicationController(com.android.systemui.statusbar.KeyguardIndicationController)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: int getCount()>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.DataSaverController getDataSaverController()>
<com.android.keyguard.KeyguardSecurityContainer: void startAppearAnimation()>
<android.transition.Scene: void setEnterAction(java.lang.Runnable)>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>
<android.graphics.Path: void quadTo(float,float,float,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.util.Base64InputStream: void close()>
<android.graphics.drawable.LayerDrawable: int getLayerGravity(int)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getPreviewSize()>
<android.widget.Switch: void onProvideStructure(android.view.ViewStructure)>
<android.graphics.drawable.LevelListDrawable: void <init>()>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>
<android.text.format.Time: int getActualMaximum(int)>
<android.widget.OnDateChangedListener: void onDateChanged()>
<android.app.Activity: void finishActivity(int)>
<android.widget.ProgressBar: java.lang.CharSequence getAccessibilityClassName()>
<android.content.res.Resources: boolean getBoolean(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<android.preference.ListPreference: java.lang.String getValue()>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<com.android.keyguard.KeyguardHostView: boolean shouldEnableMenuKey()>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.widget.CursorTreeAdapter: long getGroupId(int)>
<android.widget.ExpandableListAdapter: long getGroupId(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void resetUserExpansion()>
<com.android.hotspot2.asn1.Asn1Object: com.android.hotspot2.asn1.Asn1Class getAsn1Class()>
<com.android.statementservice.DirectStatementService: int onStartCommand(android.content.Intent,int,int)>
<com.android.server.am.ActivityManagerService: void startLockTaskMode(android.os.IBinder)>
<android.webkit.DateSorter: long getBoundary(int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.SecurityController getSecurityController()>
<com.android.keyguard.KeyguardPINView: int getPasswordTextViewId()>
<android.content.pm.ShortcutInfo: int describeContents()>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<com.android.server.notification.RankingHelper: int indexOf(java.util.ArrayList,com.android.server.notification.NotificationRecord)>
<com.android.documentsui.RootCursorWrapper: android.os.Bundle getExtras()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: java.lang.String toString()>
<com.android.server.DisplayThread: android.os.Handler getHandler()>
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<com.android.systemui.usb.UsbConfirmActivity: void onClick(android.content.DialogInterface,int)>
<android.text.style.TtsSpan.DigitsBuilder: android.text.style.TtsSpan.DigitsBuilder setDigits(java.lang.String)>
<android.app.ActionBar: android.app.ActionBar.Tab newTab()>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.net.Network: javax.net.SocketFactory getSocketFactory()>
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback,android.app.Activity)>
<android.content.BroadcastReceiver.PendingResult: android.os.Bundle getResultExtras(boolean)>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.os.BatteryStats.Uid: void noteWifiRunningLocked(long)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>
<android.widget.ProgressBar: void <init>(android.content.Context)>
<android.renderscript.Type.Builder: android.renderscript.Type create()>
<android.view.WindowId.FocusObserver: void <init>()>
<android.media.DrmInitData.SchemeInitData: int hashCode()>
<android.util.Rational: boolean isNaN()>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.widget.ActionMenuView.LayoutParams)>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPulseOnSigMotion()>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureCancelled(android.view.MotionEvent,int)>
<android.hardware.camera2.utils.SurfaceUtils: void checkConstrainedHighSpeedSurfaces(java.util.Collection,android.util.Range,android.hardware.camera2.params.StreamConfigurationMap)>
<android.widget.QuickContactBadge: void drawableStateChanged()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isAttributeDefault(int)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.inputmethodservice.ExtractEditText: void startInternalChanges()>
<android.util.SparseLongArray: void delete(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getIdAttributeResourceValue(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>
<com.android.systemui.recents.RecentsImpl: void onDraggingInRecentsEnded(float)>
<com.android.systemui.tuner.TunerZenModePanel: void setDoneListener(android.view.View.OnClickListener)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowDestroyed()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.app.backup.BackupDataInput: boolean readNextHeader()>
<android.os.BatteryStats.Uid.Pkg.Serv: int getStarts(int)>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>
<android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
<com.android.server.backup.BackupManagerService: void agentConnected(java.lang.String,android.os.IBinder)>
<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>
<android.view.GestureDetector.OnContextClickListener: boolean onContextClick(android.view.MotionEvent)>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[],int,int)>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addConstant(android.renderscript.Type)>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>
<android.media.session.MediaSession.QueueItem: long getQueueId()>
<android.graphics.RectF: void <init>(android.graphics.RectF)>
<com.android.server.backup.KeyValueBackupJob: long nextScheduled()>
<android.os.BatteryStats.Uid: int getUserActivityCount(int,int)>
<android.os.RemoteException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.NotificationData.Environment: com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager()>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>
<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>
<com.android.systemui.qs.tiles.NightDisplayTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.qs.QSIconView: void onMeasure(int,int)>
<android.view.View: android.content.res.ColorStateList getForegroundTintList()>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onMenuPressed()>
<com.android.settingslib.widget.AnimatedImageView: void onDetachedFromWindow()>
<com.android.anqp.eap.VendorSpecificAuth: byte[] getData()>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
<android.bluetooth.le.ScanFilter: int getManufacturerId()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleSplitScreen()>
<android.net.TrafficStats: long getMobileRxBytes()>
<android.provider.MediaStore.Audio.Playlists.Members: android.net.Uri getContentUri(java.lang.String,long)>
<android.opengl.Matrix: void setIdentityM(float[],int)>
<android.os.BatteryStats.HistoryTag: void setTo(android.os.BatteryStats.HistoryTag)>
<android.widget.ListView: int getMaxScrollAmount()>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.ExpandableView getChildAtRawPosition(float,float)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.qs.external.TileServices getTileServices()>
<android.view.ViewConfiguration: long getDefaultActionModeHideDuration()>
<android.bluetooth.BluetoothHealth: boolean registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<com.android.systemui.statusbar.phone.QSTileHost: void addCallback(android.os.Handler.Callback)>
<android.graphics.pdf.PdfDocument: java.util.List getPages()>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>
<com.google.android.util.AbstractMessageParser.Token: boolean setCaps()>
<com.android.systemui.recents.views.ViewPool: void <init>(android.content.Context,com.android.systemui.recents.views.ViewPool.ViewPoolConsumer)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>
<com.android.systemui.volume.VolumeComponent: void dismissNow()>
<com.android.server.AppOpsService.ClientState: void binderDied()>
<com.android.systemui.recents.RecentsImpl: android.app.ActivityOptions getUnknownTransitionActivityOptions()>
<android.app.Activity: void recreate()>
<android.view.accessibility.AccessibilityManager: boolean removeHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>
<com.android.commands.hid.Device: void addDelay(int)>
<android.widget.TextView: void clearComposingText()>
<android.media.ImageReader: android.media.Image acquireLatestImage()>
<android.widget.Spinner: void <init>(android.content.Context)>
<android.widget.AbsListView: void setScrollBarStyle(int)>
<android.media.session.MediaSession.Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.database.Cursor: boolean isNull(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isScrolledToBottom()>
<android.app.Dialog: android.view.Window getWindow()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>
<android.content.pm.PackageParser.PermissionGroup: java.lang.String toString()>
<android.view.IWindowManagerImpl: void startAppFreezingScreen(android.os.IBinder,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeKeyPair(android.content.ComponentName,java.lang.String)>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>
<com.android.server.notification.SystemConditionProviderService: android.content.ComponentName getComponent()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitArrayType()>
<com.android.documentsui.model.RootInfo: boolean isSd()>
<android.os.StatFs: long getFreeBytes()>
<android.app.usage.NetworkStats: void finalize()>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>
<com.android.hotspot2.osu.PostDevDataResponse: com.android.hotspot2.osu.ExecCommand getExecCommand()>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollExtent()>
<android.app.ExpandableListActivity: void onContentChanged()>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Looper_Accessor: void cleanupThread()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.Window: boolean isFloating()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onInflated(android.view.View)>
<android.widget.RemoteViews: void showNext(int)>
<android.location.Location: float distanceTo(android.location.Location)>
<com.android.server.pm.PermissionsState: java.util.Set getPermissions(int)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.LayoutTransition: void setDuration(long)>
<com.android.systemui.stackdivider.DividerView: void onBusEvent(com.android.systemui.recents.events.activity.UndockingTaskEvent)>
<com.android.systemui.recents.views.RecentsView: boolean launchPreviousTask()>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>
<android.util.JsonReader: void endArray()>
<android.animation.ValueAnimator: void start()>
<android.os.Parcel: void readBinderList(java.util.List)>
<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<android.text.SpannableStringBuilder: int getTextWatcherDepth()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void reset()>
<android.view.Menu: boolean hasVisibleItems()>
<android.graphics.drawable.ColorDrawable: int getOpacity()>
<android.animation.Animator: void resume()>
<android.widget.GridLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupsChanged()>
<com.android.server.policy.PhoneWindowManager: void dismissKeyguardLw()>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean isTransparent()>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,boolean[],int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLoadEntriesCompleted()>
<android.graphics.Canvas_Delegate: void nativeSetDrawFilter(long,long)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Configuration getConfiguration()>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>
<android.media.tv.TvInputInfo: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.hotspot2.osu.OSUInfo: java.lang.String getName(java.util.Locale)>
<android.service.notification.StatusBarNotification: java.lang.String getTag()>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>
<android.mtp.MtpDevice: boolean importFile(int,java.lang.String)>
<com.android.server.utils.ManagedApplicationService.BinderChecker: android.os.IInterface asInterface(android.os.IBinder)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>
<android.media.SyncParams: int getSyncSource()>
<com.android.systemui.power.PowerUI.WarningsUI: void showLowBatteryWarning(boolean)>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>
<com.android.systemui.qs.QSTile: void longClick()>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void clearFailedUnlockAttempts()>
<android.widget.DialerFilter: boolean onKeyDown(int,android.view.KeyEvent)>
<android.text.format.Time: java.lang.String getCurrentTimezone()>
<android.renderscript.ScriptIntrinsicYuvToRGB: void setInput(android.renderscript.Allocation)>
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.service.quicksettings.Tile: android.graphics.drawable.Icon getIcon()>
<com.android.documentsui.dirlist.DirectoryFragment: void onActivityCreated(android.os.Bundle)>
<android.widget.TextView: int getOffsetForPosition(float,float)>
<com.android.settingslib.bluetooth.HidProfile: int getOrdinal()>
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>
<android.graphics.drawable.GradientDrawable: boolean canApplyTheme()>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,short[])>
<android.webkit.PermissionRequest: java.lang.String[] getResources()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback: void onDeviceAttributesChanged()>
<android.filterpacks.imageproc.CrossProcessFilter: void process(android.filterfw.core.FilterContext)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean hasOverlappingRendering()>
<android.widget.ImageView: void drawableStateChanged()>
<android.widget.ListPopupWindow: boolean performItemClick(int)>
<android.widget.VideoView: void seekTo(int)>
<android.media.MediaExtractor: android.media.DrmInitData getDrmInitData()>
<android.text.Selection: void removeSelection(android.text.Spannable)>
<android.app.assist.AssistStructure.ViewNode: int getTextBackgroundColor()>
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)>
<android.app.Fragment: void onAttach(android.content.Context)>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.systemui.egg.MLandActivity: void startButtonPressed(android.view.View)>
<com.android.systemui.qs.QSPanel: void onTuningChanged(java.lang.String,java.lang.String)>
<android.widget.CursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<com.android.server.pm.PackageKeySetData: boolean isUsingDefinedKeySets()>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int hashCode()>
<android.webkit.WebView: void invokeZoomPicker()>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.text.Layout: int getLineCount()>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>
<android.text.style.TtsSpan: java.lang.String getType()>
<android.app.Activity: android.view.View onCreatePanelView(int)>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.WindowManagerInternal.AppTransitionListener: void onAppTransitionStartingLocked(android.os.IBinder,android.os.IBinder,android.view.animation.Animation,android.view.animation.Animation)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerSync(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<android.content.UriPermission: boolean isReadPermission()>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>
<android.widget.RelativeLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.widget.DatePicker: void setFirstDayOfWeek(int)>
<android.app.assist.AssistContent: void <init>()>
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
<android.app.admin.DevicePolicyManager: android.os.Bundle getUserRestrictions(android.content.ComponentName)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>
<android.net.NetworkCapabilities: boolean hasCapability(int)>
<android.app.job.JobInfo: int describeContents()>
<android.media.AudioRecord: int getPositionNotificationPeriod()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitClassType(java.lang.String)>
<com.android.hotspot2.omadm.MOManager: java.util.List buildSPs(com.android.hotspot2.omadm.MOTree)>
<android.content.pm.PackageInstaller.SessionParams: void setReferrerUri(android.net.Uri)>
<com.android.keyguard.CarrierText: void <init>(android.content.Context)>
<android.os.Parcel: int dataCapacity()>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getPinnedHeadsUpHeight(boolean)>
<com.android.preload.DumpTableModel: void addData(com.android.preload.DumpData)>
<android.widget.ProgressBar: void onAttachedToWindow()>
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
<android.media.midi.MidiManager: android.media.midi.MidiDeviceInfo[] getDevices()>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String shortHelp()>
<com.android.documentsui.model.DocumentInfo: boolean isCreateSupported()>
<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>
<android.media.AudioManager: void setRingerMode(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glEnable(int)>
<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilIdle()>
<android.os.Parcel: android.os.IBinder readStrongBinder()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onRtlPropertiesChanged()>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>
<com.android.systemui.qs.external.CustomTile: void startUnlockAndRun()>
<android.widget.PopupWindow: void setIgnoreCheekPress()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onFinishInflate()>
<android.app.ProgressDialog: void onStop()>
<android.hardware.camera2.params.RggbChannelVector: float getRed()>
<com.android.server.connectivity.NetworkAgentInfo: void removeRequest(int)>
<com.android.systemui.qs.tiles.CellularTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.widget.AbsListView: void onDetachedFromWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.policy.DeadZone: void onDraw(android.graphics.Canvas)>
<android.media.tv.TvInputManager: void registerCallback(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)>
<android.view.Display.Mode: int getPhysicalWidth()>
<android.renderscript.BaseObj: boolean equals(java.lang.Object)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void removeOnScrollListener(android.support.v7.widget.RecyclerView.OnScrollListener)>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>
<android.telephony.TelephonyManager: boolean setLine1NumberForDisplay(java.lang.String,java.lang.String)>
<android.location.GnssClock: boolean hasBiasNanos()>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>
<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>
<com.android.location.fused.FusedLocationProvider: int onGetStatus(android.os.Bundle)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageHeight()>
<com.android.layoutlib.bridge.Bridge: java.lang.Integer getResourceId(com.android.resources.ResourceType,java.lang.String)>
<android.content.pm.permission.RuntimePermissionPresenter.OnResultCallback: void getAppsUsingPermissions(boolean,java.util.List)>
<javax.microedition.khronos.opengles.GL10: void glBlendFunc(int,int)>
<android.location.Location: java.lang.String getProvider()>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>
<android.renderscript.Allocation: void copyFromUnchecked(int[])>
<android.app.backup.BackupDataInput: int getDataSize()>
<com.android.server.am.ActiveServices: void setServiceForegroundLocked(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.widget.EditText: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.classifier.Point: float crossProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<com.android.settingslib.widget.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void <init>(android.hardware.Camera,android.hardware.camera2.CameraCharacteristics)>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String[])>
<android.database.CharArrayBuffer: void <init>(char[])>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>
<android.view.MenuItem: android.view.MenuItem setActionView(int)>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineAlpha(float)>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 plus(com.android.server.AnyMotionDetector.Vector3)>
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>
<android.telecom.InCallService.VideoCall.Callback: void onPeerDimensionsChanged(int,int)>
<android.text.style.SuperscriptSpan: void <init>()>
<android.telephony.CellIdentityLte: int describeContents()>
<android.content.res.TypedArray: float getFloat(int,float)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.HttpAuthHandler: void cancel()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean shouldDisableNavbarGestures()>
<android.hardware.Camera.Parameters: void removeGpsData()>
<android.widget.ViewSwitcher: void reset()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void setHotspotEnabled(boolean)>
<com.android.documentsui.BaseActivity: void onCreate(android.os.Bundle)>
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,byte[])>
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProfileOwner(android.content.ComponentName,int)>
<android.app.ListFragment: void setListShown(boolean)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionStarting(long,long)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.Context: java.lang.String[] databaseList()>
<android.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)>
<android.graphics.Paint: boolean isLinearText()>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: void onAnimationEnd()>
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>
<android.text.format.Time: long normalize(boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void DGER(double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.view.IWindowManagerImpl: void registerDockedStackListener(android.view.IDockedStackListener)>
<android.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.text.style.BulletSpan: int describeContents()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean equals(java.lang.Object)>
<android.webkit.WebView: boolean performLongClick()>
<com.android.server.LocationManagerService: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.nfc.NfcAdapter: boolean ignore(android.nfc.Tag,int,android.nfc.NfcAdapter.OnTagRemovedListener,android.os.Handler)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void computeCurrentVelocity(int)>
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>
<com.android.gallery3d.exif.ExifTag: int getValueAsInt(int)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseOutDuration()>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.DatePickerDialog: void <init>(android.content.Context)>
<android.media.MediaTimestamp: long getAnchorMediaTimeUs()>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitGL()>
<android.widget.Toolbar: int getCurrentContentInsetEnd()>
<android.app.assist.AssistStructure.ViewNode: float getElevation()>
<android.app.Fragment: void registerForContextMenu(android.view.View)>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.lang.String)>
<com.android.server.pm.AbstractStatsBase: android.util.AtomicFile getFile()>
<android.app.Fragment: boolean isInLayout()>
<android.net.Proxy: int getPort(android.content.Context)>
<android.telephony.CellLocation: void requestLocationUpdate()>
<android.transition.SidePropagation: void setSide(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void addListener(com.android.systemui.statusbar.policy.OnHeadsUpChangedListener)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.server.am.BatteryStatsService: void noteWifiStopped(android.os.WorkSource)>
<com.android.server.ConsumerIrService: void transmit(java.lang.String,int,int[])>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(int)>
<android.renderscript.Type: int getYuv()>
<com.android.systemui.statusbar.phone.PanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onClick()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>
<com.android.commands.svc.WifiCommand: void <init>()>
<android.database.ContentObserver: boolean deliverSelfNotifications()>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<android.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.systemui.DejankUtils: void removeCallbacks(java.lang.Runnable)>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<com.android.systemui.qs.QSAnimator: void <init>(com.android.systemui.qs.QSContainer,com.android.systemui.qs.QuickQSPanel,com.android.systemui.qs.QSPanel)>
<android.widget.TextView: void setTextColor(int)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void createMenuPopup()>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName)>
<com.android.settingslib.drawer.UserAdapter: int getCount()>
<android.content.pm.ApplicationInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.inputmethodservice.Keyboard.Key: int squaredDistanceFrom(int,int)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.core.UiObject: boolean isLongClickable()>
<android.media.tv.TvInputManager: int getInputState(java.lang.String)>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.systemui.qs.external.TileServices: android.content.Context getContext()>
<com.android.systemui.qs.tiles.RotationLockTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockingWithFingerprintAllowed()>
<com.android.documentsui.BaseActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchBootCompleted()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void verifyIntentFilter(int,int,java.util.List)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.pm.PackageManagerService: void restorePermissionGrants(byte[],int)>
<com.android.systemui.SwipeHelper: void setTranslation(android.view.View,float)>
<android.widget.ActionMenuView: void dismissPopupMenus()>
<com.android.systemui.screenshot.TakeScreenshotService: android.os.IBinder onBind(android.content.Intent)>
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>
<com.android.location.fused.FusionEngine: void switchUser()>
<android.graphics.Path: void addPath(android.graphics.Path)>
<com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent: void <init>(int)>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: int describeContents()>
<com.android.server.pm.UserManagerService: int getCredentialOwnerProfile(int)>
<android.location.Location: java.lang.String convert(double,int)>
<android.graphics.Rect: int width()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbum()>
<com.android.systemui.statusbar.stack.StackScrollState: android.view.ViewGroup getHostView()>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: boolean isReplacementNeeded(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: void setPackageAskScreenCompat(java.lang.String,boolean)>
<com.android.server.storage.DeviceStorageMonitorService: void onStart()>
<android.widget.TimePicker: void onRestoreInstanceState(android.os.Parcelable)>
<android.os.BatteryStats.Uid: long getFullWifiLockTime(long,int)>
<com.android.systemui.recents.events.EventBus.Event: void <init>()>
<com.android.server.pm.PackageManagerService: boolean isOnlyCoreApps()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean getInTouchMode()>
<android.nfc.NdefRecord: byte[] getPayload()>
<android.telephony.CellIdentityWcdma: int getLac()>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.net.Uri,com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler,boolean)>
<android.os.StatFs: void <init>(java.lang.String)>
<android.media.MediaDrm.KeyStatus: int getStatusCode()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.hardware.SensorManager: void unregisterDynamicSensorCallback(android.hardware.SensorManager.DynamicSensorCallback)>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams: void <init>(int,int,android.view.ViewGroup.LayoutParams)>
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(int,float,float,float)>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>
<com.android.systemui.statusbar.stack.AmbientState: float getOverScrollAmount(boolean)>
<android.hardware.camera2.CameraManager.TorchCallback: void onTorchModeChanged(java.lang.String,boolean)>
<android.database.CursorWindow: boolean isNull(int,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<com.android.location.provider.LocationProviderBase: void <init>(java.lang.String,com.android.location.provider.ProviderPropertiesUnbundled)>
<android.net.ProxyInfo: int hashCode()>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.documentsui.MessageBar: void show()>
<android.webkit.WebSettings: void setMinimumFontSize(int)>
<android.opengl.GLES10: void glPushMatrix()>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)>
<com.android.documentsui.Snackbars: android.support.design.widget.Snackbar makeSnackbar(android.app.Activity,int,int)>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>
<android.print.PrinterInfo: java.lang.String getName()>
<android.app.NativeActivity: void surfaceCreated(android.view.SurfaceHolder)>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>
<com.android.server.pm.PackageManagerService: void querySyncProviders(java.util.List,java.util.List)>
<android.app.Notification.DecoratedCustomViewStyle: void <init>()>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,int)>
<com.android.keyguard.KeyguardSimPinView: void showUsabilityHint()>
<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightPulse(int,int,int)>
<android.view.IWindowManagerImpl: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
<com.android.systemui.classifier.ProximityClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.recents.events.EventBus: void sendOntoMainThread(com.android.systemui.recents.events.EventBus.Event)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<android.opengl.GLES30: void glBindSampler(int,int)>
<android.renderscript.Allocation: void copyTo(float[])>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<android.location.GnssMeasurement: int getSvid()>
<com.android.server.policy.GlobalActions.Action: boolean showBeforeProvisioning()>
<android.media.MediaPlayer.OnTimedMetaDataAvailableListener: void onTimedMetaDataAvailable(android.media.MediaPlayer,android.media.TimedMetaData)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobQueued(android.print.PrintJobInfo)>
<com.android.layoutlib.bridge.Bridge: boolean isRtl(java.lang.String)>
<android.text.method.DateKeyListener: int getInputType()>
<android.location.GnssMeasurement: double getTimeOffsetNanos()>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getFlashlightTurnedOnTimer()>
<com.android.server.trust.TrustManagerService: void onStartUser(int)>
<android.graphics.Canvas_Delegate: void native_drawRegion(long,long,long)>
<android.util.BridgeXmlPullAttributes: int getAttributeResourceValue(int,int)>
<android.text.style.StyleSpan: int describeContents()>
<android.os.BatteryStats.LevelStepTracker: void readFromParcel(android.os.Parcel)>
<android.app.Service: void onCreate()>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMANode getChild(java.lang.String)>
<android.media.MediaDescription: android.net.Uri getMediaUri()>
<com.google.android.gles_jni.GLImpl: void glColor4ub(byte,byte,byte,byte)>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>
<android.database.CursorWrapper: int getPosition()>
<com.android.systemui.volume.VolumeDialogController.State: java.lang.String toString(int)>
<com.android.server.SystemServer: void main(java.lang.String[])>
<android.graphics.LayerRasterizer_Delegate: java.lang.String getSupportMessage()>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isScrimSrcModeEnabled()>
<android.content.pm.ActivityInfo.WindowLayout: void <init>(int,float,int,float,int,int,int)>
<android.widget.CheckedTextView: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.AudioManager: void startBluetoothSco()>
<android.app.FragmentController: void doLoaderStart()>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
<android.app.usage.NetworkStatsManager.UsageCallback: void onThresholdReached(int,java.lang.String)>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>
<com.android.systemui.Prefs: void unregisterListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.server.policy.PhoneWindowManager: android.view.WindowManagerPolicy.WindowState getWinShowWhenLockedLw()>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>
<android.content.pm.PackageParser.PermissionGroup: void setPackageName(java.lang.String)>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>
<android.renderscript.Matrix3f: void scale(float,float,float)>
<com.android.server.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.graphics.EmbossMaskFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.accessibility.AccessibilityManagerService: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)>
<android.telecom.InCallService.VideoCall.Callback: void onSessionModifyRequestReceived(android.telecom.VideoProfile)>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<android.telephony.PhoneNumberUtils: boolean isDialable(char)>
<android.webkit.WebView: boolean zoomOut()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getText()>
<android.hardware.camera2.legacy.GLThreadManager: void allowNewFrames()>
<android.text.style.LocaleSpan: int getSpanTypeId()>
<android.print.PrintAttributes.MediaSize: int getWidthMils()>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<com.android.hotspot2.utils.HTTPResponse: java.nio.ByteBuffer getBinaryPayload()>
<com.android.documentsui.dirlist.DirectoryFragment: void reload(android.app.FragmentManager,int,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,java.lang.String)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void showBand(android.graphics.Rect)>
<android.media.tv.TvView.OnUnhandledInputEventListener: boolean onUnhandledInputEvent(android.view.InputEvent)>
<android.widget.TabWidget: boolean isStripEnabled()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.telecom.Call.Callback: void onChildrenChanged(android.telecom.Call,java.util.List)>
<com.android.systemui.classifier.SpeedAnglesClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.widget.TabWidget: void setEnabled(boolean)>
<android.view.IWindowManagerImpl: boolean hasNavigationBar()>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.app.ActionBar: void setTitle(java.lang.CharSequence)>
<android.renderscript.Matrix3f: void loadScale(float,float,float)>
<android.widget.RemoteViews: void setImageViewResource(int,int)>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener,java.lang.String)>
<com.android.location.fused.FusedLocationProvider: void <init>(android.content.Context)>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,int,int,android.renderscript.FieldPacker)>
<com.android.systemui.statusbar.policy.ZenModeController: void setUserId(int)>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.graphics.pdf.PdfRenderer.Page: int getIndex()>
<android.view.Window: void setTransitionManager(android.transition.TransitionManager)>
<android.media.tv.TvTrackInfo: int describeContents()>
<android.telecom.ParcelableCallAnalytics.AnalyticsEvent: int describeContents()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(java.lang.String)>
<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>
<android.os.PowerManager.WakeLock: void acquire()>
<com.android.server.NativeDaemonEvent: boolean isClassOk()>
<com.android.server.fingerprint.ClientMonitor: void notifyUserActivity()>
<com.android.server.notification.ScheduleConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean hasStableIds()>
<com.android.systemui.power.PowerNotificationWarnings: void updateLowBatteryWarning()>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String getParticipant()>
<android.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.server.notification.CountdownConditionProvider: void onDestroy()>
<android.opengl.GLES32: void glDrawElementsInstancedBaseVertex(int,int,int,int,int,int)>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>
<android.preference.PreferenceManager: boolean isStorageDeviceProtected()>
<android.content.IntentFilter: java.util.Iterator actionsIterator()>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.provider.ContactsContract.CommonDataKinds.Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.systemui.settings.ToggleSlider: void setValue(int)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void addRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLanguageTag()>
<com.android.documentsui.services.FileOperations: java.lang.String createJobId()>
<android.view.ViewConfiguration: int getPressedStateDuration()>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>
<com.android.commands.svc.DataCommand: java.lang.String shortHelp()>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onSessionModifyRequestReceived(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile)>
<android.telephony.TelephonyManager: int getCallState()>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>
<android.net.NetworkStats.Entry: void <init>()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.FragmentContainer: boolean onHasView()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeNamespace(int)>
<android.graphics.RectF: void union(android.graphics.RectF)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void binderDied()>
<android.hardware.camera2.params.OutputConfiguration: int describeContents()>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>
<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()>
<com.android.server.am.AppTimeTracker: void stop()>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>
<android.widget.AdapterViewFlipper: void startFlipping()>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
<android.widget.ProgressBar: boolean isIndeterminate()>
<android.graphics.Paint: void setLetterSpacing(float)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.widget.LinearLayout.LayoutParams)>
<android.hardware.camera2.legacy.GLThreadManager: void start()>
<com.android.systemui.recents.ScreenPinningRequest: void onClick(android.view.View)>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>
<com.google.android.gles_jni.GLImpl: void glLightModelx(int,int)>
<android.view.WindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>
<com.android.systemui.qs.QSPanel.QSTileLayout: void setListening(boolean)>
<android.renderscript.Element: int getSubElementOffsetBytes(int)>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()>
<android.media.AudioRouting: void addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,android.os.Handler)>
<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>
<com.android.systemui.qs.tiles.IntentTile: void handleDestroy()>
<android.service.wallpaper.WallpaperService.Engine: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)>
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.printspooler.model.RemotePrintDocument: void kill(java.lang.String)>
<com.android.systemui.qs.QSPanel.QSTileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<android.content.Loader: void reset()>
<com.android.server.net.NetworkPolicyManagerService: boolean isUidForeground(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setExpansionLogger(com.android.systemui.statusbar.ExpandableNotificationRow.ExpansionLogger,java.lang.String)>
<android.renderscript.FieldPacker: void addI16(short)>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>
<com.android.server.soundtrigger.SoundTriggerInternal: int unloadKeyphraseModel(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchFinishedGoingToSleep(int)>
<android.view.IWindowManagerImpl: float getAnimationScale(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeCount()>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<com.android.documentsui.Menus: void disableHiddenItems(android.view.Menu,android.view.MenuItem[])>
<android.media.session.MediaController.TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>
<android.media.AudioManager: void unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<com.android.systemui.qs.tiles.ColorInversionTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>
<com.android.server.job.controllers.DeviceIdleJobsController: com.android.server.job.controllers.DeviceIdleJobsController get(com.android.server.job.JobSchedulerService)>
<com.android.server.media.MediaSessionRecord: int getVolumeControl()>
<android.hardware.radio.RadioManager.ModuleProperties: boolean equals(java.lang.Object)>
<com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent: void <init>(float)>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: boolean onRemoteAdapterConnected()>
<android.media.AudioManager: void registerAudioDeviceCallback(android.media.AudioDeviceCallback,android.os.Handler)>
<com.android.server.pm.UserManagerService: boolean isManagedProfile(int)>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<android.view.View: void setSaveFromParentEnabled(boolean)>
<com.android.commands.svc.NfcCommand: java.lang.String longHelp()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean updateIntentVerificationStatusAsUser(java.lang.String,int,int)>
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>
<android.renderscript.ScriptIntrinsicBLAS: void STPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.os.BatteryStats.Uid.Proc: long getUserTime(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(long)>
<com.android.server.pm.PackageManagerService: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>
<android.media.MediaExtractor: void setDataSource(java.lang.String)>
<android.opengl.GLES32: void glGetSamplerParameterIuiv(int,int,int[],int)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>
<android.hardware.Camera.Parameters: void getFocusDistances(float[])>
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera.FaceDetectionListener)>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.Menu,int,java.lang.String)>
<com.android.systemui.settings.ToggleSeekBar: void setAccessibilityLabel(java.lang.String)>
<com.android.settingslib.drawer.UserAdapter: com.android.settingslib.drawer.UserAdapter.UserDetails getItem(int)>
<com.android.settingslib.net.DataUsageController: boolean isMobileDataEnabled()>
<com.android.systemui.tuner.TunerSwitch: boolean persistBoolean(boolean)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setTriggerContentMaxDelay(long)>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacSHA512: void <init>()>
<android.content.SyncAdapterType: int hashCode()>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setDismissalId(java.lang.String)>
<com.android.systemui.qs.tiles.WifiTile: void setListening(boolean)>
<android.app.NativeActivity: void onPause()>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData.Builder setServiceSpecificInfo(java.lang.String)>
<android.app.Dialog: void onDetachedFromWindow()>
<android.widget.SeekBar: void <init>(android.content.Context)>
<android.speech.tts.TextToSpeech: java.util.Set getVoices()>
<com.android.systemui.classifier.HistoryEvaluator: float getEvaluation()>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,java.nio.FloatBuffer)>
<com.android.server.am.BatteryStatsService: void noteResetVideo()>
<android.media.MediaFormat: void setFloat(java.lang.String,float)>
<android.media.tv.TvInputService: android.media.tv.TvInputService.RecordingSession onCreateRecordingSession(java.lang.String)>
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>
<com.android.server.wallpaper.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo(int)>
<android.content.res.Resources.Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>
<android.telecom.Connection: void setOnHold()>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>
<com.android.systemui.statusbar.NotificationData: void add(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasLockscreenWallpaper()>
<android.gesture.GestureStore: void setOrientationStyle(int)>
<com.android.systemui.power.PowerNotificationWarnings: void dump(java.io.PrintWriter)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserTrustIsManaged(int)>
<android.view.ActionMode: void invalidateContentRect()>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
<android.text.BidiFormatter.Builder: void <init>(java.util.Locale)>
<com.android.server.backup.SystemBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData.Item)>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isManagedProfile(android.content.ComponentName)>
<com.android.server.am.ActivityManagerService: void deleteActivityContainer(android.app.IActivityContainer)>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>
<android.service.voice.VoiceInteractionSession: void onLockscreenShown()>
<com.android.documentsui.dirlist.DocumentHolder: boolean onSingleTapUp(android.view.MotionEvent)>
<android.webkit.WebView: java.lang.String getUrl()>
<android.media.midi.MidiInputPort: void onSend(byte[],int,int,long)>
<android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<com.android.systemui.tuner.TunerService.ClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.TextView: void setGravity(int)>
<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap.Config)>
<android.media.session.MediaSession.Callback: void onSeekTo(long)>
<android.app.Notification.CarExtender.Builder: void <init>(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getNotificationColor()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getEventType()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgeContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure()>
<android.graphics.Matrix: void mapPoints(float[])>
<android.net.wifi.WifiConfiguration: void <init>()>
<android.telecom.CallScreeningService.CallResponse.Builder: android.telecom.CallScreeningService.CallResponse.Builder setRejectCall(boolean)>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
<android.telephony.IccOpenLogicalChannelResponse: int getStatus()>
<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState.PermissionState getInstallPermissionState(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isShowing()>
<android.util.MonthDisplayHelper: int getRowOf(int)>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>
<android.hardware.Camera.AutoFocusMoveCallback: void onAutoFocusMoving(boolean,android.hardware.Camera)>
<android.util.ArraySet: java.lang.Object[] toArray()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseInDuration(boolean)>
<android.os.BatteryStats.Uid: long getWifiRadioApWakeupCount(int)>
<android.animation.AnimationThread: void run()>
<android.webkit.WebViewProvider.ViewDelegate: void onDraw(android.graphics.Canvas)>
<android.location.Location: boolean hasAccuracy()>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder with(android.animation.Animator)>
<com.android.server.usage.AppIdleHistory: void writeAppIdleTimesLocked(int)>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>
<android.bluetooth.le.ScanSettings: int getScanMode()>
<com.android.hotspot2.omadm.OMAParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.hardware.radio.RadioTuner.Callback: void onMetadataChanged(android.hardware.radio.RadioMetadata)>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,android.renderscript.Allocation,int,int)>
<com.android.systemui.egg.MLandActivity: void playerMinus(android.view.View)>
<android.app.ActivityManagerProxy: void setLenientBackgroundCheck(boolean)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float)>
<android.location.Address: java.lang.String getThoroughfare()>
<com.android.systemui.stackdivider.WindowManagerProxy: void setResizing(boolean)>
<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getNoBackupFilesDir()>
<android.hardware.fingerprint.IFingerprintDaemon: long openHal()>
<com.android.systemui.recents.views.TaskStackView: boolean launchFreeformTasks()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.BatteryStats.HistoryItem: boolean sameNonEvent(android.os.BatteryStats.HistoryItem)>
<android.app.assist.AssistStructure: void <init>()>
<com.android.server.backup.ShortcutBackupHelper: byte[] getBackupPayload(java.lang.String)>
<android.graphics.drawable.VectorDrawable: android.graphics.ColorFilter getColorFilter()>
<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.transition.AutoTransition: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.uiautomator.core.UiScrollable: boolean flingBackward()>
<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>
<android.webkit.URLUtil: byte[] decode(byte[])>
<com.android.systemui.statusbar.policy.LocationController: boolean setLocationEnabled(boolean)>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: int describeContents()>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void viewClicked(boolean)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>
<android.widget.GridView: void smoothScrollByOffset(int)>
<com.android.systemui.power.PowerNotificationWarnings: void update(int,int,long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void openQs()>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>
<com.android.settingslib.wifi.AccessPoint: boolean isPasspoint()>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void goToFullShade(long)>
<android.widget.PopupWindow: int getWindowLayoutType()>
<android.graphics.RectF: void offsetTo(float,float)>
<com.android.documentsui.Events.MotionInputEvent: boolean isMouseEvent()>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>
<com.android.server.pm.PackageManagerService: byte[] getPreferredActivityBackup(int)>
<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService peekInstance()>
<com.android.systemui.qs.customize.TileAdapter.Holder: void clearDrag()>
<android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>
<com.android.egg.neko.Cat: boolean isDark(int)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardNeedsInput(boolean)>
<com.android.server.job.JobStore: void clear()>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>
<android.hardware.camera2.dispatch.MethodNameInvoker: void <init>(android.hardware.camera2.dispatch.Dispatchable,java.lang.Class)>
<android.location.Address: void setLocality(java.lang.String)>
<com.android.MainActivity.OSUService: void onDestroy()>
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>
<android.graphics.Bitmap: boolean isPremultiplied()>
<com.android.systemui.recents.views.TaskStackView: boolean hasPreferredData(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task)>
<android.app.ActionBar: android.content.Context getThemedContext()>
<android.net.Proxy: int getDefaultPort()>
<android.app.Fragment: boolean isHidden()>
<android.widget.GridView: void smoothScrollToPosition(int)>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>
<android.app.admin.DeviceAdminReceiver: void onProfileProvisioningComplete(android.content.Context,android.content.Intent)>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchAppVisibility(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.UpdateFreeformTaskViewVisibilityEvent)>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.Class)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.BluetoothController getBluetoothController()>
<android.widget.NumberPicker.OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>
<android.app.LauncherActivity.IconResizer: void <init>()>
<com.android.server.input.InputManagerService: void start()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context)>
<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.provider.ContactsContract.Directory: boolean isRemoteDirectoryId(long)>
<android.provider.Settings.Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.transition.TransitionSet: void captureEndValues(android.transition.TransitionValues)>
<com.google.android.util.SmileyResources: void <init>(java.lang.String[],int[])>
<android.os.Process: int myTid()>
<android.opengl.GLES20: int glCreateShader(int)>
<android.widget.RemoteViewsService: android.widget.RemoteViewsService.RemoteViewsFactory onGetViewFactory(android.content.Intent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getBarState()>
<android.hardware.camera2.params.MeteringRectangle: int getX()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPaint(android.graphics.Paint)>
<android.app.Dialog: void onWindowFocusChanged(boolean)>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever createDirectRetriever(android.content.Context)>
<android.widget.Editor.HandleView: void onDetached()>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int hashCode()>
<android.util.LruCache: java.util.Map snapshot()>
<android.app.FragmentController: void restoreAllState(android.os.Parcelable,android.app.FragmentManagerNonConfig)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void init()>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageNumber()>
<android.media.MediaMetadataEditor: void apply()>
<android.graphics.Path_Delegate: void quadTo(float,float,float,float)>
<android.net.LocalSocket: boolean isBound()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(android.media.session.PlaybackState.CustomAction)>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>
<com.android.systemui.recents.views.TaskStackView: void computeScroll()>
<android.security.keystore.KeyProtection: boolean isInvalidatedByBiometricEnrollment()>
<android.os.BatteryStats.LevelStepTracker: long computeTimePerLevel()>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>
<android.widget.HorizontalScrollView: void addView(android.view.View)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>
<android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean hasOverlappingRendering()>
<com.android.systemui.recents.views.AnimationProps: com.android.systemui.recents.views.AnimationProps setInitialPlayTime(int,int)>
<android.view.Window: int getVolumeControlStream()>
<android.os.Debug.MemoryInfo: int getTotalSharedClean()>
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatusCallback)>
<com.android.server.notification.ConditionProviders: void notifyConditions(java.lang.String,com.android.server.notification.ManagedServices.ManagedServiceInfo,android.service.notification.Condition[])>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>
<com.android.hotspot2.osu.OSUInfo: long getBSSID()>
<android.text.style.LocaleSpan: android.os.LocaleList getLocales()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void close()>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setLongClickable(boolean)>
<android.view.IWindowManagerImpl: void lockNow(android.os.Bundle)>
<android.app.NotificationManager.Policy: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void abortCaptures()>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>
<android.speech.tts.TextToSpeech: int playSilentUtterance(long,int,java.lang.String)>
<com.android.location.provider.FusedLocationHardware: int getSupportedBatchSize()>
<android.text.style.URLSpan: int describeContents()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<android.util.SparseBooleanArray: void append(int,boolean)>
<android.view.View: boolean getHasOverlappingRendering()>
<android.database.Cursor: java.lang.String getColumnName(int)>
<com.android.systemui.statusbar.phone.BarTransitions: java.lang.String modeToString(int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.BaseStatusBar: void addNotificationViews(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.NotificationListenerService.RankingMap)>
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.qs.QSTile.State newTileState()>
<android.preference.SwitchPreference: void setSwitchTextOff(int)>
<com.android.printspooler.widget.PreviewPageFrame: java.lang.CharSequence getAccessibilityClassName()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getNamespace(java.lang.String)>
<android.widget.SearchView: boolean isIconfiedByDefault()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: int getCount()>
<com.android.systemui.RecentsComponent: boolean dockTopTask(int,int,android.graphics.Rect,int)>
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.view.View: void onScreenStateChanged(int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetPasswordText(boolean,boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiRunning(android.os.WorkSource)>
<android.content.res.Configuration: int describeContents()>
<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
<com.android.hotspot2.utils.HTTPResponse: java.util.Map getHeaders()>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>
<com.android.hotspot2.omadm.MOTree: java.lang.String toString()>
<android.content.res.TypedArray: int getColor(int,int)>
<android.net.wifi.nan.ConfigRequest.Builder: android.net.wifi.nan.ConfigRequest.Builder setClusterHigh(int)>
<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<com.android.systemui.statusbar.phone.ActivityStarter: void preventNextAnimation()>
<android.view.MenuItem: boolean isChecked()>
<com.google.android.gles_jni.GLImpl: boolean glIsBuffer(int)>
<android.graphics.Shader_Delegate: java.awt.geom.AffineTransform getLocalMatrix()>
<android.view.MotionEvent: java.lang.String axisToString(int)>
<com.android.systemui.qs.tiles.CastTile: void handleClick()>
<android.view.MotionEvent: float getHistoricalY(int,int)>
<android.media.ToneGenerator: void stopTone()>
<com.android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()>
<com.android.systemui.volume.VolumeDialogController: android.media.AudioManager getAudioManager()>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>
<com.android.server.job.StateChangedListener: void onControllerStateChanged()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
<android.graphics.Outline: boolean isEmpty()>
<android.app.FragmentContainer: android.view.View onFindViewById(int)>
<android.filterpacks.imageproc.CrossProcessFilter: void setupPorts()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>
<com.android.systemui.qs.external.CustomTile: int getMetricsCategory()>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,int)>
<android.telecom.Connection.VideoProvider: void changeVideoQuality(int)>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.recents.views.RecentsView: void hideEmptyView()>
<android.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)>
<com.android.hotspot2.omadm.MOManager: java.util.List loadAllSPs()>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
<com.android.settingslib.bluetooth.HidProfile: boolean isProfileReady()>
<android.media.AudioManagerInternal.RingerModeDelegate: boolean canVolumeDownEnterSilent()>
<android.view.Surface: void readFromParcel(android.os.Parcel)>
<com.android.systemui.statusbar.BaseStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<android.util.ArrayMap: boolean isEmpty()>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener: android.util.Pair getCount()>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProviderWatcher getInstance()>
<android.webkit.WebView: boolean pageUp(boolean)>
<android.view.View: void setWillNotCacheDrawing(boolean)>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<android.accessibilityservice.GestureDescription.StrokeDescription: long getDuration()>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>
<android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<com.android.commands.sm.Sm: void runHasAdoptable()>
<com.google.android.gles_jni.GLImpl: void glStencilFunc(int,int,int)>
<com.android.printspooler.renderer.IPdfEditor: void applyPrintAttributes(android.print.PrintAttributes)>
<com.android.server.accessibility.KeyEventDispatcher: boolean notifyKeyEventLocked(android.view.KeyEvent,int,java.util.List)>
<com.android.settingslib.applications.ApplicationsState: boolean haveDisabledApps()>
<com.android.systemui.statusbar.ExpandableView: boolean isGroupExpanded()>
<com.android.preload.ClientUtils: com.android.ddmlib.Client[] findAllClients(com.android.ddmlib.IDevice,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean shouldHideBackground()>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void recycle()>
<android.accounts.AccountManagerInternal.OnAppPermissionChangeListener: void onAppPermissionChanged(android.accounts.Account,int)>
<android.content.pm.ShortcutManager: void disableShortcuts(java.util.List,java.lang.CharSequence)>
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<com.android.hotspot2.osu.OSUManager: java.util.List getAvailableOSUs()>
<android.print.PrintDocumentInfo: long getDataSize()>
<com.android.layoutlib.bridge.util.SparseWeakArray: long keyAt(int)>
<com.android.anqp.eap.EAPMethod: boolean equals(java.lang.Object)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceDisconnected()>
<android.webkit.WebView: void onMeasure(int,int)>
<com.android.egg.neko.Cat: java.lang.Object choose(java.util.Random,java.lang.Object[])>
<android.graphics.drawable.VectorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.pm.ShortcutService: void <init>(android.content.Context)>
<android.preference.DialogPreference: void setDialogIcon(int)>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>
<android.view.SurfaceHolder: boolean isCreating()>
<android.filterpacks.imageproc.GrainFilter: void setupPorts()>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setY(int,int)>
<com.android.systemui.statusbar.notification.NotificationBigTextTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isDockedStack(int)>
<com.android.hotspot2.omadm.OMAConstants: com.android.hotspot2.osu.OSUStatus mapStatus(java.lang.String)>
<android.security.keystore.KeyProtection: java.lang.String[] getBlockModes()>
<com.android.systemui.SwipeHelper: void snapChildIfNeeded(android.view.View,boolean,float)>
<android.net.wifi.RttManager.ResponderConfig: void writeToParcel(android.os.Parcel,int)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>
<android.os.ParcelFileDescriptor: int getFd()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLayoutDirectionChanged(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void restoreToCount(int)>
<android.hardware.camera2.legacy.RequestHolder.Builder: android.hardware.camera2.legacy.RequestHolder build(long)>
<com.android.keyguard.KeyguardSecurityView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<android.service.chooser.ChooserTarget: float getScore()>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.net.DataUsageController: boolean isMobileDataSupported()>
<com.android.server.backup.BackupManagerService: java.lang.String[] listAllTransports()>
<android.view.MotionEvent: void setLocation(float,float)>
<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioDevicePort: android.media.AudioDevicePortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>
<com.android.systemui.volume.ZenModePanel: void setCallback(com.android.systemui.volume.ZenModePanel.Callback)>
<com.android.hotspot2.asn1.OidMappings: java.lang.String getCryptoID(com.android.hotspot2.asn1.Asn1Oid)>
<android.media.JetPlayer: boolean pause()>
<android.widget.Switch: java.lang.CharSequence getTextOn()>
<com.android.server.InputMethodManagerService: boolean switchToLastInputMethod(android.os.IBinder)>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>
<android.webkit.WebView: void goBack()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUserSwitch(int)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams: void <init>(int,int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildTypeCount()>
<com.android.systemui.RecentsComponent: void hideRecents(boolean,boolean)>
<android.app.ActivityManager: boolean isInLockTaskMode()>
<android.telecom.Connection.VideoProvider: void onSetPauseImage(android.net.Uri)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.server.media.MediaSessionRecord: java.lang.String getTag()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void clearInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isNavBarVisible()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>
<android.renderscript.Matrix3f: float get(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackage(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String)>
<android.widget.ActionMenuView: void onMeasure(int,int)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationCancel(android.animation.Animator)>
<com.android.systemui.statusbar.policy.SignalController: int getContentDescription()>
<android.filterpacks.imageproc.AutoFixFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<android.telecom.Connection: void setPostDialWait(java.lang.String)>
<com.android.systemui.classifier.SpeedAnglesClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void flushLastDecrementRunnables()>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>
<android.service.restrictions.RestrictionsReceiver: void onRequestPermission(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.print.PrintAttributes: java.lang.String toString()>
<android.util.EventLog: int getTagCode(java.lang.String)>
<android.widget.AdapterViewAnimator: void showPrevious()>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setVertical(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.layoutlib.bridge.android.BridgeXmlBlockParser getPreviousParser()>
<android.app.ActivityManagerProxy: void keyguardGoingAway(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setWindowState(int,int)>
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>
<android.content.res.AssetManager.AssetInputStream: boolean markSupported()>
<android.hardware.camera2.impl.CameraDeviceImpl: void binderDied()>
<com.android.settingslib.drawable.UserIconDrawable: int getOpacity()>
<android.media.effect.EffectContext: void release()>
<android.view.View: void dispatchProvideStructure(android.view.ViewStructure)>
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>
<android.app.Activity: void startLockTask()>
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>
<android.app.ApplicationThreadProxy: void stopBinderTrackingAndDump(java.io.FileDescriptor)>
<com.android.systemui.statusbar.NotificationGuts: boolean areGutsExposed()>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR2(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>
<com.android.hotspot2.osu.ExchangeCompleteResponse: void <init>(com.android.hotspot2.omadm.XMLNode)>
<com.android.server.pm.Installer: long getAppDataInode(java.lang.String,java.lang.String,int,int)>
<android.view.View: void onDisplayHint(int)>
<com.android.server.backup.SystemBackupAgent: void onRestoreFinished()>
<android.hardware.camera2.utils.ListUtils: boolean listElementsEqualTo(java.util.List,java.lang.Object)>
<android.preference.Preference: int getLayoutResource()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void onUserSwitched(int)>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>
<android.widget.AbsListView: void setTextFilterEnabled(boolean)>
<com.android.server.am.ActivityManagerService: void registerProcessObserver(android.app.IProcessObserver)>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>
<android.view.inputmethod.CursorAnchorInfo: java.lang.String toString()>
<android.telecom.VideoProfile: boolean isPaused(int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void onGroupCollapsed(int)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>
<android.provider.CallLog.Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
<android.telecom.Call: java.util.List getChildren()>
<com.android.systemui.qs.tiles.FlashlightTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.provider.DocumentsContract: android.net.Uri buildRootUri(java.lang.String,java.lang.String)>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>
<android.app.Activity: void startActivity(android.content.Intent)>
<com.android.systemui.classifier.FalsingManager: void setQsExpanded(boolean)>
<android.os.Messenger: void <init>(android.os.IBinder)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TabHost.ContentStrategy: android.view.View getContentView()>
<android.hardware.fingerprint.IFingerprintDaemon: int authenticate(long,int)>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setBufferedPosition(long)>
<android.graphics.Region: void <init>(int,int,int,int)>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getWrappedPrivateKey()>
<android.transition.ChangeImageTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.view.animation.Animation: long getStartOffset()>
<android.content.pm.LauncherApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>
<android.location.Address: void setCountryName(java.lang.String)>
<com.android.egg.neko.PrefState.PrefsListener: void onPrefsChanged()>
<com.android.hotspot2.omadm.MOManager: java.util.Map getLoadedSPs()>
<com.android.printservice.recommendation.PrintServicePlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<com.android.anqp.eap.NonEAPInnerAuth: void <init>(int,java.nio.ByteBuffer)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitNetwork()>
<android.os.storage.IMountService.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>
<android.widget.PopupWindow: boolean getOverlapAnchor()>
<android.content.res.AssetManager: void close()>
<android.graphics.Camera: void rotateZ(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isFalsingThresholdNeeded()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<android.appwidget.AppWidgetProviderInfo: void <init>()>
<android.location.Criteria: void setBearingAccuracy(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void updateEntry()>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.mtp.MtpEvent: int getDevicePropCode()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocalPath()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void initialize(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,com.android.systemui.recents.views.TaskStackLayoutAlgorithm.StackState)>
<android.content.Loader: void registerOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>
<android.view.animation.CycleInterpolator: void <init>(float)>
<com.android.printspooler.ui.PrintActivity: void onStart()>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.phone.NotificationGroupManager getGroupManager()>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.DateView: void updateClock()>
<android.widget.PopupMenu: void dismiss()>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>
<com.android.settingslib.drawable.UserIconDrawable: android.graphics.drawable.Drawable getManagedUserBadgeDrawable(android.content.Context)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStopLoading()>
<android.media.MediaDrm.OnExpirationUpdateListener: void onExpirationUpdate(android.media.MediaDrm,byte[],long)>
<com.android.settingslib.graph.UsageView: void setAccentColor(int)>
<com.android.systemui.statusbar.SignalClusterView: void setNetworkController(com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setJustClicked(boolean)>
<com.android.uiautomator.core.UiObject: boolean exists()>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.String)>
<android.hardware.camera2.legacy.GLThreadManager: void waitUntilStarted()>
<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>
<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.content.pm.LauncherApps.ShortcutQuery: android.content.pm.LauncherApps.ShortcutQuery setChangedSince(long)>
<android.os.health.HealthStats: java.util.Map getTimers(int)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>
<android.app.Activity: java.lang.String getLocalClassName()>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
<com.android.systemui.qs.QSTile: java.lang.String getTileSpec()>
<com.android.systemui.volume.MediaSessions: void dumpMediaSessions(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelBar: void panelScrimMinFractionChanged(float)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributePrefix(int)>
<com.android.hotspot2.omadm.NodeAttribute: java.lang.String toString()>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceRemoved(android.media.tv.TvInputHardwareInfo)>
<android.view.IWindowManagerImpl: void notifyAppStopped(android.os.IBinder)>
<com.android.systemui.statusbar.stack.AmbientState: void setOverScrollAmount(float,boolean)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportPasswordChanged(int)>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.uiautomator.core.Configurator: long getWaitForIdleTimeout()>
<android.text.Editable: android.text.Editable append(char)>
<android.media.Rating: android.media.Rating newUnratedRating(int)>
<android.graphics.RectF: int describeContents()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.graphics.Bitmap)>
<android.location.LocationManager: void unregisterGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.renderscript.ScriptIntrinsicBLAS: void SSPR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>
<android.app.ActivityManagerProxy: boolean isUserRunning(int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onFinishedExpansionChange()>
<com.android.server.backup.Trampoline: boolean isBackupEnabled()>
<com.android.systemui.statusbar.policy.RemoteInputView: void focus()>
<android.graphics.Bitmap: void setWidth(int)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>
<android.app.ListActivity: long getSelectedItemId()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>
<com.android.systemui.classifier.ProximityClassifier: float getFalseTouchEvaluation(int)>
<com.android.documentsui.model.DocumentInfo: int hashCode()>
<android.graphics.Paint_Delegate: boolean isAntiAliased()>
<android.util.TypedValue: float complexToFloat(int)>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.hotspot2.osu.PostDevDataResponse: com.android.hotspot2.osu.OSUCommandID getOSUCommand()>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>
<android.view.View: void setHovered(boolean)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void logoutCurrentUser()>
<android.view.Surface.OutOfResourcesException: void <init>()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>
<com.android.systemui.BatteryMeterView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.analytics.DataCollector: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.qs.tiles.BatteryTile: com.android.systemui.qs.QSTile.State newTileState()>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>
<android.os.AsyncTask: void <init>()>
<com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback: void onStateChanged()>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
<android.content.ContentProviderOperation: boolean isReadOperation()>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.NotificationGuts: void resetFalsingCheck()>
<com.android.settingslib.drawable.UserIconDrawable: void draw(android.graphics.Canvas)>
<com.android.server.media.MediaSessionService: void onStartUser(int)>
<android.widget.CalendarView.CalendarViewDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatarPadding(float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getIntrinsicPadding()>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Service: boolean stopSelfResult(int)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean setVisible(boolean,boolean)>
<android.view.View.OnHoverListener: boolean onHover(android.view.View,android.view.MotionEvent)>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.media.AudioFormat: int getChannelCount()>
<android.media.tv.TvView: void setCaptionEnabled(boolean)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.view.View: void forceLayout()>
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()>
<android.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.widget.VideoView: void draw(android.graphics.Canvas)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.vpndialogs.ManageDialog: void onCreate(android.os.Bundle)>
<android.appwidget.AppWidgetHostView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getContentView()>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>
<com.android.server.lights.Light: void pulse()>
<com.android.hotspot2.asn1.OidMappings: java.lang.String getSigAlgoName(com.android.hotspot2.asn1.Asn1Oid)>
<android.net.http.HttpResponseCache: long size()>
<com.android.preload.actions.AbstractThreadedAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: void registerEnumValues(java.lang.Class,int[])>
<android.hardware.camera2.legacy.GLThreadManager: void <init>(int,int,android.hardware.camera2.legacy.CameraDeviceState)>
<com.android.systemui.volume.VolumeDialog: void setSilentMode(boolean)>
<com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: int getWindingRule()>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri)>
<com.android.systemui.classifier.FalsingManager: void setStatusBarState(int)>
<android.animation.TimeInterpolator: float getInterpolation(float)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean shouldDismissOnMenuPressed()>
<android.view.Window.OnFrameMetricsAvailableListener: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
<com.android.server.backup.Trampoline: java.lang.String getCurrentTransport()>
<com.android.layoutlib.bridge.android.BridgeContext: void pushParser(com.android.layoutlib.bridge.android.BridgeXmlBlockParser)>
<com.android.server.backup.BackupManagerService: boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo)>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int2)>
<android.preference.PreferenceGroup: void removeAll()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.systemui.volume.VolumeDialogController: void vibrate()>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>
<android.app.UiModeManager: int getCurrentModeType()>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
<android.app.Activity: android.view.Window getWindow()>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getRestingAlpha()>
<com.android.systemui.recents.model.TaskStack: void removeTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean)>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.android.BridgeContext: void clearWallpaper()>
<com.android.systemui.recents.RecentsSystemUserService: void onCreate()>
<android.view.animation.AnimationSet: java.util.List getAnimations()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSystemExpanded(boolean)>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>
<android.webkit.WebView: void goBackOrForward(int)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()>
<com.android.systemui.statusbar.DismissView: void setOnButtonClickListener(android.view.View.OnClickListener)>
<android.hardware.camera2.legacy.CaptureCollector: void failNextPreview()>
<com.android.server.hdmi.SelectRequestBuffer.DeviceSelectRequest: void process()>
<android.graphics.drawable.BitmapDrawable: boolean isFilterBitmap()>
<android.gesture.GestureStroke: android.graphics.Path getPath()>
<android.security.keystore.KeyInfo: int getPurposes()>
<com.android.server.notification.ManagedServices: void registerService(android.os.IInterface,android.content.ComponentName,int)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
<android.widget.Editor.UndoInputFilter: void beginBatchEdit()>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTaskData(com.android.systemui.recents.model.Task)>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadLabel(android.content.Context)>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification clone()>
<com.android.server.pm.UserManagerService: void enforceSerialNumber(java.io.File,int)>
<android.widget.Chronometer: void setFormat(java.lang.String)>
<com.android.server.notification.ManagedServices: void settingRestored(java.lang.String,java.lang.String,java.lang.String,int)>
<android.widget.CompoundButton: void toggle()>
<com.android.hotspot2.asn1.Asn1Object: int getLength()>
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecents(boolean,boolean)>
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>
<com.android.settingslib.RestrictedSwitchPreference: void performClick()>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void registerCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>
<android.database.Cursor: int getColumnIndex(java.lang.String)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<com.google.android.gles_jni.EGLImpl: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>
<android.net.LinkProperties: int hashCode()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(java.nio.FloatBuffer)>
<com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutTransitionsEnabled(boolean)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void finalize()>
<android.filterpacks.imageproc.SaturateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.media.tv.TvView: java.lang.String getSelectedTrack(int)>
<android.view.View: float getTranslationX()>
<android.app.Activity: boolean isInPictureInPictureMode()>
<android.widget.ActivityChooserModel.OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>
<android.opengl.GLES20: void glUniform2i(int,int,int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])>
<android.view.View: android.content.Context getContext()>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getMaxKeyguardNotifications()>
<com.android.server.am.AppTimeTracker: void deliverResult(android.content.Context)>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<android.text.LoginFilter.PasswordFilterGMail: void <init>()>
<android.accessibilityservice.AccessibilityService: boolean onKeyEvent(android.view.KeyEvent)>
<android.widget.AbsListView: int getListPaddingTop()>
<android.media.AudioDeviceInfo: int[] getChannelIndexMasks()>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getComplexityRange()>
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>
<android.text.BidiFormatter.Builder: void <init>(boolean)>
<android.animation.AnimatorSet: boolean isStarted()>
<android.animation.ValueAnimator: long getTotalDuration()>
<android.graphics.drawable.RippleDrawable: void setRadius(int)>
<com.android.settingslib.widget.AnimatedImageView: void onVisibilityChanged(android.view.View,int)>
<android.widget.ScrollView: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.RelativeLayout.LayoutParams: void addRule(int,int)>
<android.util.SparseArray: java.lang.Object valueAt(int)>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void openRemoteInputBridge(android.os.IBinder,java.lang.String,int,int,int)>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>
<android.graphics.drawable.AnimatedVectorDrawable: void stop()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result animate(java.lang.Object,java.lang.String,boolean,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.hotspot2.osu.OSUCommand: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.hardware.camera2.params.TonemapCurve: boolean equals(java.lang.Object)>
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.server.am.ActivityManagerService: int startActivityFromRecents(int,android.os.Bundle)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder deviceId(int)>
<com.android.systemui.classifier.FalsingManager: android.net.Uri reportRejectedTouch()>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.os.Process: void setThreadScheduler(int,int,int)>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>
<com.android.systemui.volume.SpTexts: void update()>
<android.content.Context: android.content.res.Resources.Theme getTheme()>
<com.android.systemui.statusbar.phone.PanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.keyboard.KeyboardUI: void onTabletModeChanged(long,boolean)>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>
<android.widget.Gallery: void onAttachedToWindow()>
<com.google.android.util.AbstractMessageParser.Html: java.util.List getInfo()>
<android.graphics.Bitmap: boolean isRecycled()>
<android.webkit.CacheManager.CacheResult: java.io.OutputStream getOutputStream()>
<com.android.systemui.qs.QSTile.H: void handleMessage(android.os.Message)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.hardware.SensorManager: java.util.List getDynamicSensorList(int)>
<com.android.systemui.assist.AssistManager: void replaceDrawable(android.widget.ImageView,android.content.ComponentName,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getBackButton()>
<android.util.SparseArray: int keyAt(int)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.documentsui.model.DurableUtils: void writeToParcel(android.os.Parcel,com.android.documentsui.model.Durable)>
<com.android.server.policy.PhoneWindowManager: boolean isDefaultOrientationForced()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromRight()>
<android.app.ProgressDialog: void setProgress(int)>
<android.hardware.camera2.legacy.RequestThreadManager: long cancelRepeating(int)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Closure addInvoke(android.renderscript.Script.InvokeID,java.lang.Object[])>
<android.telecom.Conference: void onCallAudioStateChanged(android.telecom.CallAudioState)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.os.Bundle)>
<com.android.systemui.classifier.PointerCountClassifier: java.lang.String getTag()>
<android.speech.tts.TextToSpeechService: java.lang.String[] onGetLanguage()>
<android.graphics.Canvas: int getSaveCount()>
<com.android.systemui.statusbar.policy.Clock: void onAttachedToWindow()>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>
<android.print.pdf.PrintedPdfDocument: android.graphics.pdf.PdfDocument.Page startPage(int)>
<android.text.Selection: void setSelection(android.text.Spannable,int)>
<android.text.SpannableStringBuilder: int length()>
<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>
<android.content.IntentFilter: int countDataSchemeSpecificParts()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)>
<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>
<android.widget.AbsSpinner: int getCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallInQueue(java.lang.String)>
<android.app.Fragment: boolean isDetached()>
<com.android.keyguard.EmergencyButton: boolean performLongClick()>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>
<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.commands.pm.Pm: int runCreateUser()>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>
<android.widget.Switch: android.content.res.ColorStateList getTrackTintList()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDAdd()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideEnded()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledPackagesAsUser(int,int)>
<android.widget.PopupWindow: void showAsDropDown(android.view.View)>
<android.widget.Gallery: void dispatchSetPressed(boolean)>
<com.android.systemui.qs.external.CustomTile: void onDialogHidden()>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>
<android.widget.BaseAdapter: boolean isEnabled(int)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.bluetooth.BluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>
<android.media.AudioRecord: int getNotificationMarkerPosition()>
<com.android.server.notification.PropConfig: int getInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<android.widget.LinearLayout: void setDividerPadding(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getRssUrl(java.lang.String)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void append(long,java.lang.Object)>
<android.app.FragmentManagerImpl: void dispatchActivityCreated()>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.RatingBar: void setStepSize(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onScreenTurningOn()>
<com.android.server.notification.ImportanceExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.am.ActivityManagerService: void stopLocalVoiceInteraction(android.os.IBinder)>
<com.android.server.wm.AppWindowAnimator: void setDummyAnimation()>
<android.content.res.BridgeTypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.widget.TextView: void setEms(int)>
<android.widget.AbsSeekBar: void setThumbTintMode(android.graphics.PorterDuff.Mode)>
<com.android.systemui.egg.MLand: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>
<com.android.systemui.statusbar.notification.NotificationUtils: boolean isGrayscale(android.widget.ImageView,com.android.internal.util.NotificationColorUtil)>
<android.telecom.RemoteConnection.Callback: void onStateChanged(android.telecom.RemoteConnection,int)>
<android.content.res.Configuration: int hashCode()>
<com.android.systemui.volume.VolumeComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>
<android.filterpacks.imageproc.LomoishFilter: void <init>(java.lang.String)>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>
<com.google.android.maps.MapView: int getZoomLevel()>
<com.android.gallery3d.glrenderer.BasicTexture: void yield()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setScrollAcknowledgmentTimeout(long)>
<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>
<com.android.anqp.I18Name: void <init>(java.lang.String)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowSilentHint()>
<android.os.BatteryStats.Uid.Proc: boolean isActive()>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>
<android.speech.RecognitionService.Callback: void endOfSpeech()>
<android.media.AudioFormat: java.lang.String toString()>
<com.android.printspooler.ui.PrintActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.views.RecentsView: void onDrawForeground(android.graphics.Canvas)>
<com.android.systemui.statusbar.CommandQueue: void animateExpandSettingsPanel(java.lang.String)>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>
<android.graphics.drawable.Drawable: boolean canApplyTheme()>
<android.app.Fragment: android.view.View getView()>
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>
<android.view.View: android.view.Display getDisplay()>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.gesture.GestureStore: void setSequenceType(int)>
<android.net.nsd.NsdServiceInfo: void <init>()>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>
<android.opengl.GLES20: void glDepthFunc(int)>
<android.hardware.Camera.Parameters: float getVerticalViewAngle()>
<android.content.Context: java.io.File getExternalCacheDir()>
<com.android.server.policy.BarController: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent: void <init>(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView)>
<android.view.Display: float[] getSupportedRefreshRates()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeTxPowerLevel(boolean)>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>
<com.android.systemui.statusbar.phone.ButtonDispatcher.ButtonInterface: void setVertical(boolean)>
<android.opengl.GLES10: void glFogf(int,float)>
<android.telecom.RemoteConnection.Callback: void onVideoStateChanged(android.telecom.RemoteConnection,int)>
<com.android.documentsui.model.DocumentInfo: boolean isDeleteSupported()>
<android.app.Notification.Builder: android.app.Notification.Builder addExtras(android.os.Bundle)>
<android.media.AudioManager: void registerAudioRecordingCallback(android.media.AudioManager.AudioRecordingCallback,android.os.Handler)>
<android.hardware.camera2.CameraMetadata: java.util.List getKeys()>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<com.android.systemui.statusbar.policy.NetworkController: void addSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.widget.DatePicker: int getYear()>
<android.telephony.TelephonyManager: boolean setOperatorBrandOverride(java.lang.String)>
<com.android.server.backup.Trampoline: void backupNow()>
<com.android.systemui.recents.views.TaskStackView: void onDetachedFromWindow()>
<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>
<com.android.server.SensorNotificationService: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<android.media.browse.MediaBrowser.MediaItem: boolean isPlayable()>
<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>
<com.android.hotspot2.osu.OSUCommand: java.lang.String toString()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])>
<com.android.vpndialogs.ConfirmDialog: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<android.preference.MultiSelectListPreference: void setEntryValues(int)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setEncoding(int)>
<com.android.server.usb.UsbDeviceManager: void updateUserRestrictions()>
<android.renderscript.Element: android.renderscript.Element getSubElement(int)>
<android.app.Activity: void finishFromChild(android.app.Activity)>
<com.android.media.remotedisplay.RemoteDisplay: int getStatus()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector longClickable(boolean)>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>
<com.android.hotspot2.osu.OSUManager: void provisioningComplete(com.android.hotspot2.osu.OSUInfo,com.android.hotspot2.osu.commands.MOData,java.util.Map,java.security.PrivateKey,android.net.Network)>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>
<android.bluetooth.BluetoothGatt: boolean readDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.os.BatteryStats.HistoryItem: boolean same(android.os.BatteryStats.HistoryItem)>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setSessionId(int)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>
<com.android.systemui.statusbar.ExpandableView: boolean willBeGone()>
<android.widget.Editor.SuggestionsPopupWindow: void initContentView()>
<android.print.PrinterCapabilitiesInfo.Builder: void <init>(android.print.PrinterId)>
<com.android.uiautomator.core.UiDevice: int getDisplayHeight()>
<android.print.PrintJobId: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOff()>
<android.util.Range: java.lang.Comparable getLower()>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>
<com.android.server.hdmi.DeviceDiscoveryAction.DeviceDiscoveryCallback: void onDeviceDiscoveryDone(java.util.List)>
<android.media.MediaCodec.CryptoInfo: java.lang.String toString()>
<com.android.systemui.recents.tv.views.TaskCardView: android.graphics.Rect getStartingCardThumbnailRect(android.content.Context,boolean,int)>
<android.hardware.camera2.legacy.CaptureCollector: boolean queueRequest(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.legacy.LegacyRequest,long,java.util.concurrent.TimeUnit)>
<android.net.ConnectivityManager.NetworkCallback: void onAvailable(android.net.Network)>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>
<android.os.health.TimerStat: void setCount(int)>
<android.widget.Spinner: android.content.Context getPopupContext()>
<com.android.layoutlib.bridge.bars.TitleBar: android.widget.TextView getStyleableTextView()>
<android.graphics.Point: void <init>(int,int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onRelease(int)>
<com.android.layoutlib.bridge.bars.NavigationBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.resources.Density,int,boolean,boolean,int,java.lang.String)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: java.lang.String toString()>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>
<com.android.egg.neko.NekoDialog.Holder: void <init>(android.view.View)>
<android.util.ArrayMap: java.util.Set entrySet()>
<android.webkit.WebView: void documentHasImages(android.os.Message)>
<android.app.assist.AssistStructure.WindowNode: int getTop()>
<com.android.systemui.statusbar.policy.DeadZone: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder excludeRule(android.media.AudioAttributes,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putByteArray(int,byte[],int,int)>
<android.telecom.Connection: void setInitializing()>
<android.app.Fragment: void setUserVisibleHint(boolean)>
<android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focusable(boolean)>
<com.android.systemui.recents.events.EventBus: void post(com.android.systemui.recents.events.EventBus.InterprocessEvent)>
<android.hardware.usb.UsbConfiguration: boolean isRemoteWakeup()>
<com.android.server.notification.EventConditionProvider: boolean isValidConditionId(android.net.Uri)>
<android.text.style.TabStopSpan.Standard: void <init>(int)>
<android.app.SearchManager.OnDismissListener: void onDismiss()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String)>
<com.android.systemui.RecentsComponent: void cancelPreloadingRecents()>
<android.app.ActionBar: int getSelectedNavigationIndex()>
<android.telecom.Call.Details: android.telecom.DisconnectCause getDisconnectCause()>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isConnectable()>
<com.android.server.wm.PointerEventDispatcher: void <init>(android.view.InputChannel)>
<android.app.Activity: void requestPermissions(java.lang.String[],int)>
<android.service.voice.VoiceInteractionSession: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.android.server.notification.ConditionProviders: void onPackagesChanged(boolean,java.lang.String[])>
<com.android.systemui.statusbar.phone.QSTileHost: void addTile(java.lang.String)>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>
<android.media.session.MediaSession.Callback: void onSkipToQueueItem(long)>
<android.media.AudioManagerInternal.RingerModeDelegate: int onSetRingerModeInternal(int,int,java.lang.String,int,android.media.VolumePolicy)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void hideSystemIconArea(boolean)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: void <init>(android.os.storage.StorageManager)>
<android.content.ClipboardManager: boolean hasText()>
<android.widget.ScrollView: java.lang.CharSequence getAccessibilityClassName()>
<android.graphics.Path_Delegate: void offset(float,float)>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>
<android.widget.ProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)>
<android.database.sqlite.SQLiteClosable: void releaseReference()>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>
<android.net.ProxyInfo: int getPort()>
<android.location.Criteria: void setSpeedAccuracy(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void end()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getProfileOwnerName(int)>
<android.app.ProgressDialog: void incrementProgressBy(int)>
<android.bluetooth.BluetoothSocket: void close()>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromUri(android.content.ContentResolver,android.net.Uri)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>
<android.app.job.JobInfo.TriggerContentUri: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Extender)>
<com.android.server.pm.KeySetManagerService: boolean isIdValidKeySetId(long)>
<android.content.res.Configuration: void setTo(android.content.res.Configuration)>
<com.android.settingslib.wifi.WifiTracker: android.net.wifi.WifiManager getManager()>
<android.location.GpsSatellite: boolean usedInFix()>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.telecom.RemoteConference: void unhold()>
<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>
<android.widget.TextView: void setLines(int)>
<android.view.ViewGroup: android.view.View findFocus()>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: void <init>(android.content.Context)>
<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipBottom(int)>
<android.app.NativeActivity: void onWindowFocusChanged(boolean)>
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
<android.text.util.Rfc822Token: java.lang.String quoteNameIfNecessary(java.lang.String)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSIconView createTileView(android.content.Context)>
<com.android.anqp.eap.EAPMethod: com.android.anqp.eap.EAP.EAPMethodID getEAPMethodID()>
<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<android.util.Size: int getWidth()>
<com.android.systemui.statusbar.BackDropView: void setOnVisibilityChangedRunnable(java.lang.Runnable)>
<android.transition.Fade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionStarting(long,long)>
<android.app.job.JobInfo: long getTriggerContentMaxDelay()>
<android.renderscript.Matrix2f: float get(int,int)>
<android.media.session.MediaSession: void setFlags(int)>
<android.util.SparseBooleanArray: void <init>()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean,boolean)>
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(android.location.GnssNavigationMessageEvent.Callback,android.os.Handler)>
<com.android.server.am.BatteryStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.Switch: void setShowText(boolean)>
<android.printservice.PrintJob: java.lang.String getTag()>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData.Builder setServiceName(java.lang.String)>
<android.hardware.radio.RadioManager.FmBandDescriptor: int describeContents()>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.PackageManagerService: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<android.text.ClipboardManager: boolean hasText()>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.util.Pair inflateView(com.android.ide.common.rendering.api.ResourceReference,android.view.ViewGroup,boolean,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void onLockedNotificationImportanceChange(com.android.keyguard.KeyguardHostView.OnDismissAction)>
<android.bluetooth.le.ScanRecord: java.lang.String toString()>
<android.media.Image.Plane: java.nio.ByteBuffer getBuffer()>
<com.android.systemui.stackdivider.DividerView: com.android.internal.policy.DividerSnapAlgorithm getSnapAlgorithm()>
<com.android.systemui.qs.tiles.UserDetailItemView: void drawableStateChanged()>
<android.view.WindowManagerPolicy.InputConsumer: void dismiss()>
<android.os.TokenWatcher: void acquired()>
<android.content.ContentProviderOperation: int describeContents()>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromCursor(android.database.Cursor,java.lang.String)>
<android.net.http.SslError: java.lang.String toString()>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<com.android.systemui.classifier.Stroke: float getDurationSeconds()>
<android.app.Instrumentation: void startPerformanceSnapshot()>
<com.android.systemui.tv.pip.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.notification.ZenModeConfig.ScheduleInfo: boolean equals(java.lang.Object)>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<android.os.PowerManager.WakeLock: java.lang.String toString()>
<com.android.server.notification.ScheduleConditionProvider: android.service.notification.IConditionProvider asInterface()>
<android.webkit.WebStorage.Origin: long getUsage()>
<com.android.systemui.qs.customize.QSCustomizer: void setContainer(com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer)>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>
<android.opengl.GLES32: void glGetnUniformuiv(int,int,int,int[],int)>
<com.android.server.notification.ZenModeHelper: void setNotificationPolicy(android.app.NotificationManager.Policy)>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionFailed()>
<android.content.Intent: android.content.Intent setFlags(int)>
<android.hardware.camera2.legacy.RequestHolder: boolean isRepeating()>
<android.media.RemoteController: boolean clearArtworkConfiguration()>
<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>
<com.android.systemui.statusbar.NotificationContentView: void setDark(boolean,boolean,long)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>
<android.text.format.Time: java.lang.String format(java.lang.String)>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>
<com.android.documentsui.services.FileOperations: java.lang.String delete(android.app.Activity,java.util.List,com.android.documentsui.model.DocumentInfo,com.android.documentsui.model.DocumentStack)>
<com.android.preload.ClientUtils: com.android.ddmlib.Client findClient(com.android.ddmlib.IDevice,java.lang.String,int,int)>
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.widget.SearchView: void setMaxWidth(int)>
<android.app.PendingIntent: void cancel()>
<android.graphics.PorterDuffColorFilter: int hashCode()>
<android.telecom.Connection: void onExtrasChanged(android.os.Bundle)>
<com.android.commands.sm.Sm: void runListDisks()>
<android.renderscript.ScriptIntrinsicBLAS: void DGBMV(int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>
<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.hardware.Camera.Parameters: boolean isVideoSnapshotSupported()>
<com.android.printspooler.ui.PrinterRegistry: void <init>(android.app.Activity,java.lang.Runnable,int,int)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.content.pm.ShortcutManager: void enableShortcuts(java.util.List)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void getState(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackViewState)>
<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<android.graphics.SurfaceTexture: void detachFromGLContext()>
<com.android.server.hdmi.HdmiCecController.AllocateAddressCallback: void onAllocated(int,int)>
<android.location.Address: boolean hasLongitude()>
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getFrontOfStackTransform()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHERK(int,int,double,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance()>
<android.net.Uri: int hashCode()>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()>
<android.app.ActivityManagerProxy: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnSigMotion()>
<android.hardware.camera2.legacy.GLThreadManager: void quit()>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.awt.image.BufferedImage,boolean,com.android.resources.Density)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>
<android.text.Layout: int getLineVisibleEnd(int)>
<android.widget.Chronometer: long getBase()>
<android.telecom.Connection: void onStopDtmfTone()>
<android.view.View: boolean requestFocus()>
<com.android.server.EntropyMixer: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetState()>
<android.text.style.EasyEditSpan: void <init>()>
<com.android.gallery3d.exif.ExifInterface: boolean isOffsetTag(short)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: float getMinStackScrollerPadding(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void keyguardGoingAway()>
<android.media.tv.TvInputService.Session: void onSetStreamVolume(float)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int,int)>
<android.app.ActivityView.ActivityViewCallback: void onSurfaceAvailable(android.app.ActivityView)>
<android.animation.IntArrayEvaluator: int[] evaluate(float,int[],int[])>
<com.android.systemui.recents.tv.RecentsTvActivity: void onPause()>
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>
<com.android.systemui.statusbar.policy.SignalController: int getQsCurrentIconId()>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<android.app.DialogFragment: void onDismiss(android.content.DialogInterface)>
<android.media.tv.TvInputInfo: int hashCode()>
<android.graphics.drawable.LayerDrawable: void jumpToCurrentState()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeight(float)>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<android.preference.DialogPreference: void setDialogMessage(int)>
<android.content.ContentProviderResult: void <init>(android.os.Parcel)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHeadsUpBoundaries(int,int)>
<android.widget.TextView: void setHintTextColor(int)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void onMeasure(int,int)>
<android.provider.MediaStore.Audio.Artists.Albums: android.net.Uri getContentUri(java.lang.String,long)>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap)>
<com.android.tools.layoutlib.create.AsmGenerator: java.util.Set getClassesNotRenamed()>
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)>
<com.android.systemui.qs.QSDualTileLabel: void setTextSize(int,float)>
<com.android.server.trust.TrustAgentWrapper: void destroy()>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager createStatusBarKeyguardViewManager(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelf(int,float)>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>
<android.animation.TimeAnimator: void setCurrentPlayTime(long)>
<android.app.VoiceInteractor.PickOptionRequest.Option: void <init>(java.lang.CharSequence,int)>
<android.graphics.Canvas_Delegate: void native_concat(long,long)>
<android.content.IntentFilter: java.util.Iterator typesIterator()>
<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)>
<android.graphics.Point: boolean equals(java.lang.Object)>
<android.hardware.Camera: void stopPreview()>
<android.content.IntentFilter: java.util.Iterator schemesIterator()>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>
<com.android.systemui.recents.tv.views.RecentsTvView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.ActivityManagerProxy: void stopLockTaskMode()>
<com.android.settingslib.graph.UsageView: void addPath(android.util.SparseIntArray)>
<com.android.preload.ui.UI: void hideWaitDialog()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateExpandedHeight(float)>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>
<com.android.systemui.volume.SegmentedButtons: void updateLocale()>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.server.backup.BackupUtils: java.util.ArrayList hashSignatureArray(android.content.pm.Signature[])>
<android.util.SparseBooleanArray: boolean valueAt(int)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable.Orientation getOrientation()>
<android.widget.CursorTreeAdapter: void onGroupCollapsed(int)>
<com.android.server.display.DisplayBlanker: void requestDisplayState(int,int)>
<android.telecom.Conference: java.util.List getConnections()>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setIconDrawable(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void scale(float,float)>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.Adapter: java.lang.Object getItem(int)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setMatchParent(android.view.View)>
<android.util.ArraySet: boolean add(java.lang.Object)>
<com.android.systemui.statusbar.phone.ButtonDispatcher.ButtonInterface: void setImageResource(int)>
<com.android.commands.uiautomator.Launcher: void main(java.lang.String[])>
<com.android.systemui.qs.QSTile.AnimationIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor getCursor()>
<com.android.commands.svc.UsbCommand: void run(java.lang.String[])>
<android.opengl.GLES11: void glPointParameterx(int,int)>
<com.android.server.am.ActivityManagerService: void <init>(android.content.Context)>
<android.hardware.usb.UsbConfiguration: int getId()>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>
<android.view.View: int getScrollY()>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,float[][])>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackage(java.lang.String,java.lang.String)>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>
<android.app.ActivityManagerProxy: int sendIntentSender(android.content.IIntentSender,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>
<android.os.BatteryStats.BitDescription: void <init>(int,java.lang.String,java.lang.String)>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.bluetooth.BluetoothProfile: java.util.List getConnectedDevices()>
<com.android.statementservice.retriever.AbstractAsset: int lookupKey()>
<android.media.session.MediaSession.Callback: void onStop()>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.graphics.drawable.LayerDrawable: int getLayerHeight(int)>
<android.net.MailTo: java.lang.String getSubject()>
<android.provider.DocumentsProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<android.widget.TextView: void setTextSize(float)>
<com.android.server.appwidget.AppWidgetService: void onStart()>
<android.view.WindowManagerGlobal_Delegate: android.view.IWindowManager getWindowManagerService()>
<android.os.UserManager: boolean isUserRunningAndLocked(android.os.UserHandle)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>
<android.app.Activity: android.content.Intent getIntent()>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<com.android.wallpapercropper.WallpaperCropActivity: boolean enableRotation()>
<android.webkit.WebSettings: int getDefaultFontSize()>
<com.android.hotspot2.osu.ResponseFactory: com.android.hotspot2.osu.OSUResponse buildResponse(com.android.hotspot2.omadm.XMLNode)>
<com.android.server.am.ActivityManagerService: java.io.File dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.os.Parcel: void readException(int,java.lang.String)>
<com.example.android.networkusage.NetworkActivity: void onStart()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void require(int,java.lang.String,java.lang.String)>
<android.view.ViewPropertyAnimator: long getDuration()>
<com.android.systemui.tuner.TunerActivity: boolean onPreferenceStartFragment(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.Preference)>
<android.widget.AbsoluteLayout: void onMeasure(int,int)>
<android.hardware.camera2.CaptureResult.Key: java.lang.String toString()>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.photos.views.TiledImageView: void onResume()>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>
<android.media.MediaRecorder: void prepare()>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>
<com.android.server.am.ActivityManagerService: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.util.Locale,java.lang.String[],int,java.lang.Class)>
<android.accounts.AuthenticatorDescription: int describeContents()>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.widget.VideoView: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController)>
<android.app.FragmentController: android.app.FragmentManagerNonConfig retainNestedNonConfig()>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void updateGrayscaleMatrix(float)>
<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>
<android.media.AudioMixPortConfig: android.media.AudioMixPort port()>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>
<android.widget.Scroller: void setFinalX(int)>
<com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<android.view.View: int getDefaultSize(int,int)>
<com.android.server.tv.UinputBridge: void close(android.os.IBinder)>
<android.graphics.Region: boolean set(int,int,int,int)>
<android.net.TrafficStats: long getTotalRxPackets()>
<android.content.pm.PackageManager: void removePermission(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>
<android.location.Address: void setCountryCode(java.lang.String)>
<android.security.keystore.KeyGenParameterSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>
<com.android.systemui.qs.external.TileLifecycleManager: void flushMessagesAndUnbind()>
<android.app.Notification.WearableExtender: int getGravity()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback,android.os.Handler)>
<com.android.server.notification.ZenLog: void traceUpdateZenMode(int,int)>
<com.android.gallery3d.common.Utils: java.lang.String ensureNotNull(java.lang.String)>
<android.widget.PopupMenu: int getGravity()>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putZeroLengthElement(int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void updateFrom(com.android.server.notification.NotificationUsageStats.SingleNotificationStats)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setChildrenExpanded(boolean,boolean)>
<android.net.ConnectivityManager: void removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>
<android.media.audiofx.PresetReverb.Settings: java.lang.String toString()>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>
<android.telephony.CellSignalStrengthCdma: int getDbm()>
<com.android.server.policy.BarController: boolean isTransientShowing()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getContentFrameLw()>
<com.android.server.job.JobPackageTracker: float getLoadFactor(com.android.server.job.controllers.JobStatus)>
<com.android.server.twilight.TwilightService: void onAlarm()>
<android.app.UiAutomation: boolean performGlobalAction(int)>
<com.android.systemui.qs.QSTile: void checkIfRestrictionEnforcedByAdminOnly(com.android.systemui.qs.QSTile.State,java.lang.String)>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.telecom.Connection: void setVideoProvider(android.telecom.Connection.VideoProvider)>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList getAllApps()>
<android.view.ViewGroup: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIndents(int[],int[])>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerOrKeyguard()>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context)>
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<com.android.systemui.qs.QuickTileLayout: void <init>(android.content.Context)>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void removeChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.hardware.Camera.Parameters: float getHorizontalViewAngle()>
<android.graphics.Region_Delegate: java.awt.geom.Area combineShapes(java.awt.Shape,java.awt.Shape,int)>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>
<android.net.Uri: java.lang.String getEncodedAuthority()>
<com.android.server.policy.WakeGestureListener: void onWakeUp()>
<com.android.systemui.recents.model.RecentsPackageMonitor: void onPackageRemoved(java.lang.String,int)>
<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>
<android.hardware.camera2.legacy.ParameterUtils.ZoomData: void <init>(int,android.graphics.Rect,android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.hotspot2.asn1.Asn1Object: int getTag()>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>
<android.filterpacks.imageproc.SaturateFilter: void process(android.filterfw.core.FilterContext)>
<com.android.hotspot2.osu.UserInputListener: java.lang.String operationStatus(java.lang.String,com.android.hotspot2.osu.OSUOperationStatus,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.renderscript.Element: android.renderscript.Element I64_3(android.renderscript.RenderScript)>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>
<android.os.storage.StorageVolume: boolean equals(java.lang.Object)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetType(android.renderscript.Mesh.Primitive)>
<com.android.settingslib.BatteryInfo: com.android.settingslib.BatteryInfo getBatteryInfo(android.content.Context,android.content.Intent,android.os.BatteryStats,long)>
<android.renderscript.FieldPacker: android.renderscript.Byte4 subByte4()>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: long getPrimaryStorageSize()>
<com.android.keyguard.KeyguardSecurityView: void showPromptReason(int)>
<com.android.systemui.qs.customize.TileAdapter.Holder: void <init>(android.view.View)>
<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setBufferSizeInBytes(int)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor allocate(int)>
<android.view.View: int getOverScrollMode()>
<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>
<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<com.android.systemui.statusbar.StatusBarIconView: void onConfigurationChanged(android.content.res.Configuration)>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,int[],int)>
<android.animation.ObjectAnimator: void <init>()>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentsNextAffiliatedTask()>
<com.android.hotspot2.pps.HomeSP: int getUpdateIdentifier()>
<android.app.FragmentManager: void enableDebugLogging(boolean)>
<android.renderscript.Allocation: android.renderscript.Type getType()>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
<android.graphics.drawable.LayerDrawable: boolean onLayoutDirectionChanged(int)>
<android.widget.Toolbar: android.view.Menu getMenu()>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.tv.TvView: void setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)>
<android.util.JsonReader: void beginObject()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>
<android.media.tv.TvContract: android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)>
<com.android.hotspot2.utils.HTTPResponse: int getStatusCode()>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>
<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreBackoff(boolean)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributeValue(int)>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>
<com.android.systemui.recents.misc.DozeTrigger: void <init>(int,java.lang.Runnable)>
<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>
<android.app.job.JobService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.hotspot2.omadm.XMLNode: java.lang.String getText()>
<android.media.MediaPlayer: void release()>
<android.content.Context: int getColor(int)>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void setCallback(com.android.systemui.tv.pip.PipRecentsOverlayManager.Callback)>
<android.app.ActivityManagerProxy: boolean requestAssistContextExtras(int,com.android.internal.os.IResultReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setRequiresCharging(boolean)>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<android.webkit.WebSettings: void setDisabledActionModeMenuItems(int)>
<android.print.PrintAttributes.MediaSize: java.lang.String getId()>
<android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>
<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>
<android.widget.AbsSeekBar: android.graphics.PorterDuff.Mode getThumbTintMode()>
<com.android.layoutlib.bridge.bars.ThemePreviewNavigationBar: int getSidePadding(float)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: boolean cropBitmap()>
<com.android.systemui.statusbar.NotificationSettingsIconRow.SettingsIconRowListener: void onGearTouched(com.android.systemui.statusbar.ExpandableNotificationRow,int,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,float[][])>
<com.android.documentsui.StressProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<com.android.systemui.recents.ScreenPinningRequest: void onConfigurationChanged()>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>
<com.android.server.twilight.TwilightState: java.util.Calendar sunrise()>
<com.google.android.gles_jni.GLImpl: void glDrawArrays(int,int,int)>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.Settings getProperties()>
<android.view.ViewGroup: void startViewTransition(android.view.View)>
<com.android.systemui.statusbar.AnimatedImageView: void onAttachedToWindow()>
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()>
<com.android.keyguard.KeyguardSecurityContainer: void reset()>
<android.view.View: void setTag(java.lang.Object)>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,java.lang.CharSequence,int)>
<android.location.GnssMeasurement: int getMultipathIndicator()>
<com.android.systemui.statusbar.notification.HybridNotificationView: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<android.util.Pools.Pool: java.lang.Object acquire()>
<android.view.SurfaceHolder: android.view.Surface getSurface()>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: com.android.server.net.NetworkStatsService.NetworkStatsSettings.Config getUidTagConfig()>
<com.android.systemui.recents.views.AnimateableViewBounds: void updateClipBounds()>
<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>
<com.android.systemui.doze.DozeHost: void startDozing(java.lang.Runnable)>
<com.android.server.net.NetworkStatsCollection: void read(java.io.DataInputStream)>
<android.app.NativeActivity: void onStop()>
<com.android.server.notification.ManagedServices: void onPackagesChanged(boolean,java.lang.String[])>
<android.os.PowerManager.WakeLock: void finalize()>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>
<android.util.AtomicFile: void <init>(java.io.File)>
<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationRequired(boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: java.lang.String composeChangeAnnouncement()>
<android.app.FragmentController: android.util.ArrayMap retainLoaderNonConfig()>
<com.android.systemui.qs.tiles.DataSaverTile: void handleClick()>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Type,android.renderscript.Mesh.Primitive)>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>
<android.location.GnssClock: double getTimeUncertaintyNanos()>
<com.android.preload.classdataretrieval.hprof.Hprof: java.io.File doHprof(com.android.ddmlib.Client,int)>
<com.android.documentsui.SectionedListAdapter: void clearSections()>
<com.android.server.pm.PackageManagerService: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<com.android.server.pm.PermissionsState: int revokeRuntimePermission(com.android.server.pm.BasePermission,int)>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>
<android.hardware.camera2.impl.CameraMetadataNative: void <init>()>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
<android.app.assist.AssistStructure.ViewNode: android.graphics.Matrix getTransformation()>
<com.android.printspooler.ui.PrintActivity: void onOptionsClosed()>
<com.android.systemui.qs.PathInterpolatorBuilder: android.view.animation.Interpolator getXInterpolator()>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.ScriptIntrinsicLUT create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.security.keystore.KeyGenParameterSpec: javax.security.auth.x500.X500Principal getCertificateSubject()>
<com.android.statementservice.retriever.Relation: int hashCode()>
<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.ExpandableView: int getClipTopAmount()>
<com.android.server.policy.StatusBarController: void <init>()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedGoingToSleep(int)>
<android.graphics.CornerPathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: java.util.List getRawTasks()>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>
<android.graphics.Camera: void rotate(float,float,float)>
<com.android.settingslib.net.DataUsageController.NetworkNameProvider: java.lang.String getMobileDataNetworkName()>
<android.media.AudioSystem.AudioRecordingCallback: void onRecordingConfigurationChanged(int,int,int,int[])>
<android.preference.PreferenceFragment: void onStart()>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>
<android.os.BatteryStats.Uid: android.util.ArrayMap getProcessStats()>
<android.hardware.hdmi.HdmiPlaybackClient.OneTouchPlayCallback: void onComplete(int)>
<android.content.AsyncTaskLoader: void onForceLoad()>
<com.android.server.connectivity.NetworkDiagnostics.Measurement: boolean checkSucceeded()>
<com.android.systemui.statusbar.CommandQueue: void disable(int,int)>
<com.android.documentsui.EventListener: void onDirectoryLoaded(android.net.Uri)>
<android.os.Debug: int getGlobalFreedSize()>
<android.app.Activity: int getTitleColor()>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(android.view.SurfaceControl.PhysicalDisplayInfo)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>
<android.view.View: int[] mergeDrawableStates(int[],int[])>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<android.os.BatteryManager: boolean isCharging()>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>
<android.view.View: android.view.View findViewById(int)>
<android.app.PendingIntent: java.lang.String getTargetPackage()>
<android.app.admin.DevicePolicyManager: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()>
<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdType()>
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.hardware.Camera.Size: int hashCode()>
<com.android.systemui.tuner.TunerService: void addTunable(com.android.systemui.tuner.TunerService.Tunable,java.lang.String[])>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>
<android.os.BatteryStats.Uid: long getTimeAtCpuSpeed(int,int,int)>
<android.telephony.TelephonyManager: int getVoiceNetworkType()>
<android.view.View: void setLayerPaint(android.graphics.Paint)>
<android.print.PrintDocumentInfo: int getPageCount()>
<android.os.SystemClock: long uptimeMillis()>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>
<com.android.server.AppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<com.android.server.pm.Installer: void migrateAppData(java.lang.String,java.lang.String,int,int)>
<android.gesture.GestureStore: int getOrientationStyle()>
<com.android.systemui.qs.tiles.LocationTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.content.DialogInterface.OnMultiChoiceClickListener: void onClick(android.content.DialogInterface,int,boolean)>
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>
<android.content.pm.PackageInstaller.Session: void removeSplit(java.lang.String)>
<android.widget.TextView: int getCompoundPaddingLeft()>
<android.widget.Chronometer: void onWindowVisibilityChanged(int)>
<android.app.ActivityManagerProxy: void notifyEnterAnimationComplete(android.os.IBinder)>
<com.android.systemui.analytics.DataCollector: void setQsExpanded(boolean)>
<com.android.systemui.classifier.FalsingManager: void onNotificationDoubleTap(boolean,float,float)>
<com.android.settingslib.bluetooth.MapProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.media.Image)>
<android.view.animation.Animation: int getRepeatMode()>
<com.android.printspooler.ui.PageAdapter: void finalize()>
<android.speech.tts.TextToSpeechService: int onLoadVoice(java.lang.String)>
<com.android.server.am.ActivityManagerService: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
<com.android.printspooler.ui.SelectPrinterActivity: void onStart()>
<com.android.systemui.volume.ZenModePanel.Callback: void onInteraction()>
<com.android.keyguard.KeyguardSimPinView: void startAppearAnimation()>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityStart(java.util.Date)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setAlpha(float)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void expandSettingsPanel(java.lang.String)>
<com.android.systemui.qs.QSContainer: void setOverscrolling(boolean)>
<android.view.inputmethod.CompletionInfo: long getId()>
<com.android.systemui.recents.RecentsImpl: void onStartScreenPinning(android.content.Context,int)>
<javax.microedition.khronos.opengles.GL11: void glNormalPointer(int,int,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<com.android.keyguard.KeyguardSecurityContainer: void showMessage(java.lang.String,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onLayout(boolean,int,int,int,int)>
<android.telecom.Connection: boolean isRingbackRequested()>
<com.android.server.pm.ShortcutParser: java.util.List parseShortcuts(com.android.server.pm.ShortcutService,java.lang.String,int)>
<com.android.printspooler.model.OpenDocumentCallback: void onFailure(int)>
<android.os.Message: android.os.Message obtain(android.os.Message)>
<com.android.hotspot2.IMSIParameter: java.lang.String getImsi()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToBinaryString(long)>
<com.android.hotspot2.asn1.Asn1Boolean: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer)>
<android.os.Debug: void changeDebugPort(int)>
<android.app.SearchableInfo: int getVoiceMaxResults()>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<com.android.server.NetworkManagementSocketTagger: int kernelToTag(java.lang.String)>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>
<com.android.systemui.settings.ToggleSlider: void setMax(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<android.media.tv.TvInputService.Session: void onTimeShiftSetPlaybackParams(android.media.PlaybackParams)>
<android.widget.GridLayout: void setAlignmentMode(int)>
<android.util.Rational: int hashCode()>
<android.drm.DrmInfo: java.util.Iterator iterator()>
<android.widget.HorizontalScrollView: void setOverScrollMode(int)>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>
<com.android.server.DeviceIdleController: int[] getAppIdUserWhitelistInternal()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>
<android.media.MediaMetadataEditor: void clear()>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>
<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>
<android.widget.Toolbar: void setTitleMarginStart(int)>
<android.media.MediaRouter.RouteInfo: int getVolume()>
<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean onLongClick(android.view.View)>
<com.android.hotspot2.Utils: java.lang.String bytesToBingoCard(java.nio.ByteBuffer,int)>
<com.android.documentsui.dirlist.MultiSelectManager.Callback: boolean onBeforeItemStateChange(java.lang.String,boolean)>
<android.media.AudioManager: int getRingerMode()>
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<android.renderscript.Matrix2f: float[] getArray()>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long2)>
<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.view.DragEvent: android.content.ClipData getClipData()>
<com.android.server.am.ActivityManagerService: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>
<com.android.settingslib.widget.AnimatedImageView: void setAnimating(boolean)>
<android.widget.ImageView: void setColorFilter(int)>
<com.android.systemui.qs.tiles.BatteryTile: android.content.Intent getLongClickIntent()>
<android.service.notification.Condition: int describeContents()>
<android.net.http.SslError: java.lang.String getUrl()>
<android.webkit.WebStorage.Origin: long getQuota()>
<android.content.IntentFilter: java.lang.String getCategory(int)>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,java.lang.String)>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<android.widget.TextView: void setMinLines(int)>
<android.widget.Switch: int getCompoundPaddingLeft()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeData(int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setTouchEnabled(boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void setLeftInset(int)>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportFailedStrongAuthUnlockAttempt(int)>
<android.widget.CursorTreeAdapter: boolean hasStableIds()>
<android.hardware.Camera: void autoFocus(android.hardware.Camera.AutoFocusCallback)>
<com.android.server.NativeDaemonEvent: java.lang.String toString()>
<com.android.server.input.InputManagerService: void updateAccessibilityLargePointerFromSettings()>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void <init>(android.content.Context)>
<android.media.tv.TvInputService.Session: void <init>(android.content.Context)>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig.TagReader: java.lang.Object readTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<com.android.server.hdmi.HdmiCecLocalDevice.PendingActionClearedCallback: void onCleared(com.android.server.hdmi.HdmiCecLocalDevice)>
<com.android.settingslib.drawable.CircleFramedDrawable: com.android.settingslib.drawable.CircleFramedDrawable getInstance(android.content.Context,android.graphics.Bitmap)>
<android.content.pm.PackageInfo: int describeContents()>
<com.android.hotspot2.pps.HomeSP: java.util.Set getMatchAnyOIs()>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>
<android.security.keystore.KeyGenParameterSpec: java.util.Date getCertificateNotBefore()>
<com.android.server.connectivity.NetdEventListenerService: void flushStatistics(java.util.List)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onCrossedThreshold(boolean)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: long getItemId(int)>
<com.android.systemui.statusbar.notification.ActionListTransformState: void recycle()>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,java.lang.Object)>
<android.widget.MultiAutoCompleteTextView: void performValidation()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setKeyInjectionDelay(long)>
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>
<com.android.server.policy.PhoneWindowManager: void finishedGoingToSleep(int)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onBusy(android.hardware.camera2.CameraDevice)>
<android.app.Activity: void setTitleColor(int)>
<android.database.BulkCursorProxy: android.os.IBinder asBinder()>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>
<android.widget.DigitalClock: void onAttachedToWindow()>
<com.android.documentsui.model.RootInfo: boolean supportsCreate()>
<android.net.LinkAddress: int getFlags()>
<android.content.SyncStats: int describeContents()>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>
<android.media.MediaMuxer: void finalize()>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context)>
<android.location.Location: void setLongitude(double)>
<android.app.ActivityManagerProxy: void addPackageDependency(java.lang.String)>
<android.view.View: void clearAnimation()>
<com.android.server.accessibility.KeyboardInterceptor: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getDefaultVoice()>
<android.content.RestrictionEntry: void <init>(java.lang.String,boolean)>
<android.graphics.drawable.GradientDrawable: void <init>()>
<com.android.server.job.JobPackageTracker: void notePending(com.android.server.job.controllers.JobStatus)>
<android.accounts.AuthenticatorException: void <init>()>
<com.android.location.provider.FusedLocationHardwareSink: void onLocationAvailable(android.location.Location[])>
<android.widget.RelativeLayout.LayoutParams: void resolveLayoutDirection(int)>
<android.print.PageRange: int hashCode()>
<com.google.android.gles_jni.GLImpl: void glTexParameterx(int,int,int)>
<com.android.hotspot2.osu.OSUClient: void remediate(com.android.hotspot2.osu.OSUManager,android.net.Network,javax.net.ssl.KeyManager,com.android.hotspot2.pps.HomeSP,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void reset()>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: void <init>(java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSPanel: void refreshAllTiles()>
<android.preference.Preference: void setIcon(int)>
<android.telecom.Connection: void setDisconnected(android.telecom.DisconnectCause)>
<android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>
<com.android.printspooler.model.PrintSpoolerService: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId)>
<android.util.BridgeXmlPullAttributes: float getAttributeFloatValue(int,float)>
<com.android.keyguard.KeyguardSecurityView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ActionMode: void setTitleOptionalHint(boolean)>
<com.android.systemui.statusbar.phone.PanelView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceProvisioned()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: int describeContents()>
<android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>
<com.android.settingslib.applications.InterestingConfigChanges: boolean applyNewConfig(android.content.res.Resources)>
<android.net.http.HttpResponseCache: void flush()>
<com.android.documentsui.services.Job: void run()>
<com.android.gallery3d.exif.ExifTag: long getValueAt(int)>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>
<android.view.View: int computeHorizontalScrollRange()>
<android.net.wifi.WifiEnterpriseConfig: void setPhase2Method(int)>
<android.content.res.Resources_Delegate: android.content.res.BridgeTypedArray newTypeArray(android.content.res.Resources,int,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postQSRunnableDismissingKeyguard(java.lang.Runnable)>
<com.android.systemui.tuner.TunerFragment: void onPause()>
<com.android.hotspot2.pps.HomeSP: java.lang.String toString()>
<android.app.WallpaperManager: int setResource(int,int)>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readVarLongArray(java.io.DataInputStream)>
<com.android.systemui.recents.views.grid.GridTaskView: void onConfigurationChanged()>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onScreenOff()>
<com.android.documentsui.Events.MotionInputEvent: boolean isOverItem()>
<android.view.View: void setTranslationY(float)>
<com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver: void onDetailsChanged(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementDetails)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>
<android.hardware.camera2.legacy.RequestHolder: int getSubsequeceId()>
<android.bluetooth.le.ScanResult: int hashCode()>
<com.android.server.vr.SettingsObserver.SettingChangeListener: void onSettingRestored(java.lang.String,java.lang.String,int)>
<com.android.commands.wm.Wm: void onRun()>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>
<android.animation.Animator.AnimatorListener: void onAnimationRepeat(android.animation.Animator)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float)>
<android.text.Editable: android.text.InputFilter[] getFilters()>
<android.view.KeyEvent: long getEventTime()>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>
<com.android.settingslib.net.DataUsageController.Callback: void onMobileDataEnabled(boolean)>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>
<android.text.style.TtsSpan.TelephoneBuilder: void <init>(java.lang.String)>
<android.media.tv.TvView.TimeShiftPositionCallback: void onTimeShiftCurrentPositionChanged(java.lang.String,long)>
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents.Event)>
<com.android.server.net.NetworkPolicyManagerService: void systemReady()>
<android.text.Layout: int getParagraphRight(int)>
<com.android.server.policy.PhoneWindowManager: boolean canBeForceHidden(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.gallery3d.exif.ExifTag: long[] getValueAsLongs()>
<com.android.commands.svc.Svc.Command: void <init>(java.lang.String)>
<android.net.LinkProperties: boolean equals(java.lang.Object)>
<com.android.server.am.ActivityManagerService: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>
<android.util.Pools.SimplePool: void <init>(int)>
<android.os.ParcelUuid: int hashCode()>
<com.android.hotspot2.omadm.MOTree: com.android.hotspot2.omadm.OMAConstructed getRoot()>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<com.android.server.am.ActivityManagerService: void notifyPinnedStackAnimationEnded()>
<android.content.Intent: void <init>(android.content.Intent)>
<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<com.android.systemui.statusbar.policy.EthernetSignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<com.android.systemui.statusbar.CommandQueue: void <init>(com.android.systemui.statusbar.CommandQueue.Callbacks)>
<android.animation.ValueAnimator: void setRepeatMode(int)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void initializeNotificationAreaViews(android.content.Context)>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: void <init>(android.hardware.radio.RadioManager.FmBandConfig)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyFlashScreen()>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyAlpha(float)>
<android.text.util.Rfc822Token: void setComment(java.lang.String)>
<android.filterpacks.imageproc.ColorTemperatureFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.printspooler.ui.FusedPrintersProvider: boolean areHistoricalPrintersLoaded()>
<com.android.systemui.volume.SpTexts: void <init>(android.content.Context)>
<android.view.Window: void setLogo(int)>
<com.android.location.provider.FusedLocationHardware: void injectDiagnosticData(java.lang.String)>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.commands.pm.Pm: int runRemoveUser()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLocked()>
<com.android.settingslib.RestrictedPreferenceHelper: void <init>(android.content.Context,android.support.v7.preference.Preference,android.util.AttributeSet)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(float,float)>
<com.android.server.am.PreBootBroadcaster: void onFinished()>
<android.util.LruCache: int hitCount()>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void setViewType(com.android.ide.common.rendering.api.ViewType)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void notifyKeyguardAuthenticated(boolean)>
<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.BaseStatusBar: void onConfigurationChanged(android.content.res.Configuration)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void prepare(int,android.view.Surface)>
<com.android.preload.ui.NullProgressMonitor: void startSubTask(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: void deferNotifyDataSetChanged()>
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.systemui.statusbar.StatusBarIconView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>
<com.android.systemui.statusbar.stack.StackScrollState: void resetViewStates()>
<android.opengl.GLES10: void glFogfv(int,float[],int)>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.View)>
<android.media.MediaCodec.CryptoException: void <init>(int,java.lang.String)>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.notification.ConditionProviders)>
<android.graphics.Path: void addRoundRect(float,float,float,float,float[],android.graphics.Path.Direction)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getDeviceOwnerName()>
<android.speech.RecognitionService.Callback: void readyForSpeech(android.os.Bundle)>
<android.mtp.MtpDevice: boolean deleteObject(int)>
<android.print.PrintJob: int hashCode()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>
<com.android.systemui.qs.QSPanel: void setupTileLayout()>
<com.android.keyguard.KeyguardStatusView: void refreshTime()>
<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,java.nio.IntBuffer)>
<com.android.server.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
<android.media.AudioRecord: int getAudioFormat()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getLastChildNotGone()>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>
<android.widget.NumberPicker: boolean performLongClick()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setStatusBarState(int)>
<com.android.hotspot2.omadm.XMLNode: com.android.hotspot2.omadm.MOTree getMOTree()>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: int getActualLength()>
<com.android.commands.svc.UsbCommand: void <init>()>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineRect(android.graphics.RectF)>
<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.FieldID getFieldID_Input()>
<android.ddm.DdmHandleNativeHeap: void register()>
<com.android.systemui.statusbar.notification.ImageTransformState: void recycle()>
<android.graphics.Picture: void draw(android.graphics.Canvas)>
<android.util.SparseIntArray: void clear()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getDir(java.lang.String,int)>
<android.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.statusbar.NotificationData.Environment: boolean shouldHideNotifications(java.lang.String)>
<android.app.LauncherActivity: void setTitle(int)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>
<android.service.vr.VrListenerService: boolean isVrModePackageEnabled(android.content.Context,android.content.ComponentName)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onPause()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void unpinAll()>
<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardLocked()>
<com.android.server.net.NetworkStatsRecorder.RemoveUidRewriter: boolean shouldWrite()>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable bake()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onConnectedChanged()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfRemoteContactSearchDisallowed(android.content.Context,int)>
<android.graphics.Color: int green(int)>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>
<android.view.ViewGroup: int indexOfChild(android.view.View)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<com.android.server.notification.ConditionProviders: java.lang.Iterable getSystemProviders()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.phone.PhoneStatusBar getPhoneStatusBar()>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>
<android.os.BatteryStats.Uid.Pkg: android.util.ArrayMap getServiceStats()>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>
<android.widget.AbsSpinner: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowScale(float)>
<android.hardware.radio.RadioMetadata.Builder: android.hardware.radio.RadioMetadata build()>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>
<android.view.WindowContentFrameStats: int describeContents()>
<com.android.server.statusbar.StatusBarManagerInternal: void dismissKeyboardShortcutsMenu()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onClick(android.os.IBinder)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMaxFrequency()>
<com.android.server.am.BatteryStatsService: void noteVibratorOff(int)>
<android.service.notification.Condition: java.lang.String toString()>
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.content.PeriodicSync: java.lang.String toString()>
<com.android.location.provider.LocationProviderBase: void reportLocation(android.location.Location)>
<com.android.server.storage.FileCollector: com.android.server.storage.FileCollector.MeasurementResult getMeasurementResult(java.io.File)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>
<android.content.SyncAdapterType: java.lang.String toString()>
<com.android.server.pm.PackageManagerService: boolean isPackageAvailable(java.lang.String,int)>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>
<android.hardware.camera2.legacy.LegacyCameraDevice: boolean isPreviewConsumer(android.view.Surface)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.QSTileHost createQSTileHost(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar,com.android.systemui.statusbar.policy.BluetoothController,com.android.systemui.statusbar.policy.LocationController,com.android.systemui.statusbar.policy.RotationLockController,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.FlashlightController,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.UserInfoController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.statusbar.policy.SecurityController,com.android.systemui.statusbar.policy.BatteryController,com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.statusbar.policy.NextAlarmController)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: boolean equals(java.lang.Object)>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteRecycledResources()>
<android.content.RestrictionEntry: java.lang.String getTitle()>
<com.android.layoutlib.bridge.impl.Stack: void <init>()>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,int[])>
<com.android.printspooler.widget.PageContentView: void onSizeChanged(int,int,int,int)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>
<android.media.MediaCodec: void setVideoScalingMode(int)>
<android.telecom.Connection: void setAudioModeIsVoip(boolean)>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.text.StaticLayout: int getEllipsisCount(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: boolean performLongClick()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getDismissViewHeight()>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>
<com.android.systemui.tv.pip.PipControlButtonView: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.server.accessibility.AccessibilityManagerService: android.os.IBinder getWindowToken(int,int)>
<android.view.IWindowManagerImpl: void executeAppTransition()>
<android.transition.Transition: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>
<android.telecom.CallScreeningService.CallResponse: boolean getSkipCallLog()>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType)>
<android.view.View: java.util.ArrayList getTouchables()>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>
<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
<com.android.printspooler.model.RemotePrintDocument: void finish()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getServicesSystemSharedLibraryPackageName()>
<android.widget.ZoomButton: java.lang.CharSequence getAccessibilityClassName()>
<com.android.location.fused.FusionEngine: void enable()>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.media.MediaRouter: void addUserRoute(android.media.MediaRouter.UserRouteInfo)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: float getAlpha()>
<android.telephony.TelephonyManager: boolean hasIccCard(int)>
<com.android.server.media.MediaSessionService: void <init>(android.content.Context)>
<com.android.systemui.doze.DozeHost.Callback: void onNotificationLight(boolean)>
<com.android.server.power.PowerManagerService: void systemReady(com.android.internal.app.IAppOpsService)>
<android.widget.Toolbar: void setPopupTheme(int)>
<com.android.server.am.ActivityManagerService: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<com.android.systemui.egg.MLand: int getNumPlayers()>
<android.app.ActivityManagerProxy: void setFocusedTask(int)>
<android.hardware.camera2.params.RggbChannelVector: void copyTo(float[],int)>
<com.android.systemui.qs.AutoSizingList: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.CountdownConditionProvider: void onBootComplete()>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>
<com.android.server.lights.LightsService: void onBootPhase(int)>
<android.view.WindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>
<android.os.UserManager: boolean isDemoUser()>
<android.graphics.Canvas: int getMaximumBitmapWidth()>
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>
<com.google.android.maps.MapView: int getLongitudeSpan()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: com.android.server.notification.ManagedServices getOwner()>
<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.hotspot2.AppBridge: void showStatus(com.android.hotspot2.osu.OSUOperationStatus,java.lang.String,java.lang.String,java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>
<android.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>
<android.widget.TextView: int getTotalPaddingRight()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.hdmi.HdmiRecordSources.DigitalServiceIdentification: int toByteArray(byte[],int)>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>
<android.renderscript.ScriptIntrinsicBLAS: void SSBMV(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>
<com.android.tools.layoutlib.create.OverrideMethod: void setMethodListener(java.lang.String,com.android.tools.layoutlib.create.MethodListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>
<android.animation.Animator: void setStartDelay(long)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>
<android.widget.SimpleMonthView.OnDayClickListener: void onDayClick(android.widget.SimpleMonthView,android.icu.util.Calendar)>
<com.android.server.connectivity.NetworkAgentInfo: void lingerRequest(android.net.NetworkRequest,long,long)>
<com.android.systemui.statusbar.NotificationContentView: void requestSelectLayout(boolean)>
<android.app.job.JobInfo: long getMinFlexMillis()>
<android.content.SyncStats: void <init>()>
<com.android.server.net.NetworkPolicyManagerService: void setUidPolicy(int,int)>
<com.android.systemui.recents.events.activity.PackagesChangedEvent: void <init>(com.android.systemui.recents.model.RecentsPackageMonitor,java.lang.String,int)>
<android.view.View: void setOverScrollMode(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationContentView getPrivateLayout()>
<android.location.LocationManager: boolean addNmeaListener(android.location.OnNmeaMessageListener)>
<android.net.NetworkInfo: boolean isConnected()>
<com.android.server.statusbar.StatusBarManagerInternal: void buzzBeepBlinked()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void setupPorts()>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>
<com.android.systemui.qs.QSDualTileLabel: void <init>(android.content.Context)>
<com.android.server.AppOpsService: void <init>(java.io.File,android.os.Handler)>
<android.graphics.drawable.VectorDrawable: boolean canApplyTheme()>
<android.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onResume(int)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnected()>
<android.media.MediaSync: void setSyncParams(android.media.SyncParams)>
<android.graphics.PathMeasure: boolean isClosed()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setKeyguardEnabled(boolean)>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>
<android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.widget.Toast: float getVerticalMargin()>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.Exception)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isTrackingHeadsUp()>
<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>
<android.location.Criteria: boolean isBearingRequired()>
<com.android.settingslib.drawable.UserIconDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.hotspot2.osu.OSUManager: void deauth(long,boolean,int,java.lang.String)>
<com.android.systemui.qs.external.TileLifecycleManager: void onStartListening()>
<android.graphics.Canvas_Delegate: void nativeDrawVertices(long,int,int,float[],int,float[],int,int[],int,short[],int,int,long)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDelegateClassNatives()>
<android.net.ConnectivityManager: void setNetworkPreference(int)>
<android.hardware.camera2.utils.TaskDrainer: void taskStarted(java.lang.Object)>
<com.android.systemui.statusbar.ExpandableView: float getIncreasedPaddingAmount()>
<com.android.server.pm.ShortcutService: boolean updateShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<com.android.server.InputMethodManagerService: boolean setInputMethodEnabled(java.lang.String,boolean)>
<android.security.net.config.XmlConfigSource.ParserException: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.Throwable)>
<com.android.location.provider.FusedLocationHardware: boolean supportsDiagnosticDataInjection()>
<android.nfc.tech.Ndef: boolean canMakeReadOnly()>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,java.lang.Object)>
<android.media.tv.TvInputService.Session: void layoutSurface(int,int,int,int)>
<android.webkit.WebSettings: boolean getOffscreenPreRaster()>
<android.app.SharedElementCallback: void onRejectSharedElements(java.util.List)>
<android.telecom.RemoteConnection.VideoProvider: void unregisterCallback(android.telecom.RemoteConnection.VideoProvider.Callback)>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String[] getAcceptTypes()>
<android.text.format.Time: void setToNow()>
<android.app.AlertDialog: void <init>(android.content.Context,int)>
<android.renderscript.FieldPacker: android.renderscript.Double4 subDouble4()>
<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>
<com.android.hotspot2.osu.OSUManager: void remediate(com.android.hotspot2.pps.HomeSP,boolean)>
<android.widget.CursorTreeAdapter: int getGroupCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int)>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(java.lang.String)>
<android.widget.Editor.SuggestionsPopupWindow: void <init>()>
<android.database.MatrixCursor: void <init>(java.lang.String[])>
<android.graphics.drawable.shapes.ArcShape: void getOutline(android.graphics.Outline)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<android.provider.ContactsContract.CommonDataKinds.Im: int getProtocolLabelResource(int)>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>
<android.view.FrameStats: long getStartTimeNano()>
<android.app.FragmentController: void dispatchCreate()>
<android.app.Fragment_Delegate: void setLayoutlibCallback(com.android.ide.common.rendering.api.LayoutlibCallback)>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearActions()>
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.os.Parcel: void writeValue(java.lang.Object)>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>
<android.content.OperationApplicationException: void <init>(java.lang.String,int)>
<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,java.lang.String)>
<com.android.hotspot2.omadm.MultiValueMap: java.lang.Object get(java.lang.String)>
<android.view.InputEvent: int getSource()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getChild(com.android.uiautomator.core.UiSelector)>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: void <init>()>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationStarted()>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>
<com.android.hotspot2.osu.service.RedirectListener: void startService()>
<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Point,android.util.Size,int)>
<android.content.ContentProviderClient: void close()>
<android.webkit.WebViewFragment: void onDestroy()>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>()>
<android.util.Base64: byte[] encode(byte[],int)>
<com.android.systemui.volume.VolumePrefs: void unregisterCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>
<com.android.systemui.stackdivider.DividerView: void setMinimizedDockStack(boolean)>
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory2 getFactory2()>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getAppearFraction(float)>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>
<android.app.Activity: boolean moveTaskToBack(boolean)>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<com.google.android.gles_jni.GLImpl: void glScalef(float,float,float)>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>
<com.android.mtp.AppFuse.Callback: long readObjectBytes(int,long,long,byte[])>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenf(int,int,float)>
<android.drm.DrmInfo: byte[] getData()>
<android.media.tv.TvContentRating: java.lang.String getDomain()>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureHeight()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
<android.app.VoiceInteractor.CommandRequest: void onCommandResult(boolean,android.os.Bundle)>
<android.widget.LinearLayout: void setGravity(int)>
<android.telecom.Connection: void onAnswer()>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.LocalBluetoothProfile getProfileByName(java.lang.String)>
<com.google.android.gles_jni.EGLSurfaceImpl: int hashCode()>
<android.os.Message: java.lang.Runnable getCallback()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
<android.content.pm.PackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>
<android.graphics.drawable.GradientDrawable: int getOpacity()>
<android.app.PendingIntent.CanceledException: void <init>()>
<android.app.Notification.MediaStyle: void <init>(android.app.Notification.Builder)>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardSecurityCallback: void reset()>
<android.renderscript.ScriptIntrinsicBLAS: void STBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>
<com.android.server.NativeDaemonEvent: boolean isClassServerError()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setUser(int)>
<com.android.preload.actions.ImportAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.os.HandlerThread: boolean quit()>
<com.google.android.util.AbstractMessageParser.Photo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: int getSizeForList(android.content.Context)>
<android.view.View: float getZ()>
<android.telephony.CellInfoWcdma: java.lang.String toString()>
<com.android.hotspot2.Utils: java.lang.String toHex(byte[])>
<android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: android.graphics.Rect getStackActionButtonRect()>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureRequired(java.lang.String)>
<com.android.systemui.statusbar.TransformableView: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>
<com.android.systemui.statusbar.stack.AmbientState: int getScrollY()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: boolean isIconLocationChange(float)>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<android.printservice.PrintService: void onPrintJobQueued(android.printservice.PrintJob)>
<android.graphics.Color: int HSVToColor(int,float[])>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter.ViewHolder: void init(com.android.systemui.recents.model.Task)>
<com.android.commands.hid.Event.Reader: void <init>(java.io.InputStreamReader)>
<android.view.View: void bringToFront()>
<com.android.systemui.statusbar.policy.UserInfoController: void <init>(android.content.Context)>
<android.content.pm.PackageInstaller.SessionInfo: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptIntrinsicBLAS: void SSYRK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void releaseImmediately(java.lang.String)>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>
<android.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>
<android.bluetooth.le.ScanRecord: int getAdvertiseFlags()>
<android.content.Loader: void onForceLoad()>
<com.android.systemui.tv.pip.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.BatteryStats.LevelStepTracker: void <init>(int,long[])>
<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.server.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLauncherInfoChanged()>
<android.telephony.SubscriptionInfo: int getMnc()>
<com.android.server.display.DisplayManagerService: void <init>(android.content.Context)>
<android.location.Address: java.lang.String getSubThoroughfare()>
<com.android.systemui.statusbar.stack.AmbientState: void setTopPadding(int)>
<android.widget.Toast: int getDuration()>
<android.telephony.CellInfoWcdma: android.telephony.CellIdentityWcdma getCellIdentity()>
<android.gesture.GestureOverlayView: int getOrientation()>
<com.android.keyguard.KeyguardHostView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.opengl.GLES32: void glBlendFunci(int,int,int)>
<com.android.externalstorage.ExternalStorageProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector clickable(boolean)>
<com.android.server.am.BatteryStatsService: void notePhoneState(int)>
<android.app.Notification.Builder: android.app.Notification.Builder setOnlyAlertOnce(boolean)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>
<com.android.systemui.recents.Recents: void onDraggingInRecentsEnded(float)>
<com.android.server.policy.PhoneWindowManager: void adjustWindowParamsLw(android.view.WindowManager.LayoutParams)>
<android.print.PrintDocumentAdapter: void onStart()>
<com.android.server.hdmi.SelectRequestBuffer: com.android.server.hdmi.SelectRequestBuffer.PortSelectRequest newPortSelect(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<com.android.server.tv.TvInputManagerService: void <init>(android.content.Context)>
<android.animation.PointFEvaluator: void <init>(android.graphics.PointF)>
<com.android.systemui.qs.PseudoGridView: void onMeasure(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyBroadcast(android.content.Intent)>
<android.content.pm.ComponentInfo: int getLogoResource()>
<android.database.BulkCursorProxy: void close()>
<android.os.BatteryStats.Uid: android.os.BatteryStats.ControllerActivityCounter getWifiControllerActivity()>
<android.printservice.PrintJob: android.print.PrintJobId getId()>
<android.provider.Settings: boolean canDrawOverlays(android.content.Context)>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)>
<com.android.documentsui.SaveFragment: void prepareForDirectory(com.android.documentsui.model.DocumentInfo)>
<android.database.MatrixCursor: double getDouble(int)>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.android.hotspot2.omadm.OMAScalar: void fillPayload(java.lang.StringBuilder)>
<android.text.LineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<com.android.server.pm.UserRestrictionsUtils: boolean areEqual(android.os.Bundle,android.os.Bundle)>
<android.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onIconClicked(boolean)>
<android.graphics.Path: void close()>
<com.android.systemui.statusbar.phone.StatusBarIconList: void <init>(java.lang.String[])>
<com.android.gallery3d.glrenderer.GLCanvas: void dumpStatisticsAndClear()>
<com.android.server.backup.PreferredActivityBackupHelper: byte[] getBackupPayload(java.lang.String)>
<android.widget.AbsListView: int computeVerticalScrollOffset()>
<android.print.PrintAttributes.MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.view.Window: boolean requestFeature(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.BaseBundle: int getInt(java.lang.String)>
<android.content.pm.LauncherApps.Callback: void onShortcutsChanged(java.lang.String,java.util.List,android.os.UserHandle)>
<com.android.systemui.recents.views.TaskView: void startNoUserInteractionAnimation()>
<android.graphics.PathEffect_Delegate: android.graphics.PathEffect_Delegate getDelegate(long)>
<android.widget.BaseAdapter: boolean isEmpty()>
<com.android.server.am.ActivityManagerService: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<com.android.documentsui.model.DocumentInfo: boolean isRemoveSupported()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
<android.widget.HorizontalScrollView: void fling(int)>
<android.media.audiofx.AudioEffect: void finalize()>
<android.widget.ScrollView: boolean arrowScroll(int)>
<android.view.IWindowManagerImpl: android.graphics.Bitmap screenshotWallpaper()>
<android.preference.Preference: void setIntent(android.content.Intent)>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.android.server.wm.AppTransition: void notifyAppTransitionFinishedLocked(android.os.IBinder)>
<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>
<android.graphics.Paint: void setColor(int)>
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>
<com.android.server.accounts.AccountManagerBackupHelper: void restoreAccountAccessPermissions(byte[],int)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: java.lang.String toString()>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>
<android.preference.Preference: void setDependency(java.lang.String)>
<android.location.Address: int describeContents()>
<android.app.ActivityManagerProxy: void notifyLaunchTaskBehindComplete(android.os.IBinder)>
<android.preference.Preference: android.content.Intent getIntent()>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>
<android.ddm.DdmHandleHeap: void connected()>
<android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setBigContentTitle(java.lang.CharSequence)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getAttributeBooleanValue(int,boolean)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>
<com.android.server.pm.PermissionsState: int revokeInstallPermission(com.android.server.pm.BasePermission)>
<com.android.systemui.statusbar.notification.TransformState: void abortTransformation()>
<android.media.MediaRecorder: void setMaxDuration(int)>
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>
<android.view.ViewStructure: void setChildCount(int)>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>
<android.util.StateSet: int[] trimStateSet(int[],int)>
<com.android.server.pm.PackageInstallerService: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerified()>
<com.android.layoutlib.bridge.impl.GcSnapshot: void draw(com.android.layoutlib.bridge.impl.GcSnapshot.Drawable)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setQSPanel(com.android.systemui.qs.QSPanel)>
<android.speech.tts.Voice: java.lang.String getName()>
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeNameResource(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int[] getPackageGids(java.lang.String,int)>
<android.hardware.camera2.CameraDevice: void createCaptureSessionByOutputConfigurations(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterId,java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerType(org.objectweb.asm.Type)>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(int,boolean,java.lang.Object[])>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String,int)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<com.android.systemui.qs.tiles.RotationLockTile: boolean isCurrentOrientationLockPortrait(com.android.systemui.statusbar.policy.RotationLockController,android.content.Context)>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.app.LoaderManager: void destroyLoader(int)>
<com.android.systemui.statusbar.EmptyShadeView: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
<android.view.ViewTreeObserver: void dispatchOnDraw()>
<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>
<com.android.systemui.qs.tiles.RotationLockTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.input.InputManagerService: void setKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype,java.lang.String)>
<android.net.Uri: java.lang.String getEncodedQuery()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.IccOpenLogicalChannelResponse: int describeContents()>
<com.android.preload.actions.ReloadListAction: void run()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void revokeSelf()>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.media.ToneGenerator: void finalize()>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>
<com.android.settingslib.users.AppRestrictionsHelper: void setPackageSelected(java.lang.String,boolean)>
<android.app.admin.DevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<android.net.Network: int hashCode()>
<android.hardware.SensorManager: boolean requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.telephony.SignalStrength: int getLevel()>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>
<android.printservice.PrintJob: boolean isQueued()>
<android.view.View: void setMinimumHeight(int)>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>
<android.graphics.Canvas_Delegate: void native_drawBitmap(android.graphics.Canvas,long,android.graphics.Bitmap,float,float,long,int,int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer()>
<android.animation.Animator: void end()>
<android.preference.DialogPreference: void setDialogTitle(int)>
<android.view.WindowManager.LayoutParams: int describeContents()>
<com.android.systemui.recents.tv.RecentsTvActivity: void onCreate(android.os.Bundle)>
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>
<android.view.View: void setDrawingCacheEnabled(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.hardware.camera2.utils.ArrayUtils: int[] convertStringListToIntArray(java.util.List,java.lang.String[],int[])>
<android.content.pm.PermissionInfo: void <init>()>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>
<com.android.systemui.recents.views.TaskStackView: void onPickUpViewFromPool(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,boolean)>
<android.text.GreedyLineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<android.hardware.Camera.Parameters: void setPictureSize(int,int)>
<com.android.server.backup.PackageManagerBackupAgent: void evaluateStorablePackages()>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager.Request)>
<android.accessibilityservice.AccessibilityService.MagnificationController: void addListener(android.accessibilityservice.AccessibilityService.MagnificationController.OnMagnificationChangedListener)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDoneDrawing()>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(long)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap onGetBitmap()>
<android.mtp.MtpEvent: int getObjectHandle()>
<android.text.StaticLayout: int getTopPadding()>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.net.Uri build()>
<com.android.server.backup.Trampoline: boolean isBackupServiceActive(int)>
<android.app.VoiceInteractor: boolean[] supportsCommands(java.lang.String[])>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>
<android.transition.Transition: android.transition.Transition excludeChildren(android.view.View,boolean)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getPromotedFields()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurnedOn()>
<android.graphics.drawable.RotateDrawable: float getToDegrees()>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.Class)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context)>
<android.view.SurfaceView: void onDetachedFromWindow()>
<android.media.MediaExtractor: int getSampleFlags()>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<com.android.server.clipboard.ClipboardService: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener,java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkController: void onUserSwitched(int)>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setZ(int,int)>
<android.renderscript.FieldPacker: void addI64(long)>
<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<android.content.pm.LauncherApps.Callback: void onPackagesUnsuspended(java.lang.String[],android.os.UserHandle)>
<com.android.server.policy.RecentApplicationsBackground: void <init>(android.content.Context)>
<android.net.TrafficStats: long getUidTxBytes(int)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onResume()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationExpansionChanged(java.lang.String,boolean,boolean)>
<android.webkit.WebViewProvider.ViewDelegate: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.KeyEvent: long getDownTime()>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>
<android.bluetooth.BluetoothGattServerCallback: void onNotificationSent(android.bluetooth.BluetoothDevice,int)>
<android.os.BatteryStats.LevelStepTracker: void <init>(int)>
<android.hardware.Camera.Parameters: java.util.List getSupportedFocusModes()>
<com.android.hotspot2.omadm.XMLNode: java.util.List getChildren()>
<com.android.server.media.MediaSessionRecord: long getFlags()>
<android.view.Gravity: int getAbsoluteGravity(int,int)>
<android.telecom.RemoteConnection: boolean isRingbackRequested()>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: void onNewUpdate(int)>
<com.android.printspooler.ui.PrinterRegistry: boolean isFavoritePrinter(android.print.PrinterId)>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>
<android.telecom.PhoneAccount: boolean supportsUriScheme(java.lang.String)>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy.Callbacks: void onShortcutKeyPressed(long)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<com.android.documentsui.SectionedListAdapter: long getItemId(int)>
<android.app.admin.DevicePolicyManager: boolean isProvisioningAllowed(java.lang.String)>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>
<android.view.MotionEvent: int getEdgeFlags()>
<com.android.server.notification.NotificationIntrusivenessExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.anqp.eap.InnerAuthEAP: java.lang.String toString()>
<android.media.tv.TvInputService.Session: void notifyChannelRetuned(android.net.Uri)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStopped(boolean)>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler,java.lang.String)>
<com.android.server.notification.ScheduleCalendar: void maybeSetNextAlarm(long,long)>
<android.app.Activity: int getChangingConfigurations()>
<android.telecom.RemoteConnection: android.telecom.StatusHints getStatusHints()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.View getDecorContent()>
<com.android.server.am.BatteryStatsService: void noteWifiScanStoppedFromSource(android.os.WorkSource)>
<android.content.pm.PackageInstaller.SessionParams: void setInstallLocation(int)>
<com.android.systemui.statusbar.TransformableView: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<android.widget.TimePicker: void setEnabled(boolean)>
<android.view.ActionMode: void onWindowFocusChanged(boolean)>
<android.speech.RecognitionService: void onDestroy()>
<com.android.hotspot2.asn1.OidMappings: java.lang.String getJCEName(com.android.hotspot2.asn1.Asn1Oid)>
<android.hardware.Camera.Parameters: int getJpegQuality()>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>
<com.android.systemui.settings.ToggleSlider: void setMirrorController(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<android.os.MemoryFile: void finalize()>
<com.android.layoutlib.bridge.util.SparseWeakArray: void <init>(int)>
<android.print.PrintAttributes.Resolution: int hashCode()>
<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>
<android.view.View: void setPaddingRelative(int,int,int,int)>
<android.ddm.DdmHandleHello: void sendWAIT(int)>
<com.android.systemui.statusbar.CommandQueue: void onCameraLaunchGestureDetected(int)>
<android.widget.LinearLayout: int getBaseline()>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View,float,boolean)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.Bridge: boolean init(java.util.Map,java.io.File,java.util.Map,com.android.ide.common.rendering.api.LayoutLog)>
<com.android.systemui.tuner.TunerFragment: void onActivityCreated(android.os.Bundle)>
<android.widget.TextView: void setTextIsSelectable(boolean)>
<android.inputmethodservice.InputMethodService: void updateInputViewShown()>
<android.webkit.SslErrorHandler: void cancel()>
<android.media.tv.TvInputInfo: java.lang.String getParentId()>
<com.android.printspooler.ui.PrintErrorFragment: com.android.printspooler.ui.PrintErrorFragment newInstance(java.lang.CharSequence,int)>
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>
<com.android.printspooler.ui.PageAdapter: void onPreviewAreaSizeChanged()>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<android.graphics.pdf.PdfRenderer: void close()>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: com.android.documentsui.dirlist.Model getModel()>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onScanningStateChanged(boolean)>
<com.android.systemui.settings.ToggleSeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String,android.net.Uri,android.net.Uri)>
<android.widget.AutoCompleteTextView: int getThreshold()>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: java.lang.Object clone()>
<com.android.server.media.MediaSessionService: void monitor()>
<android.content.ClipData.Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.renderscript.FieldPacker: android.renderscript.Float2 subFloat2()>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telecom.Conference: void removeConnection(android.telecom.Connection)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.systemui.statusbar.phone.BarTransitions: boolean isAlwaysOpaque()>
<android.widget.ArrayAdapter: void remove(java.lang.Object)>
<android.os.CancellationSignal: void throwIfCanceled()>
<android.gesture.GestureStore: boolean hasChanged()>
<android.media.session.PlaybackState: java.lang.String toString()>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingTextInCodePoints(int,int)>
<android.widget.Toolbar: int getCurrentContentInsetRight()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getSystemServiceName(java.lang.Class)>
<com.android.server.lights.Light: void setBrightness(int,int)>
<com.android.systemui.settings.BrightnessController: boolean removeStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<android.hardware.Camera.Parameters: java.util.List getSupportedVideoSizes()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: com.android.printspooler.model.PrintSpoolerService getService()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.hotspot2.osu.commands.GetCertData: java.lang.String getProtocol()>
<android.hardware.camera2.legacy.RequestHolder: boolean hasJpegTargets()>
<android.os.RemoteCallbackList: int beginBroadcast()>
<android.widget.GridLayout: void setRowCount(int)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,int)>
<com.android.settingslib.bluetooth.BluetoothEventManager.Handler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>
<android.os.Parcel: int readInt()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void prepare(int)>
<android.view.accessibility.AccessibilityWindowInfo: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void cancelExpandHelper()>
<com.android.systemui.statusbar.phone.ScrimController: void animateKeyguardFadingOut(long,long,java.lang.Runnable,boolean)>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>
<com.google.android.util.AbstractMessageParser.TrieNode: void <init>()>
<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>
<android.graphics.drawable.Drawable: int[] getState()>
<com.android.systemui.qs.external.TileServiceManager: boolean isActiveTile()>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.hotspot2.omadm.MOManager: void addSP(com.android.hotspot2.pps.HomeSP,com.android.hotspot2.osu.OSUManager)>
<android.database.MergeCursor: int getInt(int)>
<com.android.server.midi.MidiService.Lifecycle: void onUnlockUser(int)>
<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(byte[])>
<android.media.MediaPlayer: void deselectTrack(int)>
<android.os.BaseBundle: int size()>
<android.renderscript.Int2: void <init>(int,int)>
<com.google.android.gles_jni.GLImpl: void glDisable(int)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void onNotificationEnqueued(com.android.server.notification.NotificationRecord)>
<com.android.systemui.assist.AssistManager: void onLockscreenShown()>
<android.telecom.InCallService: void onSilenceRinger()>
<com.android.preload.DumpData: java.lang.String getPackageName()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isGoingToSleep()>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
<android.hardware.camera2.CaptureResult.Key: java.lang.String getName()>
<android.service.wallpaper.WallpaperService.Engine: void onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.statusbar.ViewTransformationHelper: void addRemainingTransformTypes(android.view.View)>
<android.bluetooth.BluetoothGatt: boolean connect()>
<com.android.systemui.qs.QSIconView: int exactly(int)>
<android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexParameterf(int,int,float)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setStatus(int)>
<android.media.MediaRouter.UserRouteInfo: void setIconResource(int)>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<com.android.server.usb.UsbDebuggingManager: void denyUsbDebugging()>
<com.android.systemui.qs.SignalTileView: int getIconMeasureMode()>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleDestroy()>
<com.android.server.pm.PackageManagerService: void flushPackageRestrictionsAsUser(int)>
<android.media.AudioDeviceInfo: int getType()>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: int[] getMessageRefs()>
<com.android.systemui.qs.QSPanel: void setListening(boolean)>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>(android.os.StrictMode.ThreadPolicy)>
<com.android.systemui.statusbar.NotificationHeaderUtil: void updateChildrenHeaderAppearance()>
<android.widget.ImageView: void onMeasure(int,int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvf(int,int,float)>
<android.telephony.CellSignalStrengthLte: java.lang.String toString()>
<com.android.server.LockSettingsService.CredentialUtil: void setCredential(java.lang.String,java.lang.String,int)>
<android.os.Vibrator: void cancel()>
<android.media.midi.MidiOutputPort: void onDisconnect(android.media.midi.MidiReceiver)>
<android.telecom.Connection.VideoProvider: void onSetCamera(java.lang.String)>
<android.os.BatteryStats.Uid: long getWifiMulticastTime(long,int)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>
<com.android.server.notification.RankingHelper: void setPriority(java.lang.String,int,int)>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.app.LocalActivityManager: void dispatchPause(boolean)>
<com.android.server.am.ActivityManagerService: void removeContentProvider(android.os.IBinder,boolean)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.widget.AbsListView: void setCacheColorHint(int)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<com.android.server.pm.Installer: void freeCache(java.lang.String,long)>
<javax.microedition.khronos.opengles.GL10: void glFogx(int,int)>
<android.widget.Toolbar: void onRtlPropertiesChanged(int)>
<android.media.midi.MidiOutputPort: int getPortNumber()>
<android.telephony.SignalStrength: int getEvdoDbm()>
<android.app.MediaRouteActionProvider: void setRouteTypes(int)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: int getFocusFrameThickness()>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>
<android.content.Loader: int getId()>
<com.android.systemui.statusbar.NotificationContentView: void onDetachedFromWindow()>
<com.android.server.policy.PhoneWindowManager: void setUserRotationMode(int,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>
<android.hardware.camera2.params.InputConfiguration: int getFormat()>
<com.android.documentsui.dirlist.DocumentHolder.EventListener: boolean onActivate(com.android.documentsui.dirlist.DocumentHolder)>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>
<android.util.JsonWriter: android.util.JsonWriter beginArray()>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadDown()>
<com.android.systemui.statusbar.notification.HybridGroupManager: com.android.systemui.statusbar.notification.HybridNotificationView bindFromNotification(com.android.systemui.statusbar.notification.HybridNotificationView,android.app.Notification)>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>
<android.media.RemoteControlClient.OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributeName(int)>
<com.android.server.appwidget.AppWidgetService: void onSwitchUser(int)>
<android.graphics.Bitmap: void setHasAlpha(boolean)>
<android.media.MediaMuxer: void setOrientationHint(int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int)>
<com.android.systemui.statusbar.policy.CastControllerImpl: java.util.Set getCastDevices()>
<com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[],java.util.List)>
<com.android.server.pm.Installer: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<com.google.android.util.AbstractMessageParser.Format: void setMatched(boolean)>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<android.animation.Keyframe: void setFraction(float)>
<com.android.server.backup.BackupManagerService: void restoreAtInstall(java.lang.String,int)>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.location.fused.FusedLocationProvider: void onSetRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<android.app.backup.BackupAgent: void <init>()>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.wifi.WifiManager: boolean startScan()>
<com.android.server.SamplingProfilerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.View: void setFadingEdgeLength(int)>
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int)>
<com.android.server.am.ActivityManagerService: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>
<android.media.MediaTimestamp: float getMediaClockRate()>
<com.android.preload.ClientUtils: void <init>(int)>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.view.View: void setTop(int)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
<com.android.settingslib.dream.DreamBackend: java.lang.CharSequence getActiveDreamName()>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.CharSequence getTitle()>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>
<android.view.View: android.os.IBinder getApplicationWindowToken()>
<android.webkit.TokenBindingService.TokenBindingKey: java.lang.String getAlgorithm()>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: java.lang.String getVendor(android.net.nsd.NsdServiceInfo)>
<android.view.ViewStructure: void setTextLines(int[],int[])>
<com.android.server.am.ActivityManagerService: boolean refContentProvider(android.os.IBinder,int,int)>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
<com.android.systemui.statusbar.ExpandableView: void setWillBeGone(boolean)>
<android.text.style.DrawableMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelHidden()>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>
<com.android.server.pm.PackageManagerService: void checkPackageStartable(java.lang.String,int)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.lang.String)>
<com.android.documentsui.model.RootInfo: boolean isAudio()>
<android.app.Fragment: void onDestroy()>
<android.telecom.RemoteConnection.Callback: void onPostDialChar(android.telecom.RemoteConnection,char)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void replaceSessionClose()>
<com.android.server.audio.AudioService.Lifecycle: void onBootPhase(int)>
<android.graphics.drawable.Animatable2.AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)>
<android.net.RouteInfo: int hashCode()>
<com.android.server.notification.ZenModeHelper: android.app.NotificationManager.Policy getNotificationPolicy()>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>
<com.android.settingslib.dream.DreamBackend.DreamInfo: java.lang.String toString()>
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>
<com.android.gallery3d.exif.ExifTag: byte[] getValueAsBytes()>
<com.android.server.fingerprint.ClientMonitor: android.os.IBinder getToken()>
<android.app.ActivityManagerProxy: void stopSystemLockTaskMode()>
<android.media.MediaRecorder: void resume()>
<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionManager from(android.content.Context)>
<com.android.hotspot2.omadm.OMANode: void <init>(com.android.hotspot2.omadm.OMAConstructed,java.lang.String,java.lang.String,java.util.Map)>
<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaper(java.lang.String,int,int)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void setWindowMillis(int)>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void init(android.content.Context)>
<com.android.server.connectivity.NetworkAgentInfo: boolean isSatisfyingRequest(int)>
<android.media.AudioTrack: int getAudioSessionId()>
<android.os.BatteryStats.LevelStepTracker: void clearTime()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>
<com.android.documentsui.services.FileOperations: android.content.Intent createBaseIntent(int,android.content.Context,java.lang.String,java.util.List,com.android.documentsui.model.DocumentStack)>
<com.android.systemui.volume.VolumeDialogController: void setExitCondition(android.service.notification.Condition)>
<com.android.systemui.recents.tv.views.RecentsTvView: boolean launchPreviousTask(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createPackageContext(java.lang.String,int)>
<android.view.IWindowManagerImpl: void keyguardGoingAway(int)>
<com.android.systemui.statusbar.NotificationContentView: int getVisibleType()>
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
<android.provider.Settings.NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
<android.media.MediaCrypto: void finalize()>
<android.location.GnssStatus.Callback: void onSatelliteStatusChanged(android.location.GnssStatus)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context)>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<android.media.MediaCodec: int dequeueInputBuffer(long)>
<android.text.style.StyleSpan: void <init>(android.os.Parcel)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setChildrenExpanded(boolean)>
<android.graphics.Canvas_Delegate: void native_drawColor(long,int,int)>
<android.service.notification.Condition: java.lang.String relevanceToString(int)>
<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog.Monitor)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: long getItemId(int)>
<com.android.settingslib.RestrictedSwitchPreference: void useAdminDisabledSummary(boolean)>
<android.hardware.radio.RadioManager.FmBandConfig: boolean getStereo()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void preventNextAnimation()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxOES(int,int,int,int,int)>
<android.hardware.Camera.Parameters: java.util.List getMeteringAreas()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getRenamedClasses()>
<android.media.session.MediaSession.Callback: void onCustomAction(java.lang.String,android.os.Bundle)>
<android.view.WindowManagerPolicy.WindowState: int getBaseType()>
<com.android.server.policy.PhoneWindowManager: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>
<android.content.res.AssetManager.AssetInputStream: void mark(int)>
<android.security.KeyChainAliasCallback: void alias(java.lang.String)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.media.MediaPlayer: int getDuration()>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
<android.bluetooth.BluetoothGattCharacteristic: boolean addDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.database.StaleDataException: void <init>()>
<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>
<android.telephony.CellSignalStrength: int getLevel()>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>
<android.database.CursorWindow: byte[] getBlob(int,int)>
<android.content.ClipData: android.content.ClipDescription getDescription()>
<android.app.ActivityManagerProxy: int getLockTaskModeState()>
<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>
<com.android.settingslib.net.UidDetailProvider: com.android.settingslib.net.UidDetail getUidDetail(int,boolean)>
<com.android.systemui.usb.UsbConfirmActivity: void onDestroy()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>
<android.view.accessibility.AccessibilityRecord: java.lang.String toString()>
<com.android.systemui.qs.QSTileView: void handleStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float,java.lang.Runnable,long,boolean,long,boolean)>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
<android.preference.DialogPreference: void setNegativeButtonText(int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context)>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback,android.os.Handler)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh create()>
<android.view.WindowManagerPolicy.WindowState: boolean isGoneForLayoutLw()>
<android.os.BatteryManager: void <init>()>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.app.assist.AssistStructure.ViewNode: boolean isAccessibilityFocused()>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withoutIPv4()>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>
<android.graphics.Paint_Delegate: boolean isFilterBitmap()>
<android.widget.ExpandableListAdapter: void onGroupCollapsed(int)>
<android.accessibilityservice.GestureDescription.Builder: android.accessibilityservice.GestureDescription.Builder addStroke(android.accessibilityservice.GestureDescription.StrokeDescription)>
<com.android.systemui.qs.tiles.WifiTile: android.content.Intent getLongClickIntent()>
<com.android.hotspot2.pps.SubscriptionParameters: java.lang.String toString()>
<android.media.tv.TvInputService.Session: void notifyContentAllowed()>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
<com.android.server.backup.BackupUtils: boolean signaturesMatch(java.util.ArrayList,android.content.pm.PackageInfo)>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<com.android.keyguard.KeyguardPatternView: void onEmergencyButtonClickedWhenInCall()>
<com.android.documentsui.RecentsLoader: void onCanceled(com.android.documentsui.DirectoryResult)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void <init>(android.os.IInterface,android.content.ComponentName,int,boolean,android.content.ServiceConnection,int)>
<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>
<android.app.Fragment: void setEnterTransition(android.transition.Transition)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAcquired()>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>
<android.view.accessibility.AccessibilityEvent: int getAction()>
<android.view.Display.HdrCapabilities: float getDesiredMaxAverageLuminance()>
<android.content.res.Resources.Theme: void applyStyle(int,boolean)>
<android.hardware.Camera: void finalize()>
<android.app.PendingIntent: void send(int)>
<com.android.anqp.eap.Credential: void <init>(com.android.anqp.eap.EAP.AuthInfoID,int,java.nio.ByteBuffer)>
<android.location.GnssNavigationMessageEvent: android.location.GnssNavigationMessage getNavigationMessage()>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>
<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.systemui.recents.misc.SystemServicesProxy: void cancelWindowTransition(int)>
<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.String,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getEmptyBottomMargin()>
<android.net.ConnectivityManager.OnNetworkActiveListener: void onNetworkActive()>
<android.view.ScaleGestureDetector: float getCurrentSpanX()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: boolean hasDirectoryKey(java.lang.String)>
<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager.Entry)>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.service.notification.StatusBarNotification getStatusBarNotification()>
<com.android.location.fused.FusionEngine: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.uiautomator.core.UiObject: boolean click()>
<android.app.Activity: void setContentTransitionManager(android.transition.TransitionManager)>
<com.android.server.input.InputManagerService: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.systemui.recents.views.TaskViewHeader: int[] onCreateDrawableState(int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupTypeCount()>
<com.android.server.policy.WindowOrientationListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean waitForWindowUpdate(java.lang.String,long)>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>()>
<android.bluetooth.BluetoothGattService: void <init>(java.util.UUID,int)>
<android.telecom.Call: void pullExternalCall()>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.ExpandableView: int getMinHeight()>
<com.android.server.policy.PhoneWindowManager: int getNonDecorDisplayHeight(int,int,int,int)>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void mapResultFaces(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.legacy.LegacyRequest)>
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>
<android.view.View: boolean getClipBounds(android.graphics.Rect)>
<android.util.AttributeSet: int getAttributeListValue(int,java.lang.String[],int)>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.android.keyguard.KeyguardStatusView: java.lang.String formatNextAlarm(android.content.Context,android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayRemoved(int)>
<javax.microedition.khronos.opengles.GL10: void glFrustumx(int,int,int,int,int,int)>
<android.media.tv.TvInputService.HardwareSession: boolean onSetSurface(android.view.Surface)>
<com.android.gallery3d.exif.Rational: double toDouble()>
<com.android.systemui.qs.QSTile.Host: android.os.Looper getLooper()>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<com.android.keyguard.KeyguardUpdateMonitor: void reportSuccessfulStrongAuthUnlockAttempt()>
<android.app.AlarmManager.AlarmClockInfo: int describeContents()>
<com.android.commands.sm.Sm: void runPartition()>
<com.android.systemui.classifier.DirectionClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context)>
<android.mtp.MtpDeviceInfo: boolean isEventSupported(int)>
<javax.microedition.khronos.opengles.GL10: void glDepthMask(boolean)>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>
<com.android.systemui.statusbar.policy.RemoteInputView: void close()>
<android.app.Activity: void onContentChanged()>
<com.android.systemui.tv.pip.PipControlButtonView: void startFocusGainAnimation()>
<android.view.SubMenu: android.view.MenuItem getItem()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void reboot(boolean)>
<com.android.hotspot2.pps.HomeSP: java.util.List getMatchAllOIs()>
<android.os.IPowerManager: void goToSleep(long,int,int)>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>
<android.os.UserManager: boolean isUserUnlocked(android.os.UserHandle)>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<com.android.server.content.SyncJobService: boolean onStopJob(android.app.job.JobParameters)>
<android.view.KeyEvent: boolean isGamepadButton(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startEnterAnimation(com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>
<android.app.NotificationManager.Policy: int hashCode()>
<com.android.server.backup.AccountManagerBackupHelper: byte[] getBackupPayload(java.lang.String)>
<android.widget.TableLayout: void setColumnStretchable(int,boolean)>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>
<android.graphics.Color: void colorToHSV(int,float[])>
<android.widget.TableRow.LayoutParams: void <init>(int)>
<android.graphics.PointF: void <init>(android.graphics.Point)>
<android.renderscript.Matrix3f: void rotate(float,float,float,float)>
<android.service.notification.ZenModeConfig.ZenRule: java.lang.String toString()>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.app.ActivityManagerProxy: void hang(android.os.IBinder,boolean)>
<android.service.notification.ConditionProviderService: void onConnected()>
<android.service.notification.NotificationListenerService: void onListenerHintsChanged(int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: android.content.Intent getLongClickIntent()>
<com.android.anqp.eap.VendorSpecificAuth: int hashCode()>
<com.android.uiautomator.core.UiDevice: void removeWatcher(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>
<android.telecom.Conference: android.telecom.PhoneAccountHandle getPhoneAccountHandle()>
<com.android.systemui.statusbar.policy.Clock: void onDetachedFromWindow()>
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>
<android.media.MediaPlayer: void setDataSource(android.media.MediaDataSource)>
<android.widget.GridView: void setGravity(int)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfMaximumTimeToLockIsSet(android.content.Context)>
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>
<android.database.AbstractCursor: long getLong(int)>
<com.android.systemui.classifier.DurationCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.graphics.Shader_Delegate: android.graphics.Shader.TileMode getTileMode(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<com.android.server.am.ActivityManagerService: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.bluetooth.BluetoothSocket: boolean isConnected()>
<com.android.server.wm.BlackFrame: void setAlpha(float)>
<android.net.wifi.ScanResult: java.lang.String toString()>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>
<android.app.Notification.WearableExtender: int getCustomSizePreset()>
<com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver: void writePacket(byte[],int)>
<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>
<android.widget.AbsListView: int computeVerticalScrollExtent()>
<android.view.WindowCallback: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.graphics.drawable.RippleDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.am.BatteryStatsService: void noteStopCamera(int)>
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>
<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>
<com.android.systemui.qs.tiles.ColorInversionTile: android.content.Intent getLongClickIntent()>
<com.android.documentsui.Events.InputEvent: boolean isActionDown()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceUserActivity(boolean)>
<com.android.systemui.DessertCaseDream: void onAttachedToWindow()>
<android.hardware.radio.RadioManager.AmBandConfig: boolean equals(java.lang.Object)>
<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>
<com.android.server.wm.PointerEventDispatcher: void registerInputEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setClipTopAmount(int)>
<android.speech.tts.UtteranceProgressListener: void onStop(java.lang.String,boolean)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.app.FragmentManager: boolean popBackStackImmediate()>
<com.android.hotspot2.pps.Credential: int hashCode()>
<com.android.systemui.qs.tiles.UserTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateCollapsePanels(int)>
<com.android.server.am.ActivityManagerService: void killPackageDependents(java.lang.String,int)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowSafetyWarning(int)>
<com.android.systemui.recents.tv.views.RecentsTvView: void onDetachedFromWindow()>
<com.android.documentsui.RecentsCreateFragment: void onStart()>
<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setDigests(java.lang.String[])>
<com.android.systemui.statusbar.notification.ImageTransformState: boolean transformScale()>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)>
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>
<com.android.hotspot2.osu.WiFiKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>
<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>
<com.android.systemui.statusbar.ActivatableNotificationView: void performAddAnimation(long,long)>
<com.android.printspooler.model.CustomPrinterIconCache: void clear()>
<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>
<android.widget.ScrollView: void addView(android.view.View)>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>
<android.app.Dialog: android.view.View findViewById(int)>
<android.transition.Visibility: void <init>()>
<android.inputmethodservice.AbstractInputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.job.JobInfo: long getInitialBackoffMillis()>
<com.android.systemui.volume.VolumeDialogComponent: void register()>
<android.location.Criteria: int getHorizontalAccuracy()>
<com.android.server.InputMethodManagerService: boolean handleMessage(android.os.Message)>
<android.os.PowerManager: void wakeUp(long)>
<com.android.documentsui.dirlist.AnimationView: void setPosition(float)>
<android.hardware.camera2.CaptureRequest.Builder: void setTag(java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<com.android.hotspot2.osu.WiFiKeyManager: void <init>(java.security.KeyStore)>
<android.view.KeyboardShortcutGroup: java.lang.CharSequence getLabel()>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Point getDefaultWallpaperSize(android.content.res.Resources,android.view.WindowManager)>
<android.app.ActivityManagerProxy: void startLockTaskMode(int)>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>
<android.bluetooth.BluetoothGattCallback: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)>
<com.android.systemui.statusbar.SignalClusterView: void onStateChanged()>
<com.android.server.pm.UserManagerService: boolean removeUser(int)>
<com.android.systemui.analytics.DataCollector: boolean isEnabledFull()>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>
<android.media.AudioSystem.ErrorCallback: void onError(int)>
<com.android.documentsui.FilteringCursorWrapper: long getLong(int)>
<com.android.systemui.statusbar.SignalClusterView: void onTuningChanged(java.lang.String,java.lang.String)>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>
<android.view.VelocityTracker: float getXVelocity()>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>
<android.telephony.CellIdentityLte: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isInContentBounds(float,float)>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object get(long,java.lang.Object)>
<com.android.systemui.egg.MLand: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.pm.LauncherAppsService: void onStart()>
<android.hardware.radio.RadioManager.BandDescriptor: int describeContents()>
<android.text.method.BaseMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.widget.GridView: java.lang.CharSequence getAccessibilityClassName()>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>
<com.android.systemui.qs.QSTileBaseView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.settingslib.graph.UsageGraph: void addPath(android.util.SparseIntArray)>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>
<android.hardware.camera2.dispatch.InvokeDispatcher: void <init>(java.lang.Object)>
<android.opengl.GLES20: void glBindBuffer(int,int)>
<com.android.server.accessibility.EventStreamTransformation: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>
<android.content.SyncAdapterType: boolean isAlwaysSyncable()>
<com.android.systemui.qs.customize.TileQueryHelper: void setListener(com.android.systemui.qs.customize.TileQueryHelper.TileStateListener)>
<com.android.server.am.ActivityManagerService: boolean requestAssistContextExtras(int,com.android.internal.os.IResultReceiver,android.os.Bundle,android.os.IBinder,boolean,boolean)>
<android.net.TrafficStats: long getMobileTxBytes()>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setCapabilities(int)>
<com.android.server.Watchdog.HandlerChecker: boolean isOverdueLocked()>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>
<com.android.hotspot2.osu.IconCache: void <init>(com.android.hotspot2.osu.OSUManager)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newDelete(android.net.Uri)>
<com.android.systemui.volume.VolumeDialogController: void setZenMode(int)>
<com.android.systemui.statusbar.car.CarStatusBar: void addNavigationBar()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.bluetooth.le.ScanSettings: int describeContents()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void setIsExpanded(boolean)>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void onReceiveInternal(android.content.Intent)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.hotspot2.osu.SOAPParser: com.android.hotspot2.osu.OSUResponse getResponse()>
<com.android.hotspot2.osu.ClientKeyManager: void reloadKeys(java.util.Map,java.security.PrivateKey)>
<android.service.voice.VoiceInteractionService: void setDisabledShowContext(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>
<android.hardware.Camera.Parameters: int getZoom()>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStartUser(int)>
<android.view.KeyEvent: boolean isModifierKey(int)>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: void onStatsUpdated()>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>(java.lang.String)>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>
<android.view.TextureView: android.graphics.Canvas lockCanvas()>
<android.inputmethodservice.InputMethodService: void onUnbindInput()>
<android.printservice.PrintJob: boolean isCancelled()>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<com.android.systemui.statusbar.ExpandableView: int getMaxContentHeight()>
<com.android.server.content.SyncStorageEngine.EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<android.telephony.CellInfoLte: int describeContents()>
<android.util.SparseBooleanArray: java.lang.String toString()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<com.android.egg.neko.Food: java.lang.String getName(android.content.Context)>
<com.android.server.fingerprint.AuthenticationClient: boolean onEnumerationResult(int,int)>
<android.accessibilityservice.AccessibilityService: boolean dispatchGesture(android.accessibilityservice.GestureDescription,android.accessibilityservice.AccessibilityService.GestureResultCallback,android.os.Handler)>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getSelectedPages()>
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<android.app.ApplicationThreadProxy: void startBinderTracking()>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Debug: int getThreadGcInvocationCount()>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>
<android.media.audiofx.Visualizer: int setCaptureSize(int)>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>
<android.view.animation.Animation: void startNow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabledForUser(int)>
<android.widget.TextView: int getCompoundPaddingTop()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.notification.ManagedServices.UserProfiles: void updateCache(android.content.Context)>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.graphics.Path_Delegate: void addRect(float,float,float,float,int)>
<com.android.gallery3d.exif.ExifTag: void setIfd(int)>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<android.view.IWindowManagerImpl: boolean stopViewServer()>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>
<android.media.MediaRouter: int getCategoryCount()>
<com.android.systemui.statusbar.BaseStatusBar: void setLockscreenPublicMode(boolean)>
<com.android.systemui.recents.events.component.ShowUserToastEvent: void <init>(int,int)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void bind(java.lang.CharSequence)>
<android.app.ActivityManagerProxy: void noteAlarmFinish(android.content.IIntentSender,int,java.lang.String)>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>
<com.android.documentsui.model.DocumentInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>
<android.graphics.Canvas_Delegate: void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long)>
<android.graphics.BitmapShader_Delegate: boolean isSupported()>
<android.media.session.PlaybackState: long getActiveQueueItemId()>
<com.android.systemui.Somnambulator: void onStart()>
<android.renderscript.Script.LaunchOptions: int getZEnd()>
<android.app.ActionBar: void setCustomView(android.view.View)>
<com.android.server.notification.ScheduleConditionProvider: void onDestroy()>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>
<com.android.settingslib.animation.AppearAnimationUtils: void startTranslationYAnimation(android.view.View,long,long,float,android.view.animation.Interpolator)>
<com.android.server.location.LocationProviderProxy: java.lang.String getConnectedPackageName()>
<android.view.SurfaceControl.PhysicalDisplayInfo: int hashCode()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingAborted()>
<android.printservice.PrintJob: void setProgress(float)>
<android.media.MediaCodecList: int getCodecCount()>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>
<android.view.View: void setScrollY(int)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onDestroy()>
<android.text.Layout: float getSecondaryHorizontal(int)>
<android.widget.PopupWindow: void update()>
<android.widget.ImageView: int getMaxHeight()>
<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort.WebMessageCallback,android.os.Handler)>
<android.widget.SectionIndexer: int getPositionForSection(int)>
<com.android.server.net.IpConfigStore: android.util.SparseArray readIpAndProxyConfigurations(java.lang.String)>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>
<android.util.Pair: java.lang.String toString()>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>
<com.android.mtp.MtpDocumentsProvider: boolean onCreate()>
<com.android.systemui.recents.views.TaskView: void measureContents(int,int)>
<android.service.dreams.DreamService: boolean isInteractive()>
<android.app.Notification.Builder: android.app.Notification.Builder setSubText(java.lang.CharSequence)>
<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onPrepareLaunchTargetForEnterAnimation()>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>
<android.renderscript.RenderScript.RSErrorHandler: void run()>
<android.graphics.Matrix_Delegate: android.graphics.Matrix_Delegate getDelegate(long)>
<android.database.MatrixCursor: java.lang.String getString(int)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<com.android.systemui.keyboard.KeyboardUI: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.widget.ActionMenuView: void onDetachedFromWindow()>
<android.app.ActionBar: void removeAllTabs()>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>
<android.media.MediaRecorder: void setVideoSize(int,int)>
<android.media.MediaExtractor: void setDataSource(android.content.res.AssetFileDescriptor)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus)>
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>
<com.android.printspooler.model.MutexFileProvider: void <init>(java.io.File)>
<android.app.ActionBar: void setDisplayOptions(int,int)>
<com.android.systemui.VendorServices: void start()>
<com.android.layoutlib.bridge.Bridge: java.util.Map getEnumValues(java.lang.String)>
<android.print.PrintAttributes.Resolution: java.lang.String getId()>
<android.hardware.camera2.legacy.LegacyExceptionUtils: void throwOnServiceError(int)>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.renderscript.ScriptGroup: java.lang.Object[] execute(java.lang.Object[])>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToTop()>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPackageAvailable(java.lang.String)>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.layoutlib.bridge.android.BridgeContext: void popParser()>
<com.android.systemui.recents.views.TaskViewThumbnail: void setSizeToFit(boolean)>
<android.telecom.Call.Details: int hashCode()>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>
<android.app.VoiceInteractor: android.app.VoiceInteractor.Request[] getActiveRequests()>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedGoingToSleep(int)>
<com.android.systemui.recents.misc.Utilities: float dpToPx(android.content.res.Resources,float)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.widget.TableRow: void <init>(android.content.Context)>
<android.view.IWindowManagerImpl: void getStableInsets(android.graphics.Rect)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View,float)>
<com.android.server.wm.AppTransition: java.lang.String appTransitionToString(int)>
<com.android.commands.bu.Backup: void main(java.lang.String[])>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>
<android.speech.tts.TextToSpeechService: android.os.IBinder onBind(android.content.Intent)>
<android.telecom.InCallService.VideoCall: void requestCameraCapabilities()>
<android.view.ActionMode: void setTitle(java.lang.CharSequence)>
<com.android.keyguard.KeyguardUpdateMonitor: int getFailedUnlockAttempts(int)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.UserSwitcherController getUserSwitcherController()>
<android.telecom.RemoteConnection: void pullExternalCall()>
<com.android.systemui.egg.MLand: java.util.ArrayList getGameControllers()>
<com.android.hotspot2.asn1.OidMappings.SigEntry: java.lang.String getSigAlgo()>
<android.view.View: int getLabelFor()>
<android.view.IWindowManagerImpl: void cancelTaskWindowTransition(int)>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.hotspot2.osu.OSUInfo: java.lang.String getAdvertisingSSID()>
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<com.android.server.notification.RankingHelper: void setEnabled(java.lang.String,int,boolean)>
<com.android.server.am.ActivityManagerService: void keyguardWaitingForActivityDrawn()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.android.systemui.statusbar.NotificationGuts: void onTuningChanged(java.lang.String,java.lang.String)>
<android.media.audiofx.Equalizer.Settings: java.lang.String toString()>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean fullyExpandedClearAllVisible()>
<com.android.server.TextServicesManagerService: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<android.nfc.tech.NfcF: byte[] transceive(byte[])>
<com.android.systemui.Prefs: boolean getBoolean(android.content.Context,java.lang.String,boolean)>
<android.widget.ScrollView: boolean isFillViewport()>
<com.android.server.statusbar.StatusBarManagerService: void disable(int,android.os.IBinder,java.lang.String)>
<android.telephony.ServiceState: void setState(int)>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
<android.widget.ScrollView: int getMaxScrollAmount()>
<com.android.systemui.recents.tv.views.RecentsTvView: boolean launchFocusedTask()>
<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void dispatchFinishTemporaryDetach()>
<android.opengl.GLES32: void glTexParameterIiv(int,int,java.nio.IntBuffer)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.view.Surface getInputSurface()>
<android.text.BoringLayout: int getTopPadding()>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>
<android.hardware.camera2.DngCreator: void writeInputStream(java.io.OutputStream,android.util.Size,java.io.InputStream,long)>
<android.util.Base64InputStream: int read(byte[],int,int)>
<android.graphics.Outline: void setRect(int,int,int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void notifyGroupChildRemoved(android.view.View,android.view.ViewGroup)>
<android.hardware.camera2.legacy.RequestThreadManager: long flush()>
<android.print.PrintAttributes: int hashCode()>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.util.JsonReader: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: void setDebugApp(java.lang.String,boolean,boolean)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void removeRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>
<com.android.systemui.analytics.SensorLoggerSession: void addPhoneEvent(int,long)>
<android.app.Activity: void takeKeyEvents(boolean)>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri)>
<com.android.server.pm.PackageManagerService: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.telecom.Call.Callback: void onConferenceableCallsChanged(android.telecom.Call,java.util.List)>
<android.opengl.GLES10: void glViewport(int,int,int,int)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>
<android.location.GnssMeasurementsEvent.Callback: void onStatusChanged(int)>
<android.nfc.NfcAdapter: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean)>
<android.webkit.WebViewFactoryProvider.Statics: void setWebContentsDebuggingEnabled(boolean)>
<com.android.printspooler.ui.PrintActivity: void onPrinterAvailable(android.print.PrinterInfo)>
<android.content.res.BridgeTypedArray: android.util.TypedValue peekValue(int)>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>
<android.app.ActivityManagerProxy: boolean startBinderTracking()>
<com.android.settingslib.BatteryInfo: void bindHistory(com.android.settingslib.graph.UsageView,com.android.settingslib.BatteryInfo.BatteryDataParser[])>
<android.widget.NumberPicker: void jumpDrawablesToCurrentState()>
<android.app.ActivityGroup: void onStop()>
<android.location.GnssClock: int getLeapSecond()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsHorizontalList()>
<android.telephony.SignalStrength: java.lang.String toString()>
<android.text.TextUtils.StringSplitter: void setString(java.lang.String)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void startFocusLossAnimation()>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>
<com.android.photos.views.TiledImageRenderer: boolean draw(com.android.gallery3d.glrenderer.GLCanvas)>
<android.media.tv.TvInputService.Session: void notifyVideoAvailable()>
<android.graphics.Rasterizer_Delegate: java.lang.String getSupportMessage()>
<android.text.style.TtsSpan.FractionBuilder: void <init>(long,long,long)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(java.lang.String)>
<com.android.systemui.recents.misc.FreePathInterpolator: void <init>(android.graphics.Path)>
<com.android.systemui.recents.views.RecentsView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.SystemUI: void onBootCompleted()>
<android.view.View: float getScaleX()>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<android.transition.SidePropagation: void setPropagationSpeed(float)>
<android.media.MediaRouter.VolumeCallback: void onVolumeSetRequest(android.media.MediaRouter.RouteInfo,int)>
<com.android.gallery3d.glrenderer.BasicTexture: int getHeight()>
<com.android.server.notification.ZenModeHelper: java.lang.String toString()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.RippleDrawable: boolean canApplyTheme()>
<android.database.CursorWindow: boolean isBlob(int,int)>
<com.android.systemui.qs.QSTileBaseView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvf(int,int,float)>
<android.util.SparseIntArray: void removeAt(int)>
<android.net.NetworkStats.NonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.Object)>
<com.android.server.policy.BarController: void <init>(java.lang.String,int,int,int,int,int,int)>
<android.text.Editable: android.text.Editable delete(int,int)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>
<com.android.server.DeviceIdleController: java.lang.String[] getUserPowerWhitelistInternal()>
<com.android.keyguard.KeyguardSimPinView: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.inputmethod.InputMethodSession: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.content.CursorLoader: void setSortOrder(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.graphics.PathEffect: void finalize()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void reInflateViews()>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(int,int,int)>
<com.android.server.notification.RankingHandler: void requestReconsideration(com.android.server.notification.RankingReconsideration)>
<android.nfc.tech.Ndef: java.lang.String getType()>
<com.android.systemui.statusbar.stack.AmbientState: void setLayoutMinHeight(int)>
<android.view.View: void setScrollX(int)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnPickup()>
<android.view.MenuItem: char getNumericShortcut()>
<android.opengl.GLES32: void glObjectPtrLabel(long,java.lang.String)>
<com.android.systemui.statusbar.phone.LockIcon: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean updatePendingIntentFromActions(android.app.Notification.Action[])>
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>
<android.widget.TableLayout: boolean isColumnShrinkable(int)>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>
<com.android.systemui.recents.views.AnimationProps: long getStartDelay(int)>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>
<com.android.documentsui.DirectoryLoader: java.lang.String getQuerySortOrder(int)>
<android.content.pm.PackageInstaller.SessionParams: void <init>(int)>
<android.bluetooth.BluetoothAdapter: boolean disable()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void startActivity(android.content.Intent)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.Throwable)>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>()>
<com.android.server.pm.PreferredComponent.Callbacks: boolean onReadTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>
<android.app.Service: android.app.Application getApplication()>
<android.util.SparseLongArray: int keyAt(int)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.Result acquire(long)>
<android.view.ViewParent: boolean isLayoutDirectionResolved()>
<com.android.nfc_extras.NfcExecutionEnvironment: byte[] transceive(byte[])>
<android.app.admin.DevicePolicyManager: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>
<android.os.Parcel: void writeLongArray(long[])>
<android.widget.QuickContactBadge: java.lang.CharSequence getAccessibilityClassName()>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadDrawerIcon(android.content.Context)>
<android.preference.EditTextPreference: void <init>(android.content.Context)>
<android.location.GpsSatellite: boolean hasEphemeris()>
<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<com.android.server.notification.NotificationDelegate: void clearEffects()>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.drawable.Icon)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService.SoftKeyboardController getSoftKeyboardController()>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>
<android.security.keystore.KeyInfo: boolean isUserAuthenticationValidWhileOnBody()>
<android.service.notification.NotificationListenerService.RankingMap: java.lang.String[] getOrderedKeys()>
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>
<com.android.printspooler.model.MutexFileProvider: java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback)>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.systemui.qs.customize.TileAdapter: boolean onFailedToRecycleView(com.android.systemui.qs.customize.TileAdapter.Holder)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setPanelExpanded(boolean)>
<android.view.Display.HdrCapabilities: void writeToParcel(android.os.Parcel,int)>
<android.view.SurfaceHolder.Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setArgumentsFromDouble(double,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<android.widget.Switch: void onLayout(boolean,int,int,int,int)>
<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>
<com.android.server.accessibility.MotionEventInjector: void injectEvents(java.util.List,android.accessibilityservice.IAccessibilityServiceClient,int)>
<com.android.server.pm.PreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PreferredActivity)>
<com.android.systemui.qs.tiles.WorkModeTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.app.VoiceInteractor.Prompt: void <init>(java.lang.CharSequence[],java.lang.CharSequence)>
<android.view.View: void onWindowFocusChanged(boolean)>
<android.database.CursorWrapper: double getDouble(int)>
<com.google.android.gles_jni.GLImpl: void glClearStencil(int)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onFinishInflate()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)>
<android.telecom.InCallService.VideoCall: void setDisplaySurface(android.view.Surface)>
<com.android.systemui.qs.QSAnimator: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.layoutlib.bridge.android.BridgeContext getContext()>
<android.app.ActionBar: void setLogo(int)>
<com.android.server.backup.Trampoline: void setBackupServiceActive(int,boolean)>
<android.opengl.GLES20: void glFrontFace(int)>
<android.util.ArraySet: boolean remove(java.lang.Object)>
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>
<android.widget.EdgeEffect: int getColor()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isOnlyChildInGroup(android.service.notification.StatusBarNotification)>
<com.android.systemui.tuner.NavBarTuner: void onViewCreated(android.view.View,android.os.Bundle)>
<android.app.MediaRouteButton: void jumpDrawablesToCurrentState()>
<android.text.style.IconMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<com.android.gallery3d.exif.ExifInterface: int getRotationForOrientationValue(short)>
<android.media.AudioRecord: int getChannelConfiguration()>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>
<com.android.keyguard.KeyguardUpdateMonitor: java.util.List getSubscriptionInfo(boolean)>
<android.opengl.GLES10: void glScalex(int,int,int)>
<android.app.ActivityManagerProxy: void startLocalVoiceInteraction(android.os.IBinder,android.os.Bundle)>
<android.graphics.MaskFilter_Delegate: boolean isSupported()>
<android.nfc.NdefRecord: java.lang.String toMimeType()>
<android.graphics.Color: int argb(int,int,int,int)>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long4)>
<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind)>
<com.android.systemui.statusbar.phone.NavigationBarView: void abortCurrentGesture()>
<android.transition.ChangeImageTransform: void <init>()>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>
<android.media.tv.TvContract: android.net.Uri buildRecordedProgramUri(long)>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>
<android.widget.SearchView: void setIconifiedByDefault(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void onScreenTurnedOff()>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: java.lang.String getName()>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long2)>
<android.os.Parcel: void writeByteArray(byte[],int,int)>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void keyguardDone(boolean,boolean)>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>
<android.provider.Contacts.People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<com.android.systemui.statusbar.NotificationData.Environment: java.lang.String getCurrentMediaNotificationKey()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.KeyguardMonitor,android.os.Handler,com.android.systemui.statusbar.phone.ActivityStarter)>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>
<android.view.inputmethod.BaseInputConnection: void closeConnection()>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>
<android.opengl.GLES20: void glUniform1i(int,int)>
<com.android.hotspot2.omadm.MgmtTreeRoot: void <init>(com.android.hotspot2.omadm.XMLNode,java.lang.String)>
<android.telephony.CellIdentityGsm: int getArfcn()>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker)>
<com.android.systemui.classifier.FalsingManager: void onAffordanceSwipingStarted(boolean)>
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>
<android.util.EventLog.Event: long getTimeNanos()>
<com.android.printspooler.ui.PrintActivity: void onPrinterUnavailable(android.print.PrinterInfo)>
<android.widget.ListPopupWindow: android.view.View getSelectedView()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<android.widget.TextClock: boolean is24HourModeEnabled()>
<android.widget.TabHost: void <init>(android.content.Context)>
<com.google.android.maps.MapView: android.view.View getZoomControls()>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.CameraCharacteristics createCharacteristics(java.lang.String,android.hardware.CameraInfo)>
<com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener: void onDisableUiForPackage(java.lang.String)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getFastestIntervalMs()>
<android.widget.TabWidget.OnTabSelectionChanged: void onTabSelectionChanged(int,boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setVertical(boolean)>
<android.media.MediaRecorder: void setVideoSource(int)>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)>
<android.service.wallpaper.WallpaperService: void onDestroy()>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeMax()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isHandlingTouchEvent()>
<com.android.documentsui.RootsCache: boolean isRecentsRoot(com.android.documentsui.model.RootInfo)>
<android.service.vr.VrListenerService: void <init>()>
<com.android.printspooler.ui.SelectPrinterActivity: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.hotspot2.osu.service.RedirectListener: void abort()>
<android.content.Context: java.io.File getDataDir()>
<android.provider.DocumentsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.view.ScaleGestureDetector: boolean isStylusScaleEnabled()>
<android.view.View: android.view.animation.Animation getAnimation()>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>
<com.android.server.retaildemo.UserInactivityCountdownDialog: void setOnCountDownExpiredListener(com.android.server.retaildemo.UserInactivityCountdownDialog.OnCountDownExpiredListener)>
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeName(int)>
<android.app.ActionBar: android.app.ActionBar.Tab getTabAt(int)>
<android.view.View: boolean isInLayout()>
<com.android.settingslib.SuggestionParser: boolean satisfiesRequiredAccount(com.android.settingslib.drawer.Tile)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.A2dpProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setTintArea(android.graphics.Rect)>
<android.telecom.Connection: void setConnectionProperties(int)>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Mesh.Primitive)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeNameResId(int)>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: int hashCode()>
<android.app.assist.AssistStructure.ViewNode: android.os.Bundle getExtras()>
<android.widget.TextView: int getHyphenationFrequency()>
<android.os.ResultReceiver: void <init>(android.os.Handler)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
<android.text.BoringLayout: int getLineTop(int)>
<android.content.BroadcastReceiver: void setResultData(java.lang.String)>
<android.os.Parcel: void readDoubleArray(double[])>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig getConfig()>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>
<com.android.systemui.statusbar.ExpandableNotificationRow: float getIncreasedPaddingAmount()>
<android.service.notification.StatusBarNotification: void <init>(android.os.Parcel)>
<android.graphics.Matrix: void setSinCos(float,float)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAllowedApplication(java.lang.String)>
<com.android.systemui.qs.tiles.IntentTile: int getMetricsCategory()>
<android.view.MotionEvent: float getHistoricalX(int)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState build()>
<com.android.documentsui.OpenExternalDirectoryActivity.OpenExternalDirectoryDialogFragment: void onCreate(android.os.Bundle)>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void countAndLog()>
<android.os.HandlerThread: int getThreadId()>
<android.view.ViewGroup: void addView(android.view.View)>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>
<com.android.server.am.LaunchWarningWindow: void <init>(android.content.Context,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>
<com.android.documentsui.dirlist.DirectoryFragment: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUser()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedWakingUp()>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback,int)>
<android.os.Message: void copyFrom(android.os.Message)>
<com.android.hotspot2.osu.ClientKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
<com.android.systemui.statusbar.ExpandableView: boolean isTransparent()>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>
<android.service.notification.NotificationListenerService.Ranking: java.lang.String getOverrideGroupKey()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<com.android.systemui.recents.model.Task: void setStackId(int)>
<android.os.BatteryStats.Uid.Proc: android.os.BatteryStats.Uid.Proc.ExcessivePower getExcessivePower(int)>
<android.content.pm.PackageParser.Package: void <init>(java.lang.String)>
<android.util.SparseLongArray: android.util.SparseLongArray clone()>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>
<android.widget.GridView: void setSelection(int)>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>
<android.printservice.PrinterDiscoverySession: void onValidatePrinters(java.util.List)>
<com.android.documentsui.dirlist.DirectoryFragment: void showDirectory(android.app.FragmentManager,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,int)>
<android.content.res.Resources.Theme: void setTo(android.content.res.Resources.Theme)>
<com.android.server.policy.PhoneWindowManager: void userActivity()>
<android.view.View: android.view.WindowInsets getRootWindowInsets()>
<com.android.systemui.screenshot.ScreenshotSelectorView: android.graphics.Rect getSelectionRect()>
<android.hardware.usb.UsbConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.view.TextureView: int getLayerType()>
<com.android.documentsui.DocumentsActivity: void onCreate(android.os.Bundle)>
<android.widget.AdapterViewFlipper: int getFlipInterval()>
<android.animation.PointFEvaluator: android.graphics.PointF evaluate(float,android.graphics.PointF,android.graphics.PointF)>
<android.nfc.NdefRecord: byte[] getId()>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>
<android.text.BoringLayout: android.text.Layout.Directions getLineDirections(int)>
<android.telecom.StatusHints: void <init>(java.lang.CharSequence,android.graphics.drawable.Icon,android.os.Bundle)>
<com.android.systemui.statusbar.policy.SignalController: void <init>(java.lang.String,android.content.Context,int,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder addFloat(java.lang.Object,java.lang.String,float[])>
<android.content.ContextWrapper: java.lang.String[] fileList()>
<android.os.BatteryStats.LongCounter: void logState(android.util.Printer,java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean performHapticFeedback(android.view.IWindow,int,boolean)>
<android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
<android.net.TrafficStats: void incrementOperationCount(int)>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>
<com.android.systemui.statusbar.notification.ImageTransformState: void reset()>
<com.android.printspooler.ui.PrinterRegistry: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceDozeBrightness(boolean)>
<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>
<com.android.gallery3d.common.Utils: byte[] getBytes(java.lang.String)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>
<android.os.Debug: int getGlobalClassInitTime()>
<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>
<android.app.ActivityManager: void setWatchHeapLimit(long)>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: long getCompletedReprocessFrameNumber()>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>
<android.view.ViewTreeObserver: void addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>
<android.content.pm.PackageInstaller: void abandonSession(int)>
<com.android.documentsui.model.RootInfo: java.lang.String toString()>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>
<android.hardware.location.ContextHubManager.Callback: void <init>()>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>
<android.text.Spannable: void removeSpan(java.lang.Object)>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.res.Resources,int)>
<android.media.midi.MidiDeviceService: android.media.midi.MidiReceiver[] onGetInputPortReceivers()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onAttachedToWindow()>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>
<android.graphics.RectF: float centerX()>
<com.android.systemui.recents.model.TaskKeyLruCache.EvictionCallback: void onEntryEvicted(com.android.systemui.recents.model.Task.TaskKey)>
<com.android.server.backup.PackageManagerBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.hardware.camera2.params.Face: java.lang.String toString()>
<android.view.View: int computeVerticalScrollOffset()>
<android.view.ViewStructure: void setFocused(boolean)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy build()>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<com.android.server.policy.PhoneWindowManager: int getConfigDisplayHeight(int,int,int,int)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: int currentSegment(float[],float)>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>
<android.text.method.ArrowKeyMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setAudioAttributes(android.media.AudioAttributes)>
<android.os.Debug: int getBinderSentTransactions()>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>
<android.widget.CheckedTextView: void toggle()>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>
<android.service.carrier.CarrierService: android.os.PersistableBundle onLoadConfig(android.service.carrier.CarrierIdentifier)>
<com.google.android.collect.Sets: java.util.HashSet newHashSet()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>
<com.android.systemui.recents.views.TaskStackView: void updateLayoutAlgorithm(boolean)>
<android.view.animation.AnimationSet: long computeDurationHint()>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>
<com.android.server.policy.PhoneWindowManager: int prepareAddWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.egg.neko.Cat: android.graphics.Bitmap createBitmap(int,int)>
<android.opengl.GLES20: void glDepthRangef(float,float)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterByStatus(int)>
<android.service.quicksettings.Tile: int getState()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onScanningStateChanged(boolean)>
<android.os.Parcel: void writeTypedObject(android.os.Parcelable,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void <init>(java.lang.Object,android.util.DisplayMetrics,com.android.ide.common.rendering.api.RenderResources,com.android.ide.common.rendering.api.AssetRepository,com.android.ide.common.rendering.api.LayoutlibCallback,android.content.res.Configuration,int,boolean)>
<com.android.hotspot2.pps.UpdateInfo: void <init>(com.android.hotspot2.omadm.OMANode)>
<com.android.layoutlib.bridge.android.BridgeContext: void setScrollXPos(android.view.View,int)>
<com.android.server.VibratorService: boolean hasVibrator()>
<android.service.carrier.CarrierIdentifier: java.lang.String toString()>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>
<android.bluetooth.BluetoothGattServer: boolean removeService(android.bluetooth.BluetoothGattService)>
<com.android.systemui.statusbar.phone.PanelView: int getMaxPanelHeight()>
<android.widget.ArrayAdapter: void addAll(java.lang.Object[])>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>
<android.media.MediaPlayer: void prepareAsync()>
<com.android.systemui.recents.events.EventBus.InterprocessEvent: void <init>(int)>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getVisibleBounds()>
<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.view.IWindowManagerImpl: boolean inKeyguardRestrictedInputMode()>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>
<android.text.AndroidCharacter: char getMirror(char)>
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>
<android.content.AbstractThreadedSyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String capabilityToString(int)>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleRecentApps()>
<com.android.systemui.qs.tiles.HotspotTile: void handleDestroy()>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onFinishInflate()>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.Spinner: android.os.Parcelable onSaveInstanceState()>
<android.hardware.camera2.CaptureRequest.Key: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>
<android.opengl.GLException: void <init>(int,java.lang.String)>
<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>
<com.android.keyguard.PasswordTextView: java.lang.String getText()>
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<com.android.systemui.recents.tv.animations.ViewFocusAnimator: void changeSize(boolean)>
<android.content.pm.ProviderInfo: void dump(android.util.Printer,java.lang.String)>
<android.webkit.TokenBindingService.TokenBindingKey: java.security.KeyPair getKeyPair()>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>
<android.security.keystore.KeyGenParameterSpec: boolean isUserAuthenticationValidWhileOnBody()>
<android.widget.Spinner: boolean performClick()>
<android.app.FragmentHostCallback: void onStartIntentSenderFromFragment(android.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,long)>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getDescription()>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(int)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setExpansion(float)>
<android.app.Activity: void onEnterAnimationComplete()>
<com.android.settingslib.drawer.UserAdapter: int getViewTypeCount()>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionCancelled()>
<com.android.systemui.recents.tv.animations.DismissAnimationsHolder: void startDismissAnimation(android.animation.Animator.AnimatorListener)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Parcel: void writeIntArray(int[])>
<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getStyleAttribute()>
<com.android.server.pm.ShortcutService.Lifecycle: void onBootPhase(int)>
<android.view.IWindowManagerImpl: android.util.DisplayMetrics getMetrics()>
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isScreenPinningActive()>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWindowShown()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClear(java.lang.String,java.lang.String,int,int)>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>
<com.android.gallery3d.exif.ExifInterface: short getTrueTagKey(int)>
<android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>
<com.android.printspooler.ui.PrintActivity: void onUpdateFailed(java.lang.CharSequence)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh create(boolean)>
<android.content.pm.PackageParser.Package: void setBaseCodePath(java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getName()>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromBottom()>
<android.app.Fragment: boolean equals(java.lang.Object)>
<com.android.systemui.doze.DozeLog: void traceDozing(android.content.Context,boolean)>
<android.mtp.MtpDevice: boolean importFile(int,android.os.ParcelFileDescriptor)>
<com.android.systemui.recents.views.RecentsTransitionHelper: android.os.IRemoteCallback wrapStartedListener(android.app.ActivityOptions.OnAnimationStartedListener)>
<android.widget.RadialTimePickerView.OnValueSelectedListener: void onValueSelected(int,int,boolean)>
<android.media.Tokenizer.OnTokenListener: void onTimeStamp(long)>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(android.util.Rational[])>
<android.util.AttributeSet: float getAttributeFloatValue(int,float)>
<android.media.MediaSync: void queueAudio(java.nio.ByteBuffer,int,long)>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long4)>
<com.android.server.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.hardware.Camera.Parameters: void setAutoWhiteBalanceLock(boolean)>
<android.view.Window: void setIcon(int)>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
<android.graphics.Region: java.lang.String toString()>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>
<com.android.server.policy.PhoneWindowManager: int getNonDecorDisplayWidth(int,int,int,int)>
<android.util.SparseIntArray: int get(int,int)>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>
<android.os.Handler: android.os.Looper getLooper()>
<com.android.server.am.ActivityManagerService: void activityDestroyed(android.os.IBinder)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.legacy.CameraDeviceUserShim connectBinderShim(android.hardware.camera2.ICameraDeviceCallbacks,int)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.DeleteTaskDataEvent)>
<android.view.IWindowManagerImpl: void setResizeDimLayer(boolean,int,float)>
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<android.media.tv.TvInputInfo: boolean canRecord()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerNames(java.lang.String[])>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setQueryString(java.lang.String)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void bind(java.lang.CharSequence,java.lang.CharSequence)>
<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector description(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setQsExpanded(boolean)>
<android.view.View: boolean performClick()>
<com.android.documentsui.RecentsLoader.RecentsTask: void <init>(java.lang.String,java.lang.String)>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>
<android.app.Fragment: android.content.res.Resources getResources()>
<com.android.settingslib.drawer.DashboardCategory: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebView: void zoomBy(float)>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.systemui.recents.RecentsSystemUser: void sendRecentsDrawnEvent()>
<android.view.View: void requestLayout()>
<com.android.server.display.DisplayTransformManager: float[] getColorMatrix(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutDirection(int)>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<android.service.voice.VoiceInteractionService: void onShutdown()>
<android.graphics.Rect: void set(android.graphics.Rect)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onStateChanged(int)>
<com.android.printspooler.widget.PrintContentView: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: int extractKeycode(java.lang.String)>
<com.android.documentsui.RootCursorWrapper: boolean isNull(int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.lang.String,int)>
<com.android.server.statusbar.StatusBarManagerService: void clearNotificationEffects()>
<com.android.systemui.qs.tiles.WorkModeTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.location.provider.ActivityRecognitionProvider: boolean isActivitySupported(java.lang.String)>
<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.os.Debug: int getGlobalFreedCount()>
<com.android.systemui.egg.MLand: boolean willNotDraw()>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<com.google.android.util.AbstractMessageParser.Part: boolean isMedia()>
<android.hardware.camera2.CaptureResult: int getSequenceId()>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent.PointerCoords[],int,float,float,int,int,int,int)>
<android.graphics.RectF: void <init>()>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>
<android.view.View: int computeHorizontalScrollOffset()>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>
<android.media.session.PlaybackState: long getLastPositionUpdateTime()>
<com.android.systemui.statusbar.policy.SplitClockView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.NotificationBackgroundView: int getActualHeight()>
<android.bluetooth.BluetoothSocket: int getConnectionType()>
<com.android.server.net.IpConfigStore: void writeIpAndProxyConfigurations(java.lang.String,android.util.SparseArray)>
<com.android.server.pm.Installer: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onKeyguardShowingChanged()>
<com.android.settingslib.bluetooth.MapProfile: java.lang.String toString()>
<android.app.Dialog: android.app.ActionBar getActionBar()>
<com.android.hotspot2.pps.Credential: com.android.hotspot2.IMSIParameter getImsi()>
<android.widget.LinearLayout: int getOrientation()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendFuncSeparate(int,int,int,int)>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>
<android.security.keystore.KeyInfo: java.lang.String[] getBlockModes()>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.telecom.PhoneAccount: java.lang.CharSequence getShortDescription()>
<android.widget.ListView: boolean removeFooterView(android.view.View)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap,int,boolean)>
<android.database.AbstractCursor: void deactivate()>
<com.android.server.display.WifiDisplayController.Listener: void onScanResults(android.hardware.display.WifiDisplay[])>
<com.android.systemui.statusbar.phone.UnlockMethodCache: com.android.systemui.statusbar.phone.UnlockMethodCache getInstance(android.content.Context)>
<android.os.BaseBundle: long getLong(java.lang.String,long)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<android.view.Display.HdrCapabilities: float getDesiredMinLuminance()>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivity(android.content.Intent)>
<com.android.systemui.statusbar.phone.PanelView: float getPeekHeight()>
<android.widget.PopupWindow: void setOutsideTouchable(boolean)>
<android.renderscript.Mesh.AllocationBuilder: void <init>(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: android.graphics.drawable.Drawable getDrawable(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection.Callback)>
<android.media.session.PlaybackState: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.notification.HeaderTransformState: void reset()>
<android.view.ViewGroup: void measureChildren(int,int)>
<com.android.systemui.statusbar.NotificationHeaderUtil.DataExtractor: java.lang.Object extractData(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.webkit.WebView: boolean pageUp(boolean)>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<com.android.server.SystemConfig: android.util.ArrayMap getAvailableFeatures()>
<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()>
<com.android.server.am.ProcessStatsService: void <init>(com.android.server.am.ActivityManagerService,java.io.File)>
<android.location.GnssNavigationMessage.Callback: void onGnssNavigationMessageReceived(android.location.GnssNavigationMessage)>
<com.android.systemui.statusbar.ExpandableView: android.view.ViewGroup getTransientContainer()>
<android.widget.Advanceable: void advance()>
<android.graphics.Canvas_Delegate: int native_saveLayerAlpha(long,float,float,float,float,int,int)>
<android.widget.AlphabetIndexer: int getPositionForSection(int)>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>
<com.android.server.backup.BackupManagerService: boolean isAppEligibleForBackup(java.lang.String)>
<android.content.Intent: void removeCategory(java.lang.String)>
<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>
<android.util.MonthDisplayHelper: void <init>(int,int)>
<android.view.InputEvent: int getDeviceId()>
<com.android.systemui.DessertCaseView: void onSizeChanged(int,int,int,int)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.settingslib.net.DataUsageController getMobileDataController()>
<android.util.LogPrinter: void println(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.systemui.statusbar.policy.CastController: java.util.Set getCastDevices()>
<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>
<android.content.ContentProvider: android.net.Uri uncanonicalize(android.net.Uri)>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>
<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)>
<android.media.AudioFormat: int getChannelIndexMask()>
<android.graphics.Typeface: int hashCode()>
<com.android.systemui.classifier.Classifier: void onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>
<com.android.server.am.UidRecord: void reset()>
<com.android.systemui.settings.BrightnessDialog: void onStart()>
<com.android.server.policy.EnableAccessibilityController: boolean enableAccessibility(android.content.Context)>
<com.android.settingslib.RestrictedLockUtils: android.content.Intent getShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.anqp.Constants: java.lang.String getString(java.nio.ByteBuffer,int,java.nio.charset.Charset)>
<com.android.systemui.volume.ZenModePanel: void updateLocale()>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<com.android.systemui.statusbar.phone.ScrimController: void setDozing(boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport(java.util.ArrayList)>
<com.android.tools.layoutlib.java.System_Delegate: long currentTimeMillis()>
<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>
<com.android.hotspot2.WifiNetworkAdapter: void networkConfigChange(android.net.wifi.WifiConfiguration)>
<com.android.systemui.recents.views.TaskViewHeader: void onLayout(boolean,int,int,int,int)>
<com.android.printspooler.renderer.IPdfRenderer: int openDocument(android.os.ParcelFileDescriptor)>
<android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
<com.android.server.media.MediaSessionRecord: boolean isPlaybackActive(boolean)>
<android.service.media.CameraPrewarmService: boolean onUnbind(android.content.Intent)>
<android.widget.OverScroller: boolean isFinished()>
<android.graphics.Point: void negate()>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<android.media.MediaRouter: void clearUserRoutes()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean moveTaskToDockedStack(int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.Clock: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.location.fused.FusedLocationProvider: void onDisable()>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,int[],int)>
<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>
<android.animation.AnimatorSet: void cancel()>
<com.android.systemui.power.PowerUI.WarningsUI: boolean isInvalidChargerWarningShowing()>
<com.android.systemui.qs.customize.TileAdapter: android.support.v7.widget.helper.ItemTouchHelper getItemTouchHelper()>
<android.preference.PreferenceCategory: boolean isEnabled()>
<com.android.server.am.ActivityManagerService: void stopAppSwitches()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<com.android.keyguard.KeyguardSecurityContainer: void setSecurityCallback(com.android.keyguard.KeyguardSecurityContainer.SecurityCallback)>
<android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>
<android.gesture.GestureOverlayView: void clear(boolean)>
<com.android.server.accessibility.AutoclickController: void clearEvents(int)>
<android.app.usage.NetworkStats.Bucket: int getState()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void draw(android.graphics.Canvas)>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>
<android.graphics.Canvas_Delegate: int native_getHeight(long)>
<android.media.SoundPool: void release()>
<android.hardware.usb.UsbRequest: boolean cancel()>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.bluetooth.le.ScanResult: long getTimestampNanos()>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>
<com.android.systemui.assist.AssistOrbView: void startExitAnimation(long)>
<android.app.ActivityManager: boolean clearApplicationUserData()>
<android.view.View: boolean isHardwareAccelerated()>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.os.Looper: void dump(android.util.Printer,java.lang.String)>
<android.media.ImageReader.OnImageAvailableListener: void onImageAvailable(android.media.ImageReader)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void finishInput()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintAvoidBackgroundClipping(boolean)>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void onFinishInflate()>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.app.Notification: android.graphics.drawable.Icon getLargeIcon()>
<android.os.Bundle: short[] getShortArray(java.lang.String)>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)>
<com.android.server.am.ActivityManagerService: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<com.android.server.usb.UsbAlsaManager: void systemReady()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<com.android.settingslib.bluetooth.PbapServerProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<org.apache.http.conn.ssl.AllowAllHostnameVerifier: java.lang.String toString()>
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onFinishInflate()>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.statusbar.notification.NotificationMessagingTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.LocationManagerService: int getGnssYearOfHardware()>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationAtEnd()>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>
<com.android.settingslib.net.SummaryForAllUidLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,long,long)>
<android.telecom.TelecomManager: boolean isInCall()>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>
<android.app.trust.TrustManager.TrustListener: void onTrustChanged(boolean,int,int)>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>
<android.app.ActivityManagerProxy: boolean stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>
<com.android.systemui.classifier.FalsingLog: void v(java.lang.String,java.lang.String)>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<android.hardware.Camera: void setDisplayOrientation(int)>
<android.os.UserManager: boolean isUserUnlocked()>
<com.android.location.provider.FusedLocationHardware: void registerSink(com.android.location.provider.FusedLocationHardwareSink,android.os.Looper)>
<com.android.documentsui.RecentsLoader.RecentsTask: void close()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.app.Activity: boolean isVoiceInteractionRoot()>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.widget.DatePicker: void setSpinnersShown(boolean)>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.nfc.tech.MifareUltralight: void setTimeout(int)>
<com.android.server.NativeDaemonEvent: java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[],int)>
<android.preference.Preference: boolean isPersistent()>
<android.text.BoringLayout.Metrics: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLCanvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.accessibility.AccessibilityManagerService: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>
<com.android.systemui.statusbar.policy.DataSaverController: void remListener(com.android.systemui.statusbar.policy.DataSaverController.Listener)>
<android.service.notification.NotificationListenerService.Ranking: int getRank()>
<android.view.View: long getDrawingTime()>
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)>
<com.android.systemui.classifier.ProximityClassifier: void onSensorChanged(android.hardware.SensorEvent)>
<android.nfc.TagLostException: void <init>(java.lang.String)>
<android.media.MediaPlayer: void seekTo(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int4)>
<com.android.server.policy.BarController: void setWindow(android.view.WindowManagerPolicy.WindowState)>
<android.service.voice.VoiceInteractionSession: void hide()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: void <init>(java.lang.String,java.lang.Class)>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.app.admin.DevicePolicyManager: boolean isManagedProfile(android.content.ComponentName)>
<android.graphics.drawable.RippleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.text.format.Time: java.lang.String toString()>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getOverriddenMethods()>
<android.graphics.DrawFilter: void finalize()>
<android.hardware.camera2.legacy.SizeAreaComparator: android.hardware.Camera.Size findLargestByArea(java.util.List)>
<android.content.pm.FeatureGroupInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.Animation: void setStartOffset(long)>
<android.location.LocationManager: boolean addNmeaListener(android.location.GnssNmeaListener)>
<android.content.SyncResult: boolean madeSomeProgress()>
<android.text.style.TtsSpan.DigitsBuilder: void <init>(java.lang.String)>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onPeerDimensionsChanged(android.telecom.RemoteConnection.VideoProvider,int,int)>
<android.service.vr.VrListenerService: android.os.IBinder onBind(android.content.Intent)>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>
<android.media.AudioFormat: int hashCode()>
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>
<com.android.hotspot2.pps.DomainMatcher: void main(java.lang.String[])>
<android.app.Fragment: android.transition.Transition getEnterTransition()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.server.am.ActivityManagerService: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.documentsui.RecentsLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.State)>
<com.android.keyguard.AlphaOptimizedRelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setVisualStabilityManager(com.android.systemui.statusbar.notification.VisualStabilityManager)>
<android.text.HtmlToSpannedConverter: void endPrefixMapping(java.lang.String)>
<android.telecom.RemoteConference.Callback: void onConnectionRemoved(android.telecom.RemoteConference,android.telecom.RemoteConnection)>
<com.android.systemui.qs.QSAnimator: void onTilesChanged()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelectionBackReference(int,int)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean moveSharedPreferencesFrom(android.content.Context,java.lang.String)>
<android.transition.TransitionSet: android.transition.TransitionSet setDuration(long)>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>
<android.view.View: boolean isPaddingRelative()>
<com.android.server.LocationManagerService: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onViewAdded(android.view.View)>
<com.android.server.connectivity.NetworkAgentInfo: boolean isBackgroundNetwork()>
<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean shouldHideBackground()>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String)>
<android.os.Debug: void enableEmulatorTraceOutput()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getDepth()>
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>
<com.android.server.media.projection.MediaProjectionManagerService: void monitor()>
<android.app.Service: void <init>()>
<android.graphics.drawable.LevelListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.view.Surface getInputSurface()>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>
<com.android.server.net.NetworkStatsCollection: long getTotalBytes()>
<android.preference.TwoStatePreference: void setSummaryOn(java.lang.CharSequence)>
<android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.widget.Editor.UndoInputFilter: void endBatchEdit()>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStopped(boolean)>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>
<android.widget.EdgeEffect: void onRelease()>
<com.android.systemui.SysUIToast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.text.method.ArrowKeyMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,int[],int)>
<android.app.ActionBar.Tab: java.lang.Object getTag()>
<com.android.server.backup.PackageManagerBackupAgent: java.util.Set getRestoredPackages()>
<com.android.server.media.MediaSessionRecord: boolean isActive()>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void show(android.os.Bundle)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void showNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo create()>
<com.android.hotspot2.omadm.OMANode: java.lang.String getValue()>
<com.android.settingslib.bluetooth.HidProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateAlpha()>
<android.widget.PopupWindow: boolean isClippingEnabled()>
<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater.Factory2)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void unlock()>
<com.android.server.lights.Light: void setFlashing(int,int,int,int)>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>
<android.widget.AdapterViewFlipper: void showNext()>
<android.telecom.TelecomManager: android.content.Intent createManageBlockedNumbersIntent()>
<android.nfc.Tag: java.lang.String toString()>
<com.android.hotspot2.osu.HTTPHandler: boolean isHTTPAuthPerformed()>
<android.media.MediaRecorder: void setAudioSource(int)>
<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>
<com.android.systemui.classifier.FalsingManager: void onScreenTurningOn()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void requestDisallowLongPress()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setChronometerRunning(boolean)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onDraw(android.graphics.Canvas)>
<android.view.ActionProvider: boolean overridesItemVisibility()>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
<android.content.res.AssetManager: java.lang.String[] getLocales()>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.database.CursorWindow: double getDouble(int,int)>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyMatrix(float[],int)>
<android.os.Bundle: void putShort(java.lang.String,short)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(java.nio.IntBuffer)>
<com.android.server.am.BatteryStatsService: void noteStartCamera(int)>
<android.telecom.RemoteConnection: int getConnectionProperties()>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void initView(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4f(int,float,float,float,float)>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>
<com.android.gallery3d.util.IntArray: void add(int)>
<com.android.systemui.recents.views.TaskViewTransform: java.lang.String toString()>
<android.view.SurfaceHolder: void setSizeFromLayout()>
<com.android.systemui.statusbar.phone.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<android.media.MediaCodec: void start()>
<com.android.systemui.recents.misc.SystemServicesProxy: void requestKeyboardShortcuts(android.content.Context,android.view.WindowManager.KeyboardShortcutsReceiver,int)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setObjectHandle(int)>
<android.speech.RecognitionListener: void onPartialResults(android.os.Bundle)>
<com.android.systemui.recents.events.activity.LaunchTvTaskEvent: void <init>(com.android.systemui.recents.tv.views.TaskCardView,com.android.systemui.recents.model.Task,android.graphics.Rect,int)>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>
<android.text.style.TtsSpan: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)>
<com.android.systemui.recents.tv.RecentsTvImpl: void <init>(android.content.Context)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 cross(com.android.server.AnyMotionDetector.Vector3)>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getIcon()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu.OnDismissListener)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void scanForAccessPoints()>
<android.media.audiofx.Virtualizer: void <init>(int,int)>
<com.android.hotspot2.osu.WiFiKeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<android.content.Context: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.graphics.drawable.Drawable getWallpaper()>
<com.android.server.AppOpsService: android.os.IBinder getToken(android.os.IBinder)>
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>
<com.android.server.EntropyMixer: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: int getWindowVisibility()>
<android.hardware.Camera: void stopFaceDetection()>
<android.hardware.camera2.CaptureFailure: boolean wasImageCaptured()>
<android.net.Credentials: int getGid()>
<com.android.systemui.power.PowerUI.WarningsUI: void updateLowBatteryWarning()>
<android.view.View: void setNextFocusUpId(int)>
<android.bluetooth.BluetoothClass: int describeContents()>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.io.InputStream,boolean)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.Scroller: void forceFinished(boolean)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeColor()>
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>
<android.graphics.Paint: void setLinearText(boolean)>
<android.print.PrintJobInfo: int describeContents()>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onWifiStateChanged(int)>
<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.clipboard.ClipboardService: android.content.ClipDescription getPrimaryClipDescription(java.lang.String)>
<android.service.notification.NotificationListenerService: void attachBaseContext(android.content.Context)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffset(float,float)>
<android.net.LinkAddress: java.lang.String toString()>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.PanelView: boolean onMiddleClicked()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getKeepUninstalledPackages(android.content.ComponentName)>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>
<com.android.systemui.volume.Events.Callback: void writeState(long,com.android.systemui.volume.VolumeDialogController.State)>
<android.hardware.camera2.dispatch.MethodNameInvoker: java.lang.Object invoke(java.lang.String,java.lang.Object[])>
<com.android.systemui.qs.tiles.WorkModeTile: void setListening(boolean)>
<android.hardware.camera2.legacy.LegacyCameraDevice: long flush()>
<android.util.JsonReader: void close()>
<android.telephony.cdma.CdmaCellLocation: double convertQuartSecToDecDegrees(int)>
<com.android.systemui.statusbar.BaseStatusBar: void cancelPreloadRecentApps()>
<android.media.tv.TvContract: boolean isProgramUri(android.net.Uri)>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>
<com.android.commands.pm.Pm: void main(java.lang.String[])>
<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>
<android.view.Window: void setContainer(android.view.Window)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
<android.service.voice.VoiceInteractionSession: void finish()>
<com.android.uiautomator.core.UiDevice: boolean swipe(android.graphics.Point[],int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>
<android.hardware.camera2.legacy.ParameterUtils: java.lang.String stringFromAreaList(java.util.List)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector fromParent(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onMeasure(int,int)>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>
<com.android.server.policy.PolicyControl: boolean disableImmersiveConfirmation(java.lang.String)>
<android.widget.NumberPicker: boolean getWrapSelectorWheel()>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener,android.os.Looper)>
<android.app.FragmentManagerImpl: void popBackStack(int,int)>
<android.content.ClipData.Item: java.lang.String getHtmlText()>
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>
<com.android.nfc_extras.EeListenModeException: void <init>()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onStop()>
<android.view.ViewStructure: void setContentDescription(java.lang.CharSequence)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getSlowestIntervalMs()>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void start()>
<android.os.UserManager: int getUserCount()>
<android.media.tv.TvRecordingClient: void tune(java.lang.String,android.net.Uri,android.os.Bundle)>
<com.android.systemui.statusbar.notification.TransformState: void recycle()>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>
<com.android.server.hdmi.HdmiCecMessage: java.lang.String toString()>
<android.content.CursorLoader: java.lang.String[] getProjection()>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>
<android.media.MediaCodecInfo.VideoCapabilities: int getHeightAlignment()>
<android.app.admin.SystemUpdatePolicy: int describeContents()>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>
<android.os.Parcel: char[] createCharArray()>
<android.graphics.drawable.Drawable: void setTint(int)>
<com.android.server.backup.BackupManagerService: android.content.Intent getDataManagementIntent(java.lang.String)>
<android.content.ContentQueryMap: void setKeepUpdated(boolean)>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)>
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()>
<android.preference.PreferenceActivity: void startPreferenceFragment(android.app.Fragment,boolean)>
<com.google.android.gles_jni.GLImpl: void glPopMatrix()>
<com.android.mediadrm.signer.MediaDrmSigner: byte[] signRSA(android.media.MediaDrm,byte[],java.lang.String,byte[],byte[])>
<android.widget.TextView: android.text.InputFilter[] getFilters()>
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isChildInGroup()>
<com.android.printspooler.ui.PrinterRegistry: java.util.List getPrinters()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>
<android.graphics.PointF: java.lang.String toString()>
<android.hardware.camera2.marshal.MarshalQueryable: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.media.tv.TvContentRating: boolean equals(java.lang.Object)>
<com.android.server.usb.UsbPortManager: void addSimulatedPort(java.lang.String,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.photos.BitmapRegionTileSource: int getImageWidth()>
<android.location.Address: void setPhone(java.lang.String)>
<com.android.server.usb.UsbHostManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<com.android.server.pm.PackageInstallerSession: void close()>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void updateGrayscale(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.BridgeTypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>
<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>
<android.app.VoiceInteractor.Request: void onAttached(android.app.Activity)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>
<android.media.AudioTrack.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioTrack)>
<android.os.BatteryStats.HistoryItem: void setTo(android.os.BatteryStats.HistoryItem)>
<android.widget.TextSwitcher: void <init>(android.content.Context)>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<com.android.systemui.recents.views.TaskViewHeader: void startFocusTimerIndicator(int)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<com.android.commands.svc.UsbCommand: java.lang.String shortHelp()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(float[],int)>
<android.hardware.radio.RadioTuner.Callback: void onTrafficAnnouncement(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void removeIcon(java.lang.String)>
<android.app.ActivityManagerProxy: void positionTaskInStack(int,int,int)>
<android.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void DGEMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>
<android.util.EventLog.Event: int getThreadId()>
<com.android.systemui.classifier.Point: void <init>(float,float)>
<android.app.usage.UsageEvents.Event: int getEventType()>
<com.android.systemui.statusbar.policy.MobileSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.AnyMotionDetector: void checkForAnyMotion()>
<android.view.WindowContentFrameStats: void writeToParcel(android.os.Parcel,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<com.android.systemui.power.PowerNotificationWarnings: void userSwitched()>
<com.android.server.usage.UsageStatsService: void onBootPhase(int)>
<com.android.settingslib.graph.UsageView: void clearPaths()>
<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurnedOff()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasProfileOwner()>
<android.content.Intent: void <init>(java.lang.String)>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.view.View: void setZ(float)>
<android.graphics.drawable.DrawableWrapper: boolean onStateChange(int[])>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.app.backup.IFullBackupRestoreObserver: void onEndBackup()>
<com.android.server.fingerprint.ClientMonitor: long getHalDeviceId()>
<android.os.Bundle: void <init>()>
<com.android.location.provider.FusedLocationHardwareSink: void onDiagnosticDataAvailable(java.lang.String)>
<com.android.documentsui.BaseActivity: void onSearchChanged(java.lang.String)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>
<com.android.server.policy.PhoneWindowManager: boolean allowAppAnimationsLw()>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>
<android.graphics.RectF: void set(android.graphics.Rect)>
<com.android.systemui.SwipeHelper: void setMaxSwipeProgress(float)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onTouchSlopExceeded()>
<android.widget.ListPopupWindow: void setAnimationStyle(int)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.Class[] getInjectedClasses()>
<android.telephony.CellIdentityLte: int getMnc()>
<com.android.server.backup.Trampoline: android.content.Intent getConfigurationIntent(java.lang.String)>
<android.media.AudioRecord: int getState()>
<android.media.MediaRouter.UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onServiceDied(com.android.server.print.RemotePrintService)>
<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.widget.AdapterViewAnimator: void setSelection(int)>
<com.android.printspooler.ui.PageAdapter: int getItemCount()>
<android.app.job.JobParameters: void writeToParcel(android.os.Parcel,int)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<android.graphics.NinePatch: int getDensity()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void buzzBeepBlinked()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.print.PrinterCapabilitiesInfo: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean openQuickSettings()>
<com.android.hotspot2.utils.HTTPResponse: java.lang.String getCharset()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseVisibleDuration()>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)>
<com.android.anqp.Constants: boolean hasBaseANQPElements(java.util.Collection)>
<com.android.systemui.recents.RecentsImplProxy: void cancelPreloadingRecents()>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<android.widget.CalendarView: void setMinDate(long)>
<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitEnd()>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionPaused()>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>
<com.android.systemui.SystemUIFactory: com.android.systemui.SystemUIFactory getInstance()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackStream(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.ShapeDrawable: void <init>()>
<com.android.systemui.recents.views.SystemBarScrimViews: void <init>(com.android.systemui.recents.RecentsActivity)>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<android.net.wifi.WifiConfiguration: boolean isPasspoint()>
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void updateTransformedTypes()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setCase(java.lang.String)>
<android.media.midi.MidiDeviceInfo: int getId()>
<android.util.ArrayMap: java.lang.Object keyAt(int)>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>
<com.android.systemui.tuner.ClipboardView: boolean onDragEvent(android.view.DragEvent)>
<com.android.systemui.SystemUIFactory: java.lang.Object createInstance(java.lang.Class)>
<android.media.tv.TvContract: android.net.Uri buildProgramUri(long)>
<com.android.hotspot2.omadm.OMAConstants: java.lang.String readURN(java.io.InputStream)>
<com.android.server.soundtrigger.SoundTriggerInternal: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>
<android.os.BatteryStats.Uid: boolean hasUserActivity()>
<android.view.ScaleGestureDetector: float getFocusY()>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void fling(float,boolean)>
<android.view.animation.Transformation: void setAlpha(float)>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void <init>(int)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap getBitmap()>
<com.android.printservice.recommendation.plugin.xerox.ServiceResolver.Observer: void dataSetChanged()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>
<com.android.layoutlib.bridge.impl.GcSnapshot: void translate(float,float)>
<android.telecom.StatusHints: int describeContents()>
<android.graphics.Canvas: void scale(float,float,float,float)>
<android.view.WindowCallback: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.am.ActivityManagerService: boolean dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<android.os.PowerManager: void userActivity(long,boolean)>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.view.animation.Animation: void setRepeatCount(int)>
<android.service.carrier.MessagePdu: int describeContents()>
<android.media.AudioRecord.Builder: void <init>()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.graphics.Path)>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean shouldHideNotifications(int)>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>
<com.android.server.pm.PackageInstallerSession: void open()>
<android.widget.PopupWindow: void setAnimationStyle(int)>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>
<com.android.systemui.statusbar.NotificationContentView: void onAttachedToWindow()>
<android.util.AttributeSet: int getAttributeResourceValue(int,int)>
<android.webkit.ClientCertRequest: java.security.Principal[] getPrincipals()>
<android.graphics.drawable.RotateDrawable: void setToDegrees(float)>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<com.android.server.notification.CountdownConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isMediaNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.ExpandableNotificationRow.OnExpandClickListener: void onExpandClicked(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean approveCaCert(java.lang.String,int,boolean)>
<android.graphics.drawable.VectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,float[],int)>
<com.android.systemui.statusbar.stack.AmbientState: void onBeginDrag(android.view.View)>
<android.media.tv.TvView: void timeShiftPlay(java.lang.String,android.net.Uri)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>
<android.util.FloatMath: float sin(float)>
<android.media.tv.TvTrackInfo.Builder: void <init>(int,java.lang.String)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Package)>
<com.android.settingslib.drawer.UserAdapter: android.os.UserHandle getUserHandle(int)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onUnconfigured(android.hardware.camera2.CameraDevice)>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getConnectionSummary()>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.app.ActionBar: android.app.ActionBar.Tab getSelectedTab()>
<android.util.SparseArray: void removeAt(int)>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>
<android.accounts.Account: int describeContents()>
<com.android.printspooler.model.PageContentRepository: void close(java.lang.Runnable)>
<android.widget.TextView: int getExtendedPaddingBottom()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onUuidChanged(android.bluetooth.BluetoothDevice)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void powerHint(int,int)>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>
<android.view.IWindowManagerImpl: void reenableKeyguard(android.os.IBinder)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.dirlist.DirectoryFragment: com.android.documentsui.dirlist.DirectoryFragment get(android.app.FragmentManager)>
<com.android.server.twilight.TwilightState: int hashCode()>
<android.widget.PopupMenu: void show()>
<com.android.systemui.statusbar.ScrimView: void setLeftInset(int)>
<android.content.pm.ShortcutInfo: android.os.UserHandle getUserHandle()>
<com.android.systemui.stackdivider.DividerView: void resizeStack(int,int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void delete(long)>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance(java.lang.String)>
<android.nfc.tech.MifareUltralight: int getTimeout()>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.ProgressBar: void setMax(int)>
<com.android.server.backup.BackupManagerService: void dataChanged(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyPendingSystemUpdate(long)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasFreeformWorkspaceSupport()>
<android.bluetooth.BluetoothGattServer: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.text.Layout: int getHeight()>
<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
<com.android.systemui.DessertCaseView: void stop()>
<com.android.preload.actions.ScanAllPackagesAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.SparseIntArray: int indexOfValue(int)>
<android.text.style.QuoteSpan: int getSpanTypeId()>
<com.android.systemui.qs.tiles.IntentTile: java.lang.CharSequence getTileLabel()>
<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>
<android.database.MergeCursor: void close()>
<com.android.server.pm.PermissionsState: boolean hasPermission(java.lang.String,int)>
<com.android.systemui.tuner.NavBarTuner: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>
<android.media.audiofx.Visualizer: int getMeasurementMode()>
<android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi.EC: void <init>()>
<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>
<com.android.keyguard.KeyguardPasswordView: int getPromtReasonStringRes(int)>
<android.graphics.SurfaceTexture: void release()>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.net.DhcpInfo: java.lang.String toString()>
<com.android.documentsui.ProviderExecutor: void run()>
<android.widget.ExpandableListView: long getSelectedPosition()>
<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<com.android.server.accounts.AccountManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForIfdId(int)>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.android.documentsui.NavigationView.Environment: com.android.documentsui.model.RootInfo getCurrentRoot()>
<javax.microedition.khronos.opengles.GL10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.util.Rational: long longValue()>
<android.telephony.NeighboringCellInfo: int getCid()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getStatusBarHeight()>
<android.view.Window: android.transition.TransitionManager getTransitionManager()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isInSettings()>
<android.app.admin.DevicePolicyManager: java.util.List retrievePreRebootSecurityLogs(android.content.ComponentName)>
<android.widget.ListPopupWindow: int getInputMethodMode()>
<android.mtp.MtpEvent: int getEventCode()>
<javax.microedition.khronos.opengles.GL10: void glNormal3f(float,float,float)>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<com.android.server.job.JobStore: java.util.List getJobsByUid(int)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onDataSaverChanged(boolean)>
<android.app.ActivityManagerProxy: void moveTaskToStack(int,int,boolean)>
<android.widget.RelativeLayout: void requestLayout()>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.media.audiofx.Equalizer.Settings: void <init>()>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.FieldPacker: android.renderscript.Byte3 subByte3()>
<android.widget.Toolbar: java.lang.CharSequence getLogoDescription()>
<com.android.systemui.volume.Interaction.Callback: void onInteraction()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void rewind()>
<android.hardware.fingerprint.IFingerprintDaemon: int setActiveGroup(int,byte[])>
<android.telecom.InCallService.VideoCall.Callback: void onCallDataUsageChanged(long)>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.widget.RelativeLayout.LayoutParams)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onCreate(android.os.Bundle)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)>
<android.widget.TabHost: void setCurrentTab(int)>
<com.android.systemui.qs.QSContainer: void hideImmediately()>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreferredPreviewSizeForVideo()>
<com.android.server.am.ActivityManagerService: void registerUidObserver(android.app.IUidObserver,int)>
<android.widget.ZoomButton: void <init>(android.content.Context)>
<android.service.textservice.SpellCheckerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.QSTile.Icon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>
<android.app.admin.DevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setColor(float,float,float,float)>
<android.location.SettingInjectorService: boolean onGetEnabled()>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<android.hardware.radio.RadioManager.ProgramInfo: int getChannel()>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int,int)>
<com.android.server.am.BatteryStatsService: void noteStartSensor(int,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void hideRecentApps(boolean,boolean)>
<android.graphics.Canvas: int getWidth()>
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>
<com.android.documentsui.dirlist.FragmentTuner.SelectionDetails: boolean containsDirectories()>
<android.os.BatteryStats.Uid: long getNetworkActivityBytes(int,int)>
<android.inputmethodservice.Keyboard: int getKeyWidth()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,android.renderscript.Allocation,int)>
<com.android.systemui.qs.QSTile: void handleUserSwitch(int)>
<android.net.wifi.WifiEnterpriseConfig: void <init>(android.net.wifi.WifiEnterpriseConfig)>
<android.media.ResourceBusyException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: boolean performClick()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<android.view.ViewGroup: boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.content.ContentValues: boolean containsKey(java.lang.String)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)>
<android.hardware.display.VirtualDisplay.Callback: void onResumed()>
<android.app.Activity: void setVolumeControlStream(int)>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDst()>
<com.google.android.gles_jni.GLImpl: void glBlendEquationSeparate(int,int)>
<android.graphics.drawable.BitmapDrawable: boolean hasAntiAlias()>
<com.android.server.pm.ShortcutService: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>
<android.content.CursorLoader: void onStopLoading()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>()>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[],int,int)>
<android.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
<com.android.settingslib.BatteryInfo: void getBatteryInfo(android.content.Context,com.android.settingslib.BatteryInfo.Callback)>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>
<android.widget.Editor.UndoInputFilter: void <init>(android.widget.Editor)>
<android.util.JsonWriter: android.util.JsonWriter name(java.lang.String)>
<com.android.server.notification.VisibilityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<android.transition.Transition: android.transition.Transition addTarget(android.view.View)>
<com.android.server.pm.UserManagerService: android.os.PersistableBundle getSeedAccountOptions()>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isAvailable()>
<android.widget.AdapterView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.GuestResumeSessionReceiver: void register(android.content.Context)>
<android.util.IntProperty: void <init>(java.lang.String)>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraAvailable(java.lang.String)>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>
<com.android.systemui.qs.tiles.UserDetailItemView: com.android.systemui.qs.tiles.UserDetailItemView convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<android.app.assist.AssistContent: android.content.ClipData getClipData()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.media.MediaDataSource: int readAt(long,byte[],int,int)>
<com.google.android.util.AbstractMessageParser.Html: void trimLeadingWhitespace()>
<android.view.MotionEvent: float getRawX()>
<android.content.Intent: char getCharExtra(java.lang.String,char)>
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setImagePixDepth(long)>
<com.android.server.media.MediaSessionRecord: int getCurrentVolume()>
<android.os.IPowerManager: boolean isInteractive()>
<android.os.Parcel: void readByteArray(byte[])>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getContractedChild()>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateExpandNotificationsPanel()>
<com.android.systemui.statusbar.phone.ScrimController: void forceHideScrims(boolean)>
<android.util.DisplayMetrics: java.lang.String toString()>
<android.app.IActivityManager.WaitResult: int describeContents()>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int[])>
<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>
<com.android.settingslib.bluetooth.MapProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>
<com.android.systemui.doze.DozeHost: void removeCallback(com.android.systemui.doze.DozeHost.Callback)>
<android.media.soundtrigger.SoundTriggerDetector.Callback: void onRecognitionResumed()>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.List,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<android.text.StaticLayout: int getLineDescent(int)>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long3)>
<com.google.android.gles_jni.GLImpl: void glHint(int,int)>
<android.net.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>
<com.android.documentsui.model.RootInfo: com.android.documentsui.model.RootInfo fromRootsCursor(java.lang.String,android.database.Cursor)>
<com.android.server.net.NetworkPolicyManagerService: void bindNotificationManager(android.app.INotificationManager)>
<com.android.settingslib.bluetooth.A2dpProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<android.widget.Switch: int getCompoundPaddingRight()>
<android.app.Notification: void <init>(android.os.Parcel)>
<android.view.CollapsibleActionView: void onActionViewCollapsed()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: android.view.View inflateIconArea(android.view.LayoutInflater)>
<com.android.server.usb.UsbAlsaManager: void logDevicesList(java.lang.String)>
<com.android.gallery3d.common.Utils: void assertTrue(boolean)>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistInternal()>
<android.text.BoringLayout: int getParagraphDirection(int)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateDark()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.Host getHost()>
<com.android.server.display.NightDisplayService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.bars.NavigationBar: android.widget.TextView getStyleableTextView()>
<android.widget.ExpandableListAdapter: java.lang.Object getGroup(int)>
<android.telecom.Conference: void setDisconnected(android.telecom.DisconnectCause)>
<android.text.Editable: void setFilters(android.text.InputFilter[])>
<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isSnoozed(java.lang.String)>
<android.content.IntentFilter: int countDataSchemes()>
<android.hardware.GeomagneticField: void <init>(float,float,float,long)>
<android.text.style.RelativeSizeSpan: void <init>(float)>
<android.view.View: int getNextFocusLeftId()>
<android.transition.TransitionSet: void setPropagation(android.transition.TransitionPropagation)>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>
<com.android.server.notification.NotificationDelegate: void onNotificationExpansionChanged(java.lang.String,boolean,boolean)>
<com.android.systemui.qs.QSAnimator: void onPageChanged(boolean)>
<android.bluetooth.BluetoothDevice: int getType()>
<com.android.server.display.NightDisplayService: void onSwitchUser(int)>
<com.android.server.net.NetworkStatsAccess: int checkAccessLevel(android.content.Context,int,java.lang.String)>
<com.android.systemui.qs.external.CustomTile: com.android.systemui.qs.QSTile create(com.android.systemui.statusbar.phone.QSTileHost,java.lang.String)>
<com.android.commands.pm.Pm: int runMovePrimaryStorage()>
<com.android.systemui.volume.VolumeDialog: void dismiss(int)>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.qs.QSTile create(com.android.systemui.qs.QSTile.Host,java.lang.String)>
<android.app.ActivityManagerProxy: void enterSafeMode()>
<android.hardware.radio.RadioManager.AmBandConfig: java.lang.String toString()>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getProfileOwnerName()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)>
<com.android.anqp.OSUProvider: java.util.List getIcons()>
<android.provider.ContactsContract.Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.location.LocationManager: boolean addNmeaListener(android.location.GnssNmeaListener,android.os.Handler)>
<com.android.settingslib.bluetooth.HeadsetProfile: java.lang.String toString()>
<android.filterpacks.imageproc.ImageSlicer: void setupPorts()>
<com.android.server.wm.DockedStackDividerController: boolean animate(long)>
<android.security.keystore.AndroidKeyStoreHmacSpi.HmacSHA384: void <init>()>
<com.android.hotspot2.utils.HTTPRequest: java.io.InputStream getPayloadStream()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isDeviceInteractive()>
<android.nfc.tech.NfcA: byte[] transceive(byte[])>
<android.widget.CalendarView: int getWeekDayTextAppearance()>
<android.content.pm.ShortcutManager: void disableShortcuts(java.util.List)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.media.soundtrigger.SoundTriggerManager.Model: java.util.UUID getVendorUuid()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerUp(android.os.IBinder,int)>
<com.android.keyguard.KeyguardPINView: boolean hasOverlappingRendering()>
<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard.Key)>
<com.android.systemui.recents.RecentsImplProxy: void hideRecents(boolean,boolean)>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeUncertaintyMeters()>
<com.android.server.clipboard.ClipboardService: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>
<android.provider.DocumentsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.os.PowerManager.WakeLock: void setWorkSource(android.os.WorkSource)>
<android.media.browse.MediaBrowser: android.content.ComponentName getServiceComponent()>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.os.Process: boolean supportsProcesses()>
<android.text.TextPaint: void <init>()>
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>
<android.location.Criteria: int getSpeedAccuracy()>
<android.widget.EdgeEffect: int getMaxHeight()>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>
<com.android.hotspot2.asn1.DecodeException: void <init>(java.lang.String,int)>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>
<com.android.server.am.ActivityManagerService: boolean willActivityBeVisible(android.os.IBinder)>
<android.nfc.cardemulation.CardEmulation: boolean supportsAidPrefixRegistration()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setImagePixHeight(long)>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<com.android.server.pm.Installer: void linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>
<android.telephony.ServiceState: void <init>(android.os.Parcel)>
<android.hardware.radio.RadioManager.BandConfig: int hashCode()>
<com.android.server.firewall.FilterFactory: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onDraw(android.graphics.Canvas)>
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()>
<com.android.settingslib.Utils: java.lang.String getUserLabel(android.content.Context,android.content.pm.UserInfo)>
<android.graphics.PointF: boolean equals(java.lang.Object)>
<android.app.ActivityManager: int getMemoryClass()>
<android.app.Activity: void setVrModeEnabled(boolean,android.content.ComponentName)>
<android.media.MediaMetadata: int size()>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onConfigurationChanged()>
<android.media.AudioTrack.Builder: void <init>()>
<com.android.settingslib.BatteryInfo.BatteryDataParser: void onDataPoint(long,android.os.BatteryStats.HistoryItem)>
<android.telecom.VideoProfile: java.lang.String toString()>
<android.hardware.camera2.utils.ParamsUtils: android.util.Size createSize(android.graphics.Rect)>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.Class,boolean)>
<android.media.AudioRecord: int getChannelCount()>
<com.android.systemui.qs.external.TileServiceManager: void setBindRequested(boolean)>
<android.widget.Scroller: int getFinalX()>
<com.android.systemui.recents.model.TaskStack: void moveTaskToStack(com.android.systemui.recents.model.Task,int)>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>
<android.app.ActivityOptions: android.os.Bundle toBundle()>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>
<android.renderscript.Element: android.renderscript.Element U16_4(android.renderscript.RenderScript)>
<android.widget.ListView: int getFooterViewsCount()>
<android.widget.AbsListView: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.widget.RemoteViews: void setTextColor(int,int)>
<com.android.keyguard.KeyguardHostView: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>
<android.database.CursorWrapper: java.lang.String getString(int)>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<android.content.ContextWrapper: void clearWallpaper()>
<android.renderscript.Type: int getZ()>
<android.media.tv.TvInputService: android.media.tv.TvInputService.Session onCreateSession(java.lang.String)>
<com.android.anqp.eap.EAPMethod: com.android.anqp.eap.AuthParam getAuthParam()>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekSeparatorLineColor(int)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleKeyboardShortcutsMenu(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void onDensityOrFontScaleChanged()>
<com.android.systemui.qs.PageIndicator: void onLayout(boolean,int,int,int,int)>
<android.opengl.GLES20: int glGetError()>
<android.media.MediaExtractor: void setDataSource(android.media.MediaDataSource)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>
<android.view.animation.Transformation: java.lang.String toShortString()>
<com.android.systemui.statusbar.policy.CastController: void removeCallback(com.android.systemui.statusbar.policy.CastController.Callback)>
<android.graphics.drawable.LayerDrawable: int getStartPadding()>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>
<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.app.Fragment: java.lang.CharSequence getText(int)>
<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.app.WallpaperInfo: int describeContents()>
<android.hardware.camera2.CameraManager: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float)>
<android.net.wifi.WifiScanner.ScanData: int getId()>
<android.renderscript.Allocation: void syncAll(int)>
<com.android.settingslib.drawable.CircleFramedDrawable: float getScale()>
<android.transition.Transition: long getDuration()>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.android.documentsui.dirlist.MultiSelectManager.GridModel.OnSelectionChangedListener: void onSelectionChanged(java.util.Set)>
<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.view.WindowId: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.DeviceAdminReceiver: java.lang.String onChoosePrivateKeyAlias(android.content.Context,android.content.Intent,int,android.net.Uri,java.lang.String)>
<android.widget.AdapterView: boolean canAnimate()>
<com.android.systemui.statusbar.AnimatedImageView: void onVisibilityChanged(android.view.View,int)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.recents.views.TaskView: void onTaskDataLoaded(com.android.systemui.recents.model.Task,android.app.ActivityManager.TaskThumbnailInfo)>
<android.os.WorkSource: boolean diff(android.os.WorkSource)>
<android.net.CaptivePortal: void ignoreNetwork()>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>
<com.android.gallery3d.exif.ExifInterface: double[] getLatLongAsDoubles()>
<com.android.documentsui.model.DocumentInfo: com.android.documentsui.model.DocumentInfo fromDirectoryCursor(android.database.Cursor)>
<com.android.systemui.ExpandHelper: void setEnabled(boolean)>
<com.android.systemui.volume.VolumeDialogController: void removeCallback(com.android.systemui.volume.VolumeDialogController.Callbacks)>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>
<android.widget.AbsListView: boolean canScrollList(int)>
<android.preference.PreferenceActivity: void switchToHeader(java.lang.String,android.os.Bundle)>
<android.app.Notification.Action.Builder: android.os.Bundle getExtras()>
<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>
<android.renderscript.Script: void setVar(int,float)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>
<com.android.documentsui.dirlist.MultiSelectManager: void updateSelection(com.android.documentsui.dirlist.MultiSelectManager.Selection)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context)>
<android.widget.TextView: boolean getDefaultEditable()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.graphics.Path)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,int[],int)>
<com.android.server.am.ActivityManagerService: void setWindowManager(com.android.server.wm.WindowManagerService)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionCancelled()>
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()>
<com.android.systemui.recents.views.AnimationProps: void <init>(int,android.view.animation.Interpolator)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onRequestContentUpdate()>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>
<android.bluetooth.BluetoothSocket: void connect()>
<com.android.systemui.qs.QSContainer: void setHeaderClickable(boolean)>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
<com.android.systemui.analytics.SensorLoggerSession: void addMotionEvent(android.view.MotionEvent)>
<android.widget.SlidingDrawer.OnDrawerCloseListener: void onDrawerClosed()>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.content.RestrictionEntry: android.content.RestrictionEntry[] getRestrictions()>
<android.content.ContentProviderProxy: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
<com.android.documentsui.DirectoryLoader: void onReset()>
<android.text.LoginFilter.PasswordFilterGMail: boolean isAllowed(char)>
<com.android.server.am.UnsupportedDisplaySizeDialog: java.lang.String getPackageName()>
<android.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<com.android.systemui.statusbar.phone.QSTileHost: void removeCallback(android.os.Handler.Callback)>
<com.android.documentsui.model.DocumentStack: void read(java.io.DataInputStream)>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>
<android.service.carrier.CarrierIdentifier: java.lang.String getSpn()>
<javax.microedition.khronos.opengles.GL10: void glLineWidth(float)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable applyTintAttr(android.content.Context,int,int)>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>
<com.google.android.gles_jni.GLImpl: void glMaterialf(int,int,float)>
<com.android.hotspot2.IMSIParameter: int prefixLength()>
<com.android.server.pm.Installer: void idmap(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.NotificationGuts: int getActualHeight()>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>
<android.transition.TransitionUtils.MatrixEvaluator: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>
<android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(android.renderscript.RenderScript)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureFailed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newInsert(android.net.Uri)>
<com.android.systemui.statusbar.policy.SecurityController: void addCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: byte[] getData()>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onFinishedGoingToSleep(int,boolean)>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>
<android.hardware.camera2.CameraCharacteristics.Key: java.lang.String toString()>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>
<com.android.systemui.statusbar.phone.StatusBarIconList: void dump(java.io.PrintWriter)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.app.ActivityGroup: void onResume()>
<android.provider.VoicemailContract.Status: android.net.Uri buildSourceUri(java.lang.String)>
<android.telephony.NeighboringCellInfo: void <init>()>
<com.android.server.am.BatteryStatsService: void noteWifiState(int,java.lang.String)>
<android.speech.RecognitionService.Callback: void partialResults(android.os.Bundle)>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.ICancellationSignal createCancellationSignal()>
<com.android.systemui.tuner.TunerFragment.TunerWarningFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.view.ActionMode: boolean getTitleOptionalHint()>
<com.android.egg.neko.Cat: float frandrange(java.util.Random,float,float)>
<android.service.carrier.CarrierIdentifier: void writeToParcel(android.os.Parcel,int)>
<android.ddm.DdmHandleExit: void disconnected()>
<android.inputmethodservice.InputMethodService: void onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<com.android.documentsui.LauncherActivity: void onCreate(android.os.Bundle)>
<android.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)>
<com.android.systemui.qs.tiles.LocationTile: int getMetricsCategory()>
<com.android.systemui.qs.QSContainer: com.android.systemui.qs.customize.QSCustomizer getCustomizer()>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>
<android.widget.CalendarView: int getFirstDayOfWeek()>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.renderscript.Matrix3f: void loadRotate(float,float,float,float)>
<android.app.Dialog: void setContentView(android.view.View)>
<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>
<android.content.IntentSender: int getCreatorUid()>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>
<com.android.server.policy.PhoneWindowManager: void selectRotationAnimationLw(int[])>
<com.android.systemui.statusbar.ScrimView: void setScrimColor(int)>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setTrackingHeadsUp(boolean)>
<android.util.MonthDisplayHelper: int getYear()>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<android.app.TabActivity: void setDefaultTab(int)>
<android.location.GnssClock: double getDriftNanosPerSecond()>
<com.android.systemui.tv.pip.PipOverlayActivity: void onPipResizeAboutToStart()>
<android.location.Address: void setFeatureName(java.lang.String)>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>
<android.widget.TableLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>
<com.android.systemui.recents.views.RecentsView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean swipeLeft(int)>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>
<com.android.systemui.statusbar.stack.StackStateAnimator: java.lang.Object getChildTag(android.view.View,int)>
<android.app.ActivityManagerProxy: void updatePersistentConfiguration(android.content.res.Configuration)>
<com.android.server.net.NetworkPinner: void pin(android.content.Context,android.net.NetworkRequest)>
<android.telecom.Connection.VideoProvider: void onRequestConnectionDataUsage()>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>
<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>
<android.telephony.CellInfoCdma: java.lang.String toString()>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void <init>(android.content.Context,int,com.android.printservice.recommendation.plugin.hp.VendorInfo,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: org.xmlpull.v1.XmlPullParser getParser()>
<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<android.service.notification.StatusBarNotification: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<android.media.session.MediaController.PlaybackInfo: int getVolumeControl()>
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.systemui.classifier.FalsingManager: void dump(java.io.PrintWriter)>
<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper getActionBarWrapper(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.ActionBarCallback,android.view.View)>
<android.media.AudioTrack: int getState()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,int[],int)>
<com.android.systemui.qs.QuickQSPanel: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebView: java.lang.String getTitle()>
<android.opengl.GLES10: void glShadeModel(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void hide(boolean)>
<android.widget.GridView: int getColumnWidth()>
<android.hardware.camera2.legacy.CameraDeviceState: void setRepeatingRequestError(long)>
<com.android.systemui.usb.UsbPermissionActivity: void onClick(android.content.DialogInterface,int)>
<android.text.method.TimeKeyListener: int getInputType()>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.server.wm.KeyguardDisableHandler: void <init>(android.content.Context,android.view.WindowManagerPolicy)>
<android.view.TextureView: android.view.TextureView.SurfaceTextureListener getSurfaceTextureListener()>
<com.android.server.LockSettingsService.CredentialUtil: java.lang.String adjustForKeystore(java.lang.String)>
<android.webkit.ServiceWorkerWebSettings: void setBlockNetworkLoads(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getMaxConnectionState()>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<com.android.settingslib.wifi.WifiTracker: boolean isConnected()>
<android.media.tv.TvRecordingClient: void startRecording(android.net.Uri)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>
<android.content.RestrictionEntry: void setSelectedString(java.lang.String)>
<android.net.wifi.WifiInfo: java.lang.String toString()>
<android.content.SyncStatusObserver: void onStatusChanged(int)>
<com.android.systemui.SystemUISecondaryUserService: void onCreate()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>
<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>
<android.content.MutableContextWrapper: void <init>(android.content.Context)>
<android.text.style.RelativeSizeSpan: float getSizeChange()>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>
<com.android.server.pm.PackageManagerService: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>
<com.android.mtp.MtpDocumentsProvider: void deleteDocument(java.lang.String)>
<com.android.server.am.ActivityManagerService: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollRange()>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setTrackingHeadsUp(boolean)>
<com.android.vpndialogs.ManageDialog: void onDestroy()>
<com.android.server.job.JobStore: boolean add(com.android.server.job.controllers.JobStatus)>
<android.content.Context: java.lang.String[] fileList()>
<android.view.ShadowPainter: java.awt.image.BufferedImage createDropShadow(java.awt.image.BufferedImage,int,float,int)>
<android.app.FragmentController: android.app.LoaderManager getLoaderManager()>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>
<com.android.systemui.qs.tiles.WorkModeTile: void onManagedProfileChanged()>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>
<android.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.os.Bundle: void putFloat(java.lang.String,float)>
<android.view.ActionProvider: void refreshVisibility()>
<com.android.server.am.ActivityManagerService: void registerUserSwitchObserver(android.app.IUserSwitchObserver,java.lang.String)>
<android.media.RemoteControlClient: void setTransportControlFlags(int)>
<android.app.WallpaperManager: int setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)>
<com.android.server.location.LocationBlacklist: void onChange(boolean)>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.text.GetChars: void getChars(int,int,char[],int)>
<android.text.BoringLayout: int getEllipsisCount(int)>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.transition.Slide: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.tv.animations.DismissAnimationsHolder: void startExitAnimation()>
<android.widget.BaseAdapter: boolean hasStableIds()>
<android.widget.Scroller: int getCurrY()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.widget.RelativeLayout: void setVerticalGravity(int)>
<com.android.systemui.classifier.EndPointLengthEvaluator: float evaluate(float)>
<com.android.server.statusbar.StatusBarManagerInternal: void showScreenPinningRequest(int)>
<android.hardware.camera2.params.BlackLevelPattern: int hashCode()>
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>
<com.android.server.am.BatteryStatsService: void noteLongPartialWakelockStart(java.lang.String,java.lang.String,int)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: android.os.IBinder getBinder()>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri)>
<android.widget.DatePicker: boolean isEnabled()>
<com.android.systemui.statusbar.phone.LockIcon: void setAccessibilityController(com.android.systemui.statusbar.policy.AccessibilityController)>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>
<com.android.server.display.DisplayManagerService: void onBootPhase(int)>
<android.speech.tts.TextToSpeechService: void onCreate()>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiScanStartedFromSource(android.os.WorkSource)>
<android.transition.Fade: void captureStartValues(android.transition.TransitionValues)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.app.Notification,boolean)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getNamespacePrefix(int)>
<android.renderscript.ScriptIntrinsicBLAS: void STRMM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.os.Debug: int getLoadedClassCount()>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>
<com.android.systemui.statusbar.ScrimView: int getScrimColor()>
<android.view.View: int getImportantForAccessibility()>
<com.android.systemui.tv.pip.PipManager: void addMediaListener(com.android.systemui.tv.pip.PipManager.MediaListener)>
<com.android.systemui.recents.RecentsActivity: void onAttachedToWindow()>
<android.text.style.TtsSpan.VerbatimBuilder: void <init>()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<android.widget.ArrayAdapter: void add(java.lang.Object)>
<android.view.WindowInsets: boolean hasInsets()>
<android.widget.ListView: void setSelectionAfterHeaderView()>
<com.android.systemui.statusbar.notification.TransformState: int[] getLocationOnScreen()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardOccluded(boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void updateNotification(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>
<android.app.Notification.WearableExtender: int getCustomContentHeight()>
<android.transition.Slide.CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View,float)>
<com.android.systemui.statusbar.stack.AmbientState: void onDragFinished(android.view.View)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setKeywords(java.lang.String)>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>
<android.app.Service: void stopForeground(int)>
<com.android.settingslib.net.SummaryForAllUidLoader: void onStopLoading()>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>
<com.android.server.policy.PhoneWindowManager: int selectAnimationLw(android.view.WindowManagerPolicy.WindowState,int)>
<android.net.wifi.WifiManager: boolean reconnect()>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>
<android.filterpacks.videosrc.SurfaceTextureSource.SurfaceTextureSourceListener: void onSurfaceTextureSourceReady(android.graphics.SurfaceTexture)>
<com.android.server.InputMethodManagerService: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<com.android.server.am.BatteryStatsService: void noteJobStart(java.lang.String,int)>
<android.mtp.MtpObjectInfo: int getProtectionStatus()>
<android.media.MediaRouterClientState.RouteInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.model.FilteredTaskList: java.util.ArrayList getTasks()>
<com.android.documentsui.model.RootInfo: boolean isUsb()>
<android.widget.ActionMenuView: boolean hideOverflowMenu()>
<android.nfc.NdefRecord: java.lang.String toString()>
<android.speech.tts.TextToSpeech.EngineInfo: java.lang.String toString()>
<android.os.Debug: int getGlobalAllocCount()>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>
<com.google.android.collect.Maps: android.util.ArrayMap newArrayMap()>
<android.service.carrier.CarrierMessagingService: void onSendDataSms(byte[],int,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<android.graphics.Matrix: boolean preRotate(float)>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setLimit(int)>
<android.app.usage.UsageStats: void add(android.app.usage.UsageStats)>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.widget.CheckedTextView: boolean isChecked()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getEncryptionPaddings()>
<android.service.notification.NotificationListenerService: void requestInterruptionFilter(int)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putString(int,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void prepareToReplaceWindows(android.os.IBinder,boolean)>
<com.android.documentsui.FilesJankPerfTest: void openRoot()>
<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.Debug.InstructionCount: boolean collect()>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.tv.pip.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.BaseMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.content.SyncAdapterType: boolean equals(java.lang.Object)>
<com.android.server.policy.StatusBarController: android.view.WindowManagerInternal.AppTransitionListener getAppTransitionListener()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void addStateChangedCallback(android.os.Handler.Callback)>
<com.android.systemui.recents.misc.SystemServicesProxy: void moveTaskToStack(int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,float)>
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>
<android.content.UriPermission: long getPersistedTime()>
<android.nfc.NdefRecord: boolean equals(java.lang.Object)>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>
<android.content.ContextWrapper: boolean deleteSharedPreferences(java.lang.String)>
<android.speech.SpeechRecognizer: void cancel()>
<com.android.printspooler.widget.PrintContentView: void setOptionsStateChangeListener(com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
<com.android.systemui.tv.pip.PipOverlayActivity: void onPipEntered()>
<com.android.systemui.recents.views.TaskStackView: void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack)>
<android.app.Fragment: java.lang.String toString()>
<android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<com.android.server.HardwarePropertiesManagerService: float[] getFanSpeeds(java.lang.String)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onCaptureStarted(android.hardware.camera2.legacy.RequestHolder,long)>
<com.android.commands.svc.WifiCommand: java.lang.String shortHelp()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitAll()>
<com.android.systemui.analytics.DataCollector: void onNotificatonStopDraggingDown()>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>
<android.bluetooth.BluetoothHealthAppConfiguration: int hashCode()>
<com.android.hotspot2.IMSIParameter: boolean matchesMccMnc(java.lang.String)>
<com.android.hotspot2.pps.HomeSP: boolean deepEquals(com.android.hotspot2.pps.HomeSP)>
<android.media.MediaRouter.RouteGroup: int getRouteCount()>
<android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<android.graphics.Path: void lineTo(float,float)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: void jumpToSegment(float)>
<android.hardware.camera2.utils.ListUtils: java.lang.Object listSelectFirstFrom(java.util.List,java.lang.Object[])>
<android.widget.ListPopupWindow: int getWidth()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.view.Window: void setDecorCaptionShade(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
<android.transition.Transition: void captureStartValues(android.transition.TransitionValues)>
<com.android.systemui.tv.pip.PipManager.MediaListener: void onMediaControllerChanged()>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<com.android.server.net.LockdownVpnTracker: void onNetworkInfoChanged()>
<android.inputmethodservice.InputMethodService: void onBindInput()>
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.util.List getInfo()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setQsExpanded(boolean)>
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>
<com.android.wallpapercropper.CropView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setNormal(float,float,float)>
<android.provider.ContactsContract.Contacts: boolean isEnterpriseContactId(long)>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String[] getMessages()>
<com.android.server.notification.ZenModeHelper: void recordCaller(com.android.server.notification.NotificationRecord)>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>
<android.widget.PopupWindow: boolean isOutsideTouchable()>
<android.service.notification.ZenModeConfig.ZenRule: void <init>(android.os.Parcel)>
<android.app.ActionBar.TabListener: void onTabReselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<com.android.keyguard.PasswordTextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.session.MediaController.TransportControls: void play()>
<android.app.RemoteInput: boolean getAllowFreeFormInput()>
<android.widget.TextView: void setMinWidth(int)>
<com.example.android.networkusage.NetworkActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.recents.tv.views.RecentsTvView: void showEmptyView()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSubtract()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void reevaluateStatusBarVisibility()>
<android.nfc.tech.Ndef: int getMaxSize()>
<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.ddm.DdmHandleAppName: void register()>
<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>
<com.android.systemui.power.PowerNotificationWarnings: void dismissTemperatureWarning()>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>
<com.android.systemui.SwipeHelper.Callback: boolean canChildBeDismissed(android.view.View)>
<com.android.printspooler.ui.PrintProgressFragment: com.android.printspooler.ui.PrintProgressFragment newInstance()>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void dismissPopups(int,int,boolean,boolean)>
<com.android.systemui.recents.views.TaskStackView: boolean setFocusedTask(int,boolean,boolean)>
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>
<com.android.systemui.doze.DozeLog: void tracePickupPulse(android.content.Context,boolean)>
<android.widget.PopupWindow: void <init>(android.view.View)>
<com.android.hotspot2.omadm.MultiValueMap: void put(java.lang.String,java.lang.Object)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>
<android.os.PatternMatcher: boolean match(java.lang.String)>
<android.service.dreams.DreamService: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.inputmethodservice.InputMethodService: boolean enableHardwareAcceleration()>
<android.os.Looper: android.os.Looper myLooper()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.String)>
<android.net.wifi.WpsInfo: void <init>()>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.server.MmsServiceBroker: void <init>(android.content.Context)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void closeDrawer()>
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()>
<android.service.voice.VoiceInteractionSession: void onHandleAssist(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent)>
<android.telecom.Conference: void onExtrasChanged(android.os.Bundle)>
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: int getMode()>
<android.view.View.DragShadowBuilder: void <init>(android.view.View)>
<android.view.View: void setOnScrollChangeListener(android.view.View.OnScrollChangeListener)>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>
<android.service.notification.NotificationListenerService.RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService.Ranking)>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<android.graphics.drawable.RippleDrawable: void setPaddingMode(int)>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getSharedPreferencesKey()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(java.lang.CharSequence)>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setDay(int)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardShowingOrOccluded()>
<android.media.AudioRecord: void stop()>
<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>
<com.android.documentsui.dirlist.DocumentHolder.EventListener: boolean onSelect(com.android.documentsui.dirlist.DocumentHolder)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: boolean hasView(int)>
<android.widget.HeaderViewListAdapter: boolean isEmpty()>
<com.android.systemui.qs.TileLayout: void <init>(android.content.Context)>
<com.android.systemui.usb.UsbConfirmActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.systemui.keyguard.KeyguardViewMediator: void start()>
<com.android.systemui.statusbar.NotificationData: boolean isAmbient(java.lang.String)>
<android.widget.TimePicker: java.lang.Integer getCurrentHour()>
<com.android.documentsui.BaseActivity: android.net.Uri getDefaultRoot()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void rotate(float,float,float,float)>
<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>
<com.android.server.fingerprint.ClientMonitor: android.content.Context getContext()>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.view.View: boolean isContextClickable()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getDataUsageInfo(android.net.NetworkTemplate)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>
<android.os.IPowerManager: boolean isWakeLockLevelSupported(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: android.view.View getContentView()>
<android.os.Debug: int getThreadExternalAllocCount()>
<com.android.systemui.statusbar.ActivatableNotificationView: float getShadowAlpha()>
<com.android.server.am.CompatModePackages: boolean getPackageNotifyUnsupportedZoomLocked(java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.preference.PreferenceActivity: void onContentChanged()>
<android.hardware.camera2.CameraCharacteristics.Key: java.lang.String getName()>
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.widget.CalendarView.CalendarViewDelegate: void setFirstDayOfWeek(int)>
<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>
<android.graphics.Picture: void <init>()>
<android.content.pm.PackageParser.ProviderIntentInfo: java.lang.String toString()>
<android.media.AudioSystem.DynamicPolicyCallback: void onDynamicPolicyMixStateUpdate(java.lang.String,int)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void <init>(int,android.view.View)>
<com.android.systemui.statusbar.CommandQueue: void showAssistDisclosure()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>
<com.android.systemui.statusbar.phone.IconMerger: void onLayout(boolean,int,int,int,int)>
<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.InputStream,java.util.Set,com.android.resources.Density)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>
<android.graphics.Picture: int getWidth()>
<android.app.ActionBar.Tab: java.lang.CharSequence getContentDescription()>
<com.android.server.pm.UserRestrictionsUtils: void sortToGlobalAndLocal(android.os.Bundle,android.os.Bundle,android.os.Bundle)>
<android.animation.Keyframe: boolean hasValue()>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.impl.GcSnapshot: boolean clip(java.awt.Shape,int)>
<android.graphics.PathMeasure: float getLength()>
<android.app.AppOpsManager: void stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)>
<android.mtp.MtpDevice: long getStorageId(int)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.media.session.MediaController.TransportControls: void prepareFromSearch(java.lang.String,android.os.Bundle)>
<android.media.projection.MediaProjection: void unregisterCallback(android.media.projection.MediaProjection.Callback)>
<com.android.server.job.JobStore: com.android.server.job.JobStore initAndGetForTesting(android.content.Context,java.io.File)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<android.content.Context: java.io.File[] getObbDirs()>
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.telephony.TelephonyManager: int getDataNetworkType()>
<android.view.ActionMode: android.view.Menu getMenu()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getCategoryAt(int)>
<android.app.job.JobParameters: java.lang.String[] getTriggeredContentAuthorities()>
<android.opengl.GLES32: java.lang.String[] glGetDebugMessageLog(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.service.textservice.SpellCheckerService.Session: android.os.Bundle getBundle()>
<android.nfc.NdefMessage: void <init>(byte[])>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onBluetoothStateChanged(int)>
<android.net.LinkProperties: java.lang.String getDomains()>
<android.os.Debug: void resetThreadAllocSize()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void disconnect()>
<android.app.NotificationManager: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule)>
<com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent: void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.DropTarget)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer: void dataSetChanged()>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<com.android.settingslib.bluetooth.MapProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.wallpapercropper.CropView.TouchCallback: void onTap()>
<android.graphics.Paint: boolean isDither()>
<com.android.commands.svc.Svc.Command: java.lang.String name()>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>
<android.telecom.Call.Details: java.lang.String toString()>
<android.media.SoundPool: void autoPause()>
<com.android.egg.neko.NekoLand: void onPrefsChanged()>
<android.opengl.GLES32: void glFramebufferTexture(int,int,int,int)>
<android.view.animation.LayoutAnimationController: void setDelay(float)>
<com.android.systemui.qs.QSContainer: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageListChanged()>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>
<com.android.server.AppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setRGBtoYUV()>
<android.text.style.TtsSpan: int describeContents()>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)>
<com.android.documentsui.dirlist.MultiSelectManager.Callback: void onItemStateChanged(java.lang.String,boolean)>
<android.graphics.Paint: int getOffsetForAdvance(java.lang.CharSequence,int,int,int,int,boolean,float)>
<android.widget.AdapterViewFlipper: void onWindowVisibilityChanged(int)>
<android.gesture.GestureLibrary: void <init>()>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void setVisible(boolean)>
<com.android.anqp.OSUProvider: void <init>(java.lang.String,java.nio.ByteBuffer)>
<com.android.server.input.InputManagerService: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>
<com.android.systemui.SwipeHelper: android.animation.Animator getViewTranslationAnimator(android.view.View,float,android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<javax.microedition.khronos.opengles.GL10: void glMaterialf(int,int,float)>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String)>
<android.nfc.tech.NfcBarcode: int getType()>
<android.media.AudioMixPort: android.media.AudioMixPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>
<android.telecom.ConnectionService: java.util.Collection getAllConnections()>
<com.android.location.provider.GmsFusedBatchOptions: void setSmallestDisplacementMeters(float)>
<com.google.android.gles_jni.GLImpl: void glLightx(int,int,int)>
<android.content.pm.PackageItemInfo: void <init>()>
<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<com.android.systemui.tuner.DemoModeFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChangedRaw(boolean)>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>
<com.android.documentsui.model.DocumentInfo: boolean isArchive()>
<android.graphics.drawable.GradientDrawable: void getOutline(android.graphics.Outline)>
<android.database.AbstractCursor: int getCount()>
<com.android.egg.neko.NekoService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.hotspot2.osu.commands.GetCertData: java.lang.String getServer()>
<com.android.shell.BugreportProgressService: int onStartCommand(android.content.Intent,int,int)>
<android.view.View: int getAccessibilityTraversalAfter()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>
<android.view.textservice.SpellCheckerSession: void finalize()>
<android.hardware.Camera.Parameters: int getMaxExposureCompensation()>
<android.view.IWindowManagerImpl: void setForcedDisplayScalingMode(int,int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onCreate(android.os.Bundle)>
<android.view.View: void onRtlPropertiesChanged(int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController)>
<android.app.FragmentController: void dispatchActivityCreated()>
<com.android.layoutlib.bridge.android.BridgeContext: void initResources()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>
<com.android.documentsui.RecentsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: int describeContents()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getObbDirs()>
<com.android.server.PinnerService: void onStart()>
<com.android.server.retaildemo.UserInactivityCountdownDialog.OnCountDownExpiredListener: void onCountDownExpired()>
<com.android.server.notification.NotificationDelegate: void onPanelRevealed(boolean,int)>
<android.webkit.WebViewProvider.ViewDelegate: void onSizeChanged(int,int,int,int)>
<android.graphics.Matrix_Delegate: boolean hasPerspective()>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>
<com.android.uiautomator.core.UiDevice: void waitForIdle()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionPending()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPatch(android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)>
<android.app.MediaRouteActionProvider: boolean onPerformDefaultAction()>
<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<com.android.statementservice.retriever.Relation: java.lang.String getKind()>
<com.android.server.location.LocationRequestStatistics: void stopRequesting(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleLongClick()>
<org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>
<com.android.systemui.volume.VolumeDialogComponent: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.AppOpsService: void uidRemoved(int)>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>
<android.media.midi.MidiDeviceInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener.Capitalize,java.lang.CharSequence,int)>
<com.android.hotspot2.osu.XMLParser: void characters(char[],int,int)>
<android.os.BinderProxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.am.ActivityManagerService: void showSafeModeOverlay()>
<android.telecom.RemoteConnection.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConnection,java.util.List)>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidths()>
<android.content.AsyncTaskLoader: void cancelLoadInBackground()>
<com.android.systemui.tuner.ClockPreference: boolean persistString(java.lang.String)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getConfigName()>
<com.android.systemui.statusbar.phone.LockIcon: void update()>
<com.android.systemui.stackdivider.DividerHandleView: void setTouching(boolean,boolean)>
<android.hardware.radio.RadioMetadata.Builder: android.hardware.radio.RadioMetadata.Builder putClock(java.lang.String,long,int)>
<com.android.server.retaildemo.RetailDemoModeService: void onBootPhase(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedGoingToSleep(int)>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.ScriptIntrinsicHistogram create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.content.pm.PackageParser.Package: java.util.List getAllCodePathsExcludingResourceOnly()>
<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.statusbar.StackScrollerDecorView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.ProcessStatsService: boolean isMemFactorLowered()>
<com.android.documentsui.DocumentClipper: boolean hasItemsToPaste()>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>
<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>
<com.android.server.ServiceWatcher: void switchUser(int)>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>
<android.app.FragmentManagerImpl: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
<com.android.server.am.ActivityManagerService: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>
<android.drm.ProcessedData: byte[] getData()>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>
<com.android.uiautomator.core.UiObject: boolean longClick()>
<android.view.ViewGroup: void dispatchDisplayHint(int)>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<android.view.Window: void onActive()>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onClick(android.content.DialogInterface,int)>
<com.google.android.util.AbstractMessageParser.Token: boolean isMedia()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.drawer.DashboardCategory: void readFromParcel(android.os.Parcel)>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>
<com.android.hotspot2.osu.OSUSocketFactory: com.android.hotspot2.osu.OSUSocketFactory getSocketFactory(java.security.KeyStore,com.android.hotspot2.pps.HomeSP,int,android.net.Network,java.net.URL,javax.net.ssl.KeyManager,boolean)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClick(java.lang.String)>
<android.provider.Settings.System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.systemui.recents.misc.Utilities: int getColorWithOverlay(int,int,float)>
<android.telephony.CellInfoWcdma: android.telephony.CellSignalStrengthWcdma getCellSignalStrength()>
<com.android.nfc_extras.EeExternalFieldException: void <init>(java.lang.String)>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingTextInCodePoints(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int getScrollYPos(android.view.View)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setSampleRate(int)>
<android.widget.Toast: void setText(java.lang.CharSequence)>
<android.view.BridgeInflater: void onDoneInflation()>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(int[],int)>
<android.media.midi.MidiReceiver: void send(byte[],int,int,long)>
<android.media.MediaCodec: void flush()>
<android.renderscript.FieldPacker: android.renderscript.Int4 subInt4()>
<android.graphics.Canvas: int getHeight()>
<android.view.KeyEvent: int getMaxKeyCode()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<android.os.Parcel: void writeString(java.lang.String)>
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.widget.SearchView: int getInputType()>
<com.android.server.notification.ScheduleConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onConfigurationChanged()>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence)>
<com.android.server.job.StateChangedListener: void onDeviceIdleStateChanged(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchCamera(java.lang.String)>
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView.OnCloseListener)>
<com.google.android.util.AbstractMessageParser.Acronym: boolean isHtml()>
<android.gesture.Gesture: int describeContents()>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>
<android.renderscript.ScriptIntrinsicLUT: void setGreen(int,int)>
<android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
<android.webkit.WebView: void invokeZoomPicker()>
<android.service.notification.NotificationListenerService: void setNotificationsShown(java.lang.String[])>
<android.telephony.PhoneNumberUtils: void addTtsSpan(android.text.Spannable,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: java.util.List getNotificationChildren()>
<android.os.BatteryStats.Uid.Pkg: android.util.ArrayMap getWakeupAlarmStats()>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onAccessPointsChanged()>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.systemui.egg.MLandActivity: void onResume()>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.content.pm.LauncherApps.Callback: void onPackagesAvailable(java.lang.String[],android.os.UserHandle,boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>
<com.android.keyguard.KeyguardPatternView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(java.nio.IntBuffer)>
<android.telecom.CallAudioState: void <init>(boolean,int,int)>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
<android.widget.TabWidget: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.stack.NotificationChildrenContainer getChildrenContainer()>
<android.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.Class[] getInjectedClasses()>
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getDrawable()>
<android.view.InputEventReceiver.Factory: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>
<com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>
<com.android.server.fingerprint.EnumerateClient: int stop(boolean)>
<android.media.JetPlayer: int getMaxTracks()>
<android.widget.Toolbar.LayoutParams: void <init>(android.widget.Toolbar.LayoutParams)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothEnabled()>
<android.provider.Settings.Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.server.notification.ManagedServices: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void disable(int,int,boolean)>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.view.View: void invalidateOutline()>
<android.hardware.Camera.PictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getCurrentUser()>
<android.telecom.RemoteConnection: void disconnect()>
<android.media.AudioRecord: void addOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener,android.os.Handler)>
<com.android.documentsui.RecentsLoader: void onReset()>
<com.android.hotspot2.omadm.XMLNode: java.lang.String getAttributeValue(java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: void forceScan()>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri)>
<com.android.systemui.qs.QSTileBaseView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>
<android.hardware.usb.UsbDevice: int getVendorId()>
<com.android.server.NetworkManagementSocketTagger: void setKernelCounterSet(int,int)>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>
<com.android.gallery3d.glrenderer.UploadedTexture: android.graphics.Bitmap onGetBitmap()>
<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.hardware.camera2.marshal.Marshaler: int getNativeType()>
<android.app.Activity: void stopLockTask()>
<android.widget.HorizontalScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.List getSystemViewInfos()>
<com.android.systemui.recents.Recents: void cancelPreloadingRecents()>
<com.android.systemui.qs.tiles.BluetoothTile: int getMetricsCategory()>
<com.android.keyguard.KeyguardPasswordView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.accessibility.MotionEventInjector: void clearEvents(int)>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: int describeContents()>
<android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFaceUnlockStateChanged(boolean,int)>
<android.text.style.SubscriptSpan: int getSpanTypeId()>
<android.media.PlaybackParams: android.media.PlaybackParams setPitch(float)>
<com.android.documentsui.FilteringCursorWrapper: double getDouble(int)>
<android.preference.Preference: int compareTo(android.preference.Preference)>
<android.media.audiofx.Virtualizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Virtualizer,int,int,short)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchUp()>
<com.android.server.wallpaper.WallpaperManagerService: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>
<android.media.MediaCodec: android.view.Surface createInputSurface()>
<com.android.systemui.SwipeHelper.Callback: boolean updateSwipeProgress(android.view.View,boolean,float)>
<android.graphics.drawable.AnimatedStateListDrawable: void addState(int[],android.graphics.drawable.Drawable,int)>
<android.widget.TextView: void computeScroll()>
<com.android.systemui.statusbar.stack.AmbientState: float getTopPadding()>
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>
<com.android.anqp.eap.InnerAuthEAP: void <init>(com.android.anqp.eap.EAP.EAPMethodID)>
<com.android.server.am.ActivityManagerService: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>
<android.app.ActivityManagerProxy: void clearGrantedUriPermissions(java.lang.String,int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long[])>
<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityForConsumptionEnd(java.util.Date)>
<com.android.settingslib.drawer.DashboardCategory: void removeTile(int)>
<android.content.pm.PackageInstaller.SessionInfo: boolean isActive()>
<android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)>
<android.widget.ViewSwitcher: android.view.View getNextView()>
<android.transition.Transition: void <init>()>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>
<android.app.Dialog: void invalidateOptionsMenu()>
<android.hardware.radio.RadioManager.AmBandDescriptor: boolean equals(java.lang.Object)>
<android.view.View: void setForegroundTintList(android.content.res.ColorStateList)>
<com.android.egg.neko.PrefState: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context)>
<android.util.Spline.MonotoneCubicSpline: float interpolate(float)>
<android.widget.PopupMenu.OnDismissListener: void onDismiss(android.widget.PopupMenu)>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>
<com.android.preload.actions.ClearTableAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)>
<android.security.keystore.KeyGenParameterSpec: int getUserAuthenticationValidityDurationSeconds()>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)>
<android.renderscript.Matrix4f: void loadScale(float,float,float)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)>
<com.android.server.am.BatteryStatsService: void noteStartVideo(int)>
<com.android.server.pm.PackageManagerService: void dumpProfiles(java.lang.String)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.inputdevices.InputDeviceReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.app.FragmentManagerImpl: void dispatchStop()>
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>
<com.android.server.usb.UsbAlsaManager: void logDevices(java.lang.String)>
<com.android.documentsui.RootsLoader: void onReset()>
<android.widget.ShareActionProvider: void <init>(android.content.Context)>
<com.android.server.pm.UserManagerService.LifeCycle: void onBootPhase(int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.media.tv.TvView: boolean gatherTransparentRegion(android.graphics.Region)>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,float[],int)>
<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>
<com.android.fakeoemfeatures.FakeBackgroundService: void onDestroy()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setLightsOn(boolean)>
<com.android.printspooler.renderer.IPdfEditor: void closeDocument()>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>
<com.android.systemui.tv.pip.PipUI: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureSupported(java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector cloneSelector()>
<android.view.animation.Transformation: float getAlpha()>
<android.media.SoundPool: void pause(int)>
<javax.microedition.khronos.opengles.GL11: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isCameraAllowedByAdmin()>
<android.view.animation.AnimationSet: long getDuration()>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>
<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.pps.HomeSP addSP(com.android.hotspot2.omadm.MOTree,com.android.hotspot2.osu.OSUManager)>
<android.text.method.DigitsKeyListener: int getInputType()>
<com.android.systemui.recents.model.FilteredTaskList: boolean remove(com.android.systemui.recents.model.Task)>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
<com.android.anqp.eap.VendorSpecificAuth: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDropBox()>
<android.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)>
<com.android.settingslib.accessibility.AccessibilityUtils: java.lang.CharSequence getTextForLocale(android.content.Context,java.util.Locale,int)>
<android.renderscript.FieldPacker: android.renderscript.Byte2 subByte2()>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>
<android.widget.DayPickerView.OnDaySelectedListener: void onDaySelected(android.widget.DayPickerView,android.icu.util.Calendar)>
<android.media.ExifInterface: void <init>(java.io.InputStream)>
<android.util.FloatMath: float sqrt(float)>
<com.google.android.gles_jni.GLImpl: java.lang.String _glGetString(int)>
<com.android.systemui.statusbar.NotificationGuts: boolean hasOverlappingRendering()>
<android.os.Debug: int getBinderLocalObjectCount()>
<com.android.server.pm.Installer: void dexopt(java.lang.String,int,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,android.hardware.camera2.CameraDevice.StateCallback,android.os.Handler)>
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>
<com.android.layoutlib.bridge.impl.DelegateManager: java.lang.Object getDelegate(long)>
<android.graphics.drawable.DrawableWrapper: void <init>(android.graphics.drawable.Drawable)>
<android.view.Display: boolean isValid()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setEmptyShadeView(com.android.systemui.statusbar.EmptyShadeView)>
<android.telecom.Conference: void setConferenceableConnections(java.util.List)>
<com.android.commands.pm.Pm: int runMovePackage()>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<android.view.Window: void setContentView(int)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<com.android.systemui.doze.DozeLog: void traceFling(boolean,boolean,boolean,boolean)>
<android.app.ActionBar.Tab: void select()>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>
<com.android.systemui.qs.QSTile.Host: void animateToggleQSExpansion()>
<android.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.widget.Switch: void setTrackTintMode(android.graphics.PorterDuff.Mode)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<android.bluetooth.le.ScanFilter: boolean equals(java.lang.Object)>
<android.view.ViewGroup.MarginLayoutParams: void resolveLayoutDirection(int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.HideRecentsEvent)>
<com.android.server.notification.RankingHelper: void <init>(android.content.Context,com.android.server.notification.RankingHandler,com.android.server.notification.NotificationUsageStats,java.lang.String[])>
<android.text.style.BulletSpan: int getSpanTypeId()>
<com.android.server.am.ActivityManagerService: void notifyLaunchTaskBehindComplete(android.os.IBinder)>
<android.content.Context: java.io.File getDir(java.lang.String,int)>
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)>
<android.preference.Preference: void setTitle(int)>
<android.widget.ShareActionProvider: void setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)>
<android.renderscript.Type: int getY()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addResolution(android.print.PrintAttributes.Resolution,boolean)>
<android.widget.ZoomControls: void show()>
<android.opengl.GLES30: boolean glIsQuery(int)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentsPreviousAffiliatedTask()>
<android.view.View: void setClickable(boolean)>
<android.widget.ProgressBar: int getMax()>
<android.hardware.Camera: void lock()>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,java.lang.Runnable)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: int getName()>
<com.android.server.usb.UsbDebuggingManager: void setAdbEnabled(boolean)>
<android.content.pm.PackageParser.Component: void printComponentShortName(java.io.PrintWriter)>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float,boolean)>
<android.webkit.WebResourceRequest: android.net.Uri getUrl()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withPreDhcpAction()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>
<android.service.dreams.DreamService: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionAmount()>
<android.hardware.usb.UsbEndpoint: java.lang.String toString()>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short3)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.policy.CastController: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.systemui.statusbar.NotificationContentView: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.server.input.InputManagerService: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.server.InputMethodManagerService: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)>
<android.graphics.Point: void <init>()>
<android.widget.TextView: boolean showContextMenu(float,float)>
<com.android.documentsui.RootsLoader: void onStopLoading()>
<android.view.Window: void setVolumeControlStream(int)>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.drawer.DashboardCategory: void addTile(int,com.android.settingslib.drawer.Tile)>
<android.media.midi.MidiDeviceStatus: java.lang.String toString()>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int,int)>
<com.android.server.DropBoxManagerService: void onStart()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskReads()>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>
<com.android.server.notification.ZenModeHelper: long getSuppressedEffects()>
<com.google.android.gles_jni.GLImpl: void glBindTexture(int,int)>
<android.widget.TextView: void cancelLongPress()>
<com.android.systemui.statusbar.phone.PanelView: void requestPanelHeightUpdate()>
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()>
<android.widget.CalendarView.CalendarViewDelegate: void setShowWeekNumber(boolean)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getEnterFadeDuration()>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>
<android.graphics.Path_Delegate: void close()>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>
<android.media.MediaRouter.RouteInfo: java.lang.Object getTag()>
<com.android.documentsui.FilesJankPerfTest: void testOpenRootJankPerformance()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void updateRecentsVisibility(boolean)>
<android.text.format.Time: int getWeekNumber()>
<android.graphics.RectF: boolean contains(float,float)>
<android.service.voice.VoiceInteractionService: android.os.IBinder onBind(android.content.Intent)>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.widget.Toast: void show()>
<android.os.Looper: boolean isCurrentThread()>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.renderscript.ScriptIntrinsicBLAS: void STBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.os.BatteryStats.HistoryItem: boolean isDeltaData()>
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>
<com.android.server.am.ContentProviderConnection: void <init>(com.android.server.am.ContentProviderRecord,com.android.server.am.ProcessRecord)>
<com.android.server.notification.RankingHelper: void setVisibilityOverride(java.lang.String,int,int)>
<android.webkit.WebViewProvider.ScrollDelegate: void computeScroll()>
<android.content.pm.ConfigurationInfo: int describeContents()>
<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.animation.Animator: boolean isStarted()>
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionSelect(int)>
<com.android.smspush.WapPushManager: void <init>()>
<com.android.documentsui.FilteringCursorWrapper: float getFloat(int)>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<com.android.server.content.ContentService.Lifecycle: void onBootPhase(int)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>
<com.android.server.accessibility.MotionEventInjector: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardFadingAway(boolean)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isOccluded()>
<android.webkit.WebViewProvider.ViewDelegate: void preDispatchDraw(android.graphics.Canvas)>
<android.content.CursorLoader: void setSelection(java.lang.String)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onUnlockUser(int)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean isDeviceProvisioned()>
<android.media.ExifInterface: boolean hasThumbnail()>
<android.content.Loader: void onAbandon()>
<android.os.health.TimerStat: void <init>(android.os.Parcel)>
<android.view.BridgeInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>
<com.android.documentsui.StressProvider: boolean onCreate()>
<com.android.systemui.qs.QSTile.State: java.lang.StringBuilder toStringBuilder()>
<com.android.systemui.egg.MLand: boolean onTrackballEvent(android.view.MotionEvent)>
<android.content.res.AssetManager.AssetInputStream: int read()>
<android.telecom.ConnectionService: void onRemoteExistingConnectionAdded(android.telecom.RemoteConnection)>
<android.bluetooth.BluetoothAdapter: boolean enable()>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.media.session.MediaController.TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadPreviewImage(android.content.Context,int)>
<com.android.systemui.recents.tv.animations.DismissAnimationsHolder: void startEnterAnimation()>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,java.lang.Object)>
<android.telecom.Connection: android.telecom.Connection createCanceledConnection()>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>
<android.os.BatteryStats.Uid.Proc: int getNumAnrs(int)>
<android.print.PrintAttributes.Margins: int getBottomMils()>
<android.location.GnssMeasurement: int getConstellationType()>
<android.content.OperationApplicationException: void <init>(java.lang.String)>
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>
<com.android.systemui.statusbar.ActivatableNotificationView: void reset()>
<android.telephony.PhoneStateListener: void <init>()>
<android.content.pm.LauncherActivityInfo: java.lang.String getName()>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>
<android.text.TextUtils.EllipsizeCallback: void ellipsized(int,int)>
<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>
<com.android.server.notification.RankingHelper: void setImportance(java.lang.String,int,int)>
<android.view.MotionEvent: int getActionMasked()>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,float[],int)>
<android.media.AudioManager: boolean isStreamMute(int)>
<com.android.systemui.statusbar.policy.AccessibilityController: void addStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<com.android.keyguard.PasswordTextView: void append(char)>
<android.speech.tts.TextToSpeech: int speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>
<com.android.commands.uiautomator.DumpCommand: void run(java.lang.String[])>
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>
<com.android.server.net.IpConfigStore: void log(java.lang.String)>
<android.telecom.RemoteConnection.VideoProvider: void setDeviceOrientation(int)>
<android.media.AudioAttributes: java.lang.String toString()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: int getCollapsedHeight()>
<com.android.keyguard.KeyguardHostView: boolean dismiss(boolean)>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.inputmethodservice.Keyboard.Row: void <init>(android.inputmethodservice.Keyboard)>
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageIconChanged()>
<android.media.tv.TvInputService.Session: void onTimeShiftSeekTo(long)>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[])>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>
<android.os.IInterface: android.os.IBinder asBinder()>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<android.widget.CheckBox: void <init>(android.content.Context)>
<android.app.backup.BackupAgent: void fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)>
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.IWindowManagerImpl: void freezeRotation(int)>
<com.android.settingslib.wifi.WifiTracker: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setQsExpanded(boolean)>
<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>
<android.media.AudioTrack: int write(short[],int,int)>
<android.appwidget.AppWidgetHost: void onProvidersChanged()>
<com.android.server.notification.ZenModeConditions: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.documentsui.State: void pushDocument(com.android.documentsui.model.DocumentInfo)>
<android.view.IWindowManagerImpl: void setRecentsVisibility(boolean)>
<com.android.systemui.volume.VolumeDialog.Callback: void onZenSettingsClicked()>
<com.android.gallery3d.glrenderer.UploadedTexture: void setIsUploading(boolean)>
<android.media.MediaCrypto: void release()>
<android.speech.RecognitionListener: void onBufferReceived(byte[])>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getCombinedGroupId(long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionPixels()>
<android.app.Notification: android.graphics.drawable.Icon getSmallIcon()>
<android.drm.DrmManagerClient: void <init>(android.content.Context)>
<com.android.server.pm.Installer: void onStart()>
<com.android.systemui.usb.UsbPermissionActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<android.database.CursorWrapper: boolean move(int)>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void sessionConnectionGone(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>
<android.app.Activity: android.app.Activity getParent()>
<android.widget.TimePicker.TimePickerDelegate: boolean is24Hour()>
<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>
<com.android.systemui.tuner.ClockPreference: void onAttached()>
<android.media.audiopolicy.AudioPolicy.AudioPolicyFocusListener: void onAudioFocusLoss(android.media.AudioFocusInfo,boolean)>
<android.text.BoringLayout: int getHeight()>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.KernelID getKernelID_bicubic()>
<com.android.systemui.qs.external.TileLifecycleManager: android.os.IBinder getToken()>
<com.android.systemui.stackdivider.DividerView: void onAttachedToWindow()>
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>
<com.android.systemui.qs.tiles.NightDisplayTile: void onActivated(boolean)>
<android.opengl.EGL14: boolean eglBindAPI(int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void refreshLayout(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void setKeyguard(boolean,boolean)>
<android.widget.AbsListView: int getTranscriptMode()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setKeyguardEnabled(boolean)>
<android.os.Parcel: void readBooleanArray(boolean[])>
<javax.microedition.khronos.opengles.GL10: void glLightx(int,int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void scale(float,float,float)>
<com.android.server.accounts.AccountManagerBackupHelper: byte[] backupAccountAccessPermissions(int)>
<com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler: void onBitmapCropped(byte[])>
<com.android.photos.BitmapRegionTileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.IterateRecentsEvent)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void onFinishInflate()>
<android.app.ActivityManagerProxy: void registerUidObserver(android.app.IUidObserver,int)>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void hide()>
<android.view.ActionProvider: boolean isVisible()>
<android.hardware.radio.RadioManager.AmBandConfig: int describeContents()>
<android.content.AsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForRequestCompleted(android.hardware.camera2.legacy.RequestHolder,long,java.util.concurrent.TimeUnit,android.util.MutableLong)>
<android.hardware.camera2.utils.CloseableLock.ScopedLock: void close()>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)>
<com.android.server.location.LocationFudger: void <init>(android.content.Context,android.os.Handler)>
<android.util.SparseBooleanArray: void clear()>
<com.android.systemui.stackdivider.WindowManagerProxy: int getDockSide()>
<com.android.systemui.keyguard.KeyguardViewMediator: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<android.media.MediaRouter.RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>
<android.mtp.MtpObjectInfo: long getImagePixDepthLong()>
<com.android.server.pm.PersistentPreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PersistentPreferredActivity)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean interceptMediaKey(android.view.KeyEvent)>
<android.os.Parcel: void writeBinderList(java.util.List)>
<com.android.server.LockSettingsStrongAuth: void reportUnlock(int)>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int)>
<android.net.ip.IpManager.Callback: void onPreDhcpAction()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: java.lang.Object getItem(int)>
<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>
<com.android.keyguard.KeyguardPinBasedInputView: java.lang.String getPasswordText()>
<com.android.systemui.tv.pip.PipUI: void start()>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.content.Loader: java.lang.String toString()>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.documentsui.model.DocumentInfo: void updateFromCursor(android.database.Cursor,java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: boolean equals(java.lang.Object)>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>
<android.service.carrier.CarrierMessagingService.SendMmsResult: void <init>(int,byte[])>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>
<android.widget.OverScroller: int getFinalX()>
<android.widget.RatingBar: void onMeasure(int,int)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void notifyViewAddition(android.view.View)>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getEphemeralCookieMaxSizeBytes()>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>
<com.android.systemui.classifier.EndPointRatioClassifier: java.lang.String getTag()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startViewAnimations(android.view.View,com.android.systemui.statusbar.stack.ViewState,long,long)>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>
<android.util.BackupUtils.BadVersionException: void <init>(java.lang.String)>
<android.widget.PopupWindow: void update(int,int)>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<android.net.nsd.NsdServiceInfo: void removeAttribute(java.lang.String)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setUnit(java.lang.String)>
<android.filterpacks.imageproc.SharpenFilter: void process(android.filterfw.core.FilterContext)>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
<android.util.Base64DataException: void <init>(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: int getTypeLabelResource(int)>
<android.webkit.CookieManager: void removeSessionCookies(android.webkit.ValueCallback)>
<com.android.server.pm.PackageManagerService: boolean performDexOpt(java.lang.String,boolean,int,boolean)>
<com.android.hotspot2.osu.OSUInfo: int getOsuID()>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>
<android.app.usage.ConfigurationStats: void <init>(android.app.usage.ConfigurationStats)>
<com.android.gallery3d.exif.Rational: long getDenominator()>
<android.app.Notification.Extender: android.app.Notification.Builder extend(android.app.Notification.Builder)>
<android.content.res.TypedArray: int getType(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<android.net.wifi.p2p.WifiP2pInfo: int describeContents()>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMANode getListValue(java.util.Iterator)>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.bluetooth.BluetoothGattCharacteristic: void setWriteType(int)>
<android.graphics.Outline: boolean canClip()>
<android.location.GnssNmeaListener: void onNmeaReceived(long,java.lang.String)>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>
<com.android.nfc_extras.EeInitializationException: void <init>(java.lang.String)>
<android.widget.Toast: void setText(int)>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String getDefaultUserAgent(android.content.Context)>
<com.android.documentsui.model.DocumentStack: java.lang.String getTitle()>
<android.graphics.Camera: float getLocationZ()>
<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: java.lang.Object createView(android.content.Context)>
<com.android.uiautomator.core.UiDevice: boolean pressBack()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenChanged(int)>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>
<android.app.backup.IFullBackupRestoreObserver: void onStartBackup()>
<android.app.FragmentManagerImpl: int getBackStackEntryCount()>
<com.android.systemui.qs.QSAnimator: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>
<com.android.location.provider.LocationRequestUnbundled: long getFastestInterval()>
<com.android.layoutlib.bridge.MockView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.media.DeniedByServerException: void <init>(java.lang.String)>
<com.android.systemui.doze.DozeService: void onDreamingStopped()>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext.DebugProcKHR glGetDebugMessageCallbackKHR()>
<android.location.GnssClock: long getTimeNanos()>
<com.android.server.usage.UsageStatsXml: void read(android.util.AtomicFile,com.android.server.usage.IntervalStats)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenAvailableChanged(boolean)>
<android.nfc.cardemulation.HostNfcFService: void sendResponsePacket(byte[])>
<com.android.systemui.statusbar.tv.TvStatusBar: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<com.android.server.policy.PolicyControl: void reloadFromSetting(android.content.Context)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings.Config: void <init>(long,long,long)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothDevice getDevice()>
<com.android.systemui.power.PowerUI.WarningsUI: void dump(java.io.PrintWriter)>
<android.security.KeyPairGeneratorSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>
<android.app.Notification.Builder: android.app.Notification.Builder setStyle(android.app.Notification.Style)>
<com.android.hotspot2.osu.OSUManager: java.lang.String notifyUser(com.android.hotspot2.osu.OSUOperationStatus,java.lang.String,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolume(int)>
<android.provider.DocumentsProvider: java.lang.String getType(android.net.Uri)>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>
<android.media.tv.TvInputService.Session: void onTimeShiftPause()>
<android.view.KeyCharacterMap: void finalize()>
<com.android.server.ServiceWatcher: int getBestVersion()>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int,int)>
<android.graphics.RectF: void setEmpty()>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isHideSensitive()>
<android.app.AlarmManager.AlarmClockInfo: long getTriggerTime()>
<android.print.pdf.PrintedPdfDocument: void <init>(android.content.Context,android.print.PrintAttributes)>
<com.android.server.AppOpsService: int noteProxyOperation(int,java.lang.String,int,java.lang.String)>
<com.android.server.pm.UserRestrictionsUtils: boolean isEmpty(android.os.Bundle)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean startActivityFromRecents(android.content.Context,com.android.systemui.recents.model.Task.TaskKey,java.lang.String,android.app.ActivityOptions)>
<android.os.BatteryStats.HistoryItem: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.dirlist.DirectoryFragment: void onDestroyView()>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStop()>
<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void prepare()>
<android.transition.ArcMotion: float getMinimumHorizontalAngle()>
<com.android.systemui.statusbar.CommandQueue: void showScreenPinningRequest(int)>
<android.widget.PopupWindow: int getSoftInputMode()>
<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>
<android.hardware.soundtrigger.SoundTrigger.SoundModel: int hashCode()>
<android.text.style.URLSpan: int getSpanTypeId()>
<com.android.wallpapercropper.CropView: void onScaleEnd(android.view.ScaleGestureDetector)>
<com.android.systemui.classifier.FalsingLog: void w(java.lang.String,java.lang.String)>
<android.preference.SwitchPreference: void setSwitchTextOn(java.lang.CharSequence)>
<android.app.usage.NetworkStats.Bucket: long getStartTimeStamp()>
<com.android.systemui.SwipeHelper: boolean swipedFarEnough()>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>
<com.android.hotspot2.osu.commands.GetCertData: java.lang.String toString()>
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeMyUidSnapshot()>
<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService.Result,android.os.Bundle)>
<com.android.systemui.tv.pip.PipManager: void removeListener(com.android.systemui.tv.pip.PipManager.Listener)>
<com.android.server.backup.Trampoline: void setBackupEnabled(boolean)>
<android.widget.MediaController.MediaPlayerControl: void start()>
<android.widget.Switch: void onDraw(android.graphics.Canvas)>
<android.os.BaseBundle: double getDouble(java.lang.String,double)>
<com.android.hotspot2.asn1.Asn1Object: boolean isIndefiniteLength()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap getPreviewBitmap()>
<com.android.systemui.ExpandHelper: void <init>(android.content.Context,com.android.systemui.ExpandHelper.Callback,int,int)>
<android.widget.Switch: void setTextOn(java.lang.CharSequence)>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context,java.io.File)>
<com.android.server.wallpaper.WallpaperManagerService: void settingsRestored()>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onStop()>
<android.content.ClipData.Item: java.lang.String toString()>
<android.media.soundtrigger.SoundTriggerManager.Model: java.util.UUID getModelUuid()>
<android.util.Rational: short shortValue()>
<android.net.wifi.WifiManager: void setTdlsEnabled(java.net.InetAddress,boolean)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: void convertRequestMetadata(android.hardware.camera2.legacy.LegacyRequest)>
<com.android.settingslib.RestrictedPreference: void setEnabled(boolean)>
<android.text.DynamicLayout: int getLineCount()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfPasswordQualityIsSet(android.content.Context,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean needsInput()>
<com.android.bluetoothmidiservice.PacketEncoder: void writeComplete()>
<com.android.externalstorage.ExternalStorageProvider: boolean onCreate()>
<android.text.style.TtsSpan: android.os.PersistableBundle getArgs()>
<android.view.View: void setTag(int,java.lang.Object)>
<javax.microedition.khronos.opengles.GL11: boolean glIsEnabled(int)>
<android.text.SpannableStringBuilder: void clearSpans()>
<android.webkit.WebViewProvider.ViewDelegate: void onWindowFocusChanged(boolean)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.events.activity.LaunchTaskEvent: void <init>(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.model.Task,android.graphics.Rect,int,boolean)>
<com.android.hotspot2.asn1.Asn1Object: void <init>(int,com.android.hotspot2.asn1.Asn1Class,boolean,int)>
<com.android.server.tv.TvInputManagerService: void onUnlockUser(int)>
<android.media.AudioTrack: int getStreamType()>
<android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getKeyguardBottomStackSize()>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>
<com.android.settingslib.bluetooth.Utils.ErrorListener: void onShowError(android.content.Context,java.lang.String,int)>
<com.android.systemui.recents.misc.Utilities: android.view.ViewStub findViewStubById(android.app.Activity,int)>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>
<com.android.systemui.qs.tiles.NightDisplayTile: void setListening(boolean)>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDMultiply()>
<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>
<com.android.systemui.qs.tiles.BatteryTile: void handleClick()>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.RectF getMaxCropRect(int,int,int,int,boolean)>
<android.hardware.camera2.legacy.RequestHolder.Builder: void <init>(int,int,android.hardware.camera2.CaptureRequest,boolean,java.util.Collection)>
<com.android.settingslib.Utils: java.lang.String formatPercentage(int)>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.util.TypedValue getValue(java.lang.String,java.lang.String,boolean)>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean isRdsSupported()>
<android.telecom.RemoteConference: android.telecom.DisconnectCause getDisconnectCause()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void onFinishInflate()>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaId(java.lang.String)>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<android.hardware.usb.UsbDeviceConnection: void close()>
<android.hardware.Camera.Parameters: java.lang.String getFlashMode()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String securityToString(int,int)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean,long,android.view.animation.Interpolator,java.lang.Runnable)>
<android.media.session.PlaybackState: java.util.List getCustomActions()>
<android.content.res.BridgeTypedArray: float getFloat(int,float)>
<com.android.documentsui.Events: boolean hasShiftBit(int)>
<android.renderscript.ScriptIntrinsicBLAS: void ZGBMV(int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>
<android.os.StatFs: long getFreeBlocksLong()>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getDefaultRoute()>
<com.android.systemui.statusbar.phone.PanelView: boolean isClearAllVisible()>
<com.android.server.policy.ImmersiveModeConfirmation: void loadSetting(int)>
<com.android.tools.layoutlib.create.PromoteFieldClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<com.android.egg.neko.PrefState: java.util.List getCats()>
<com.android.systemui.egg.MLand: void removePlayer()>
<android.opengl.GLES10: void glClear(int)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void onTransition(int,int,boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: void sendCloseSystemWindows(java.lang.String)>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<android.view.KeyEvent: int normalizeMetaState(int)>
<android.text.method.BaseMovementMethod: boolean canSelectArbitrarily()>
<com.android.systemui.tuner.BatteryPreference: void onDetached()>
<android.text.SpannableString: void removeSpan(java.lang.Object)>
<android.os.Binder: android.os.UserHandle getCallingUserHandle()>
<android.provider.Settings.Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>
<android.view.LayoutInflater_Delegate: void parseInclude(android.view.LayoutInflater,org.xmlpull.v1.XmlPullParser,android.content.Context,android.view.View,android.util.AttributeSet)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context getBaseContext(android.content.Context)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State getState()>
<com.android.systemui.statusbar.ExpandableView: void setActualHeight(int,boolean)>
<com.android.systemui.classifier.LengthCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: boolean isLocalDeviceReady()>
<android.renderscript.Matrix4f: void set(int,int,float)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>
<android.content.Intent: java.lang.String resolveType(android.content.Context)>
<android.opengl.GLES30: void glEndQuery(int)>
<com.android.printspooler.ui.SelectPrinterActivity: void updateEmptyView(com.android.printspooler.ui.SelectPrinterActivity.DestinationAdapter)>
<com.android.server.net.NetworkStatsRecorder: void removeUidsLocked(int[])>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getRecentsButton()>
<javax.microedition.khronos.egl.EGL10: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.renderscript.ScriptIntrinsicBLAS: void DSYMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProvisioningAllowed(java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: boolean canShowDismissingWindowWhileLockedLw()>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void setDark(boolean,boolean,long)>
<com.android.layoutlib.bridge.util.DynamicIdMap: java.lang.Integer getId(com.android.util.Pair)>
<com.android.systemui.statusbar.policy.BatteryController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.systemui.tuner.TunerService: void clearAll()>
<com.android.server.am.BroadcastStats: void addBroadcast(java.lang.String,java.lang.String,int,int,long)>
<com.android.settingslib.display.DisplayDensityUtils: int[] getValues()>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.Session openSession(int)>
<com.android.server.policy.PhoneWindowManager: boolean getInsetHintLw(android.view.WindowManager.LayoutParams,android.graphics.Rect,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<android.app.Fragment: void setArguments(android.os.Bundle)>
<android.media.MediaRouter.RouteInfo: java.lang.String toString()>
<com.android.systemui.recents.model.Task: boolean isAffiliatedTask()>
<android.content.pm.PackageParser.Package: void setVolumeUuid(java.lang.String)>
<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureSurfaces(java.util.Collection)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void finishAnimation(float,java.lang.Runnable)>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>
<android.graphics.Paint_Delegate: int getColor()>
<android.net.LocalSocket: int getSoTimeout()>
<com.android.systemui.recents.misc.Utilities: android.view.View findParent(android.view.View,java.lang.Class)>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getInputEncoding()>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<com.android.location.provider.FusedLocationHardware: int getVersion()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.app.Fragment: boolean getRetainInstance()>
<com.android.systemui.qs.QuickQSPanel: void setTiles(java.util.Collection)>
<com.android.server.tv.UinputBridge: void sendPointerSync(android.os.IBinder)>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>
<android.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo.CodecCapabilities getCapabilitiesForType(java.lang.String)>
<android.app.Activity: void onRestart()>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>
<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>
<android.media.AudioDeviceInfo: int[] getChannelMasks()>
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>
<android.location.GnssClock: boolean hasFullBiasNanos()>
<android.os.Parcel: void writeDouble(double)>
<com.android.egg.neko.NekoTile: void onPrefsChanged()>
<android.renderscript.FieldPacker: void skip(int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onStateChanged(java.lang.String,int)>
<com.android.server.DeviceIdleController: void setNetworkPolicyTempWhitelistCallbackInternal(java.lang.Runnable)>
<android.media.browse.MediaBrowser: void <init>(android.content.Context,android.content.ComponentName,android.media.browse.MediaBrowser.ConnectionCallback,android.os.Bundle)>
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>
<android.opengl.GLES32: void glGetnUniformfv(int,int,int,float[],int)>
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getMessagePermissionChoice()>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.classifier.Point: void <init>(float,float,long)>
<com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler: void hideBatteryView()>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.opengl.GLES10: int glGetError()>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>
<com.android.systemui.qs.QSDetailItems: void onConfigurationChanged(android.content.res.Configuration)>
<android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>
<android.accessibilityservice.GestureDescription: long getMaxGestureDuration()>
<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendDockingTopTaskEvent(int,android.graphics.Rect)>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleSplitScreen()>
<android.media.MediaRouter.Callback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<com.android.systemui.statusbar.CommandQueue: void hideRecentApps(boolean,boolean)>
<android.graphics.NinePatch: boolean hasAlpha()>
<android.net.wifi.WifiScanner.BssidListener: void onLost(android.net.wifi.ScanResult[])>
<com.android.server.wallpaper.WallpaperManagerService: int getWidthHint()>
<com.android.server.am.ActivityManagerService.PendingAssistExtras: void <init>(com.android.server.am.ActivityRecord,android.os.Bundle,android.content.Intent,java.lang.String,com.android.internal.os.IResultReceiver,android.os.Bundle,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedGoingToSleep(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeepUninstalledPackages(android.content.ComponentName,java.util.List)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isHeadsUp(java.lang.String)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result init(long)>
<android.os.DropBoxManager.Entry: long getTimeMillis()>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>
<android.widget.ExpandableListAdapter: boolean hasStableIds()>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onCreate(android.os.Bundle)>
<com.android.documentsui.RootCursorWrapper: void <init>(java.lang.String,java.lang.String,android.database.Cursor,int)>
<com.android.server.CertBlacklister: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: int currentSegment(double[])>
<com.android.settingslib.drawer.UserAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>
<com.android.server.InputMethodManagerService: void finishInput(com.android.internal.view.IInputMethodClient)>
<com.android.systemui.recents.model.TaskStack.DockState: android.graphics.Rect getDockedTaskStackBounds(android.graphics.Rect,int,int,int,android.graphics.Rect,com.android.systemui.recents.views.TaskStackLayoutAlgorithm,android.content.res.Resources,android.graphics.Rect)>
<com.android.systemui.statusbar.ExpandableView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Point: boolean equals(int,int)>
<com.android.systemui.statusbar.ExpandableOutlineView: float getOutlineAlpha()>
<android.widget.ViewSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.UriDerivativeLoader: void onStopLoading()>
<android.widget.ListView: boolean getItemsCanFocus()>
<android.media.MediaExtractor: boolean getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>
<android.net.wifi.WifiManager: boolean isScanAlwaysAvailable()>
<android.media.PlaybackParams: int getAudioFallbackMode()>
<com.android.hotspot2.pps.Credential: java.lang.String toString()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<android.inputmethodservice.SoftInputWindow.Callback: void onBackPressed()>
<android.app.AlertDialog: void setIconAttribute(int)>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>
<android.view.WindowId: boolean equals(java.lang.Object)>
<android.view.View: int getDrawingCacheBackgroundColor()>
<com.android.printservice.recommendation.PrintServicePlugin: java.lang.CharSequence getPackageName()>
<android.speech.RecognitionService.Callback: void beginningOfSpeech()>
<android.util.Base64: byte[] encode(byte[],int,int,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onBtClassChanged(android.bluetooth.BluetoothDevice)>
<android.media.tv.TvInputService.Session: void onRelease()>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.Context: java.lang.CharSequence getText(int)>
<android.graphics.Gradient_Delegate: boolean isSupported()>
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>
<android.media.MediaDescription: java.lang.String getMediaId()>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.location.Address: double getLatitude()>
<org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>
<android.security.keystore.KeyProtection: java.lang.String[] getEncryptionPaddings()>
<android.graphics.PointF: float length(float,float)>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.media.AudioDevicePort: boolean equals(java.lang.Object)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setRequiresDeviceIdle(boolean)>
<com.android.server.trust.TrustArchive: void logAgentConnected(int,android.content.ComponentName)>
<com.android.systemui.recents.RecentsImpl: void dockTopTask(int,int,int,android.graphics.Rect)>
<android.app.Notification.CarExtender: android.graphics.Bitmap getLargeIcon()>
<com.android.systemui.recents.RecentsImplProxy: void <init>(com.android.systemui.recents.RecentsImpl)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateEmptyShadeView(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void updateRowStates()>
<android.service.carrier.CarrierIdentifier: java.lang.String getGid1()>
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.media.MediaExtractor: void <init>()>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<android.content.Loader: void deliverCancellation()>
<android.view.textservice.TextInfo: void <init>(java.lang.String)>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: android.os.Bundle getParams()>
<android.content.pm.PackageInstaller.SessionCallback: void onBadgingChanged(int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowLastAnimationFrameEvent)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>
<com.android.server.usb.UsbDeviceManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.server.hdmi.SelectRequestBuffer: void clear()>
<android.database.AbstractCursor: double getDouble(int)>
<android.filterpacks.imageproc.TintFilter: void <init>(java.lang.String)>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.qs.PathInterpolatorBuilder: android.view.animation.Interpolator getYInterpolator()>
<android.hardware.radio.RadioManager.AmBandConfig: void writeToParcel(android.os.Parcel,int)>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.CalendarView.CalendarViewDelegate: boolean getShowWeekNumber()>
<android.webkit.WebViewProvider.ViewDelegate: boolean performLongClick()>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getPublicContentView()>
<android.hardware.SensorListener: void onAccuracyChanged(int,int)>
<com.android.providers.settings.SettingsProvider: boolean onCreate()>
<android.view.IWindowManagerImpl: void setAnimationScale(int,float)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void addServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<android.graphics.Paint: void setAlpha(int)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean)>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: void onStart()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceData(android.os.ParcelUuid,byte[])>
<com.android.systemui.recents.misc.SystemServicesProxy: void registerDockedStackListener(android.view.IDockedStackListener)>
<android.view.Display: long getAppVsyncOffsetNanos()>
<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardState(boolean,boolean,boolean)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void stopSelection()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,int[],int)>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityForOriginationEnd()>
<android.os.MemoryFile: boolean isPurgingAllowed()>
<android.content.Context: void clearWallpaper()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyInputChannelBroken(com.android.server.input.InputWindowHandle)>
<android.view.WindowAnimationFrameStats: java.lang.String toString()>
<android.text.TextUtils.SimpleStringSplitter: java.util.Iterator iterator()>
<com.android.server.BatteryService: void onStart()>
<com.android.hotspot2.omadm.MOManager: java.io.File getPpsFile()>
<com.android.systemui.tuner.NavBarTuner: void onDestroyView()>
<com.android.server.backup.NotificationBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String)>
<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>
<android.telecom.PhoneAccount: int getHighlightColor()>
<android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>
<com.android.systemui.ViewInvertHelper: void setInverted(boolean,boolean,long)>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.app.Notification.Action: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.QSContainer: void setExpanded(boolean)>
<com.android.systemui.qs.tiles.BatteryTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void handleSystemNavigationKey(int)>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>
<com.android.gallery3d.glrenderer.GLId: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String)>
<android.hardware.radio.RadioMetadata.Builder: void <init>(android.hardware.radio.RadioMetadata)>
<android.transition.Transition.TransitionListener: void onTransitionResume(android.transition.Transition)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onQuotaExceeded(long,long)>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String)>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.widget.ProgressBar: void incrementProgressBy(int)>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<com.android.server.statusbar.StatusBarManagerInternal: void setWindowState(int,int)>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getRequestedPages()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(int)>
<android.app.Activity: boolean isLocalVoiceInteractionSupported()>
<com.android.systemui.recents.views.RecentsTransitionHelper.AnimationSpecComposer: java.util.List composeSpecs()>
<com.google.android.util.AbstractMessageParser.Video: java.util.List getInfo()>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>
<com.android.documentsui.PackageReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>
<android.app.assist.AssistStructure.ViewNode: boolean isContextClickable()>
<android.media.audiofx.AudioEffect: int getId()>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.String[] getEnabledAccountTypes()>
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>
<com.android.server.backup.Trampoline: void clearBackupData(java.lang.String,java.lang.String)>
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()>
<com.android.documentsui.RootsFragment: void onDisplayStateChanged()>
<android.renderscript.ScriptIntrinsicBLAS: void CHBMV(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setAlpha(float)>
<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>
<android.widget.RatingBar: void setRating(float)>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>
<com.android.settingslib.display.DisplayDensityUtils: int getDefaultDensity()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: boolean hasTasks()>
<android.webkit.CookieSyncManager: void resetSync()>
<android.text.style.TypefaceSpan: int getSpanTypeId()>
<android.util.SizeF: java.lang.String toString()>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.String,boolean)>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>
<com.android.tools.layoutlib.create.RefactorClassAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>
<android.app.FragmentController: void doLoaderStop(boolean)>
<com.android.server.net.DnsServerRepository: void setDnsServersOn(android.net.LinkProperties)>
<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>
<com.android.settingslib.WirelessUtils: boolean isRadioAllowed(android.content.Context,java.lang.String)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context)>
<android.app.Dialog: void cancel()>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onBluetoothStateChanged(int)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>
<android.graphics.drawable.AnimatedVectorDrawable: void getOutline(android.graphics.Outline)>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter build()>
<com.android.server.backup.PreferredActivityBackupHelper: void <init>()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransformScreenCoordinates(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,android.graphics.Rect)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<com.android.systemui.statusbar.phone.DozeParameters.IntInOutMatcher: boolean isIn(int)>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
<android.widget.ListView: void setCacheColorHint(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPrimaryStorageCandidateVolumes()>
<android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>
<android.net.LocalSocket: void shutdownOutput()>
<android.os.Parcel: void writeStringList(java.util.List)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void unregister()>
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>
<com.android.layoutlib.bridge.bars.Config: java.util.List getResourceDirs(int)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean onEmptySpaceClick(float)>
<android.media.MediaMetadataRetriever: void setDataSource(android.media.MediaDataSource)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>
<com.android.server.fingerprint.AuthenticationClient: int start()>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>
<android.media.tv.TvTrackInfo: boolean equals(java.lang.Object)>
<com.android.location.provider.ActivityRecognitionEvent: long getTimestampNs()>
<android.view.View: int getRightPaddingOffset()>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>
<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>
<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>
<com.android.layoutlib.bridge.util.NinePatchInputStream: void disableFakeMarkSupport()>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>
<com.android.keyguard.KeyguardDisplayManager: void updateDisplays(boolean)>
<android.widget.Editor.HandleView: float getHorizontal(android.text.Layout,int)>
<com.android.preload.DumpData: java.util.Date getDate()>
<com.android.server.am.ActivityManagerService: void batteryNeedsCpuUpdate()>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>
<android.media.audiofx.Visualizer: int setMeasurementMode(int)>
<android.media.MediaCodec.Callback: void onInputBufferAvailable(android.media.MediaCodec,int)>
<android.service.voice.VoiceInteractionSession: void onRequestAbortVoice(android.service.voice.VoiceInteractionSession.AbortVoiceRequest)>
<android.provider.ContactsContract.StatusUpdates: int getPresencePrecedence(int)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes build()>
<android.view.IWindowManagerImpl: void enableScreenIfNeeded()>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.telecom.RemoteConnection: int getCallerDisplayNamePresentation()>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<com.android.server.am.ActivityManagerService: void notifyCleartextNetwork(int,byte[])>
<android.widget.Toolbar.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>
<android.hardware.radio.RadioManager.FmBandConfig: void writeToParcel(android.os.Parcel,int)>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher.ButtonInterface: void abortCurrentGesture()>
<android.media.MediaCodecInfo: java.lang.String getName()>
<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 normalized()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void animateCollapsePanels(float)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.PbapClientProfile getPbapClientProfile()>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.Typeface_Delegate: android.graphics.Typeface_Delegate getDelegate(long)>
<com.android.systemui.statusbar.SignalClusterView: void setMobileDataEnabled(boolean)>
<android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnStop()>
<com.android.systemui.recents.model.RecentsTaskLoader: void deleteTaskData(com.android.systemui.recents.model.Task,boolean)>
<com.android.settingslib.RestrictedLockUtils: boolean hasBaseUserRestriction(android.content.Context,java.lang.String,int)>
<com.android.systemui.recents.events.EventBus: void send(com.android.systemui.recents.events.EventBus.InterprocessEvent)>
<android.app.admin.SecurityLog.SecurityEvent: int describeContents()>
<com.android.server.AppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>
<android.content.EntityIterator: void close()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onDensityOrFontScaleChanged()>
<android.graphics.Rasterizer_Delegate: android.graphics.Rasterizer_Delegate getDelegate(long)>
<android.view.ScaleGestureDetector: void setStylusScaleEnabled(boolean)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: android.view.View getOwner()>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacSHA224: void <init>()>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String)>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.net.TrafficStats: void tagSocket(java.net.Socket)>
<com.android.keyguard.ViewMediatorCallback: void keyguardGone()>
<android.view.Surface: void release()>
<javax.microedition.khronos.opengles.GL11: void glGetPointerv(int,java.nio.Buffer[])>
<android.view.View: void getDrawingRect(android.graphics.Rect)>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>
<android.util.MalformedJsonException: void <init>(java.lang.String)>
<android.location.Criteria: void setVerticalAccuracy(int)>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.view.WindowManagerPolicy.WindowState: int getOwningUid()>
<com.android.systemui.settings.ToggleSlider.Listener: void onInit(com.android.systemui.settings.ToggleSlider)>
<android.media.MediaDrm.OnKeyStatusChangeListener: void onKeyStatusChange(android.media.MediaDrm,byte[],java.util.List,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.session.MediaController.Callback: void onPlaybackStateChanged(android.media.session.PlaybackState)>
<android.content.pm.PackageManager: void removePackageFromPreferred(java.lang.String)>
<com.android.commands.am.Am: void onShowUsage(java.io.PrintStream)>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>
<com.android.settingslib.bluetooth.HeadsetProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void setShowingLegacyBackground(boolean)>
<com.android.server.notification.SystemConditionProviderService: void attachBase(android.content.Context)>
<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(android.renderscript.Matrix4f)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceProvisioningConfigApplied()>
<com.android.systemui.volume.SafetyWarningDialog: void cleanUp()>
<javax.microedition.khronos.opengles.GL11: void glColor4ub(byte,byte,byte,byte)>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<android.location.GnssClock: int describeContents()>
<android.net.wifi.WifiInfo: int getIpAddress()>
<com.android.server.am.ActivityManagerService: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.graphics.CornerPathEffect: void <init>(float)>
<android.widget.ImageView: void setScaleType(android.widget.ImageView.ScaleType)>
<com.android.hotspot2.omadm.XMLNode: java.lang.String getNameSpace()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent)>
<android.app.Notification.Action.WearableExtender: boolean isAvailableOffline()>
<com.android.settingslib.RestrictedLockUtils: boolean isCurrentUserOrProfile(android.content.Context,int)>
<android.media.AudioRecord: int getSampleRate()>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>
<android.app.Activity: void invalidateOptionsMenu()>
<android.webkit.FindActionModeCallback.NoAction: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<javax.microedition.khronos.opengles.GL10: void glClientActiveTexture(int)>
<android.widget.ImageView: void setSelected(boolean)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession onCreatePrinterDiscoverySession()>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.webkit.CacheManager.CacheResult: java.lang.String getExpiresString()>
<com.android.hotspot2.osu.OSUResponse: com.android.hotspot2.osu.OSUError getError()>
<android.content.BroadcastReceiver.PendingResult: void clearAbortBroadcast()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: android.graphics.Rect getTaskGridRect()>
<android.webkit.ClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
<android.service.chooser.ChooserTarget: void writeToParcel(android.os.Parcel,int)>
<android.database.sqlite.SQLiteAccessPermException: void <init>()>
<android.content.pm.Signature: int describeContents()>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void inflateView()>
<android.media.MediaDrm: void finalize()>
<android.opengl.EGL14: int eglQueryAPI()>
<com.android.systemui.qs.QSTile.DetailAdapter: java.lang.Boolean getToggleState()>
<android.print.PrintAttributes.Margins: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onQsHeightChanged()>
<android.app.ActivityManagerProxy: android.graphics.Point getAppTaskThumbnailSize()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean toggleGroupExpansion(android.service.notification.StatusBarNotification)>
<android.hardware.input.InputManager: void registerInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener,android.os.Handler)>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.telecom.VideoProfile.CameraCapabilities: int getHeight()>
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.UserInfoController: void onDensityOrFontScaleChanged()>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>
<com.android.systemui.statusbar.ExpandableView: void onMeasure(int,int)>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewConfiguration: void <init>()>
<android.view.KeyEvent: boolean isScrollLockOn()>
<android.telephony.CellIdentityCdma: int getBasestationId()>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.util.ArraySet: boolean contains(java.lang.Object)>
<android.speech.tts.TextToSpeechService: void onSynthesizeText(android.speech.tts.SynthesisRequest,android.speech.tts.SynthesisCallback)>
<android.graphics.Rect: float exactCenterY()>
<android.app.ActivityManager.TaskDescription: void <init>()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardSecure(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int,int)>
<android.content.pm.PackageParser.ApkLite: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int,java.util.List,android.content.pm.Signature[],java.security.cert.Certificate[][],boolean,boolean,boolean,boolean)>
<com.android.preload.classdataretrieval.hprof.Hprof: java.util.Map getClassData(com.android.ddmlib.Client)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean isAborting()>
<android.filterpacks.imageproc.BlackWhiteFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.google.android.gles_jni.GLImpl: boolean glIsTexture(int)>
<com.android.server.backup.Trampoline: void opComplete(int,long)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSensitive(boolean,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.view.IWindowManagerImpl: void dismissKeyguard()>
<com.android.hotspot2.pps.Credential: java.lang.String getPassword()>
<com.android.systemui.doze.DozeService: void onCreate()>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void stop()>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.tiles.WorkModeTile: void handleClick()>
<android.location.Criteria: void setAccuracy(int)>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setMinMargins(android.print.PrintAttributes.Margins)>
<android.view.animation.Transformation: java.lang.String toString()>
<com.android.layoutlib.bridge.impl.PorterDuffUtility: android.graphics.PorterDuff.Mode getPorterDuffMode(int)>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.provider.DocumentsContract: boolean isTreeUri(android.net.Uri)>
<android.util.FloatMath: float ceil(float)>
<com.android.uiautomator.core.UiCollection: int getChildCount(com.android.uiautomator.core.UiSelector)>
<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener: void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice)>
<android.app.Notification.Action.Builder: void <init>(android.app.Notification.Action)>
<android.graphics.Camera: void finalize()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstIn()>
<com.android.systemui.statusbar.phone.LockIcon: void onVisibilityChanged(android.view.View,int)>
<android.speech.RecognitionListener: void onError(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.BarTransitions getBarTransitions()>
<android.content.CursorLoader: java.lang.String getSelection()>
<android.widget.TextView: void beginBatchEdit()>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>
<android.graphics.drawable.RippleDrawable: boolean onStateChange(int[])>
<com.android.systemui.SwipeHelper: void snapChild(android.view.View,float,float)>
<com.android.settingslib.wifi.AccessPoint: int getSecurity()>
<android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)>
<android.widget.CheckedTextView: java.lang.CharSequence getAccessibilityClassName()>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setNotificationVisibility(int)>
<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,android.os.Handler,com.android.server.notification.ManagedServices.UserProfiles)>
<android.bluetooth.BluetoothGattServer: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.systemui.tuner.TunerFragment: void onCreate(android.os.Bundle)>
<com.android.documentsui.RecentsLoader: com.android.documentsui.DirectoryResult loadInBackground()>
<android.webkit.WebView: void requestImageRef(android.os.Message)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean shouldRefocusOnDismiss()>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.ListView: void setDividerHeight(int)>
<android.hardware.camera2.dispatch.Dispatchable: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.systemui.statusbar.policy.KeyButtonView: void setImageResource(int)>
<android.transition.Visibility: int getMode()>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<android.util.LocalLog.ReadOnlyLocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.text.TextPaint: void <init>(int)>
<com.android.printspooler.util.BitmapSerializeUtils: void writeBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<com.android.tools.layoutlib.create.RenameClassAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.lang.String,java.lang.String)>
<android.webkit.WebMessagePort: void postMessage(android.webkit.WebMessage)>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>
<android.opengl.GLES20: void glReleaseShaderCompiler()>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>
<android.nfc.cardemulation.HostApduService: byte[] processCommandApdu(byte[],android.os.Bundle)>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.content.RestrictionEntry: void setType(int)>
<android.app.WallpaperManager: android.os.ParcelFileDescriptor getWallpaperFile(int)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setMimeType(java.lang.String)>
<android.os.LocaleList: android.os.LocaleList getDefault()>
<com.android.server.am.BatteryStatsService: void noteWifiRadioPowerState(int,long,int)>
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)>
<android.content.RestrictionEntry: int hashCode()>
<android.hardware.camera2.utils.TaskSingleDrainer: void taskStarted()>
<com.android.systemui.volume.ZenFooter: void update()>
<android.hardware.camera2.CaptureRequest.Key: int hashCode()>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context)>
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: void next()>
<android.os.CpuUsageInfo: long getTotal()>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>
<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>
<com.android.systemui.volume.SafetyWarningDialog: void onStart()>
<com.android.server.VibratorService: void onInputDeviceRemoved(int)>
<android.util.SparseLongArray: void removeAt(int)>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()>
<android.ddm.DdmHandleHello: void register()>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>
<android.location.GnssStatus: int getConstellationType(int)>
<com.android.hotspot2.AppBridge: void <init>(android.content.Context)>
<android.security.keystore.KeyExpiredException: void <init>(java.lang.String)>
<com.android.documentsui.BaseActivity: boolean isSearchExpanded()>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>
<com.android.server.notification.NotificationDelegate: void onNotificationClear(int,int,java.lang.String,java.lang.String,int,int)>
<android.widget.ScrollView: void fling(int)>
<android.content.SyncRequest.Builder: void <init>()>
<android.telecom.CallAudioState: int getRoute()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.widget.SlidingDrawer: android.view.View getHandle()>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>
<android.util.MonthDisplayHelper: boolean isWithinCurrentMonth(int,int)>
<com.android.layoutlib.bridge.bars.Config: int getStatusBarColor(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void registerCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<android.os.Debug: void resetGlobalExternalAllocCount()>
<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>
<com.android.systemui.statusbar.phone.QSTileHost: void onTuningChanged(java.lang.String,java.lang.String)>
<android.view.IWindowManagerImpl: int getRotation()>
<android.net.LocalSocket: int getReceiveBufferSize()>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.server.am.ActivityManagerService: void updateDeviceOwner(java.lang.String)>
<android.widget.ScrollView: void onMeasure(int,int)>
<com.android.server.fingerprint.EnrollClient: boolean onEnumerationResult(int,int)>
<android.media.session.PlaybackState.CustomAction: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int)>
<android.webkit.WebView: void reload()>
<android.view.View: int getMeasuredHeight()>
<android.hardware.usb.UsbDevice: int getConfigurationCount()>
<com.android.server.notification.NotificationManagerInternal: void removeForegroundServiceFlagFromNotification(java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyDown(int,android.view.KeyEvent)>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getHomeButton()>
<android.service.media.CameraPrewarmService: void onCooldown(boolean)>
<android.hardware.Camera: void addCallbackBuffer(byte[])>
<com.android.commands.hid.Hid: void main(java.lang.String[])>
<android.widget.ZoomButton: void setEnabled(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<android.webkit.WebViewProvider.ViewDelegate: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.fakeoemfeatures.FakeView: void onDraw(android.graphics.Canvas)>
<com.google.android.gles_jni.GLImpl: void glFrustumx(int,int,int,int,int,int)>
<com.android.systemui.recents.events.EventBus: void registerInterprocessAsCurrentUser(android.content.Context,java.lang.Object,int)>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>
<com.android.printspooler.ui.PrintActivity: void onPause()>
<android.media.MediaRouter.UserRouteInfo: void setIconDrawable(android.graphics.drawable.Drawable)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString(java.lang.String)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setBlocking(boolean)>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int3)>
<android.database.StaleDataException: void <init>(java.lang.String)>
<com.android.configparse.ConfigBuilder: android.net.wifi.WifiConfiguration buildConfig(com.android.hotspot2.pps.HomeSP,java.security.cert.X509Certificate,java.util.List,java.security.PrivateKey)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<android.telephony.CellInfoCdma: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: boolean onDraggedDown(android.view.View,int)>
<com.android.printservice.recommendation.util.NsdResolveQueue: void resolve(android.net.nsd.NsdManager,android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>
<com.android.systemui.qs.QSTile: void click()>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>
<com.android.systemui.volume.Events: void writeEvent(android.content.Context,int,java.lang.Object[])>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<com.android.systemui.qs.PagedTileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.media.session.PlaybackState.CustomAction: android.os.Bundle getExtras()>
<com.android.systemui.recents.views.TaskViewHeader: boolean onLongClick(android.view.View)>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean removeNotification(java.lang.String,boolean)>
<android.view.KeyEvent: int getAction()>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<com.android.server.am.ActiveServices: void <init>(com.android.server.am.ActivityManagerService)>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>
<com.android.server.policy.WakeGestureListener: void requestWakeUpTrigger()>
<com.android.hotspot2.pps.UpdateInfo: com.android.hotspot2.pps.UpdateInfo.UpdateRestriction getUpdateRestriction()>
<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>
<android.media.MediaCodec.Callback: void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec.BufferInfo)>
<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
<com.android.systemui.statusbar.car.CarStatusBar: void hideBatteryView()>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: void setBarState(boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void clearPackagePreferredActivities(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>
<android.graphics.Region: void translate(int,int)>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>
<android.app.Fragment: void onResume()>
<android.net.nsd.NsdManager.ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isActivePasswordSufficient(int,boolean)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
<android.text.style.SuggestionSpan: void setFlags(int)>
<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>
<com.android.location.provider.GeofenceProvider: void onGeofenceHardwareChange(android.hardware.location.GeofenceHardware)>
<com.android.systemui.qs.QSAnimator: void onViewDetachedFromWindow(android.view.View)>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onUpOrCancel()>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getChild(char)>
<com.android.server.policy.WakeGestureListener: void cancelWakeUpTrigger()>
<android.net.Network: void bindSocket(java.net.DatagramSocket)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void <init>(android.content.Context)>
<com.android.server.job.controllers.IdleController: com.android.server.job.controllers.IdleController get(com.android.server.job.JobSchedulerService)>
<com.google.android.maps.MapView: void preLoad()>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void hide(long,long)>
<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float,float)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedClosableObjects()>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseStarted()>
<com.android.documentsui.model.RootInfo: int describeContents()>
<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.net.wifi.WifiScanner.ParcelableScanData: void <init>(android.net.wifi.WifiScanner.ScanData[])>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect()>
<android.text.TextDirectionHeuristic: boolean isRtl(char[],int,int)>
<android.view.ScaleGestureDetector: long getTimeDelta()>
<android.widget.TimePicker: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.stackdivider.Divider: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<android.graphics.drawable.LayerDrawable: int getBottomPadding()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expandWithQs()>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>
<android.animation.AnimatorListenerAdapter: void onAnimationPause(android.animation.Animator)>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String,int)>
<com.android.server.am.ProcessMemInfo: void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: int size()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context)>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>
<android.content.Intent: java.lang.String normalizeMimeType(java.lang.String)>
<com.android.server.clipboard.ClipboardService: boolean hasClipboardText(java.lang.String)>
<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void finishKeyguardFadingAway()>
<com.android.server.net.NetworkStatsRecorder: void dumpCheckin(java.io.PrintWriter,long,long)>
<android.graphics.Color: int rgb(int,int,int)>
<com.android.server.connectivity.DataConnectionStats: void onReceive(android.content.Context,android.content.Intent)>
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.pm.PackageManagerService: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.systemui.RecentsComponent: void onDraggingInRecentsEnded(float)>
<android.app.NativeActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.gles_jni.GLImpl: void glActiveTexture(int)>
<android.content.res.BridgeTypedArray: int getColor(int,int)>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<com.android.gallery3d.common.Utils: long crc64Long(byte[])>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setVisibilityLocationProvider(com.android.systemui.statusbar.notification.VisibilityLocationProvider)>
<android.view.Choreographer: android.view.Choreographer getInstance()>
<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes getAudioAttributes()>
<com.android.location.fused.FusionEngine: void <init>(android.content.Context,android.os.Looper)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateFailed(java.lang.CharSequence)>
<android.telecom.InCallService: void onCallRemoved(android.telecom.Call)>
<android.app.assist.AssistStructure.ViewNode: boolean isActivated()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void <init>(android.content.Context)>
<android.webkit.WebViewDelegate.OnTraceEnabledChangeListener: void onTraceEnabledChange(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindFramebufferOES(int,int)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setNoSims(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dismissKeyguard()>
<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>
<android.net.nsd.NsdManager.RegistrationListener: void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int)>
<com.android.systemui.SystemUI: void onConfigurationChanged(android.content.res.Configuration)>
<android.hardware.camera2.params.LensShadingMap: int getRowCount()>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListeners()>
<android.nfc.tech.MifareClassic: int getSize()>
<android.os.BatteryStats.Uid.Sensor: android.os.BatteryStats.Timer getSensorTime()>
<com.android.layoutlib.bridge.MockView: void setGravity(int)>
<android.renderscript.Matrix3f: void loadTranslate(float,float)>
<android.hardware.SensorManager: void registerDynamicSensorCallback(android.hardware.SensorManager.DynamicSensorCallback,android.os.Handler)>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.Spinner: void setDropDownHorizontalOffset(int)>
<com.android.settingslib.accessibility.AccessibilityUtils: java.util.Set getEnabledServicesFromSettings(android.content.Context)>
<android.location.GnssClock: double getDriftUncertaintyNanosPerSecond()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,long,long)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>
<android.media.tv.TvInputService.HardwareSession: void <init>(android.content.Context)>
<android.service.dreams.DreamService: void onActionModeStarted(android.view.ActionMode)>
<com.android.systemui.statusbar.policy.CastController: void setDiscovering(boolean)>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>
<com.android.server.statusbar.StatusBarShellCommand: int onCommand(java.lang.String)>
<android.telephony.CellInfo: long getTimeStamp()>
<com.android.uiautomator.core.UiObject: boolean swipeRight(int)>
<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>
<android.webkit.WebView: void clearView()>
<com.android.server.am.BatteryStatsService: void noteBleScanStarted(android.os.WorkSource)>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.Settings getProperties()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setUserAuthenticationRequired(boolean)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onSuccess(byte[],com.android.ddmlib.Client)>
<com.android.server.accounts.AccountManagerService.Lifecycle: void onStart()>
<android.content.Context: android.content.Context createCredentialEncryptedStorageContext()>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.os.StatFs: long getBlockCountLong()>
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.graphics.drawable.Animatable2.AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)>
<android.content.res.BridgeTypedArray: int getThemeAttributeId(int,int)>
<com.android.server.am.BroadcastStats: void dumpCheckinStats(java.io.PrintWriter,java.lang.String)>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>
<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean,java.lang.String)>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<android.content.res.BridgeTypedArray: java.lang.String getString(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: int getBackgroundColorWithoutTint()>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>()>
<com.android.server.pm.PackageInstallerSession: void commit(android.content.IntentSender)>
<android.renderscript.ScriptIntrinsicBLAS: void CGEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>
<com.android.commands.hid.Device: void <init>(int,java.lang.String,int,int,byte[],byte[])>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>
<com.android.server.NetworkManagementSocketTagger: void untag(java.io.FileDescriptor)>
<android.telecom.InCallService: boolean canAddCall()>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void requestNotificationUpdate()>
<com.android.server.pm.PackageManagerService: void performFstrimIfNeeded()>
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void <init>()>
<com.android.server.policy.WindowOrientationListener: void onProposedRotationChanged(int)>
<com.android.server.midi.MidiService: void closeDevice(android.os.IBinder,android.os.IBinder)>
<android.view.View: void postOnAnimation(java.lang.Runnable)>
<android.content.pm.PackageParser.Package: boolean hasChildPackage(java.lang.String)>
<android.app.ActivityManagerProxy: boolean isRootVoiceInteraction(android.os.IBinder)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerificationComplete()>
<com.android.systemui.recents.RecentsImplProxy: void showRecents(boolean,boolean,boolean,boolean,boolean,int)>
<com.android.hotspot2.osu.HTTPHandler: void close()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.FileInputStream openFileInput(java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean isSelected()>
<android.hardware.camera2.CameraCaptureSession: android.view.Surface getInputSurface()>
<com.android.documentsui.RecentsLoader: void deliverResult(com.android.documentsui.DirectoryResult)>
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<android.media.tv.TvInputManager: android.media.tv.TvInputManager.Hardware acquireTvInputHardware(int,android.media.tv.TvInputManager.HardwareCallback,android.media.tv.TvInputInfo)>
<android.app.FragmentTransaction: boolean isAddToBackStackAllowed()>
<android.os.RecoverySystem: void <init>()>
<android.service.dreams.DreamService: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>
<android.preference.PreferenceScreen: void onClick()>
<com.android.hotspot2.omadm.MultiValueMap: java.lang.Object replace(java.lang.String,java.lang.Object,java.lang.Object)>
<android.graphics.Path: void addArc(float,float,float,float,float,float)>
<android.text.TextUtils: boolean isGraphic(char)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>
<com.android.server.fingerprint.RemovalClient: boolean onRemoved(int,int)>
<com.android.hotspot2.est.ESTHandler: java.util.List getCACerts()>
<com.android.hotspot2.omadm.XMLNode: java.lang.String getTag()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onUserSwitched(int)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setUserAuthenticationValidWhileOnBody(boolean)>
<android.graphics.Paint: java.lang.String getFontFeatureSettings()>
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onPipActivityClosed()>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPoints(float[],android.graphics.Paint)>
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onBluetoothStateChanged(int)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForTagId(short)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>
<android.view.Display: int getPixelFormat()>
<com.android.server.audio.AudioService.VolumeStreamState: void mute(boolean)>
<com.android.server.job.controllers.ContentObserverController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: void onTuningChanged(java.lang.String,java.lang.String)>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<com.android.systemui.statusbar.notification.ImageTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.gesture.GestureStroke: void clearPath()>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Rect getRect()>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isWakeLockLevelSupported(int)>
<android.media.tv.TvInputService.Session: void onUnblockContent(android.media.tv.TvContentRating)>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<com.android.keyguard.EmergencyButton: void onConfigurationChanged(android.content.res.Configuration)>
<android.provider.Settings.SettingNotFoundException: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,int[],int)>
<android.provider.Contacts.Intents.Insert: void <init>()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>
<android.graphics.drawable.ClipDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createAndAddWindows()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void resetUserExpandedStates()>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>
<android.webkit.WebView: void documentHasImages(android.os.Message)>
<com.android.anqp.eap.EAP: com.android.anqp.eap.EAP.EAPMethodID mapEAPMethod(int)>
<android.media.MediaRouter.RouteInfo: void requestUpdateVolume(int)>
<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<android.widget.Spinner: int getDropDownWidth()>
<android.net.NetworkInfo: boolean isRoaming()>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void notifyUserAction(int)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: java.lang.String getLabel(android.content.Context,android.print.PrintAttributes.MediaSize)>
<android.app.Activity: void onActivityReenter(int,android.content.Intent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getAutoTimeRequired()>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>
<android.widget.ExpandableListView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.hotspot2.WifiNetworkAdapter: java.lang.Integer connect(com.android.hotspot2.osu.OSUInfo,java.lang.String)>
<android.app.IActivityManager.WaitResult: void <init>()>
<com.android.documentsui.DirectoryLoader: void <init>(android.content.Context,int,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,android.net.Uri,int,boolean)>
<android.opengl.GLES10: void glHint(int,int)>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.hardware.Camera.Parameters: int getMaxZoom()>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoActiveFormatDescription(byte)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void onLayout(boolean,int,int,int,int)>
<android.app.ActivityManager.AppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>
<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>
<com.android.hotspot2.omadm.OMAConstructed: void <init>(com.android.hotspot2.omadm.OMAConstructed,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void onUserSwitched(int)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliablePipe()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder addTriggerContentUri(android.app.job.JobInfo.TriggerContentUri)>
<android.app.Instrumentation: void onDestroy()>
<com.android.hotspot2.WifiNetworkAdapter: java.util.Collection getLoadedSPs()>
<android.content.ContentValues: int size()>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>
<android.app.assist.AssistStructure: android.content.ComponentName getActivityComponent()>
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>
<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>
<com.android.systemui.qs.external.TileServices: com.android.systemui.qs.external.TileServiceManager getTileWrapper(com.android.systemui.qs.external.CustomTile)>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.policy.PhoneWindowManager: int getInputMethodWindowVisibleHeightLw()>
<android.location.Address: void setPostalCode(java.lang.String)>
<android.content.IntentFilter: int countDataTypes()>
<android.view.ActionProvider: boolean onPerformDefaultAction()>
<android.os.BinderProxy: void shellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>
<android.telephony.IccOpenLogicalChannelResponse: int getChannel()>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onMoveToFullscreen()>
<android.printservice.PrintJob: boolean isStarted()>
<com.android.photos.views.TiledImageRenderer.TileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: float getGroupExpandFraction()>
<android.app.ActivityManagerProxy: boolean convertFromTranslucent(android.os.IBinder)>
<android.hardware.camera2.legacy.RequestHolder: boolean requestFailed()>
<android.view.View: void setScrollIndicators(int,int)>
<com.android.printspooler.model.PrintSpoolerProvider: void <init>(android.content.Context,java.lang.Runnable)>
<android.widget.ProgressBar: void setProgress(int,boolean)>
<org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekDayTextAppearance(int)>
<android.graphics.RoundRectangle: java.awt.geom.Rectangle2D getBounds2D()>
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>
<android.content.pm.PackageParser.Activity: void setPackageName(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLightModelx(int,int)>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.android.systemui.statusbar.policy.RemoteInputView: void focusAnimated()>
<android.telecom.DisconnectCause: java.lang.CharSequence getLabel()>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.model.TaskGrouping: void <init>(int)>
<com.android.location.fused.FusionEngine: void deinit()>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>
<android.view.textservice.SuggestionsInfo: int describeContents()>
<com.android.server.hdmi.SelectRequestBuffer.PortSelectRequest: void process()>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>
<android.service.carrier.CarrierMessagingService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.tiles.CastTile: java.lang.CharSequence getTileLabel()>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot restore()>
<com.android.server.am.HealthStatsBatteryStatsWriter: void writePkg(android.os.health.HealthStatsWriter,android.os.BatteryStats.Uid.Pkg)>
<com.android.systemui.statusbar.notification.NotificationMessagingTemplateViewWrapper: void updateTransformedTypes()>
<android.content.pm.InstrumentationInfo: void <init>()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.text.style.EasyEditSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onResume(int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void dump(java.io.PrintWriter)>
<com.android.server.VibratorService: void systemReady()>
<android.util.SparseIntArray: int keyAt(int)>
<android.net.wifi.WifiManager: boolean saveConfiguration()>
<android.os.Parcel: long readLong()>
<android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
<android.animation.LayoutTransition: long getStagger(int)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onResume()>
<android.location.GnssStatusCallback: void onStarted()>
<com.android.systemui.usb.UsbDebuggingActivity: void onStart()>
<android.app.ActivityManagerProxy: void stopAppSwitches()>
<com.android.systemui.qs.external.CustomTile: android.content.ComponentName getComponent()>
<android.animation.Animator.AnimatorListener: void onAnimationStart(android.animation.Animator)>
<android.os.BatteryStats.Uid: void noteFullWifiLockReleasedLocked(long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showTvPictureInPictureMenu()>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>
<android.mtp.MtpObjectInfo: int getThumbFormat()>
<com.android.systemui.recents.tv.views.TaskCardView: com.android.systemui.recents.model.Task getTask()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setSubTitle(java.lang.CharSequence)>
<android.view.SurfaceView: void onAttachedToWindow()>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>
<com.android.server.policy.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy.ScreenOnListener)>
<android.telecom.Call.Callback: void onParentChanged(android.telecom.Call,android.telecom.Call)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeExpandedMs()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageCodePath()>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceDisconnected(android.content.ComponentName)>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>
<android.widget.AbsSpinner: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.app.ActivityManager.ProcessErrorStateInfo: void <init>()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean areGutsExposed()>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>
<android.os.BatteryStats.Uid.Pkg.Serv: int getLaunches(int)>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String nextText()>
<com.android.systemui.statusbar.policy.CallbackHandler: void handleMessage(android.os.Message)>
<com.android.uiautomator.core.UiObject: boolean longClickBottomRight()>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.widget.Adapter: long getItemId(int)>
<com.android.systemui.tuner.TunerZenModePanel: void setZenState(int)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,int[],int)>
<com.android.systemui.statusbar.ExpandableOutlineView: int getOutlineTranslation()>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.media.MediaRouter.RouteGroup: void setIconResource(int)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onSwitchUser(int)>
<android.renderscript.ScriptIntrinsicBLAS: void CHERK(int,int,float,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<com.android.server.InputMethodManagerService.Lifecycle: void onUnlockUser(int)>
<android.widget.Scroller: void extendDuration(int)>
<com.android.server.content.SyncJobService: boolean onStartJob(android.app.job.JobParameters)>
<android.media.browse.MediaBrowser.MediaItem: android.media.MediaDescription getDescription()>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>
<android.content.ContentQueryMap: java.util.Map getRows()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<android.widget.SearchView: void onLayout(boolean,int,int,int,int)>
<com.android.hotspot2.osu.ClientKeyManager: void <init>(com.android.hotspot2.pps.HomeSP,java.security.KeyStore)>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setCoefficients(float[])>
<com.android.server.policy.PhoneWindowManager: void removeWindowLw(android.view.WindowManagerPolicy.WindowState)>
<android.app.WallpaperInfo: java.lang.String getServiceName()>
<com.android.hotspot2.asn1.Asn1Object: boolean matches(com.android.hotspot2.asn1.Asn1ID)>
<android.util.AttributeSet: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>
<com.android.systemui.statusbar.ExpandableOutlineView: void setOutlineRect(float,float,float,float)>
<com.android.systemui.statusbar.phone.DozeParameters: void <init>(android.content.Context)>
<com.android.systemui.statusbar.stack.ScrollContainer: boolean scrollTo(android.view.View)>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>
<android.app.Activity: boolean onSearchRequested()>
<com.android.systemui.statusbar.car.CarBatteryController: boolean isPowerSave()>
<com.android.systemui.statusbar.notification.NotificationUtils: float getRelativeYOffset(android.view.View,android.view.View)>
<com.android.systemui.recents.model.TaskGrouping: com.android.systemui.recents.model.Task.TaskKey getPrevTaskInGroup(com.android.systemui.recents.model.Task)>
<com.android.wallpapercropper.WallpaperCropActivity: void onCreate(android.os.Bundle)>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
<android.os.Parcel: void unmarshall(byte[],int,int)>
<android.provider.DocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>
<android.widget.ExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.anqp.OSUProvider: java.util.List getNames()>
<com.android.server.am.BroadcastStats: boolean dumpStats(java.io.PrintWriter,java.lang.String,java.lang.String)>
<android.widget.VideoView: int getCurrentPosition()>
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: int calculateVisibleType()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer(float[])>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>
<com.android.systemui.doze.DozeHost.Callback: void onBuzzBeepBlinked()>
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>
<android.os.BinderProxy: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.os.BatteryStats.LevelStepTracker: void init()>
<android.graphics.Outline: void setRect(android.graphics.Rect)>
<com.android.nfc_extras.NfcExecutionEnvironment: void close()>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void mapResultTriggers(android.hardware.camera2.impl.CameraMetadataNative)>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<com.android.systemui.qs.QSContainer: void setPanelView(com.android.systemui.statusbar.phone.NotificationPanelView)>
<com.android.keyguard.KeyguardPatternView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getBadgedActivityLabel(android.content.pm.ActivityInfo,int)>
<com.android.documentsui.FilesJankPerfTest: void testFlingJankPerformance()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeys()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<com.android.systemui.recents.misc.Utilities: void addTraceEvent(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintError(int,java.lang.String)>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>
<com.android.server.fingerprint.AuthenticationClient: void resetFailedAttempts()>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>
<android.telecom.Connection: void onHold()>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>
<com.android.hotspot2.osu.OSUSocketFactory: java.net.Socket createSocket()>
<com.android.server.notification.CalendarTracker.Callback: void onChanged()>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.view.View: void onSizeChanged(int,int,int,int)>
<com.android.documentsui.Events.InputEvent: android.graphics.Point getOrigin()>
<android.telephony.CellInfoLte: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardPINView: int getWrongPasswordStringId()>
<com.android.server.am.BroadcastQueue: boolean replaceParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>
<android.telephony.CellSignalStrengthLte: int getLevel()>
<com.android.gallery3d.glrenderer.GLCanvas: void fillRect(float,float,float,float,int)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void dockTopTask(int,int,int,android.graphics.Rect)>
<com.android.systemui.qs.tiles.DndTile: void setVisible(android.content.Context,boolean)>
<com.android.server.am.ActivityManagerService: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionMultiThumb(android.view.AppTransitionAnimationSpec[],android.os.IRemoteCallback,android.os.IRemoteCallback,boolean)>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(java.nio.IntBuffer)>
<android.renderscript.Element: android.renderscript.Element I16_2(android.renderscript.RenderScript)>
<android.media.session.MediaSession.Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.lang.String)>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeyType()>
<com.android.server.usb.UsbDeviceManager: boolean isFunctionEnabled(java.lang.String)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.net.InetAddress,int)>
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>
<android.graphics.drawable.RotateDrawable: void setPivotX(float)>
<android.filterpacks.imageproc.GrainFilter: void process(android.filterfw.core.FilterContext)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void reInflateViews(android.view.View.OnClickListener,android.service.notification.StatusBarNotification)>
<android.drm.DrmManagerClient: void close()>
<android.graphics.Canvas_Delegate: boolean native_getClipBounds(long,android.graphics.Rect)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityStart(java.util.Date)>
<com.android.settingslib.wifi.AccessPoint: boolean isEphemeral()>
<android.app.Dialog: android.view.View getCurrentFocus()>
<com.android.systemui.qs.QSDetail: void updateResources()>
<com.android.printspooler.ui.SelectPrinterActivity: void onStop()>
<com.android.systemui.statusbar.tv.TvStatusBar: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void <init>(android.content.Context)>
<android.util.PrintWriterPrinter: void println(java.lang.String)>
<com.android.server.display.NightDisplayService: void onStopUser(int)>
<android.nfc.tech.IsoDep: void setTimeout(int)>
<com.android.systemui.recents.views.AnimationProps: android.animation.ValueAnimator apply(int,android.animation.ValueAnimator)>
<com.android.server.am.ActivityManagerService: void takePersistableUriPermission(android.net.Uri,int,int)>
<com.google.android.util.AbstractMessageParser.Format: java.lang.String toHtml(boolean)>
<android.widget.TextView: void setLinkTextColor(int)>
<android.widget.DatePicker: boolean getCalendarViewShown()>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.String,java.lang.Object)>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>
<android.app.usage.UsageStatsManagerInternal.AppIdleStateChangeListener: void onParoleStateChanged(boolean)>
<android.content.Intent.ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>
<android.os.UserHandle: int hashCode()>
<com.google.android.maps.MapView: void displayZoomControls(boolean)>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasVoiceCallingFeature()>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>(boolean)>
<com.android.documentsui.dirlist.RenameDocumentFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String[] databaseList()>
<com.android.printservice.recommendation.plugin.samsung.ServiceResolveQueue.ResolveCallback: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>
<android.graphics.Rect: void <init>()>
<com.android.server.am.ActivityManagerService: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightAvailabilityChanged(boolean)>
<com.android.gallery3d.exif.Rational: boolean equals(java.lang.Object)>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>
<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider.VisibilityListener)>
<android.media.DrmInitData.SchemeInitData: boolean equals(java.lang.Object)>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>
<android.view.View: boolean isSoundEffectsEnabled()>
<com.android.systemui.qs.QSTile.Host: void warn(java.lang.String,java.lang.Throwable)>
<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getCurrentOverScrollAmount(boolean)>
<com.android.hotspot2.WifiNetworkAdapter: void removeSP(java.lang.String)>
<com.android.server.notification.ZenModeConditions: void onUserSwitched()>
<com.android.settingslib.dream.DreamBackend: boolean isActivatedOnDock()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<com.android.settingslib.wifi.AccessPoint: boolean isActive()>
<android.telecom.VideoProfile: boolean isReceptionEnabled(int)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.pm.ShortcutInfo: boolean isDeclaredInManifest()>
<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)>
<android.view.ViewGroup: void onNestedScroll(android.view.View,int,int,int,int)>
<com.android.server.am.ActivityStackSupervisor: java.util.List getTopVisibleActivities()>
<android.widget.Editor.HandleView: void dismiss()>
<com.android.documentsui.RootsFragment: void onCurrentRootChanged()>
<com.android.systemui.stackdivider.WindowManagerProxy: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setScrollingEnabled(boolean)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mutate()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isBelowLastNotification(float,float)>
<com.android.systemui.recents.RecentsSystemUser: void <init>(android.content.Context,com.android.systemui.recents.RecentsImpl)>
<android.media.tv.TvStreamConfig.Builder: void <init>()>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<com.android.server.am.BatteryStatsService: void shutdown()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,android.graphics.drawable.Drawable.Callback)>
<com.android.systemui.statusbar.policy.UserInfoController: void remListener(com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener)>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>
<android.view.ViewGroup: boolean onNestedFling(android.view.View,float,float,boolean)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyConfigurationChanged()>
<android.renderscript.ScriptIntrinsicBLAS: void CTRSM(int,int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(float[])>
<com.android.anqp.IconInfo: void <init>(java.nio.ByteBuffer)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createCredentialProtectedStorageContext()>
<com.android.media.remotedisplay.RemoteDisplay: void setPresentationDisplayId(int)>
<android.widget.Toolbar: int getContentInsetEndWithActions()>
<com.android.systemui.doze.DozeHost.Callback: void onNewNotifications()>
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.content.Intent.FilterComparison: void <init>(android.content.Intent)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.lang.String getName(android.bluetooth.BluetoothDevice)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,int[])>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle,long)>
<android.security.keystore.KeyInfo: int getUserAuthenticationValidityDurationSeconds()>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object get(long)>
<android.media.MediaRouter.SimpleCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<com.android.settingslib.bluetooth.HidProfile: boolean isConnectable()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: boolean isInitialized()>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getForegroundActivityTimer()>
<android.content.pm.PackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<com.android.systemui.assist.AssistManager: void showDisclosure()>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.android.systemui.qs.external.CustomTile: boolean isAvailable()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasSoftNavigationBar()>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
<android.content.Context: void unbindService(android.content.ServiceConnection)>
<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>
<com.android.systemui.statusbar.phone.LightStatusBarController: void onBatteryLevelChanged(int,boolean,boolean)>
<android.app.ActionBar.TabListener: void onTabUnselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<android.service.notification.Condition: void writeToParcel(android.os.Parcel,int)>
<com.android.server.LocationManagerService: java.lang.String getNetworkProviderPackage()>
<android.widget.PopupWindow: int getHeight()>
<android.content.res.ColorStateList: java.lang.String toString()>
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>
<android.app.assist.AssistContent: void writeToParcel(android.os.Parcel,int)>
<org.apache.http.params.HttpParams: double getDoubleParameter(java.lang.String,double)>
<android.graphics.Canvas_Delegate: void native_translate(long,float,float)>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyMatrix(float[],int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onClosed(android.hardware.camera2.CameraDevice)>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.tiles.FlashlightTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.speech.tts.TextToSpeechService: void onDestroy()>
<com.android.systemui.qs.tiles.IntentTile: void setListening(boolean)>
<com.android.documentsui.StressProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMAConstructed getParent()>
<android.view.Window: int getLocalFeatures()>
<android.media.AudioTrack: void setPlaybackParams(android.media.PlaybackParams)>
<com.android.server.media.MediaSessionRecord: int getPlaybackType()>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.printspooler.widget.PrintContentView: boolean isOptionsOpened()>
<com.android.hotspot2.pps.Policy: java.lang.String toString()>
<android.text.style.SubscriptSpan: int describeContents()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isCallerApplicationRestrictionsManagingPackage()>
<android.provider.ContactsContract.CommonDataKinds.Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.media.audiofx.Visualizer: int getWaveForm(byte[])>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.anqp.Constants: boolean hasR2Elements(java.util.List)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.wallpapercropper.CropView: android.graphics.RectF getCrop()>
<android.content.res.Resources: void flushLayoutCache()>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference getComponentType()>
<android.widget.GridLayout: int getRowCount()>
<com.android.egg.neko.Cat: int chooseP(java.util.Random,int[])>
<com.android.systemui.statusbar.policy.RemoteInputView: void onFinishInflate()>
<android.widget.TextView: java.lang.CharSequence getAccessibilityClassName()>
<android.util.EventLog: java.lang.String getTagName(int)>
<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onUserInput()>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,int[],int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>
<android.net.http.HttpResponseCache: void close()>
<com.android.systemui.statusbar.stack.AmbientState: void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.widget.ImageView: void onAttachedToWindow()>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>
<com.android.hotspot2.pps.UpdateInfo: long getInterval()>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<android.graphics.drawable.InsetDrawable: void getOutline(android.graphics.Outline)>
<android.content.BroadcastReceiver.PendingResult: int getResultCode()>
<android.view.ActionProvider: void <init>(android.content.Context)>
<android.view.textservice.SpellCheckerInfo: int describeContents()>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.widget.PopupWindow: android.view.View getContentView()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<android.widget.TabHost: android.view.View getCurrentView()>
<android.util.Range: android.util.Range extend(android.util.Range)>
<android.os.BatteryStats.LevelStepTracker: int getLevelAt(int)>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<android.os.storage.IMountShutdownObserver.Stub: void <init>()>
<com.android.settingslib.bluetooth.A2dpProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.backup.Trampoline: java.lang.String selectBackupTransport(java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.settingslib.drawable.UserIconDrawable: void setBadgeRadius(float)>
<android.widget.Toolbar: int getContentInsetLeft()>
<com.android.settingslib.bluetooth.A2dpProfile: java.util.List getConnectedDevices()>
<android.os.MemoryFile: void <init>(java.lang.String,int)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onSecurePdfFile()>
<android.widget.AbsListView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removePackageFromPreferred(java.lang.String)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.view.TextureView: android.graphics.Bitmap getBitmap()>
<android.media.MediaFormat: long getLong(java.lang.String)>
<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.app.MediaRouteButton: int[] onCreateDrawableState(int)>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeni(int,int,int)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setRotationLocked(boolean)>
<android.widget.Chronometer: java.lang.CharSequence getContentDescription()>
<com.android.systemui.volume.VolumeDialogController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.view.View.DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellIdentityGsm: int getBsic()>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>
<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<android.hardware.camera2.impl.CameraDeviceImpl: void <init>(java.lang.String,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler,android.hardware.camera2.CameraCharacteristics)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void <init>(org.objectweb.asm.MethodVisitor)>
<android.widget.ExpandableListView: boolean expandGroup(int)>
<android.view.TextureView: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void readIntArray(int[],int,int)>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>
<android.telephony.SubscriptionInfo: int getSimSlotIndex()>
<android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
<com.android.server.input.InputManagerService: void setInputWindows(com.android.server.input.InputWindowHandle[])>
<android.widget.TableLayout: void setShrinkAllColumns(boolean)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: boolean contains(java.lang.String)>
<android.hardware.camera2.dispatch.HandlerDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>
<android.app.Service: void startForeground(int,android.app.Notification)>
<com.android.keyguard.KeyguardSimPukView: void verifyPasswordAndUnlock()>
<com.android.server.notification.ManagedServices: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction create()>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,int[],int)>
<android.location.GnssMeasurement: double getCarrierPhaseUncertainty()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
<android.net.http.HttpResponseCache: int getNetworkCount()>
<android.bluetooth.BluetoothGattServer: boolean connect(android.bluetooth.BluetoothDevice,boolean)>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<com.android.server.accessibility.AutoclickController: void <init>(android.content.Context,int)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.Class)>
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>
<com.android.server.backup.FullBackupJob: boolean onStartJob(android.app.job.JobParameters)>
<android.print.PrintAttributes: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaFormat: void setInteger(java.lang.String,int)>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void wakeUp(long,java.lang.String,java.lang.String)>
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<android.text.format.Time: boolean isEpoch(android.text.format.Time)>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setComposingText(int,java.lang.CharSequence)>
<com.android.systemui.assist.AssistOrbView: boolean hasOverlappingRendering()>
<android.bluetooth.BluetoothGatt: void close()>
<android.text.util.Rfc822Token: boolean equals(java.lang.Object)>
<android.media.audiofx.Visualizer: int getSamplingRate()>
<com.android.server.connectivity.KeepaliveTracker: void startNattKeepalive(com.android.server.connectivity.NetworkAgentInfo,int,android.os.Messenger,android.os.IBinder,java.lang.String,int,java.lang.String,int)>
<com.android.commands.media.Media: void onShowUsage(java.io.PrintStream)>
<com.android.server.statusbar.StatusBarManagerService: void clickTile(android.content.ComponentName)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.am.ActivityManagerService: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<android.widget.ListView: boolean canAnimate()>
<android.webkit.WebView: android.graphics.Picture capturePicture()>
<android.widget.CalendarView: void <init>(android.content.Context)>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>
<android.content.Entity.NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>
<android.app.ActionBar.LayoutParams: void <init>(int,int)>
<android.opengl.GLES32: void glSamplerParameterIiv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.PanelBar: void LOG(java.lang.String,java.lang.Object[])>
<android.animation.AnimationThread: com.android.ide.common.rendering.api.Result preAnimation()>
<android.transition.ChangeImageTransform: void captureStartValues(android.transition.TransitionValues)>
<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>
<com.android.hotspot2.osu.OSUInfo: void setOSUBssid(long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpPinnedModeChanged(boolean)>
<android.provider.MediaStore.Audio.Albums: android.net.Uri getContentUri(java.lang.String)>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: boolean isTopOfTask(android.os.IBinder)>
<android.app.FragmentManagerImpl: void invalidateOptionsMenu()>
<com.android.settingslib.bluetooth.PanProfile: void finalize()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,int[],int)>
<android.view.KeyEvent: int getKeyCode()>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<android.location.Criteria: void setSpeedRequired(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.ScrimController: void animateNextChange()>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.server.appwidget.AppWidgetService: void onStopUser(int)>
<android.util.MonthDisplayHelper: int getMonth()>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable mutate()>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStartedLocked(int,long)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onBootCompleted()>
<com.android.server.job.controllers.BatteryController.ChargingTracker: void startTracking()>
<android.location.Address: java.lang.String getUrl()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<com.android.systemui.statusbar.phone.ScrimController: void setWakeAndUnlocking()>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistExceptIdleInternal()>
<android.text.method.ScrollingMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>
<android.content.ContextWrapper: java.io.File getDataDir()>
<android.media.MediaDrm.MediaDrmStateException: java.lang.String getDiagnosticInfo()>
<android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
<com.android.documentsui.dirlist.DocumentHolder: void setSelected(boolean,boolean)>
<com.android.systemui.statusbar.NotificationData.Entry: void setInterruption()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getCollapsedHeight()>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void nap(long)>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>
<com.android.server.pm.PackageManagerService: void clearPackagePersistentPreferredActivities(java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<com.google.android.gles_jni.GLImpl: void glOrthof(float,float,float,float,float,float)>
<android.gesture.GestureStroke: java.lang.Object clone()>
<com.android.systemui.doze.DozeHost.Callback: void onPowerSaveChanged(boolean)>
<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getIntentVerificationStatusAsUser(java.lang.String,int)>
<android.media.MediaExtractor: long getCachedDuration()>
<android.util.AttributeSet: java.lang.String getPositionDescription()>
<com.android.server.notification.ZenModeHelper: boolean matchesCallFilter(android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>
<com.android.anqp.eap.EAPMethod: void <init>(com.android.anqp.eap.EAP.EAPMethodID,com.android.anqp.eap.AuthParam)>
<android.os.Build: java.lang.String getRadioVersion()>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: short readShort()>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.FieldPacker: float subF32()>
<android.provider.Contacts.Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector instance(int)>
<com.android.documentsui.DocumentClipper: void <init>(android.content.Context)>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<com.android.keyguard.KeyguardStatusView: void onConfigurationChanged(android.content.res.Configuration)>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)>
<android.app.NotificationManager.Policy: java.lang.String priorityCategoriesToString(int)>
<android.location.Location: float getAccuracy()>
<android.telecom.CallAudioState: java.lang.String toString()>
<com.android.server.backup.BackupManagerService: boolean hasBackupPassword()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChanged(boolean)>
<android.content.res.Configuration: void setLocale(java.util.Locale)>
<android.app.ApplicationThreadProxy: void schedulePictureInPictureModeChanged(android.os.IBinder,boolean)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.UserInteractionEvent)>
<com.android.systemui.keyguard.KeyguardViewMediator: void userActivity()>
<android.webkit.WebViewProvider.ViewDelegate: void onStartTemporaryDetach()>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>
<android.text.TextUtils.SimpleStringSplitter: void setString(java.lang.String)>
<android.app.Activity: void onLocalVoiceInteractionStarted()>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getHeadsUpContentView()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void removeCallback(android.media.MediaRouter.Callback)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<com.android.server.policy.WindowOrientationListener: int getProposedRotation()>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<com.android.server.notification.ZenLog: void traceEffectsSuppressorChanged(java.util.List,java.util.List,long)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.content.pm.ComponentInfo: boolean isEnabled()>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.LinkAddress: boolean equals(java.lang.Object)>
<android.widget.TextView: void setBreakStrategy(int)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,int[],int)>
<android.os.Debug: void printLoadedClasses(int)>
<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.location.Location: void setLatitude(double)>
<android.view.KeyEvent: char getMatch(char[],int)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<android.graphics.Canvas: void drawColor(int)>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>()>
<com.android.systemui.qs.external.CustomTile: android.service.quicksettings.Tile getQsTile()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean enabledAndUserMatches(int)>
<com.android.gallery3d.common.Utils: boolean isOpaque(int)>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>
<com.android.systemui.statusbar.CommandQueue: void startAssist(android.os.Bundle)>
<com.android.documentsui.BaseActivity: java.util.concurrent.Executor getExecutorForCurrentDirectory()>
<android.media.tv.TvView.TvInputCallback: void onVideoSizeChanged(java.lang.String,int,int)>
<com.android.systemui.qs.QSTile.Host: void removeCallback(com.android.systemui.qs.QSTile.Host.Callback)>
<android.opengl.GLES10: void glLightx(int,int,int)>
<android.view.View: void setDrawingCacheBackgroundColor(int)>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<android.database.CursorWrapper: int getCount()>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.net.ip.IpManager.Callback: void onPostDhcpAction()>
<com.android.keyguard.KeyguardSecurityContainer: void onFinishInflate()>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void updateThumbnailScale()>
<android.view.WindowInsets: int getSystemWindowInsetTop()>
<com.android.server.am.ActivityManagerService.GrantUri: void <init>(int,android.net.Uri,boolean)>
<android.view.KeyCharacterMap: int describeContents()>
<android.print.PrintJobInfo: int getState()>
<com.android.systemui.tuner.TunerService: int getValue(java.lang.String,int)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ComponentName: android.content.ComponentName createRelative(java.lang.String,java.lang.String)>
<com.android.server.pm.PackageManagerService: void clearCrossProfileIntentFilters(int,java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getSystemCodeForService(android.content.ComponentName)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.util.Collection getCachedDevicesCopy()>
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: void <init>(com.android.ide.common.rendering.api.ResourceReference,com.android.ide.common.rendering.api.AdapterBinding,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.example.android.networkusage.NetworkActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)>
<com.android.systemui.tuner.PowerNotificationControlsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>
<android.widget.Button: void <init>(android.content.Context)>
<android.graphics.DashPathEffect_Delegate: java.lang.String getSupportMessage()>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
<com.android.documentsui.FilesActivity: void onCreate(android.os.Bundle)>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetNewHeader()>
<android.util.SparseArray: void append(int,java.lang.Object)>
<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>
<android.webkit.WebView: boolean canGoForward()>
<android.graphics.Matrix_Delegate: boolean hasPerspective(android.graphics.Matrix)>
<com.android.systemui.statusbar.NotificationBackgroundView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.net.nsd.NsdServiceInfo: int getPort()>
<android.graphics.drawable.Drawable: int getLevel()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: java.lang.String toString()>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUri(java.lang.String)>
<com.android.systemui.tuner.BatteryPreference: void onAttached()>
<android.app.Notification.Action.Builder: android.app.Notification.Action build()>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String,android.net.Uri,android.net.Uri,java.lang.Exception)>
<android.database.Cursor: boolean moveToPrevious()>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>
<com.android.systemui.statusbar.RemoteInputController: boolean isRemoteInputActive(com.android.systemui.statusbar.NotificationData.Entry)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentText(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.PanelView: boolean isCollapsing()>
<com.android.systemui.qs.tiles.UserDetailItemView: void setEnabled(boolean)>
<android.view.KeyEvent: boolean isCanceled()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasOverlappingRendering()>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getCancelLabel()>
<android.telecom.GatewayInfo: int describeContents()>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>
<com.android.server.pm.PermissionsState: void setGlobalGids(int[])>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>
<android.content.ClipDescription: void <init>(android.content.ClipDescription)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onTileAdded()>
<android.widget.ListPopupWindow: void setWindowLayoutType(int)>
<com.android.systemui.recents.model.RecentsPackageMonitor: void register(android.content.Context)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverRoaming(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void appTransitionStarting(long,long)>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuidMask()>
<com.android.server.net.NetworkStatsRecorder.RemoveUidRewriter: void reset()>
<com.android.shell.BugreportProgressService: android.os.IBinder onBind(android.content.Intent)>
<android.media.session.MediaController.TransportControls: void prepareFromMediaId(java.lang.String,android.os.Bundle)>
<android.graphics.Canvas_Delegate: void native_drawPath(long,long,long)>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: java.lang.String toString()>
<com.android.hotspot2.osu.service.SubscriptionTimer: void run()>
<com.android.systemui.classifier.ClassifierData: void cleanUp(android.view.MotionEvent)>
<com.android.systemui.recents.views.grid.GridTaskView: com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider()>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getStyleAttribute()>
<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>
<android.opengl.GLES10: void glScalef(float,float,float)>
<android.content.Intent: java.lang.String toUri(int)>
<android.opengl.GLES32: void glGetnUniformfv(int,int,int,java.nio.FloatBuffer)>
<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager.WpsCallback)>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void setup(int,int,float,int,int,int,float)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void createMenuPopup()>
<com.android.server.backup.BackupManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.InputDevice.MotionRange: float getMax()>
<android.os.BatteryStats.ControllerActivityCounter: android.os.BatteryStats.LongCounter getIdleTimeCounter()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: java.lang.String toString()>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.view.Surface getInputSurface()>
<android.transition.TransitionManager: void endTransitions(android.view.ViewGroup)>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>
<com.android.hotspot2.Utils: int compare(java.lang.Comparable,java.lang.Comparable)>
<com.android.systemui.stackdivider.DividerView: void onFinishInflate()>
<android.view.KeyEvent: int getModifierMetaStateMask()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.print.PrintAttributes: int getDuplexMode()>
<com.android.hotspot2.pps.Policy: java.util.List getMinBackhaulThresholds()>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.job.controllers.ContentObserverController: com.android.server.job.controllers.ContentObserverController getForTesting(com.android.server.job.StateChangedListener,android.content.Context)>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>
<android.os.MemoryFile: int length()>
<android.content.res.AssetManager.AssetInputStream: void finalize()>
<android.app.AlertDialog: android.widget.ListView getListView()>
<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>
<com.android.printspooler.model.PageContentRepository: void startPreload(int,int)>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.reflect.Method)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setOpaque(boolean)>
<android.os.RemoteCallback.OnResultListener: void onResult(android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDimmed(boolean,boolean)>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardDrawnLw()>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ImageView: int getMaxWidth()>
<com.android.settingslib.wifi.WifiTracker: void startTracking()>
<android.widget.TextView: void onCreateContextMenu(android.view.ContextMenu)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<android.net.wifi.WifiManager: void finalize()>
<com.android.server.fingerprint.ClientMonitor: java.lang.String getOwnerString()>
<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.server.accessibility.KeyboardInterceptor: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<android.util.SparseArray: void removeAtRange(int,int)>
<com.android.server.input.InputManagerService: void cancelVibrate(int,android.os.IBinder)>
<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>
<android.view.View: android.graphics.Rect getClipBounds()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<com.android.hotspot2.pps.HomeSP: java.util.Map getSSIDs()>
<android.graphics.Camera: void rotateY(float)>
<com.android.documentsui.DocumentsToolbar: void collapseActionView()>
<android.graphics.PointF: void negate()>
<com.android.server.RecoverySystemService: void <init>(android.content.Context)>
<com.android.server.backup.Trampoline: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver)>
<android.webkit.WebView: int getContentHeight()>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.ColorFilter: void finalize()>
<android.widget.AdapterViewFlipper: java.lang.CharSequence getAccessibilityClassName()>
<android.mtp.MtpStorageInfo: long getMaxCapacity()>
<com.android.anqp.IconInfo: java.lang.String getIconType()>
<android.media.SoundPool: boolean unload(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMaxExpandHeight()>
<android.media.browse.MediaBrowser: void unsubscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)>
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onCreate()>
<android.provider.ContactsContract.ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context)>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.telephony.CellSignalStrengthGsm: boolean equals(java.lang.Object)>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void run(com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm.Result)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>
<android.widget.TextView: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<com.android.server.net.NetworkStatsRecorder: void importLegacyUidLocked(java.io.File)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.telecom.Conference: void setActive()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<android.net.NetworkInfo: boolean isAvailable()>
<android.app.Activity: void onStart()>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.bluetooth.BluetoothGattServer: java.util.List getConnectedDevices()>
<com.android.documentsui.dirlist.MultiSelectManager.Callback: void onSelectionChanged()>
<com.android.server.job.JobStore: void forEachJob(com.android.server.job.JobStore.JobStatusFunctor)>
<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>
<com.android.systemui.tuner.StatusBarSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.Property: java.lang.Class getType()>
<android.app.Instrumentation: void sendCharacterSync(int)>
<android.widget.GridView: int getGravity()>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)>
<android.database.Observable: void unregisterObserver(java.lang.Object)>
<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.view.Window: void setChildInt(int,int)>
<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>
<com.android.keyguard.KeyguardAbsKeyInputView: java.lang.String getPasswordText()>
<com.android.server.pm.PackageKeySetData: void removeAllDefinedKeySets()>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.content.ContentProviderProxy: android.os.ICancellationSignal createCancellationSignal()>
<com.android.server.am.ActivityManagerService: android.app.ActivityManager.StackInfo getStackInfo(int)>
<com.android.server.policy.EnableAccessibilityController: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.Watchdog.HandlerChecker: void addMonitor(com.android.server.Watchdog.Monitor)>
<android.net.LocalSocket: java.io.InputStream getInputStream()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int hashCode()>
<com.android.systemui.qs.tiles.RotationLockTile: void setListening(boolean)>
<android.view.View: int getWidth()>
<com.android.gallery3d.glrenderer.GLCanvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<com.android.systemui.volume.ZenModePanel: void createZenButtons()>
<com.android.settingslib.wifi.AccessPointPreference: void refresh()>
<com.android.server.am.CompatModePackages: void <init>(com.android.server.am.ActivityManagerService,java.io.File,android.os.Handler)>
<com.android.documentsui.model.DocumentInfo: boolean equals(java.lang.Object)>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<android.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleBootCompleted()>
<android.os.FileBridge.FileBridgeOutputStream: void close()>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.graphics.drawable.RotateDrawable: boolean isPivotYRelative()>
<android.widget.TextView: int getImeActionId()>
<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataEnabled(boolean)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
<android.content.ClipboardManager.OnPrimaryClipChangedListener: void onPrimaryClipChanged()>
<com.android.server.TextServicesManagerService: void setCurrentSpellCheckerSubtype(java.lang.String,int)>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>
<android.graphics.BitmapRegionDecoder: int getHeight()>
<android.graphics.drawable.ColorDrawable: int getAlpha()>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>
<android.telecom.InCallService: void onCallAdded(android.telecom.Call)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.RotationLockController getRotationLockController()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats.Bucket querySummaryForDevice(int,java.lang.String,long,long)>
<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
<com.android.server.wm.DisplaySettings: void setOverscanLocked(java.lang.String,java.lang.String,int,int,int,int)>
<com.android.server.pm.PackageManagerService: void notifyPackageUse(java.lang.String,int)>
<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>
<android.content.res.ColorStateList: boolean isStateful()>
<com.android.preload.actions.ImportAction: void <init>(com.android.preload.DumpTableModel)>
<android.animation.Animator.AnimatorListener: void onAnimationCancel(android.animation.Animator)>
<com.android.settingslib.applications.ApplicationsState: void requestSize(java.lang.String,int)>
<com.android.server.usb.UsbAudioDevice: java.lang.String toString()>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String,java.lang.String)>
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.provider.Settings.System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleRecentApps()>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)>
<android.view.ViewStructure: void setText(java.lang.CharSequence)>
<android.content.ContentProviderOperation: boolean isAssertQuery()>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>
<android.text.TextPaint: void <init>(android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,int[],int)>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>
<android.preference.ListPreference: void onDialogClosed(boolean)>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void resetViews()>
<com.android.layoutlib.bridge.impl.RenderDrawable: com.android.ide.common.rendering.api.Result render()>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: int getName()>
<android.media.MediaRecorder: android.view.Surface getSurface()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.Object getViewCookie()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearDeviceOwner(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: boolean glIsBuffer(int)>
<android.widget.AbsListView: void clearTextFilter()>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>
<android.app.ApplicationThreadProxy: void clearDnsCache()>
<com.android.keyguard.EmergencyButton: void onDetachedFromWindow()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onNotificationUpdated()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,int[],int)>
<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerDown(android.os.IBinder,int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onClosingFinished()>
<com.android.systemui.recents.views.TaskStackView: void reloadOnConfigurationChange()>
<com.google.android.gles_jni.GLImpl: void glBindBuffer(int,int)>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: boolean isAborting()>
<android.content.pm.LauncherApps: boolean isPackageEnabled(java.lang.String,android.os.UserHandle)>
<com.google.android.gles_jni.GLImpl: void glSampleCoveragex(int,boolean)>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>
<android.mtp.MtpEvent: int getParameter3()>
<android.view.KeyEvent: void <init>(int,int)>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>
<android.os.Debug.MemoryInfo: java.util.Map getMemoryStats()>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isTunerClick()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.transition.Transition: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.keyguard.ViewMediatorCallback getViewMediatorCallback()>
<android.widget.DoubleDigitManager.CallBack: boolean singleDigitIntermediate(int)>
<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>
<android.location.GnssNavigationMessage: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.BaseStatusBar: void showPreviousAffiliatedTask()>
<android.view.MotionEvent: float getPressure()>
<android.drm.DrmInfo: void <init>(int,java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: int size()>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCancel(android.content.DialogInterface)>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>
<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onSystemReady()>
<android.animation.Animator: java.util.ArrayList getListeners()>
<android.printservice.PrintService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.net.NetworkPolicyManagerService: int getUidPolicy(int)>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>
<com.android.systemui.statusbar.phone.StatusBarIconList: void removeIcon(int)>
<com.android.settingslib.wifi.AccessPoint: boolean matches(android.net.wifi.WifiConfiguration)>
<android.telephony.SignalStrength: int getCdmaDbm()>
<android.widget.Scroller: float getCurrVelocity()>
<android.content.Loader: void onStopLoading()>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>
<android.util.Range: boolean contains(android.util.Range)>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
<android.speech.RecognitionListener: void onBeginningOfSpeech()>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<com.android.server.policy.RecentApplicationsBackground: void drawableStateChanged()>
<android.content.Context: void sendBroadcast(android.content.Intent)>
<com.android.systemui.statusbar.phone.VelocityTrackerFactory: com.android.systemui.statusbar.phone.VelocityTrackerInterface obtain(android.content.Context)>
<android.hardware.camera2.dispatch.NullDispatcher: void <init>()>
<android.content.Intent: java.lang.String getDataString()>
<com.android.tools.layoutlib.create.OverrideMethod: long invokeL(java.lang.String,boolean,java.lang.Object)>
<android.service.dreams.DreamService: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.view.IWindowManagerImpl: void statusBarVisibilityChanged(int)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(android.renderscript.RenderScript,int,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int next()>
<com.android.systemui.classifier.EndPointRatioEvaluator: float evaluate(float)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPoints(float[],int,int,android.graphics.Paint)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setExternalIcon(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void setWallpaper(java.io.InputStream)>
<android.app.FragmentManager.OnBackStackChangedListener: void onBackStackChanged()>
<com.android.server.backup.BackupUtils: java.util.ArrayList hashSignatureArray(java.util.List)>
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long,int,int)>
<android.bluetooth.BluetoothGatt: boolean requestConnectionPriority(int)>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getForceEphemeralUsers(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardMode(boolean)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>
<android.view.textservice.SuggestionsInfo: int getSequence()>
<android.content.Intent.FilterComparison: android.content.Intent getIntent()>
<com.android.printspooler.ui.SelectPrinterActivity: void onLoaderReset(android.content.Loader)>
<com.android.server.am.ActivityManagerService: void setLenientBackgroundCheck(boolean)>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<com.android.hotspot2.osu.OSUResponse: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLPaint: void setLineWidth(float)>
<android.graphics.BidiRenderer: android.graphics.BidiRenderer setRenderLocation(float,float)>
<android.transition.Slide: void <init>(int)>
<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>
<com.android.server.location.LocationProviderProxy: boolean isEnabled()>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>
<android.hardware.camera2.CaptureRequest: void writeToParcel(android.os.Parcel,int)>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
<android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
<com.android.server.net.NetworkPolicyManagerService: void factoryReset(java.lang.String)>
<android.content.ContentProvider: android.content.Context getContext()>
<com.android.hotspot2.osu.OSUManager: void wifiStateChange(boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean shouldSwallowClick(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: boolean isStarted()>
<com.android.server.pm.UserManagerService: void setUserAccount(int,java.lang.String)>
<android.widget.TableRow.LayoutParams: void <init>(int,int,float)>
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void setBluetoothEnabled(boolean)>
<com.android.printspooler.model.PrintSpoolerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.midi.MidiService: void unregisterListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<com.android.settingslib.bluetooth.HeadsetProfile: java.util.List getConnectedDevices()>
<com.android.anqp.IconInfo: java.lang.String getLanguage()>
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>
<com.android.systemui.qs.QSAnimator: void onViewAttachedToWindow(android.view.View)>
<android.util.SparseIntArray: void <init>()>
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.hotspot2.osu.OSUResponse: java.lang.String getSessionID()>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean fullyExpandedClearAllVisible()>
<android.view.animation.Animation: boolean hasStarted()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedPhoneNumber(android.content.Context,android.telephony.SubscriptionInfo)>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator iterator()>
<com.android.systemui.classifier.Stroke: void <init>(long,float)>
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.hardware.fingerprint.IFingerprintDaemon: int remove(int,int)>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>
<com.android.layoutlib.bridge.bars.IconLoader: com.android.resources.Density getDensity()>
<android.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback.OnSharedElementsReadyListener)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isSystemUser(int)>
<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>
<android.renderscript.Long3: void <init>()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showScreenPinningRequest(int)>
<android.media.MediaMetadataRetriever: void <init>()>
<android.view.Window: void setUiOptions(int)>
<android.view.Display.HdrCapabilities: int describeContents()>
<com.android.anqp.OSUProvider: java.util.List getServiceDescriptions()>
<android.renderscript.Script: void bindAllocation(android.renderscript.Allocation,int)>
<android.animation.Animator: android.animation.Animator clone()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void removeListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onTaskStackChanged()>
<android.util.ArrayMap: boolean containsValue(java.lang.Object)>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.NotificationIconAreaController createNotificationIconAreaController(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleUserSwitching(int,android.os.IRemoteCallback)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<android.widget.CompoundButton: void setChecked(boolean)>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreviewFromService(android.content.ComponentName)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras)>
<android.opengl.GLES32: void glEnablei(int,int)>
<com.android.server.location.LocationBlacklist: void switchUser(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void clearFingerprintRecognized()>
<android.content.Entity: java.lang.String toString()>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeExiting(android.content.Context,android.content.Intent)>
<android.media.PlaybackParams: void <init>()>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRemoteInput(android.app.RemoteInput[],android.app.RemoteInput)>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: void setDistanceToPeekStart(int)>
<android.telecom.Connection.VideoProvider: void setCallDataUsage(long)>
<android.net.LocalSocketAddress: java.lang.String getName()>
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>
<android.graphics.drawable.Icon.OnDrawableLoadedListener: void onDrawableLoaded(android.graphics.drawable.Drawable)>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData.Builder setServiceSpecificInfo(byte[],int)>
<com.android.systemui.SwipeHelper.Callback: void onChildSnappedBack(android.view.View,float)>
<com.android.server.am.ActivityManagerService: void setRenderThread(int)>
<android.net.NetworkStats.Entry: void <init>(java.lang.String,int,int,int,long,long,long,long,long)>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMANode reparent(com.android.hotspot2.omadm.OMAConstructed)>
<android.os.Message: android.os.Bundle peekData()>
<android.hardware.Camera.AutoFocusCallback: void onAutoFocus(boolean,android.hardware.Camera)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<android.graphics.drawable.Drawable: void invalidateSelf()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void snooze()>
<android.graphics.drawable.GradientDrawable: float getCornerRadius()>
<android.view.MotionEvent.PointerProperties: boolean equals(java.lang.Object)>
<android.widget.TextView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.GridLayout: boolean isColumnOrderPreserved()>
<com.android.systemui.statusbar.notification.HybridNotificationView: void setDark(boolean,boolean,long)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.hardware.Camera.Parameters: int getPictureFormat()>
<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectResourceMismatches()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPreferredPackages(int)>
<com.android.server.BatteryService: void onBootPhase(int)>
<com.android.systemui.statusbar.DismissView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setPanelExpanded(boolean)>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create1D(android.renderscript.RenderScript,android.renderscript.Allocation)>
<android.text.style.DynamicDrawableSpan: void <init>(int)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)>
<android.widget.StackView: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int)>
<com.android.server.pm.Installer: void deleteOdex(java.lang.String,java.lang.String,java.lang.String)>
<android.os.LocaleList: int describeContents()>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>
<android.speech.tts.Voice: int hashCode()>
<com.android.settingslib.location.RecentLocationApps: java.util.List getAppList()>
<com.android.uiautomator.core.UiDevice: boolean pressMenu()>
<com.android.systemui.stackdivider.DividerWindowManager: void remove()>
<android.security.keystore.UserNotAuthenticatedException: void <init>(java.lang.String)>
<com.android.systemui.qs.tiles.UserTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.tuner.PreviewNavInflater: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.DeadZone: float getFlash()>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>
<android.widget.DatePicker: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController getForTesting(com.android.server.job.StateChangedListener,android.content.Context)>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>
<android.util.Property: java.lang.String getName()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
<com.android.systemui.stackdivider.Divider: void start()>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapT()>
<android.opengl.GLES10: void glTranslatex(int,int,int)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<com.android.documentsui.model.RootInfo: boolean supportsSearch()>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: void onScrolled(android.support.v7.widget.RecyclerView,int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)>
<android.renderscript.Element: int getSubElementArraySize(int)>
<com.android.tools.layoutlib.create.MethodListener: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<android.telecom.InCallService: android.os.IBinder onBind(android.content.Intent)>
<com.android.printspooler.model.PrintSpoolerProvider: com.android.printspooler.model.PrintSpoolerService getSpooler()>
<com.android.systemui.statusbar.CommandQueue: void remQsTile(android.content.ComponentName)>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isEnabled()>
<com.android.settingslib.bluetooth.A2dpProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<android.media.MediaRouter.RouteCategory: boolean isGroupable()>
<android.webkit.CookieManager: void setAcceptThirdPartyCookies(android.webkit.WebView,boolean)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.documentsui.DocumentClipper: android.content.ClipData getClipDataForDocuments(java.util.List)>
<com.android.systemui.statusbar.notification.TransformState: void prepareFadeIn()>
<com.android.systemui.tv.pip.PipControlsView: void onAttachedToWindow()>
<android.app.job.JobInfo: long getTriggerContentUpdateDelay()>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setIsDrawerPresent(boolean)>
<android.view.ViewGroup: void clearFocus()>
<com.android.systemui.classifier.ProximityClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.server.backup.AccountSyncSettingsBackupHelper: void accountAdded(android.content.Context)>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setIntArgument(java.lang.String,int)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<android.hardware.camera2.utils.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>
<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(long)>
<com.android.settingslib.accounts.AuthenticatorHelper: void preloadDrawableForType(android.content.Context,java.lang.String)>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void userActivity(long,int,int)>
<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>
<android.telecom.GatewayInfo: android.net.Uri getGatewayAddress()>
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>
<android.inputmethodservice.KeyboardView: boolean isShifted()>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>
<com.android.systemui.BatteryMeterView: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<com.android.documentsui.Events: boolean isActionUp(android.view.MotionEvent)>
<android.opengl.GLES10: void glFinish()>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>
<com.android.statementservice.retriever.Relation: boolean equals(java.lang.Object)>
<android.telephony.CellSignalStrengthWcdma: int getLevel()>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.net.wifi.WifiScanner.ParcelableScanResults: void <init>(android.net.wifi.ScanResult[])>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: java.lang.String toString()>
<android.renderscript.BaseObj: int hashCode()>
<com.android.server.statusbar.StatusBarManagerService: void onClearAllNotifications(int)>
<com.android.gallery3d.common.Utils: boolean isNullOrEmpty(java.lang.String)>
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceHierarchyChange(android.preference.Preference)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getOverriddenMethods()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,int[],int)>
<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>
<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>
<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec.CryptoInfo,long,int)>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(java.lang.String)>
<android.os.TransactionTooLargeException: void <init>()>
<android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession: java.util.List createHighSpeedRequestList(android.hardware.camera2.CaptureRequest)>
<android.media.audiofx.Virtualizer: void setStrength(short)>
<com.android.server.policy.RecentApplicationsBackground: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onSystemReady()>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<com.android.systemui.egg.MLand: void startPlaying()>
<com.android.wallpapercropper.CropView: boolean onScale(android.view.ScaleGestureDetector)>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>
<android.widget.GridLayout.LayoutParams: void <init>()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<android.hardware.Camera.Parameters: java.util.List getSupportedAntibanding()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void updateSettingsIcons(float,float)>
<com.android.server.tv.TvRemoteService: void onBootPhase(int)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean isBrightOrDim()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransitionStyle(int)>
<android.widget.AbsListView: void onRtlPropertiesChanged(int)>
<android.print.PrintAttributes.Margins: int getTopMils()>
<android.graphics.Paint: void setUnderlineText(boolean)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void forceRemoveActiveAdmin(android.content.ComponentName,int)>
<javax.microedition.khronos.opengles.GL10: int glGetError()>
<android.app.TabActivity: void onContentChanged()>
<com.android.tools.layoutlib.create.OverrideMethod: java.lang.Object invokeA(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.volume.VolumeDialog: void <init>(android.content.Context,int,com.android.systemui.volume.VolumeDialogController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.volume.VolumeDialog.Callback)>
<android.os.Handler: void <init>(android.os.Looper)>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onHasLockscreenWallpaperChanged(boolean)>
<com.android.server.SensorNotificationService: void onBootPhase(int)>
<com.android.hotspot2.osu.service.SubscriptionTimer: void checkUpdates()>
<android.inputmethodservice.InputMethodService: void showWindow(boolean)>
<android.view.View: void setPressed(boolean)>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
<android.app.Notification.Builder: android.app.Notification.Builder setLights(int,int,int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: int getCount()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAttributesChanged()>
<com.android.systemui.recents.model.TaskStack.DockState.ViewState: void startAnimation(android.graphics.Rect,int,int,int,android.view.animation.Interpolator,boolean,boolean)>
<com.android.systemui.statusbar.StackScrollerDecorView: void setInvisible()>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>
<android.nfc.tech.MifareClassic: int getType()>
<com.android.server.pm.PackageManagerService: java.util.List getPreviousCodePaths(java.lang.String)>
<android.widget.PopupWindow: void setWindowLayoutType(int)>
<com.android.server.notification.ZenModeConditions: void evaluateConfig(android.service.notification.ZenModeConfig,boolean)>
<android.database.BulkCursorProxy: void onMove(int)>
<android.view.View: boolean performContextClick(float,float)>
<com.android.printspooler.ui.PrintActivity: void onStop()>
<com.android.server.net.LockdownVpnTracker: void shutdown()>
<android.bluetooth.le.ScanSettings: int getCallbackType()>
<android.bluetooth.BluetoothGattServerCallback: void onServiceAdded(int,android.bluetooth.BluetoothGattService)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.activity.ToggleRecentsEvent)>
<android.os.BatteryStats.Uid: long getMobileRadioActiveTime(int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getAffordanceFalsingFactor()>
<android.telecom.TelecomManager: java.lang.String getLine1Number(android.telecom.PhoneAccountHandle)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textMatches(java.lang.String)>
<com.android.server.job.JobPackageTracker: void noteNonpending(com.android.server.job.controllers.JobStatus)>
<android.app.Activity: java.lang.String getCallingPackage()>
<com.android.server.twilight.TwilightListener: void onTwilightStateChanged(com.android.server.twilight.TwilightState)>
<android.media.MediaRouter.Callback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.service.chooser.ChooserTarget: android.content.ComponentName getComponentName()>
<android.content.RestrictionEntry: void <init>(java.lang.String,int)>
<com.android.server.am.ActivityManagerService: void unhandledBack()>
<android.location.OnNmeaMessageListener: void onNmeaMessage(java.lang.String,long)>
<com.android.documentsui.DocumentsApplication: android.content.ContentProviderClient acquireUnstableProviderOrThrow(android.content.ContentResolver,java.lang.String)>
<android.hardware.GeomagneticField: float getFieldStrength()>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: android.graphics.Rect getAbsoluteRectForChildViewAt(int)>
<android.bluetooth.BluetoothGattDescriptor: void <init>(java.util.UUID,int)>
<android.util.PathParser_Delegate.PathDataNode: void nodesToPath(android.util.PathParser_Delegate.PathDataNode[],android.graphics.Path_Delegate)>
<android.graphics.Path: void addRoundRect(float,float,float,float,float,float,android.graphics.Path.Direction)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.VibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>
<com.android.providers.settings.SettingsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void notifyLockedProfile(int)>
<android.app.AutomaticZenRule: boolean equals(java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.view.KeyCharacterMap: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>
<android.content.RestrictionEntry: android.content.RestrictionEntry createBundleEntry(java.lang.String,android.content.RestrictionEntry[])>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>
<android.graphics.LinearGradient_Delegate: java.awt.Paint getJavaPaint()>
<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>
<com.android.layoutlib.bridge.Bridge: com.android.util.Pair resolveResourceId(int)>
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>
<android.service.media.MediaBrowserService.BrowserRoot: java.lang.String getRootId()>
<android.opengl.GLES32: void glBlendBarrier()>
<com.android.hotspot2.osu.commands.MOData: java.lang.String getBaseURI()>
<android.media.MediaCodecInfo.CodecCapabilities: int getMaxSupportedInstances()>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.UnreadConversation build()>
<android.os.Environment: boolean isExternalStorageEmulated(java.io.File)>
<android.media.VolumeProvider: void setCurrentVolume(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<android.service.notification.ZenModeConfig.ScheduleInfo: int hashCode()>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,java.lang.String,int)>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.am.BatteryStatsService: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>
<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.net.INetworkStatsService,android.os.INetworkManagementService,android.util.TrustedTime,java.io.File,boolean)>
<com.android.documentsui.model.DocumentInfo: void read(java.io.DataInputStream)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView)>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setNumberParts(java.lang.String)>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>
<com.android.systemui.doze.DozeLog: void dump(java.io.PrintWriter)>
<com.android.documentsui.dirlist.FragmentTuner: com.android.documentsui.dirlist.FragmentTuner pick(android.content.Context,com.android.documentsui.State)>
<android.transition.ChangeBounds: void captureEndValues(android.transition.TransitionValues)>
<com.android.systemui.statusbar.phone.QSTileHost: void removeTile(java.lang.String)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isProfileReady()>
<android.util.AttributeSet: int getAttributeIntValue(int,int)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.car.CarBatteryController: void startListening()>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.io.InputStream)>
<com.google.android.gles_jni.GLImpl: void glLogicOp(int)>
<android.database.CursorJoiner: java.util.Iterator iterator()>
<android.media.MediaFormat: void setLong(java.lang.String,long)>
<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>
<android.app.ApplicationErrorReport.BatteryInfo: void dump(android.util.Printer,java.lang.String)>
<com.android.systemui.recents.misc.Utilities: void setViewFrameFromTranslation(android.view.View)>
<android.app.Notification.CarExtender.UnreadConversation: long getLatestTimestamp()>
<android.widget.Toast: int getXOffset()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<android.widget.ImageView: void setImageResource(int)>
<com.android.server.am.ActivityManagerService: boolean requestVisibleBehind(android.os.IBinder,boolean)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void clearCustomPrinterIconCache(android.print.IPrintSpoolerCallbacks,int)>
<com.android.systemui.statusbar.policy.BatteryController: void addStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>
<android.app.ActivityManagerProxy: boolean isInHomeStack(int)>
<android.app.FragmentManagerImpl: boolean executePendingTransactions()>
<com.android.server.AnyMotionDetector.Vector3: float norm()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupExpansionChanged(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceAddress()>
<com.android.systemui.statusbar.RemoteInputController: void closeRemoteInputs()>
<android.security.keystore.KeyProtection: int getPurposes()>
<android.net.CaptivePortal: int describeContents()>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>
<android.print.PrintJob: boolean isBlocked()>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor getDescriptor()>
<com.android.server.LocationManagerService: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>
<android.webkit.CacheManager: boolean cacheDisabled()>
<android.os.IBinder.DeathRecipient: void binderDied()>
<android.speech.tts.TextToSpeechService: java.lang.String onGetDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.vr.EnabledComponentsObserver.EnabledComponentChangeListener: void onEnabledComponentChanged()>
<android.widget.TextView: android.text.Layout getLayout()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setDark(boolean,boolean,long)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void finishDrawing(android.view.IWindow)>
<android.view.ViewGroup: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>
<com.android.systemui.statusbar.stack.AmbientState: int getSpeedBumpIndex()>
<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.app.Fragment: void setExitSharedElementCallback(android.app.SharedElementCallback)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportKeyguardDismissed(int)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelCollapsed()>
<com.android.systemui.recents.views.AnimationProps: void <init>()>
<com.android.systemui.recents.misc.DozeTrigger: boolean isAsleep()>
<com.android.server.policy.BarController: void showTransient()>
<com.android.systemui.DessertCaseView.RescalingContainer: void onLayout(boolean,int,int,int,int)>
<android.animation.Animator: android.animation.Animator setDuration(long)>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceStatusBarVisible(boolean)>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>
<com.android.systemui.SwipeHelper: void setMinSwipeProgress(float)>
<android.app.admin.DevicePolicyManager: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String[],boolean)>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.nio.ByteBuffer,java.util.Collection)>
<com.android.documentsui.StressProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.systemui.tuner.TunerSwitch: void onClick()>
<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>
<com.android.systemui.stackdivider.MinimizedDockShadow: boolean hasOverlappingRendering()>
<android.accessibilityservice.GestureDescription: android.accessibilityservice.GestureDescription.StrokeDescription getStroke(int)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.doze.DozeHost: void pulseWhileDozing(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>
<android.app.Service: void stopSelf()>
<android.speech.tts.SynthesisRequest: java.lang.String getVoiceName()>
<android.view.WindowId: void unregisterFocusObserver(android.view.WindowId.FocusObserver)>
<com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementDetails: java.lang.String toString()>
<com.android.server.policy.PhoneWindowManager: void systemReady()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.location.provider.LocationProviderBase: void onSetRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<android.text.Layout: int getLineForVertical(int)>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor.OnCloseListener)>
<com.android.server.pm.UserManagerService: void setUserEnabled(int)>
<android.opengl.GLES10: void glCullFace(int)>
<android.app.Dialog: void onAttachedToWindow()>
<android.renderscript.ScriptIntrinsicBLAS: void CTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.nfc.cardemulation.HostApduService: void sendResponseApdu(byte[])>
<android.util.LongSparseArray: android.util.LongSparseArray clone()>
<com.android.systemui.recents.views.TaskStackView: void relayoutTaskViews(com.android.systemui.recents.views.AnimationProps)>
<android.webkit.CacheManager.CacheResult: long getExpires()>
<android.widget.TextSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glFlush()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendLaunchRecentsEvent()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.keyguard.KeyguardSecurityCallback: void userActivity()>
<android.widget.Spinner: void setDropDownVerticalOffset(int)>
<com.google.android.gles_jni.EGLSurfaceImpl: void <init>()>
<android.renderscript.Element: android.renderscript.Element I32_4(android.renderscript.RenderScript)>
<com.android.server.notification.ZenModeConditions: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<android.widget.MediaController: void setAnchorView(android.view.View)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<android.widget.Chronometer: void onDetachedFromWindow()>
<android.net.ip.IpManager.ProvisioningConfiguration: void <init>()>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>
<android.app.ProgressDialog: void setProgressStyle(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustChanged(boolean,int,int)>
<android.app.Notification: java.lang.String getGroup()>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>
<android.os.Handler: boolean hasMessages(int)>
<android.app.Activity: void onAttachedToWindow()>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<com.android.systemui.classifier.FalsingManager: void onScreenOnFromTouch()>
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>
<com.android.server.am.ActivityManagerService: void reportSizeConfigurations(android.os.IBinder,int[],int[],int[])>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void cancelDiscovery()>
<com.android.documentsui.State: boolean hasInitialLocationChanged()>
<android.provider.Contacts.Intents: void <init>()>
<android.app.ActivityManagerProxy: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<com.android.server.power.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>
<android.text.HtmlToSpannedConverter: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.PorterDuffXfermode_Delegate: boolean isSupported()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getName()>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>
<com.android.documentsui.MimePredicate: boolean isApkType(java.lang.String)>
<android.content.CursorLoader: void deliverResult(android.database.Cursor)>
<com.android.printspooler.widget.PrintContentView: void focusableViewAvailable(android.view.View)>
<com.android.systemui.volume.VolumeDialogController: com.android.systemui.volume.MediaSessions createMediaSessions(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions.Callbacks)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>
<android.opengl.GLES20: void glClearDepthf(float)>
<com.android.systemui.classifier.AnglesClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.tv.TvStatusBar: void disable(int,int,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void repositionNavigationBar()>
<android.graphics.Canvas: void <init>()>
<com.android.systemui.recents.views.TaskViewTransform: boolean isSame(com.android.systemui.recents.views.TaskViewTransform)>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>
<android.renderscript.ScriptIntrinsicLUT: void setAlpha(int,int)>
<com.android.systemui.qs.tiles.UserTile: void handleClick()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<android.text.format.Time: java.lang.String format2445()>
<android.nfc.cardemulation.NfcFCardEmulation: boolean setNfcid2ForService(android.content.ComponentName,java.lang.String)>
<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.server.backup.UsageStatsBackupHelper: byte[] getBackupPayload(java.lang.String)>
<android.telecom.GatewayInfo: android.net.Uri getOriginalAddress()>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>
<android.content.res.Configuration: int diff(android.content.res.Configuration)>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>
<android.print.PageRange: int getEnd()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void write(int)>
<android.view.InputDevice: int getVendorId()>
<android.mtp.MtpObjectInfo: int getSequenceNumber()>
<com.android.systemui.recents.views.AnimationProps: long getDuration(int)>
<android.telecom.CallAudioState: boolean isMuted()>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<android.os.PatternMatcher: int getType()>
<com.android.systemui.qs.tiles.DataSaverTile: void onDataSaverChanged(boolean)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendKeyDown(android.os.IBinder,int)>
<android.graphics.Path_Delegate: void rLineTo(float,float)>
<android.text.style.LocaleSpan: void updateMeasureState(android.text.TextPaint)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<com.android.gallery3d.exif.ExifInvalidFormatException: void <init>(java.lang.String)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder hdmiPortId(int)>
<android.app.VoiceInteractor.Prompt: java.lang.CharSequence getVoicePromptAt(int)>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>
<org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
<com.android.systemui.statusbar.car.CarStatusBar: void destroy()>
<android.graphics.Path_Delegate: void addPath(long,long,java.awt.geom.AffineTransform)>
<android.webkit.WebView: void resumeTimers()>
<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<com.android.printspooler.widget.PrintContentView: void closeOptions()>
<android.view.View: void setY(float)>
<android.widget.TimePicker: android.os.Parcelable onSaveInstanceState()>
<android.renderscript.BaseObj: void setName(java.lang.String)>
<com.android.systemui.recents.RecentsImpl: android.app.ActivityOptions getHomeTransitionActivityOptions()>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.android.systemui.qs.tiles.CastTile: java.lang.String composeChangeAnnouncement()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<android.view.View: boolean isTemporarilyDetached()>
<com.android.systemui.recents.RecentsActivity: void onTrimMemory(int)>
<android.view.ViewParent: boolean isLayoutRequested()>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.hardware.camera2.marshal.impl.MarshalQueryableString: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.app.Notification.Style: void setBuilder(android.app.Notification.Builder)>
<android.hardware.SensorListener: void onSensorChanged(int,float[])>
<android.transition.Transition: android.transition.Transition clone()>
<android.animation.AnimatorSet: long getTotalDuration()>
<com.android.nfc_extras.EeIOException: void <init>()>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.DropBoxManagerService: boolean isTagEnabled(java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: void setBackgroundColor(int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void showTvPictureInPictureMenu()>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>
<com.android.server.fingerprint.ClientMonitor: android.hardware.fingerprint.IFingerprintServiceReceiver getReceiver()>
<com.android.systemui.tuner.StatusBarSwitch: void onDetached()>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: java.lang.CharSequence getPackageName()>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: int describeContents()>
<android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi.RSA: void <init>()>
<com.android.keyguard.KeyguardAbsKeyInputView: void verifyPasswordAndUnlock()>
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDevicePolicyManagerStateChanged()>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.server.policy.RecentApplicationsBackground: boolean setFrame(int,int,int,int)>
<android.widget.Editor.HandleView: void hide()>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.graphics.pdf.PdfDocument: void close()>
<android.app.ActivityManager: boolean isUserAMonkey()>
<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>
<android.media.AudioRecordingConfiguration: android.media.AudioDeviceInfo getAudioDevice()>
<android.media.JetPlayer: boolean closeJetFile()>
<com.android.server.content.ContentService.Lifecycle: void onCleanupUser(int)>
<android.animation.ValueAnimator: boolean isRunning()>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>
<com.android.systemui.statusbar.car.CarStatusBar: void updateKeyguardState(boolean,boolean)>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void init(com.android.systemui.recents.model.TaskStack)>
<android.content.pm.ResolveInfo: int getIconResource()>
<android.nfc.tech.MifareUltralight: byte[] readPages(int)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context)>
<android.view.IWindowManagerImpl: void setOverscan(int,int,int,int,int)>
<android.provider.Contacts.People: void markAsContacted(android.content.ContentResolver,long)>
<android.net.NetworkScorerAppManager.NetworkScorerAppData: void <init>(java.lang.String,int,java.lang.CharSequence,java.lang.String,java.lang.String)>
<android.view.inputmethod.CorrectionInfo: int getOffset()>
<android.content.pm.PackageParser.Package: void setSplitCodePaths(java.lang.String[])>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>
<com.android.server.backup.BackupManagerService: android.content.Intent getConfigurationIntent(java.lang.String)>
<android.nfc.tech.MifareClassic: int sectorToBlock(int)>
<android.media.JetPlayer: java.lang.Object clone()>
<javax.microedition.khronos.egl.EGL10: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<com.android.server.audio.AudioService.Lifecycle: void <init>(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: android.util.SparseIntArray getTagInfo()>
<android.media.ExifInterface: boolean getLatLong(float[])>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void setContentHeight(int,int)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>
<com.android.server.net.NetworkPolicyManagerService: void <init>(android.content.Context,android.app.IActivityManager,android.net.INetworkStatsService,android.os.INetworkManagementService)>
<android.content.ComponentName: java.lang.String flattenToShortString()>
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.util.JsonWriter: android.util.JsonWriter endObject()>
<android.app.ApplicationThreadProxy: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TableRow: java.lang.CharSequence getAccessibilityClassName()>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,float[])>
<com.android.printspooler.ui.SelectPrinterActivity: void onPause()>
<android.renderscript.ScriptIntrinsicColorMatrix: void setGreyscale()>
<android.app.assist.AssistStructure.ViewNode: boolean isEnabled()>
<android.hardware.Camera: android.hardware.Camera open()>
<com.android.systemui.recents.misc.SystemServicesProxy: void registerTaskStackListener(com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener)>
<com.android.server.am.ActivityManagerService.GrantUri: java.lang.String toString()>
<com.android.layoutlib.bridge.MockView: void addView(android.view.View,int)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<com.android.systemui.statusbar.phone.TrustDrawable: void start()>
<android.widget.AbsListView: void jumpDrawablesToCurrentState()>
<android.content.IntentSender: java.lang.String getCreatorPackage()>
<android.view.Window.Callback: void onDetachedFromWindow()>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<com.android.server.policy.PolicyControl: int adjustClearableFlags(android.view.WindowManagerPolicy.WindowState,int)>
<android.preference.Preference: void notifyHierarchyChanged()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CameraCharacteristics.Key,java.lang.Object)>
<android.app.admin.DevicePolicyManager: void reboot(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setMessage(int)>
<com.android.server.notification.ZenModeHelper: boolean shouldSuppressWhenScreenOn()>
<com.android.server.NetworkTimeUpdateService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.LocalSocket: boolean isInputShutdown()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void acquire()>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>
<com.android.systemui.statusbar.phone.QSTileHost: void destroy()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeTransportType(int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
<android.media.MediaExtractor: void selectTrack(int)>
<com.android.server.fingerprint.AuthenticationClient: void <init>(android.content.Context,long,android.os.IBinder,android.hardware.fingerprint.IFingerprintServiceReceiver,int,int,long,boolean,java.lang.String)>
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>
<android.net.ip.IpManager.WaitForProvisioningCallback: android.net.LinkProperties waitForProvisioning()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<android.widget.CalendarView.CalendarViewDelegate: void setDate(long)>
<com.android.server.policy.RecentApplicationsBackground: void jumpDrawablesToCurrentState()>
<com.android.documentsui.RootsCache: void <init>(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: void hideBootMessages()>
<com.android.printspooler.ui.FusedPrintersProvider: void onForceLoad()>
<com.android.server.net.DelayedDiskWrite: void write(java.lang.String,com.android.server.net.DelayedDiskWrite.Writer)>
<android.webkit.WebView: void onPause()>
<com.android.printservice.recommendation.plugin.samsung.VendorInfo: void <init>(android.content.res.Resources,int)>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.recents.model.FilteredTaskList: int size()>
<android.os.IPowerManager: void setAttentionLight(boolean,int)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setNetworkSpecifier(java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void sendCloseSystemWindows(java.lang.String)>
<com.android.anqp.eap.ExpandedEAPMethod: void <init>(com.android.anqp.eap.EAP.AuthInfoID,int,long)>
<android.widget.SlidingDrawer: void close()>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.location.GnssClock: java.lang.String toString()>
<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>
<android.view.View: void setLayoutDirection(int)>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocation()>
<com.android.systemui.recents.tv.views.RecentsTvView: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>
<com.android.hotspot2.Utils: java.lang.String unquote(java.lang.String)>
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>
<android.renderscript.Script: android.renderscript.Script.KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>
<android.widget.ProgressBar: void setIndeterminate(boolean)>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
<android.renderscript.Allocation: void copyTo(int[])>
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void clear()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String toLanguageTag(java.util.Locale)>
<android.accessibilityservice.GestureDescription: int getMaxStrokeCount()>
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>
<com.android.layoutlib.bridge.android.BridgeContext: android.util.DisplayMetrics getMetrics()>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>
<com.android.layoutlib.bridge.Bridge: void setCachedBitmap(java.lang.String,android.graphics.Bitmap,java.lang.Object)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>
<android.widget.AbsListView: int getVerticalScrollbarWidth()>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfo(int)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String,java.lang.String)>
<android.media.Rating: java.lang.String toString()>
<com.android.commands.input.Input: void main(java.lang.String[])>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRMM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.app.ActivityGroup: void <init>(boolean)>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleUserSwitch(int)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.DevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[],int)>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void setInTouchMode(boolean)>
<android.widget.TableRow: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.widget.DatePicker: void <init>(android.content.Context)>
<android.widget.RelativeLayout: void <init>(android.content.Context)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int configureOutputs(android.util.SparseArray)>
<javax.microedition.khronos.opengles.GL11: void glVertexPointer(int,int,int,int)>
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>
<android.speech.RecognitionService.Callback: void rmsChanged(float)>
<android.view.View.DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getColumnNumber()>
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>
<com.android.hotspot2.pps.Credential: boolean hasDisregardPassword()>
<android.transition.ChangeImageTransform: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: void setDescendantFocusability(int)>
<com.android.gallery3d.util.IntArray: int size()>
<com.android.systemui.recents.views.TaskStackView: void onDraw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean areAllItemsEnabled()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getNormalizedLabel()>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>
<android.webkit.CacheManager: boolean endCacheTransaction()>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.os.Binder: boolean isBinderAlive()>
<android.graphics.Xfermode: void finalize()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<android.hardware.usb.UsbDevice: java.lang.String getVersion()>
<com.android.systemui.statusbar.policy.ZenModeController: android.content.ComponentName getEffectsSuppressor()>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>
<android.view.IWindowManagerImpl: void getInitialDisplaySize(int,android.graphics.Point)>
<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
<com.android.hotspot2.pps.HomeSP: java.util.HashSet getRoamingConsortiums()>
<android.location.Location: void <init>(android.location.Location)>
<android.app.ProgressDialog: void setSecondaryProgress(int)>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createForceHideWallpaperExitAnimation(boolean)>
<com.android.server.twilight.TwilightService: void onBootPhase(int)>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
<android.app.ListActivity: void setSelection(int)>
<android.media.tv.TvInputService.Session: boolean onKeyUp(int,android.view.KeyEvent)>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>
<android.media.midi.MidiDevice: android.media.midi.MidiOutputPort openOutputPort(int)>
<com.android.systemui.statusbar.ExpandableOutlineView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.commands.svc.DataCommand: void <init>()>
<com.android.gallery3d.glrenderer.BasicTexture: void recycle()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.lang.String)>
<android.opengl.GLES10: void glAlphaFunc(int,float)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void endAffordanceLaunch()>
<com.android.server.wm.animation.CurvedTranslateAnimation: void <init>(android.graphics.Path)>
<android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate: void toPath(android.graphics.Path)>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>
<android.view.animation.Animation: void setDuration(long)>
<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>
<android.database.Cursor: long getLong(int)>
<com.android.documentsui.dirlist.DirectoryFragment: void requestFocus()>
<com.android.systemui.qs.tiles.UserTile: java.lang.CharSequence getTileLabel()>
<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<android.view.View: boolean hasFocusable()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.lang.String,int)>
<com.android.hotspot2.osu.OSUSocketFactory: void reloadKeys(java.util.Map,java.security.PrivateKey)>
<android.widget.AbsSpinner: java.lang.CharSequence getAccessibilityClassName()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setId(long)>
<com.android.anqp.eap.ExpandedEAPMethod: void <init>(com.android.anqp.eap.EAP.AuthInfoID,int,java.nio.ByteBuffer)>
<android.preference.Preference: void setFragment(java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean hasSameBgColor(com.android.systemui.statusbar.ActivatableNotificationView)>
<com.android.systemui.statusbar.policy.LocationController: void addSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<android.content.CursorLoader: void cancelLoadInBackground()>
<android.graphics.Canvas_Delegate: void native_setBitmap(long,android.graphics.Bitmap)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void notifyGroupChildAdded(android.view.View)>
<android.media.tv.TvTrackInfo: int getType()>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>
<android.content.pm.ConfigurationInfo: java.lang.String toString()>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
<com.android.location.provider.ActivityRecognitionProviderClient: void onProviderChanged(boolean,com.android.location.provider.ActivityRecognitionProvider)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isShadeExpanded()>
<android.view.DragEvent: int getAction()>
<com.android.systemui.recents.model.RecentsTaskLoader: void onBusEvent(com.android.systemui.recents.events.activity.PackagesChangedEvent)>
<android.util.Rational: void <init>(int,int)>
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>
<android.view.View: float getPivotX()>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>
<com.android.server.am.ActivityManagerService: void cancelIntentSender(android.content.IIntentSender)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<javax.microedition.khronos.opengles.GL10: void glPopMatrix()>
<android.view.KeyEvent: char getNumber()>
<com.android.documentsui.RecentsLoader: void onStopLoading()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean)>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>
<android.telecom.RemoteConnection: android.net.Uri getAddress()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadLeft()>
<android.media.AudioAttributes: int describeContents()>
<com.android.server.notification.EventConditionProvider: void onDestroy()>
<android.view.InputDevice.MotionRange: boolean isFromSource(int)>
<android.view.accessibility.AccessibilityRecord: boolean isScrollable()>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.CharSequence getLabelForType(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setPhoneStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.statusbar.GestureRecorder: void save()>
<android.os.Parcel: void writeFloatArray(float[])>
<android.view.KeyEvent: int getModifiers()>
<android.os.PowerManager.WakeLock: void acquire(long)>
<android.telephony.CellInfo: java.lang.String toString()>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<android.media.MediaRecorder: void pause()>
<com.android.server.job.controllers.ConnectivityController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.location.Address: java.lang.String getPhone()>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void tag(long,java.lang.String,java.lang.String)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPassword()>
<android.media.MediaPlayer: void selectTrack(int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.android.settingslib.wifi.AccessPointPreference: void updateIcon(int,android.content.Context)>
<com.android.systemui.statusbar.stack.AmbientState: void setScrollY(int)>
<com.android.systemui.assist.AssistOrbContainer: void onFinishInflate()>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onBootPhase(int)>
<android.widget.EditText: void selectAll()>
<android.app.MediaRouteActionProvider: void <init>(android.content.Context)>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
<com.android.server.pm.UserManagerService: int[] getProfileIds(int,boolean)>
<android.location.Address: void setPremises(java.lang.String)>
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<com.android.server.fingerprint.ClientMonitor: boolean onAcquired(int)>
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)>
<android.graphics.PathMeasure: void <init>()>
<android.graphics.drawable.Drawable: boolean setState(int[])>
<com.android.gallery3d.glrenderer.BasicTexture: boolean hasBorder()>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>
<android.content.Context: java.io.File getCodeCacheDir()>
<com.android.pacprocessor.PacService: android.os.IBinder onBind(android.content.Intent)>
<android.content.ContentProviderProxy: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.systemui.tuner.TunerService: void setValue(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glCullFace(int)>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onError()>
<android.text.TextDirectionHeuristics.TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>
<android.animation.TimeAnimator.TimeListener: void onTimeUpdate(android.animation.TimeAnimator,long,long)>
<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>
<android.opengl.GLES32: void glGetnUniformiv(int,int,int,int[],int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void loadDimens()>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.database.AbstractCursor: boolean isFirst()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<android.view.View: void setElevation(float)>
<com.android.hotspot2.IMSIParameter: boolean isPrefix()>
<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<com.android.tools.layoutlib.java.Objects: java.lang.String toString(java.lang.Object)>
<android.hardware.camera2.impl.CameraDeviceImpl: void finalize()>
<android.os.ParcelFileDescriptor: long getStatSize()>
<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int)>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>
<android.graphics.Path_Delegate: void rCubicTo(float,float,float,float,float,float)>
<android.os.CommonTimeConfig.OnServerDiedListener: void onServerDied()>
<android.widget.TextView.SavedState: java.lang.String toString()>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.BaseObj getObject()>
<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.view.textservice.SpellCheckerSubtype: int getNameResId()>
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>
<com.android.printspooler.ui.FusedPrintersProvider: void onLocationChanged(android.location.Location)>
<android.hardware.camera2.params.OutputConfiguration: android.view.Surface getSurface()>
<com.android.systemui.qs.QuickQSPanel: void setQSPanelAndHeader(com.android.systemui.qs.QSPanel,android.view.View)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void getPageContent(com.android.printspooler.model.PageContentRepository.RenderSpec,com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback)>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.content.pm.FeatureInfo: int describeContents()>
<com.android.server.wm.DockedStackDividerController: android.view.DisplayInfo getDisplayInfo()>
<com.android.server.pm.PackageManagerService: boolean isEphemeralApplication(java.lang.String,int)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Part getPart(int)>
<com.android.hotspot2.omadm.OMAScalar: boolean isLeaf()>
<android.opengl.EGLSurface: boolean equals(java.lang.Object)>
<android.util.EventLog: int writeEvent(int,float)>
<android.telecom.RemoteConnection.VideoProvider: void requestCameraCapabilities()>
<com.android.systemui.qs.customize.CustomizeTileView: void createLabel()>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)>
<com.android.keyguard.ViewMediatorCallback: void setNeedsInput(boolean)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: void dataSetChanged()>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>
<android.os.BaseBundle: double getDouble(java.lang.String)>
<android.util.SparseBooleanArray: int indexOfKey(int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void addCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.preload.DumpTableModel: java.lang.Object getValueAt(int,int)>
<com.android.server.am.ProcessStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.Notification.Action: android.graphics.drawable.Icon getIcon()>
<android.app.DialogFragment: void <init>()>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback: void onBrightnessLevelChanged()>
<android.hardware.Sensor: int getId()>
<com.android.systemui.statusbar.ActivatableNotificationView: void drawableStateChanged()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo build()>
<android.view.View: int getVerticalFadingEdgeLength()>
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()>
<android.view.Menu: void clear()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintError(int,java.lang.String)>
<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: boolean isForegroundActivity()>
<com.android.server.pm.IntentFilterVerificationState: int getUserId()>
<com.android.server.backup.FullBackupJob: void schedule(android.content.Context,long)>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>
<com.android.layoutlib.bridge.bars.Config: int getTimeColor(int)>
<com.android.systemui.qs.QSDetailItems: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>
<android.view.View: void setLongClickable(boolean)>
<android.graphics.Paint: boolean isFakeBoldText()>
<com.android.keyguard.KeyguardSecurityView: void startAppearAnimation()>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.view.inputmethod.CursorAnchorInfo: int describeContents()>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.media.MediaMetadataEditor: long getLong(int,long)>
<com.android.preload.ui.UI: java.io.File showSaveDialog()>
<android.app.ActivityManagerProxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>
<android.widget.AdapterView: void removeViewAt(int)>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.QSTileHost: java.util.Collection getTiles()>
<android.graphics.drawable.DrawableWrapper: void setHotspot(float,float)>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
<com.android.systemui.qs.AutoSizingList: void onMeasure(int,int)>
<com.android.location.provider.GeocodeProvider: android.os.IBinder getBinder()>
<android.telecom.Call: android.telecom.Call.Details getDetails()>
<android.content.Context: boolean moveDatabaseFrom(android.content.Context,java.lang.String)>
<com.android.documentsui.services.FileOperationService: void onCreate()>
<com.android.systemui.qs.QSPanel: void setTiles(java.util.Collection,boolean)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,int[],int)>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteCategory getCategory()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void refresh()>
<android.app.FragmentTransaction: android.app.FragmentTransaction detach(android.app.Fragment)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float,float)>
<com.android.keyguard.KeyguardPINView: void onFinishInflate()>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>
<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>()>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.Result init(long)>
<android.renderscript.ScriptIntrinsicBLAS: void CGERU(android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.media.MediaRecorder: void finalize()>
<android.telecom.DisconnectCause: int hashCode()>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>
<com.android.systemui.recents.views.TaskView: void cancelTransformAnimation()>
<android.widget.ProgressBar: void drawableStateChanged()>
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>
<android.os.storage.StorageVolume: java.lang.String getUuid()>
<android.app.TabActivity: android.widget.TabHost getTabHost()>
<android.view.OrientationEventListener: void disable()>
<com.google.android.gles_jni.GLImpl: boolean glIsRenderbufferOES(int)>
<com.android.keyguard.KeyguardHostView: void showMessage(java.lang.String,int)>
<com.android.server.fingerprint.ClientMonitor: int getGroupId()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setUserExpandedChild(android.view.View,boolean)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int)>
<android.preference.PreferenceActivity: void switchToHeader(android.preference.PreferenceActivity.Header)>
<android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
<com.android.settingslib.bluetooth.HidProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.trust.TrustAgentWrapper: void <init>(android.content.Context,com.android.server.trust.TrustManagerService,android.content.Intent,android.os.UserHandle)>
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<com.android.server.notification.RankingHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean)>
<android.app.Activity: android.net.Uri onProvideReferrer()>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<android.os.BatteryStats.HistoryTag: boolean equals(java.lang.Object)>
<android.os.UserHandle: void <init>(android.os.Parcel)>
<com.android.systemui.egg.MLand: int getGameHeight()>
<com.google.android.maps.MapView: void setStreetView(boolean)>
<com.android.systemui.recents.model.Task: android.content.ComponentName getTopComponent()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.telecom.Call.Details: boolean can(int,int)>
<android.view.animation.Transformation: void clear()>
<android.view.DragEvent: boolean getResult()>
<android.transition.Transition.TransitionListener: void onTransitionCancel(android.transition.Transition)>
<android.animation.TypeConverter: java.lang.Object convert(java.lang.Object)>
<android.print.PrintAttributes.Margins: int getLeftMils()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setInterpolator(android.view.animation.Interpolator)>
<android.graphics.Paint: boolean isUnderlineText()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<android.print.PrintDocumentInfo: int describeContents()>
<com.android.server.InputMethodManagerService: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<com.android.documentsui.GridItemThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usage.UsageStatsDatabase.StatCombiner: void combine(com.android.server.usage.IntervalStats,boolean,java.util.List)>
<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void onOverscrollTopChanged(float,boolean)>
<android.view.View: boolean isNestedScrollingEnabled()>
<android.content.pm.PackageParser.Activity: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ActivityInfo)>
<android.hardware.usb.UsbDeviceConnection: boolean claimInterface(android.hardware.usb.UsbInterface,boolean)>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>
<android.view.KeyEvent: int getMetaState()>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>
<com.android.server.SerialService: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
<android.print.PrinterInfo: java.lang.String toString()>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>
<com.android.systemui.statusbar.phone.ScrimController: float getDozeInFrontAlpha()>
<android.hardware.camera2.marshal.Marshaler: android.hardware.camera2.utils.TypeReference getTypeReference()>
<android.content.res.ObbInfo: int describeContents()>
<android.webkit.WebViewProvider.ViewDelegate: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.qs.QSTile.SignalState newTileState()>
<com.android.server.dreams.DreamController.Listener: void onDreamStopped(android.os.Binder)>
<android.app.admin.DevicePolicyManager: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitTypeVariable(java.lang.String)>
<android.widget.ListPopupWindow: void setDropDownGravity(int)>
<android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyUp(int,android.view.KeyEvent)>
<android.os.storage.IMountShutdownObserver.Stub: android.os.IBinder asBinder()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void <init>(android.content.Context,android.view.ViewStub,com.android.systemui.statusbar.phone.KeyguardStatusBarView,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.Menu: android.view.MenuItem add(int)>
<android.view.Window: void setReturnTransition(android.transition.Transition)>
<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.printspooler.widget.PrintContentView: void computeScroll()>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.widget.DatePicker.OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationContentView getShowingLayout()>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.hardware.radio.RadioManager.BandConfig: int getSpacing()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setOccluded(boolean,boolean)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>
<com.android.server.job.controllers.ContentObserverController: void prepareForExecutionLocked(com.android.server.job.controllers.JobStatus)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<android.renderscript.ScriptIntrinsicBLAS: void CHEMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>
<com.android.documentsui.ListItem: void <init>(android.content.Context)>
<com.android.preload.classdataretrieval.hprof.Hprof: void init()>
<com.android.hotspot2.osu.OSUClient: void provision(com.android.hotspot2.osu.OSUManager,android.net.Network,javax.net.ssl.KeyManager)>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,int[])>
<android.view.IWindowManagerImpl: void clearForcedDisplayDensityForUser(int,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIconVisibility(java.lang.String,boolean)>
<android.os.Bundle: float getFloat(java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteStartGps(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setShadowAlpha(float)>
<com.android.anqp.eap.NonEAPInnerAuth: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<android.media.MediaPlayer: void finalize()>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStarted()>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.bluetooth.BluetoothDevice: int getBondState()>
<android.os.Message: int describeContents()>
<com.android.keyguard.KeyguardSecurityContainer: void onPause()>
<android.view.DragEvent: float getX()>
<com.android.mtp.UsbIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.media.MediaRecorder: int getAudioSourceMax()>
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)>
<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>
<android.media.ImageReader: void finalize()>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,int)>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>
<android.renderscript.RenderScript: android.renderscript.RenderScript createMultiContext(android.content.Context,android.renderscript.RenderScript.ContextType,int,int)>
<com.android.settingslib.drawer.SettingsDrawerAdapter: void <init>(com.android.settingslib.drawer.SettingsDrawerActivity)>
<com.android.server.policy.PhoneWindowManager: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void removeStateChangedCallback(android.os.Handler.Callback)>
<android.content.ContentValues: void <init>()>
<android.widget.AbsListView: boolean showContextMenu()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context)>
<com.android.systemui.qs.DataUsageGraph: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>
<android.graphics.Matrix: void getValues(float[])>
<android.animation.AnimatorSet: void setupEndValues()>
<android.os.UserManager: android.os.Bundle getUserRestrictions()>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void put(long,java.lang.Object)>
<android.view.TextureView: void onAttachedToWindow()>
<android.util.TypedValue: java.lang.String coerceToString(int,int)>
<android.widget.TimePicker.TimePickerDelegate: void setMinute(int)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.provider.MediaStore.Images.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean)>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int,int)>
<com.android.server.ServiceWatcher: void unlockUser(int)>
<android.content.pm.PackageInstaller.SessionInfo: android.content.Intent createDetailsIntent()>
<android.view.View: void scrollTo(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setBarState(int)>
<com.android.server.notification.RankingConfig: int getVisibilityOverride(java.lang.String,int)>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.component.ShowUserToastEvent)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliableSocketPair()>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeValue(int)>
<android.service.voice.VoiceInteractionSession.Request: boolean isActive()>
<android.view.KeyEvent: boolean isLongPress()>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>
<android.net.NetworkRequest: java.lang.String toString()>
<com.android.systemui.statusbar.BaseStatusBar: void performRemoveNotification(android.service.notification.StatusBarNotification)>
<android.net.http.SslError: boolean addError(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getLeftPreview()>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>
<android.view.View: void setAccessibilityTraversalAfter(int)>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>
<com.android.printspooler.ui.PageAdapter: void destroy(java.lang.Runnable)>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void animateHideLeftRightIcon()>
<android.hardware.radio.RadioManager.BandDescriptor: int getSpacing()>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: void onStrongAuthRequiredChanged(int)>
<com.android.printspooler.widget.PageContentView: void init(com.android.printspooler.model.PageContentRepository.PageContentProvider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<android.widget.Editor.HandleView: void updatePosition(float,float)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.MotionEvent: void setSource(int)>
<android.app.Activity: android.net.Uri getReferrer()>
<com.android.systemui.recents.views.TaskView: void dump(java.lang.String,java.io.PrintWriter)>
<android.animation.TypeConverter: void <init>(java.lang.Class,java.lang.Class)>
<android.app.MediaRouteButton: void showDialog()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>
<android.service.notification.ZenModeConfig.ScheduleInfo: java.lang.String ts(long)>
<android.app.Fragment: int hashCode()>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>
<android.content.Context: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<com.android.settingslib.graph.UsageView: void setSideLabelWeights(float,float)>
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>
<com.android.systemui.settings.CurrentUserTracker: void stopTracking()>
<android.location.Location: void removeAltitude()>
<android.text.style.TtsSpan.MeasureBuilder: void <init>()>
<android.widget.ViewFlipper: void onDetachedFromWindow()>
<android.graphics.Point: void <init>(android.graphics.Point)>
<com.android.server.wm.DisplaySettings: void writeSettingsLocked()>
<android.nfc.cardemulation.NfcFCardEmulation: boolean unregisterSystemCodeForService(android.content.ComponentName)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void <init>(int)>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>
<android.hardware.camera2.utils.TaskSingleDrainer: void beginDrain()>
<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>
<com.android.systemui.statusbar.NotificationContentView: void onNotificationUpdated(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void removeIcon(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,boolean[],int)>
<android.telecom.TelecomManager: boolean isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setFakeShadowIntensity(float,float,int,int)>
<android.view.View: void setAccessibilityLiveRegion(int)>
<android.widget.DialerFilter: boolean onKeyUp(int,android.view.KeyEvent)>
<android.view.View: int getPaddingTop()>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.app.ApplicationErrorReport: void <init>()>
<android.animation.AnimatorSet: void pause()>
<com.android.server.hdmi.HdmiControlService: void <init>(android.content.Context)>
<com.android.hotspot2.utils.HTTPResponse: void <init>(java.io.InputStream)>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)>
<android.app.ListFragment: int getSelectedItemPosition()>
<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<com.android.systemui.statusbar.phone.PanelView: void onHeightUpdated(float)>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.media.MediaRouter.Callback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.view.Surface: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isInLaunchTransition()>
<com.android.systemui.qs.QSTile.DrawableIcon: void <init>(android.graphics.drawable.Drawable)>
<com.android.server.backup.Trampoline: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>
<android.app.ActivityManagerProxy: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(java.lang.String)>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void userActivity()>
<android.filterpacks.imageproc.AutoFixFilter: void setupPorts()>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.telephony.CellIdentityWcdma: int getMnc()>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>
<com.android.mtp.MtpDocumentsProvider: void onTrimMemory(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOn()>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,float)>
<android.view.WindowManagerPolicy.WindowState: int getStackId()>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>
<com.android.preload.ui.UI: void updateWaitDialog(java.lang.String)>
<android.graphics.Movie: boolean setTime(int)>
<android.media.MediaRouter.SimpleCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager registerStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.FingerprintUnlockController)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void stopRepeating()>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>
<android.view.Display.Mode: java.lang.String toString()>
<android.telephony.CellSignalStrengthLte: boolean equals(java.lang.Object)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getState()>
<android.view.View: void setBackground(android.graphics.drawable.Drawable)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder addSupportedUriScheme(java.lang.String)>
<com.android.systemui.statusbar.notification.TransformState: void appear(float,com.android.systemui.statusbar.TransformableView)>
<android.graphics.drawable.DrawableWrapper: boolean canApplyTheme()>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isPulsing()>
<com.android.printspooler.widget.EmbeddedContentContainer: void setOnSizeChangeListener(com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener)>
<android.app.ApplicationThreadProxy: void profilerControl(boolean,android.app.ProfilerInfo,int)>
<android.telephony.CellIdentityCdma: int getLatitude()>
<android.graphics.drawable.DrawableWrapper: void applyTheme(android.content.res.Resources.Theme)>
<com.android.printspooler.model.PrintSpoolerService: java.io.File generateFileForPrintJob(android.content.Context,android.print.PrintJobId)>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>
<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>
<android.widget.Switch: void drawableStateChanged()>
<android.widget.Gallery: int computeHorizontalScrollRange()>
<com.android.systemui.qs.GlobalSetting: void handleValueChanged(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isClickedHeadsUpNotification(android.view.View)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setPressed(boolean)>
<com.android.systemui.classifier.FalsingManager: void onTrackingStopped()>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getInProgressLabel()>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>
<android.telecom.RemoteConference: void disconnect()>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.text.DynamicLayout: int getTopPadding()>
<com.android.server.audio.AudioService.VolumeStreamState: int observeDevicesForStream_syncVSS(boolean)>
<com.android.systemui.statusbar.policy.MobileSignalController: int getDataContentDescription()>
<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: byte[] getTriggerAudio()>
<com.android.settingslib.drawer.UserAdapter.UserDetails: void <init>(android.os.UserHandle,android.os.UserManager,android.content.Context)>
<android.service.quicksettings.TileService: void unlockAndRun(java.lang.Runnable)>
<android.mtp.MtpObjectInfo.Builder: void <init>(android.mtp.MtpObjectInfo)>
<com.android.systemui.qs.external.TileLifecycleManager: void onUnlockComplete()>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<android.net.wifi.nan.SubscribeSettings.Builder: android.net.wifi.nan.SubscribeSettings build()>
<android.util.SparseBooleanArray: void put(int,boolean)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onCreate(android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.TileLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.tv.pip.PipMenuActivity: void onPause()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void clickTile(android.content.ComponentName)>
<com.android.server.pm.ProtectedPackages: void <init>(android.content.Context)>
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>
<com.android.location.provider.FusedLocationHardware: void unregisterSink(com.android.location.provider.FusedLocationHardwareSink)>
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,int)>
<android.media.midi.MidiDeviceInfo: android.os.Bundle getProperties()>
<android.webkit.WebSettings: void setAllowUniversalAccessFromFileURLs(boolean)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: boolean isLayoutItem(int)>
<android.animation.Keyframe: java.lang.Class getType()>
<android.webkit.WebSettings: boolean getAllowFileAccessFromFileURLs()>
<com.android.MainActivity.OSUService: void onHandleIntent(android.content.Intent)>
<android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleRecents()>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setListening(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDismissView(com.android.systemui.statusbar.DismissView)>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.util.List getInfo()>
<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>
<com.android.settingslib.animation.AppearAnimationCreator: void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>
<com.android.systemui.qs.QSTile: void handleClick()>
<android.bluetooth.BluetoothGattCallback: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<com.android.documentsui.dirlist.DirectoryFragment: int getColumnCount()>
<com.android.server.wm.AppTransition: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PanelView: boolean isInContentBounds(float,float)>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float,float)>
<com.android.documentsui.model.DocumentInfo: void reset()>
<android.webkit.WebChromeClient.FileChooserParams: android.net.Uri[] parseResult(int,android.content.Intent)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getItemViewType(int)>
<android.media.MediaPlayer: void setLooping(boolean)>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyExpanded()>
<android.service.media.MediaBrowserService.Result: void detach()>
<android.app.MediaRouteButton: void <init>(android.content.Context)>
<android.location.LocationProvider: boolean supportsBearing()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isShowing()>
<com.android.keyguard.KeyguardHostView: void showPromptReason(int)>
<com.android.systemui.statusbar.notification.ImageTransformState: void appear(float,com.android.systemui.statusbar.TransformableView)>
<android.database.CursorWrapper: boolean isLast()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingStarted(boolean)>
<android.telephony.CellIdentityCdma: java.lang.String toString()>
<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)>
<com.google.android.gles_jni.GLImpl: void glBindRenderbufferOES(int,int)>
<com.android.photos.DumbBitmapRegionDecoder: int getHeight()>
<com.android.systemui.statusbar.ServiceMonitor: void start()>
<com.android.server.policy.ImmersiveModeConfirmation: void confirmCurrentPrompt()>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>
<android.app.Activity: void setImmersive(boolean)>
<com.android.systemui.egg.MLand: boolean onKeyDown(int,android.view.KeyEvent)>
<android.webkit.ConsoleMessage: java.lang.String message()>
<android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void jumpToCurrentState()>
<android.preference.SwitchPreference: void <init>(android.content.Context)>
<android.security.keystore.KeyInfo: boolean isInsideSecureHardware()>
<android.opengl.EGLConfig: boolean equals(java.lang.Object)>
<android.service.voice.VoiceInteractionService: void onReady()>
<android.view.View: android.graphics.drawable.Drawable getForeground()>
<android.opengl.GLES32: void glPrimitiveBoundingBox(float,float,float,float,float,float,float,float)>
<android.webkit.CacheManager.CacheResult: java.lang.String getEncoding()>
<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void userSwitched(int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>
<com.android.systemui.recents.tv.views.TaskCardView: com.android.systemui.recents.tv.animations.ViewFocusAnimator getViewFocusAnimator()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<com.android.server.net.NetworkStatsCollection: int[] getRelevantUids(int,int)>
<android.widget.ProgressBar: int getProgress()>
<com.android.keyguard.KeyguardPasswordView: void onPause()>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>
<com.android.commands.sm.Sm: void runSetEmulateFbe()>
<android.widget.ExpandableListAdapter: int getChildrenCount(int)>
<android.content.res.BridgeTypedArray: boolean getValue(int,android.util.TypedValue)>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedFraction(float)>
<android.content.UriMatcher: void <init>(int)>
<android.security.keystore.UserNotAuthenticatedException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gles_jni.EGLDisplayImpl: int hashCode()>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder streamId(int)>
<com.android.preload.Main: void setDevice(com.android.ddmlib.IDevice)>
<android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void onFinishInflate()>
<android.view.BridgeInflater: void setResourceReference(com.android.ide.common.rendering.api.ResourceReference)>
<android.os.health.TimerStat: long getTime()>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<android.widget.DatePicker: void updateDate(int,int,int)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setHomeAsUp(boolean)>
<android.view.CollapsibleActionView: void onActionViewExpanded()>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.net.wifi.RttManager.ResponderCallback: void onResponderEnableFailure(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean)>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.graphics.Canvas_Delegate: void native_restoreToCount(long,int,boolean)>
<com.android.server.am.CompatModePackages: void handlePackageAddedLocked(java.lang.String,boolean)>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onTouchEvent(android.view.MotionEvent)>
<android.filterpacks.imageproc.VignetteFilter: void <init>(java.lang.String)>
<android.hardware.camera2.utils.ListUtils: java.lang.String listToString(java.util.List)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadiusWithoutAnimation(float)>
<android.location.GnssMeasurementsEvent.Callback: void onGnssMeasurementsReceived(android.location.GnssMeasurementsEvent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getFirstChildIntrinsicHeight()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureBufferLost(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.view.Surface,long)>
<android.os.MessageQueue: void removeOnFileDescriptorEventListener(java.io.FileDescriptor)>
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.RecentsComponent: void showPrevAffiliatedTask()>
<android.view.View: boolean hasFocus()>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities createFromProfileLevel(java.lang.String,int,int)>
<android.opengl.GLES32: void glPushDebugGroup(int,int,int,java.lang.String)>
<com.android.systemui.settings.CurrentUserTracker: void <init>(android.content.Context)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.settingslib.wifi.WifiStatusTracker: void handleBroadcast(android.content.Intent)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.content.pm.LauncherApps: java.util.List getShortcuts(android.content.pm.LauncherApps.ShortcutQuery,android.os.UserHandle)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>
<android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>
<android.animation.Animator: long getDuration()>
<android.content.RestrictionEntry: void setRestrictions(android.content.RestrictionEntry[])>
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>
<android.view.IWindowManagerImpl: void disableKeyguard(android.os.IBinder,java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<com.android.mtp.MtpDocumentsService: int onStartCommand(android.content.Intent,int,int)>
<android.telecom.DisconnectCause: int getCode()>
<android.telephony.CellIdentityGsm: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: void writeToParcel(android.os.Parcel,int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>
<com.android.tools.layoutlib.create.Log: void outPrintln(java.lang.String)>
<com.android.server.updates.CarrierProvisioningUrlsInstallReceiver: void <init>()>
<android.content.pm.PackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.graphics.pdf.PdfRenderer.Page: void render(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Matrix,int)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] parsePageRanges(java.lang.CharSequence,int)>
<android.app.Notification.CarExtender.UnreadConversation: android.app.PendingIntent getReplyPendingIntent()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureRequestKeys()>
<android.widget.AbsSpinner: void setSelection(int)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setActivityStarter(com.android.systemui.statusbar.phone.ActivityStarter)>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>
<android.graphics.Camera: float getLocationY()>
<com.android.documentsui.LauncherActivity: void onActivityResult(int,int,android.content.Intent)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>
<com.android.server.usb.UsbDeviceManager: void setCurrentUser(int,com.android.server.usb.UsbSettingsManager)>
<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>
<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>
<com.android.server.am.PreBootBroadcaster: void <init>(com.android.server.am.ActivityManagerService,int,com.android.internal.util.ProgressReporter,boolean)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setConfigureIntent(android.app.PendingIntent)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setName(java.lang.String)>
<android.widget.ToggleButton: void setChecked(boolean)>
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<com.android.systemui.tv.pip.PipManager.Listener: void onPipResizeAboutToStart()>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>
<android.util.AtomicFile: java.io.File getBaseFile()>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isBusy()>
<com.android.systemui.qs.tiles.DndTile: boolean isVisible(android.content.Context)>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double4)>
<com.android.server.appwidget.AppWidgetService: void <init>(android.content.Context)>
<android.widget.CursorAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>
<com.android.systemui.qs.QSTile: void secondaryClick()>
<com.android.server.AppOpsService: int permissionToOpCode(java.lang.String)>
<android.app.Activity: boolean isInMultiWindowMode()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetails(int,java.lang.String,long,long)>
<com.android.server.fingerprint.ClientMonitor: boolean getIsRestricted()>
<android.telephony.TelephonyManager: int getDataActivity()>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.content.BroadcastReceiver.PendingResult: java.lang.String getResultData()>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>
<android.os.Debug: long getPss()>
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>
<android.widget.ProgressBar: void onMeasure(int,int)>
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>
<com.android.documentsui.model.Durable: void read(java.io.DataInputStream)>
<android.inputmethodservice.InputMethodService: void onWindowShown()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setCarMode(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchDreamingStarted()>
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)>
<android.service.notification.ZenModeConfig.ZenRule: int hashCode()>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<android.os.PowerManager.WakeLock: void release(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void deleteStream(int)>
<android.os.WorkSource: void <init>()>
<com.android.layoutlib.bridge.android.BridgeContext: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String getMimeType()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)>
<android.net.Uri: java.lang.String getQuery()>
<com.android.server.am.ActivityManagerService: void unstableProviderDied(android.os.IBinder)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>
<android.telecom.Conference: void onSwap()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<com.android.systemui.statusbar.ExpandableView: boolean isSummaryWithChildren()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDropBox()>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>
<com.android.server.media.MediaSessionService: void onSessionPlaystateChange(com.android.server.media.MediaSessionRecord,int,int)>
<com.android.server.fingerprint.AuthenticationClient: int stop(boolean)>
<android.graphics.Rect: void <init>(android.graphics.Rect)>
<com.android.server.usb.UsbAudioDevice: void <init>(int,int,boolean,boolean,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSetBackground(android.graphics.Bitmap)>
<android.transition.TransitionSet: android.transition.TransitionSet clone()>
<com.android.settingslib.RestrictedLockImageSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<com.android.systemui.SystemUIApplication: com.android.systemui.SystemUI[] getServices()>
<android.provider.ContactsContract.Contacts: void markAsContacted(android.content.ContentResolver,long)>
<com.android.server.notification.ConditionProviders: android.service.notification.Condition findCondition(android.content.ComponentName,android.net.Uri)>
<android.app.Fragment: void setReturnTransition(android.transition.Transition)>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>
<android.opengl.GLES30: boolean glIsSampler(int)>
<android.drm.DrmSupportInfo: void addMimeType(java.lang.String)>
<android.widget.AbsListView: void onWindowFocusChanged(boolean)>
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<com.android.systemui.SwipeHelper: boolean handleUpEvent(android.view.MotionEvent,android.view.View,float,float)>
<android.view.OrientationListener: void <init>(android.content.Context,int)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix4f)>
<com.android.server.am.ActivityManagerService: boolean isInMultiWindowMode(android.os.IBinder)>
<android.view.View: android.view.View getRootView()>
<android.widget.AbsListView: int computeVerticalScrollRange()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasFingerprintUnlockTimedOut(int)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap,int,boolean)>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[],int,int)>
<android.telecom.RemoteConference: void stopDtmfTone()>
<android.print.PrintJob: boolean isFailed()>
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies(java.lang.String)>
<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeUnsignedIntValue(int,int)>
<com.android.server.notification.ScheduleConditionProvider: void readSnoozed()>
<android.media.AudioRecord.Builder: android.media.AudioRecord build()>
<com.android.uiautomator.core.UiObject: boolean clickBottomRight()>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<com.android.server.fingerprint.ClientMonitor: void binderDied()>
<android.view.ViewStructure: void setDimens(int,int,int,int,int,int)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context)>
<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.AbsListView: void setOverScrollMode(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void startChildAnimation(com.android.systemui.statusbar.stack.StackScrollState,com.android.systemui.statusbar.stack.StackStateAnimator,long,long)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>
<com.android.layoutlib.bridge.impl.Stack: java.lang.Object pop()>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.server.input.InputManagerService: boolean injectInputEvent(android.view.InputEvent,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>
<android.content.ContentProviderOperation: boolean isInsert()>
<android.hardware.camera2.params.ColorSpaceTransform: java.lang.String toString()>
<android.widget.HorizontalScrollView: android.os.Parcelable onSaveInstanceState()>
<com.android.hotspot2.asn1.Asn1Oid: int hashCode()>
<android.service.dreams.DreamService: void <init>()>
<android.app.admin.DevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onOverscrollTopChanged(float,boolean)>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>
<android.view.View: boolean dispatchNestedPreFling(float,float)>
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)>
<com.android.systemui.qs.tiles.UserTile: void handleUpdateState(com.android.systemui.qs.QSTile.State,java.lang.Object)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPages(java.util.List)>
<android.animation.AnimatorSet: long getStartDelay()>
<android.opengl.GLES20: void glStencilMask(int)>
<android.provider.Contacts.People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>
<android.telecom.ConnectionRequest: int describeContents()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.telecom.Call.Details: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,java.lang.String[],java.lang.String)>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>
<android.security.keystore.KeyExpiredException: void <init>()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionCancelled()>
<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getSinceBoot()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerSync(android.os.IBinder)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>
<android.view.DragEvent: java.lang.Object getLocalState()>
<android.media.ExifInterface: double getAltitude(double)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>
<android.os.Environment: boolean isExternalStorageEmulated()>
<android.service.carrier.CarrierMessagingService.SendMmsResult: byte[] getSendConfPdu()>
<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller.SessionInfo generateInfo()>
<com.android.server.media.MediaSessionService: void enforcePhoneStatePermission(int,int)>
<android.widget.CalendarView.OnDateChangeListener: void onSelectedDayChange(android.widget.CalendarView,int,int,int)>
<com.android.commands.svc.PowerCommand: void <init>()>
<android.mtp.MtpObjectInfo: int getImagePixDepth()>
<com.android.hotspot2.est.ESTHandler: java.util.List getClientCerts()>
<com.android.server.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>
<android.webkit.WebView: void clearCache()>
<android.app.Application: void onCreate()>
<android.renderscript.RenderScript: void destroy()>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.location.Address: double getLongitude()>
<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>
<android.content.ContextWrapper: boolean moveSharedPreferencesFrom(android.content.Context,java.lang.String)>
<android.telephony.ServiceState: boolean getIsManualSelection()>
<android.media.tv.TvRecordingClient.RecordingCallback: void onError(int)>
<com.android.server.am.ActivityManagerService: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<com.android.documentsui.FilesJankPerfTest: void setUpInLoop()>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>
<com.android.documentsui.dirlist.DirectoryFragment: void copySelectedToClipboard()>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>
<android.location.GnssStatus: float getElevationDegrees(int)>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isOpaque()>
<android.database.CursorWrapper: float getFloat(int)>
<com.android.server.lights.LightsService: void onStart()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespacePrefix(int)>
<android.app.Dialog: void <init>(android.content.Context)>
<com.android.systemui.classifier.SpeedVarianceEvaluator: float evaluate(float)>
<com.android.uiautomator.core.UiObject: boolean waitUntilGone(long)>
<android.widget.Editor.UndoInputFilter: void restoreInstanceState(android.os.Parcel)>
<android.content.SyncAdapterType: boolean supportsUploading()>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageResourcePath()>
<android.os.BatteryStats.Uid: long getNetworkActivityPackets(int,int)>
<android.app.ActivityManagerProxy: void reportSizeConfigurations(android.os.IBinder,int[],int[],int[])>
<com.android.systemui.tv.pip.PipManager.Listener: void onPipActivityClosed()>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>
<com.android.server.policy.PhoneWindowManager: boolean shouldRotateSeamlessly(int,int)>
<android.view.MenuItem: android.view.ActionProvider getActionProvider()>
<android.os.storage.IObbActionListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.view.View: int getPaddingStart()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isScrolledToBottom()>
<android.graphics.Paint: void reset()>
<com.android.systemui.statusbar.policy.ZenModeController: int getZen()>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>
<com.android.documentsui.model.DurableUtils: void writeNullableString(java.io.DataOutputStream,java.lang.String)>
<android.webkit.WebView: int computeVerticalScrollRange()>
<android.app.admin.DevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<android.webkit.JsResult: void cancel()>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>
<android.content.pm.ShortcutInfo: boolean isDynamic()>
<com.android.commands.hid.Event: java.lang.String toString()>
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter.ViewBinder)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getNameForUid(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.view.View: boolean isLaidOut()>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<android.widget.EdgeEffect: void finish()>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void notifyHeightChanged(boolean)>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>
<com.android.systemui.qs.SignalTileView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.PanelView: void onClosingFinished()>
<android.widget.ExpandableListView: int getPackedPositionType(long)>
<android.printservice.PrintJob: boolean setTag(java.lang.String)>
<android.preference.Preference: boolean hasKey()>
<android.telecom.InCallService.VideoCall.Callback: void onVideoQualityChanged(int)>
<android.webkit.ClientCertRequest: java.lang.String getHost()>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
<com.android.server.policy.BarController: boolean wasRecentlyTranslucent()>
<android.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getBondState()>
<com.android.documentsui.model.RootInfo: java.lang.String getDirectoryString()>
<com.android.preload.actions.ExportAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.gallery3d.common.BitmapUtils: void recycleSilently(android.graphics.Bitmap)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setContactId(long)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float,long)>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder addCharacterBounds(int,float,float,float,float,int)>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: long getNextAlarm()>
<android.media.AudioRecord: void removeOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener)>
<android.view.WindowManager.LayoutParams: void <init>()>
<android.widget.TextView: boolean getFreezesText()>
<com.android.uiautomator.core.UiDevice: void runWatchers()>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: java.util.List getStatements()>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createForceHideEnterAnimation(boolean,boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onPinnedActivityRestartAttempt()>
<android.hardware.Sensor: int getMinDelay()>
<android.app.backup.BackupDataInputStream: int read()>
<android.drm.DrmInfoRequest: void <init>(int,java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isShowing()>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener,android.os.Handler)>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>
<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onNotificationUpdateOrReset()>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setForceWindowCollapsed(boolean)>
<com.android.location.fused.FusedLocationService: void onDestroy()>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getUserProvisioningState()>
<android.graphics.drawable.Drawable: boolean isVisible()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setNumOfMatches(int)>
<android.text.style.RasterizerSpan: void <init>(android.graphics.Rasterizer)>
<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void updateEverything()>
<android.os.Debug.InstructionCount: int globalTotal()>
<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.text.style.UnderlineSpan: void <init>()>
<com.android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onPinnedStackAnimationEnded()>
<android.telecom.Connection: android.telecom.Connection createFailedConnection(android.telecom.DisconnectCause)>
<com.android.systemui.statusbar.phone.ActivityStarter.Callback: void onActivityStarted(int)>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Rect,int)>
<com.android.systemui.classifier.FalsingManager: boolean isFalseTouch()>
<android.webkit.DateSorter: void <init>(android.content.Context)>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock()>
<android.text.style.LeadingMarginSpan.Standard: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.LockIcon: void onDetachedFromWindow()>
<com.android.systemui.statusbar.tv.TvStatusBar: void notificationLightOff()>
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>
<com.android.systemui.recents.views.TaskStackView: boolean performAccessibilityAction(int,android.os.Bundle)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getDisplayStateSupported()>
<com.android.server.media.RemoteDisplayProviderWatcher: void dump(java.io.PrintWriter,java.lang.String)>
<android.view.View: int resolveSize(int,int)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isConnectable()>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putInt(int,int)>
<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer.FrameCallback)>
<android.content.Intent.ShortcutIconResource: java.lang.String toString()>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void setScene(com.android.ide.common.rendering.api.RenderSession)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectAll()>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()>
<android.media.AudioDevicePortConfig: android.media.AudioDevicePort port()>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>
<android.hardware.camera2.utils.SurfaceUtils: boolean isSurfaceForPreview(android.view.Surface)>
<android.widget.Editor.SuggestionsPopupWindow: void onParentLostFocus()>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>
<com.android.systemui.recents.views.TaskStackView: void onReturnViewToPool(com.android.systemui.recents.views.TaskView)>
<com.android.server.usb.UsbService.Lifecycle: void onBootPhase(int)>
<android.view.OrientationListener: void <init>(android.content.Context)>
<android.media.AudioRecord: void addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,android.os.Handler)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: void <init>()>
<com.android.systemui.BatteryMeterView: void onDetachedFromWindow()>
<com.google.android.util.AbstractMessageParser.Video: boolean isHtml()>
<android.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<com.android.systemui.qs.tiles.ColorInversionTile: java.lang.CharSequence getTileLabel()>
<com.android.documentsui.model.DurableUtils: byte[] writeToArrayOrNull(com.android.documentsui.model.Durable)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>
<com.android.systemui.volume.MediaSessions: void setVolume(android.media.session.MediaSession.Token,int)>
<android.view.View: boolean isDirty()>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>
<android.hardware.radio.RadioManager.ProgramInfo: boolean isTuned()>
<com.android.systemui.statusbar.phone.QSTileHost: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar,com.android.systemui.statusbar.policy.BluetoothController,com.android.systemui.statusbar.policy.LocationController,com.android.systemui.statusbar.policy.RotationLockController,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.FlashlightController,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.UserInfoController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.statusbar.policy.SecurityController,com.android.systemui.statusbar.policy.BatteryController,com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.statusbar.policy.NextAlarmController)>
<android.telecom.StatusHints: java.lang.CharSequence getLabel()>
<android.app.RemoteInput: void writeToParcel(android.os.Parcel,int)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<android.accounts.Account: int hashCode()>
<com.android.systemui.statusbar.phone.QSTileHost: void collapsePanels()>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>
<com.android.server.SerialService: void <init>(android.content.Context)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.telecom.RemoteConnection: int getAddressPresentation()>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>
<android.webkit.WebViewProvider.ViewDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadUnbadgedIcon(android.content.pm.PackageManager)>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>
<android.hardware.usb.UsbInterface: int getId()>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>
<android.view.View: int getLayerType()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean scrollTo(android.view.View)>
<android.hardware.camera2.CaptureRequest.Builder: void set(android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(float,float,float,float)>
<com.android.server.net.LockdownVpnTracker: boolean isEnabled()>
<android.util.LruCache: int missCount()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>
<android.widget.Toast: void setMargin(float,float)>
<com.android.systemui.SwipeHelper.Callback: void onBeginDrag(android.view.View)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>
<android.hardware.camera2.params.InputConfiguration: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.systemui.recents.tv.views.RecentsTvView: android.graphics.Rect getSystemInsets()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.android.BridgeContext,boolean)>
<com.android.systemui.statusbar.ExpandableView: boolean isChildInGroup()>
<android.app.Activity: void showLockTaskEscapeMessage()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setMatchMode(int)>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getViewTypeCount()>
<com.android.server.net.NetworkStatsCollection: int[] getRelevantUids(int)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void closeInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSIconView createTileView(android.content.Context)>
<android.graphics.drawable.shapes.Shape: float getWidth()>
<com.android.printspooler.model.OpenDocumentCallback: void onSuccess()>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getSubjectMatch()>
<android.media.tv.TvView.TvInputCallback: void onVideoUnavailable(java.lang.String,int)>
<android.view.View: void clearFocus()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void appTransitionPending()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getProjectKey()>
<com.android.printservice.recommendation.util.DiscoveryListenerMultiplexer: boolean removeListener(android.net.nsd.NsdManager,android.net.nsd.NsdManager.DiscoveryListener)>
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<android.webkit.WebViewFactoryProvider.Statics: void freeMemoryForTests()>
<android.net.Uri: android.net.Uri.Builder buildUpon()>
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>
<android.graphics.Region_Delegate: java.awt.geom.Area getJavaArea()>
<android.animation.Animator: void setupEndValues()>
<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])>
<com.android.systemui.recents.tv.views.TaskCardView: void init(com.android.systemui.recents.model.Task)>
<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setUserExpanded(boolean)>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: int describeContents()>
<android.widget.SimpleAdapter: int getCount()>
<com.android.server.connectivity.NetworkNotificationManager: void showNotification(int,com.android.server.connectivity.NetworkNotificationManager.NotificationType,com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo,android.app.PendingIntent,boolean)>
<android.view.KeyboardShortcutInfo: void <init>(java.lang.CharSequence,int,int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onLayout(boolean,int,int,int,int)>
<android.widget.AdapterViewFlipper: void fyiWillBeAdvancedByHostKThx()>
<android.app.TaskStackBuilder: int getIntentCount()>
<com.android.hotspot2.osu.OSUManager: void <init>(android.content.Context)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.graphics.Path)>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>
<android.widget.ToggleButton: void drawableStateChanged()>
<android.graphics.Rect: int describeContents()>
<android.app.backup.IFullBackupRestoreObserver: void onTimeout()>
<android.database.sqlite.SQLiteDatabase: int getVersion()>
<android.webkit.WebView: void clearHistory()>
<android.content.res.BridgeTypedArray: int getResourceId(int,int)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ListActivity: void onDestroy()>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>
<com.android.systemui.statusbar.ActivatableNotificationView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setHeadsUpGoingAway(boolean)>
<com.android.systemui.statusbar.stack.PiecewiseLinearIndentationFunctor: float getValue(float)>
<android.hardware.soundtrigger.SoundTrigger.SoundModel: boolean equals(java.lang.Object)>
<android.service.notification.Condition: android.service.notification.Condition copy()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>
<com.android.server.am.ActivityManagerService: boolean isTopOfTask(android.os.IBinder)>
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.statementservice.retriever.AbstractAssetMatcher: com.android.statementservice.retriever.AbstractAssetMatcher createMatcher(java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDataSetChanged()>
<com.android.settingslib.RestrictedPreferenceHelper: boolean isDisabledByAdmin()>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap)>
<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>
<android.media.MediaCodec: void finalize()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void clear()>
<javax.microedition.khronos.opengles.GL10: void glRotatef(float,float,float,float)>
<android.content.pm.ActivityInfo: int describeContents()>
<com.android.gallery3d.glrenderer.GLPaint: void setColor(int)>
<android.renderscript.ScriptIntrinsicHistogram: void setDotCoefficients(float,float,float,float)>
<android.util.LongSparseArray: int indexOfKey(long)>
<android.view.ViewStructure: android.view.ViewStructure newChild(int)>
<android.view.View: int combineMeasuredStates(int,int)>
<com.android.hotspot2.omadm.MOManager: java.lang.String getString(com.android.hotspot2.omadm.OMANode)>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>
<com.android.documentsui.PickFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm.StackState: void computeRects(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addPackageToPreferred(java.lang.String)>
<com.android.keyguard.KeyguardPatternView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<android.content.pm.PackageParser.Package: long getLatestPackageUseTimeInMills()>
<android.telecom.Connection: void setExtras(android.os.Bundle)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.settingslib.bluetooth.MapProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.opengl.GLES32: void glPatchParameteri(int,int)>
<android.widget.AbsSpinner: android.view.View getSelectedView()>
<com.android.server.media.MediaSessionRecord: void sendMediaButton(android.view.KeyEvent,int,android.os.ResultReceiver,int,java.lang.String)>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>
<android.widget.RelativeLayout: void setGravity(int)>
<com.android.systemui.recents.model.TaskStack.DockState: void update(android.content.Context)>
<android.webkit.WebView: int getContentHeight()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setParent(int)>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord[])>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.service.voice.VoiceInteractionSession: void onCloseSystemDialogs()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result insertChild(android.view.ViewGroup,com.android.ide.common.rendering.api.ILayoutPullParser,int,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateZ()>
<android.nfc.NdefRecord: short getTnf()>
<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<android.net.wifi.WifiScanner.WifiChangeListener: void onChanging(android.net.wifi.ScanResult[])>
<android.printservice.PrinterDiscoverySession: void onStartPrinterStateTracking(android.print.PrinterId)>
<android.graphics.Path_Delegate: void fillBounds(android.graphics.RectF)>
<android.location.GnssMeasurementsEvent: java.util.Collection getMeasurements()>
<android.renderscript.ScriptIntrinsicYuvToRGB: void forEach(android.renderscript.Allocation)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getIdAttribute()>
<android.view.WindowManagerInternal.AppTransitionListener: void onAppTransitionPendingLocked()>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>
<com.android.mtp.ReceiverActivity: void onCreate(android.os.Bundle)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.print.PrintDocumentInfo: int getContentType()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setFragmentId(java.lang.String)>
<android.media.tv.TvInputInfo.Builder: android.media.tv.TvInputInfo build()>
<android.view.Window: void takeKeyEvents(boolean)>
<com.android.systemui.classifier.FalsingManager: boolean isReportingEnabled()>
<android.view.IWindowManagerImpl: void thawRotation()>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
<com.android.documentsui.dirlist.DocumentHolder: void setEnabled(boolean)>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.ActionBar: void show()>
<android.database.DatabaseUtils.InsertHelper: void close()>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>
<android.provider.Settings.Secure: android.net.Uri getUriFor(java.lang.String)>
<android.view.NotificationHeaderView.HeaderTouchListener: void bindTouchRects()>
<android.os.storage.IMountServiceListener.Stub: android.os.IBinder asBinder()>
<android.location.GpsStatus.NmeaListener: void onNmeaReceived(long,java.lang.String)>
<android.database.sqlite.SQLiteTableLockedException: void <init>()>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>
<com.android.wallpapercropper.CropView: android.graphics.Point getSourceDimensions()>
<android.service.voice.VoiceInteractionSession: void onHandleScreenshot(android.graphics.Bitmap)>
<android.widget.AbsListView.LayoutParams: void <init>(int,int,int)>
<com.android.systemui.statusbar.CommandQueue: void topAppWindowChanged(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notificationLightOff()>
<android.graphics.drawable.Icon: java.lang.String toString()>
<com.android.systemui.statusbar.notification.HybridNotificationView: android.widget.TextView getTitleView()>
<android.os.BatteryStats.Timer: boolean isRunningLocked()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>
<com.android.systemui.qs.QSTile.Host: void startActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.systemui.recents.RecentsDebugFlags: void onTuningChanged(java.lang.String,java.lang.String)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>
<android.hardware.hdmi.HdmiControlManager.HotplugEventListener: void onReceived(android.hardware.hdmi.HdmiHotplugEvent)>
<android.location.GnssStatus: boolean hasAlmanac(int)>
<android.accessibilityservice.GestureDescription.StrokeDescription: void <init>(android.graphics.Path,long,long)>
<com.android.egg.neko.Cat.CatParts: void <init>(android.content.Context)>
<android.widget.CursorTreeAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>
<com.android.systemui.power.PowerUI.WarningsUI: void showInvalidChargerWarning()>
<android.content.pm.ShortcutManager: int getIconMaxHeight()>
<android.graphics.Canvas_Delegate: void native_drawText(long,char[],int,int,float,float,int,long,long)>
<android.widget.Gallery: int computeHorizontalScrollExtent()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unpair()>
<android.accessibilityservice.AccessibilityServiceInfo: boolean equals(java.lang.Object)>
<android.webkit.WebSettings: boolean getAllowFileAccess()>
<com.google.android.maps.MapView: int getMaxZoomLevel()>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void <init>(long)>
<android.graphics.drawable.shapes.Shape: float getHeight()>
<android.app.Notification.CarExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.util.ArrayMap: int indexOfKey(java.lang.Object)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float)>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>
<android.hardware.camera2.impl.CameraDeviceImpl: int captureBurst(java.util.List,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.telecom.ConnectionService: android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.text.format.DateUtils: boolean isToday(long)>
<com.android.settingslib.wifi.AccessPoint: void setTag(java.lang.Object)>
<android.app.VoiceInteractor.CompleteVoiceRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<com.android.systemui.classifier.FalsingLog: void dump(java.io.PrintWriter)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.ExpandableListAdapter: boolean isChildSelectable(int,int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView getChildViewForTask(com.android.systemui.recents.model.Task)>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>
<android.os.health.TimerStat: void writeToParcel(android.os.Parcel,int)>
<android.app.FragmentManagerImpl: void dispatchDestroyView()>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>
<android.view.WindowManagerPolicy.WindowState: boolean isDisplayedLw()>
<android.location.SettingInjectorService: int onStartCommand(android.content.Intent,int,int)>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>
<android.provider.Contacts.People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>
<android.transition.TransitionSet: void captureStartValues(android.transition.TransitionValues)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>
<com.android.uiautomator.core.UiObject: void clearTextField()>
<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<com.android.server.audio.AudioService.VolumeStreamState: boolean hasIndexForDevice(int)>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFailed(java.lang.CharSequence)>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<android.renderscript.FieldPacker: double subF64()>
<android.widget.CompoundButton: boolean isChecked()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int hashCode()>
<android.view.View: int getPaddingEnd()>
<android.view.View: void setPivotX(float)>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>
<android.hardware.camera2.TotalCaptureResult: java.util.List getPartialResults()>
<android.view.MotionEvent: long getEventTime()>
<android.telecom.VideoProfile.CameraCapabilities: void <init>(int,int)>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayChanged(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void changeViewPosition(android.view.View,int)>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)>
<com.android.settingslib.AppItem: void <init>()>
<android.media.VolumeProvider: void <init>(int,int,int)>
<android.renderscript.ScriptIntrinsicBLAS: void DGEMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.graphics.Bitmap: int getWidth()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void setHeadsUpAppearHeightBottom(int)>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedHeight()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getYForDeltaP(float,float)>
<android.hardware.camera2.utils.SurfaceUtils: boolean isSurfaceForHwVideoEncoder(android.view.Surface)>
<android.graphics.drawable.shapes.OvalShape: void <init>()>
<android.graphics.Bitmap: int getAllocationByteCount()>
<android.content.ContentProviderProxy: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData.Builder setServiceName(java.lang.String)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void draw(com.android.layoutlib.bridge.impl.GcSnapshot.Drawable,android.graphics.Paint_Delegate,boolean,boolean)>
<android.util.Rational: boolean isZero()>
<com.android.server.InputMethodManagerService: void removeClient(com.android.internal.view.IInputMethodClient)>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.MeteringRectangle toMetering()>
<android.app.admin.DevicePolicyManager: void clearDeviceOwnerApp(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void STRSM(int,int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setWindowState(int,int)>
<android.text.style.LeadingMarginSpan.Standard: int describeContents()>
<android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>
<android.view.ViewGroup: int getChildCount()>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>
<com.android.systemui.statusbar.policy.CastController: void addCallback(com.android.systemui.statusbar.policy.CastController.Callback)>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,java.lang.Object)>
<com.android.systemui.qs.QuickQSPanel: com.android.systemui.qs.QSTileBaseView createTileView(com.android.systemui.qs.QSTile,boolean)>
<com.android.server.connectivity.NetworkAgentInfo: int numForegroundNetworkRequests()>
<com.android.systemui.statusbar.policy.CastController: void setCurrentUserId(int)>
<android.app.Notification.WearableExtender: void <init>()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.doze.DozeLog: void traceKeyguard(boolean)>
<android.view.Window: boolean getAllowEnterTransitionOverlap()>
<android.content.pm.PackageManager: java.util.List getPreferredPackages(int)>
<com.android.location.fused.FusionEngine: void setRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View,float,float)>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getSigningKeySetByPackageNameLPr(java.lang.String)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>
<android.app.Activity: boolean isVoiceInteraction()>
<android.util.LruCache: java.lang.String toString()>
<android.widget.ArrayAdapter: void sort(java.util.Comparator)>
<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
<android.content.res.BridgeTypedArray: java.lang.String getPositionDescription()>
<com.android.systemui.statusbar.ExpandableView: int getExtraBottomPadding()>
<com.android.hotspot2.osu.HTTPHandler: java.io.InputStream doGet(java.net.URL)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.print.PrintJob: boolean isQueued()>
<android.renderscript.Byte3: void <init>()>
<javax.microedition.khronos.opengles.GL10: void glPointSize(float)>
<com.android.settingslib.display.DisplayDensityUtils: void clearForcedDisplayDensity(int)>
<android.graphics.DrawFilter_Delegate: android.graphics.DrawFilter_Delegate getDelegate(long)>
<com.android.layoutlib.bridge.android.BridgeContext: int getWallpaperDesiredMinimumHeight()>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.Filter: void filter(java.lang.CharSequence)>
<android.hardware.camera2.utils.CloseableLock: void close()>
<com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.os.BatteryStats.Uid: void noteFullWifiLockAcquiredLocked(long)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unregisterCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<com.android.server.notification.RankingHelper: org.json.JSONArray dumpBansJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void prepare2(int,int)>
<android.graphics.SurfaceTexture: void releaseTexImage()>
<android.view.WindowInsets: int getStableInsetLeft()>
<android.view.ViewStub: void draw(android.graphics.Canvas)>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int compareTo(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.view.SurfaceControl.PhysicalDisplayInfo: void copyFrom(android.view.SurfaceControl.PhysicalDisplayInfo)>
<android.service.carrier.CarrierService: android.os.IBinder onBind(android.content.Intent)>
<android.telecom.CallAudioState: int describeContents()>
<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()>
<android.text.method.BaseMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.systemui.settings.BrightnessController: void onInit(com.android.systemui.settings.ToggleSlider)>
<com.android.server.am.ProcessStatsService: boolean shouldWriteNowLocked(long)>
<android.app.admin.DevicePolicyManager: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<android.widget.ViewFlipper: void onAttachedToWindow()>
<android.net.ProxyInfo: boolean equals(java.lang.Object)>
<android.view.MotionEvent: float getHistoricalOrientation(int)>
<android.media.MediaDrm: void setOnExpirationUpdateListener(android.media.MediaDrm.OnExpirationUpdateListener,android.os.Handler)>
<android.renderscript.Float2: void <init>()>
<com.android.commands.svc.Svc: void main(java.lang.String[])>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>
<android.telephony.CellIdentityLte: int hashCode()>
<android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
<com.android.systemui.statusbar.policy.DeadZone: void poke(android.view.MotionEvent)>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void setTintList(android.content.res.ColorStateList)>
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>
<android.telephony.SubscriptionInfo: java.lang.String getIccId()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getObbDir()>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size convertSize(android.hardware.Camera.Size)>
<android.media.MediaRouterClientState.RouteInfo: void <init>(java.lang.String)>
<android.app.WallpaperInfo: java.lang.String toString()>
<android.opengl.GLES30: void glBeginQuery(int,int)>
<android.service.dreams.DreamService: void setScreenBright(boolean)>
<android.os.Bundle: byte getByte(java.lang.String)>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long3)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setCustomizerShowing(boolean)>
<javax.microedition.khronos.opengles.GL10: void glDepthFunc(int)>
<android.text.Layout: int getWidth()>
<android.widget.FrameLayout: void onMeasure(int,int)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.media.MediaSync: void setAudioTrack(android.media.AudioTrack)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.app.FragmentController: void reportLoaderStart()>
<android.app.ApplicationThreadProxy: void scheduleLocalVoiceInteractionStarted(android.os.IBinder,com.android.internal.app.IVoiceInteractor)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setTintColor(int)>
<android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightError()>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>
<android.app.DialogFragment: void onStop()>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View,float,float)>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: void addPostAnimationCallback(java.lang.Runnable)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvx(int,int,int)>
<android.database.sqlite.SQLiteCursor: void finalize()>
<com.android.server.twilight.TwilightState: long sunsetTimeMillis()>
<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>
<android.util.SizeF: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothStateChange(boolean)>
<android.text.style.TabStopSpan.Standard: int getTabStop()>
<android.view.InputDevice.MotionRange: float getResolution()>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.gallery3d.glrenderer.GLCanvas: void scale(float,float,float)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int)>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>
<android.hardware.camera2.params.BlackLevelPattern: boolean equals(java.lang.Object)>
<android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>
<com.android.documentsui.MimePredicate: boolean isDirectoryType(java.lang.String)>
<com.android.server.audio.AudioService.VolumeStreamState: boolean adjustIndex(int,int,java.lang.String)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>
<android.content.RestrictionsManager: java.util.List getManifestRestrictions(java.lang.String)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: boolean isHardwareAccelerated()>
<android.app.admin.DevicePolicyManager: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.media.AudioTrack: int reloadStaticData()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setLocation(android.location.Location)>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.os.UserManager: java.util.List getUserProfiles()>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.nfc.NdefRecord: int describeContents()>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleKeyboardShortcutsMenu(int)>
<com.android.hotspot2.osu.OSUResponse: java.lang.String getVersion()>
<com.android.systemui.qs.QuickQSPanel: void drawTile(com.android.systemui.qs.QSPanel.TileRecord,com.android.systemui.qs.QSTile.State)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
<android.telephony.SubscriptionInfo: java.lang.CharSequence getCarrierName()>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<android.app.Application: void unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.egg.MLandActivity: void updateSplashPlayers()>
<com.android.server.net.NetworkStatsCollection: boolean isDirty()>
<android.media.Ringtone: void setStreamType(int)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isSecure(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setWakeAndUnlocking(boolean)>
<com.android.systemui.qs.external.QSTileServiceWrapper: android.service.quicksettings.IQSTileService getService()>
<android.os.StrictMode.VmPolicy.Builder: void <init>(android.os.StrictMode.VmPolicy)>
<android.renderscript.Allocation: void copyFrom(float[])>
<android.widget.RadioButton: void toggle()>
<com.android.server.notification.ScheduleCalendar: boolean isInSchedule(long)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean startTaskInDockedMode(int,int)>
<android.webkit.ServiceWorkerWebSettings: boolean getAllowFileAccess()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void close()>
<android.os.IPowerManager: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountType()>
<android.provider.DocumentsProvider: java.lang.String moveDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
<com.android.systemui.recents.RecentsSystemUser: com.android.systemui.recents.IRecentsNonSystemUserCallbacks getNonSystemUserRecentsForUser(int)>
<android.media.MediaPlayer: void setOnTimedMetaDataAvailableListener(android.media.MediaPlayer.OnTimedMetaDataAvailableListener)>
<com.android.systemui.qs.customize.QSCustomizer: boolean onMenuItemClick(android.view.MenuItem)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void addMovement(android.view.MotionEvent)>
<android.graphics.Interpolator: int getValueCount()>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,int[],int)>
<android.widget.CompoundButton: int getCompoundPaddingRight()>
<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.view.Window: void setLocalFocus(boolean,boolean)>
<com.android.hotspot2.omadm.OMANode: void fillPayload(java.lang.StringBuilder)>
<android.view.MotionEvent: void finalize()>
<javax.microedition.khronos.opengles.GL10: void glStencilMask(int)>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>
<android.provider.ContactsContract.RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>
<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>
<android.renderscript.Script: boolean getVarB(int)>
<android.widget.GridLayout.LayoutParams: void setGravity(int)>
<android.database.BulkCursorProxy: void deactivate()>
<android.content.Context: java.io.File[] getExternalCacheDirs()>
<com.android.server.wm.PointerEventDispatcher: void onInputEvent(android.view.InputEvent)>
<com.android.server.wm.DockedStackDividerController: boolean dimFullscreen()>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.android.systemui.statusbar.ExpandableView: boolean isContentExpandable()>
<com.android.server.policy.IconUtilities: void <init>(android.content.Context)>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>
<com.android.systemui.stackdivider.WindowManagerProxy: void setResizeDimLayer(boolean,int,float)>
<com.android.tools.layoutlib.create.Log: void debug(java.lang.String,java.lang.Object[])>
<android.os.Parcel: void readFloatArray(float[])>
<com.android.preload.actions.ComputeThresholdAction: void run()>
<android.view.WindowContentFrameStats: java.lang.String toString()>
<android.hardware.GeomagneticField: float getDeclination()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onScreenTurnedOff()>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.ScriptIntrinsicResize create(android.renderscript.RenderScript)>
<com.android.systemui.SystemUIApplication: java.lang.Object getComponent(java.lang.Class)>
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutIconDrawable(android.content.pm.ShortcutInfo,int)>
<android.provider.ContactsContract.CommonDataKinds.Event: int getTypeResource(java.lang.Integer)>
<com.android.systemui.qs.customize.TileAdapter: void saveSpecs(com.android.systemui.statusbar.phone.QSTileHost)>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>
<android.widget.CalendarView.CalendarViewDelegate: long getDate()>
<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<com.android.systemui.volume.VolumeDialog: void setShowHeaders(boolean)>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>
<com.android.server.usage.AppIdleHistory: void clearUsageLocked(java.lang.String,int)>
<android.location.GpsSatellite: int getPrn()>
<android.speech.tts.TextToSpeech: int setVoice(android.speech.tts.Voice)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalMediaDirs()>
<android.filterpacks.imageproc.DocumentaryFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.doze.DozeHost: boolean isPulsingBlocked()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>
<com.android.systemui.qs.QSDetailClipper: void animateCircularClip(int,int,boolean,android.animation.Animator.AnimatorListener)>
<android.preference.Preference: void setPersistent(boolean)>
<android.graphics.RectF: float width()>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)>
<android.print.PageRange: int getStart()>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>
<android.app.ActivityManagerProxy: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.notification.GlobalSortKeyComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.widget.ViewAnimator: void setDisplayedChild(int)>
<com.android.server.usb.UsbAlsaManager: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>
<com.android.settingslib.applications.ApplicationsState.AppFilter: void init()>
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhoto()>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>
<com.android.server.am.ActivityManagerService: void setRequestedOrientation(android.os.IBinder,int)>
<com.android.hotspot2.omadm.XMLNode: void addText(char[],int,int)>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.transition.Transition: java.lang.String toString()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.documentsui.RecentsCreateFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>
<com.android.server.policy.PhoneWindowManager: void getNonDecorInsetsLw(int,int,int,android.graphics.Rect)>
<com.android.systemui.classifier.PointerCountClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.animation.DisappearAnimationUtils: long calculateDelay(int,int)>
<com.android.server.policy.IconUtilities: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable)>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onConfigurationChanged(android.content.res.Configuration)>
<android.accessibilityservice.GestureDescription.Builder: android.accessibilityservice.GestureDescription build()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setSequenceNumber(long)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>
<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<android.provider.DocumentsContract: android.net.Uri buildSearchDocumentsUri(java.lang.String,java.lang.String,java.lang.String)>
<android.view.Menu: void setGroupVisible(int,boolean)>
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>
<android.media.AudioPortConfig: int format()>
<android.service.voice.VoiceInteractionSession: void onTrimMemory(int)>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>
<com.android.hotspot2.omadm.OMANode: void marshal(java.io.OutputStream,int)>
<android.media.tv.TvTrackInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.NotificationHeaderUtil: void <init>(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.view.animation.Animation: float getScaleFactor()>
<android.content.Loader.ForceLoadContentObserver: void onChange(boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void startAssist(android.os.Bundle)>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setStartScrollBottom(boolean)>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>
<android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<android.hardware.Sensor: boolean isAdditionalInfoSupported()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<com.android.server.Watchdog.HandlerChecker: java.lang.Thread getThread()>
<com.android.systemui.qs.QSTile.Callback: void onToggleStateChanged(boolean)>
<android.os.Messenger: boolean equals(java.lang.Object)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>
<android.os.BatteryStats.Uid: android.util.ArrayMap getPackageStats()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setThumbPixHeight(long)>
<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.hardware.camera2.utils.CloseableLock: android.hardware.camera2.utils.CloseableLock.ScopedLock acquireLock()>
<com.android.systemui.statusbar.NotificationContentView: android.view.View getExpandedChild()>
<android.media.session.MediaController: long getFlags()>
<android.renderscript.ScriptIntrinsicBLAS: void CTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.media.tv.TvInputService.Session: void notifyContentBlocked(android.media.tv.TvContentRating)>
<android.content.pm.PackageManager.NameNotFoundException: void <init>()>
<android.telecom.Connection: void putExtras(android.os.Bundle)>
<com.android.smspush.WapPushManager: com.android.smspush.WapPushManager.WapPushManDBHelper getDatabase(android.content.Context)>
<android.widget.Switch: int[] onCreateDrawableState(int)>
<android.transition.Visibility: boolean isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>
<com.android.systemui.statusbar.stack.ViewState: void initFrom(android.view.View)>
<android.renderscript.ScriptIntrinsicBLAS: void SGEMM(int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<android.app.Instrumentation: void waitForIdleSync()>
<com.android.systemui.qs.QSAnimator: void onAnimationAtEnd()>
<android.widget.ProgressBar: void setSecondaryProgress(int)>
<android.util.Range: java.lang.Comparable clamp(java.lang.Comparable)>
<android.app.Activity: void removeDialog(int)>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>
<com.android.server.fingerprint.ClientMonitor: void finalize()>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void handleSystemNavigationKey(int)>
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>
<android.content.ContentProviderResult: void <init>(int)>
<android.graphics.Matrix: boolean isAffine()>
<com.android.layoutlib.bridge.android.BridgePowerManager: android.os.IBinder asBinder()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setMatrix(android.graphics.Matrix)>
<com.android.systemui.volume.VolumeUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void removeTask(com.android.systemui.recents.model.Task)>
<com.android.systemui.qs.QSPanel: com.android.systemui.statusbar.phone.QSTileHost getHost()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createTextRecord(java.lang.String,java.lang.String)>
<android.view.InputDevice.MotionRange: float getFlat()>
<com.android.server.accessibility.MotionEventInjector: void onKeyEvent(android.view.KeyEvent,int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: java.lang.Object getWindowManagerLock()>
<com.android.anqp.eap.Credential: java.lang.String toString()>
<android.app.Dialog: android.app.Activity getOwnerActivity()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources.Theme)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDreamingStateChanged(boolean)>
<android.telecom.Connection: android.telecom.CallAudioState getCallAudioState()>
<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
<com.android.server.location.LocationBlacklist: void init()>
<android.app.NotificationManager: boolean areNotificationsEnabled()>
<android.widget.AbsSeekBar: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.SwipeHelper: void removeLongPressCallback()>
<com.android.server.am.ActivityManagerService: boolean isAppForeground(int)>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>
<com.android.systemui.analytics.SensorLoggerSession: void end(long,int)>
<android.content.pm.PackageManager: boolean isSafeMode()>
<com.android.settingslib.bluetooth.A2dpProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<android.view.inputmethod.InputMethodSession: void finishInput()>
<android.app.FragmentController: android.app.FragmentManager getFragmentManager()>
<android.widget.GridLayout: void requestLayout()>
<android.widget.Editor.EditOperation: void <init>(android.widget.Editor,java.lang.String,int,java.lang.String)>
<android.webkit.WebBackForwardList: int getCurrentIndex()>
<android.net.Uri: int compareTo(android.net.Uri)>
<android.bluetooth.le.ScanCallback: void onScanFailed(int)>
<com.android.server.job.JobPackageTracker: void addEvent(int,int,java.lang.String)>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>
<android.transition.Transition: android.transition.Transition setDuration(long)>
<com.android.server.wm.TaskStack: boolean setPinnedStackSize(android.graphics.Rect,android.graphics.Rect)>
<android.content.pm.Signature: int hashCode()>
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()>
<com.android.systemui.classifier.FalsingManager: void onNotificationActive()>
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getWrongPasswordStringId()>
<com.android.systemui.statusbar.CommandQueue: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.pm.PackageManagerService: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: java.util.List getVolumes()>
<android.content.pm.PackageInstaller.SessionParams: void setOriginatingUri(android.net.Uri)>
<com.android.server.am.BatteryStatsService: void noteResetFlashlight()>
<android.text.method.BaseMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.media.audiofx.NoiseSuppressor: boolean isAvailable()>
<com.android.systemui.qs.QSFooter: void <init>(com.android.systemui.qs.QSPanel,android.content.Context)>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: float getDeltaPForY(int,int)>
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatusCallback,android.os.Handler)>
<android.animation.Animator: void start()>
<com.android.server.fingerprint.FingerprintUtils: java.util.List getFingerprintsForUser(android.content.Context,int)>
<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>
<android.view.View: int getAccessibilityTraversalBefore()>
<android.text.style.ScaleXSpan: float getScaleX()>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.am.UserState: boolean setState(int,int)>
<android.util.ArrayMap: void clear()>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain()>
<com.android.systemui.statusbar.NotificationContentView: void onVisibilityChanged(android.view.View,int)>
<com.android.server.am.ActivityManagerService: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setExtension(java.lang.String)>
<android.util.DisplayMetrics: boolean equals(java.lang.Object)>
<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void onMeasure(int,int)>
<android.graphics.BlurMaskFilter_Delegate: java.lang.String getSupportMessage()>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
<android.webkit.WebViewFactoryProvider.Statics: void clearClientCertPreferences(java.lang.Runnable)>
<android.content.Intent: int describeContents()>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>
<com.android.systemui.recents.misc.Utilities: float clamp(float,float,float)>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.app.ListFragment: void setSelection(int)>
<android.widget.AbsListView: boolean isFastScrollEnabled()>
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>
<com.android.server.usage.UsageStatsXml: long parseBeginTime(android.util.AtomicFile)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder getBitmapRegionDecoder()>
<com.android.server.InputMethodManagerService: void setInputMethod(android.os.IBinder,java.lang.String)>
<android.os.Debug: int getGlobalClassInitCount()>
<android.telephony.ServiceState: void setStateOutOfService()>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>
<android.text.TextUtils.SimpleStringSplitter: void <init>(char)>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.usage.NetworkStats.Bucket: long getEndTimeStamp()>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMin()>
<com.android.systemui.recents.model.TaskGrouping: boolean isTaskAboveTask(com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task)>
<android.view.View: int getMinimumWidth()>
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.hardware.camera2.legacy.LegacyRequestMapper: void convertRequestMetadata(android.hardware.camera2.legacy.LegacyRequest)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isZenAvailable()>
<android.printservice.PrintService: void attachBaseContext(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void clearLastInputMethodWindowForTransition(android.os.IBinder)>
<com.android.egg.neko.Cat: com.android.egg.neko.Cat create(android.content.Context)>
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>
<android.view.animation.Animation: boolean willChangeBounds()>
<android.net.ConnectivityManager.NetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>
<com.android.systemui.statusbar.NotificationSettingsIconRow.SettingsIconRowListener: void onSettingsIconRowReset(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.graphics.LayerRasterizer_Delegate: boolean isSupported()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void initialize(android.graphics.Rect)>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationAtStart()>
<android.widget.HorizontalScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<android.widget.TimePicker.TimePickerDelegate: void setHour(int)>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.systemui.statusbar.RemoteInputController: void remoteInputSent(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.recents.misc.SystemServicesProxy: com.android.systemui.recents.model.ThumbnailData getTaskThumbnail(int)>
<com.android.layoutlib.bridge.util.SparseWeakArray: java.lang.Object valueAt(int)>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
<android.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>
<android.graphics.drawable.ClipDrawable: int getOpacity()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onDetachedFromWindow()>
<android.hardware.Camera.Parameters: void getPreviewFpsRange(int[])>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.view.View: boolean isImportantForAccessibility()>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,int[],int)>
<android.service.notification.NotificationListenerService: android.os.IBinder onBind(android.content.Intent)>
<android.net.MailTo: java.lang.String getCc()>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.systemui.qs.tiles.HotspotTile: java.lang.CharSequence getTileLabel()>
<com.android.server.notification.ZenModeConditions: void onBootComplete()>
<android.view.FrameStats: long getEndTimeNano()>
<com.android.settingslib.bluetooth.BluetoothEventManager: void unregisterCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
<com.android.server.display.DisplayTransformManager: void setColorMatrix(int,float[])>
<com.android.tools.layoutlib.create.DependencyFinder: void <init>(com.android.tools.layoutlib.create.Log)>
<android.app.Fragment: void setRetainInstance(boolean)>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<android.graphics.PointF: void <init>(float,float)>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void performDismiss()>
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>
<android.renderscript.Script.LaunchOptions: int getZStart()>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context)>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>
<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long,boolean)>
<android.telecom.TelecomManager: java.lang.String getVoiceMailNumber(android.telecom.PhoneAccountHandle)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<com.android.systemui.volume.VolumeComponent: com.android.systemui.statusbar.policy.ZenModeController getZenController()>
<com.android.keyguard.KeyguardSecurityContainer: void verifyUnlock()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTimeChanged()>
<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>
<android.widget.TextView: void onBeginBatchEdit()>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.volume.VolumeDialogController: void notifyVisible(boolean)>
<android.content.pm.ProviderInfo: java.lang.String toString()>
<android.printservice.PrintJob: boolean fail(java.lang.String)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.widget.TimePicker.TimePickerDelegate: int getHour()>
<android.graphics.Matrix: java.lang.String toString()>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
<android.content.BroadcastReceiver: void abortBroadcast()>
<android.renderscript.Element: android.renderscript.Element F64_4(android.renderscript.RenderScript)>
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>
<android.drm.DrmSupportInfo: void addFileSuffix(java.lang.String)>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<android.telecom.StatusHints: boolean equals(java.lang.Object)>
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()>
<android.os.IBatteryPropertiesListener: void batteryPropertiesChanged(android.os.BatteryProperties)>
<com.android.systemui.statusbar.NotificationContentView: void setContainingNotification(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.app.Fragment: int getTargetRequestCode()>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: android.hardware.soundtrigger.SoundTrigger.RecognitionEvent fromParcel(android.os.Parcel)>
<com.android.settingslib.bluetooth.PanProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.hardware.radio.RadioManager.AmBandConfig.Builder: void <init>(android.hardware.radio.RadioManager.AmBandDescriptor)>
<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>
<android.os.Parcel: android.os.Parcel obtain()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void tearDown(android.view.Surface)>
<android.database.AbstractCursor: boolean onMove(int,int)>
<android.hardware.camera2.CameraCaptureSession: void prepare(android.view.Surface)>
<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>
<com.android.documentsui.DocumentsToolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.notification.ManagedServices: void onBootPhaseAppsCanStart()>
<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>
<android.speech.SpeechRecognizer: void destroy()>
<com.android.server.am.ActivityManagerService: int getFocusedStackId()>
<android.graphics.Bitmap: boolean hasAlpha()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOn()>
<android.hardware.Camera.Parameters: void setFlashMode(java.lang.String)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void addNotification(com.android.systemui.statusbar.NotificationData.Entry)>
<android.app.Instrumentation: void endPerformanceSnapshot()>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<android.app.FragmentTransaction: int commit()>
<android.text.method.ScrollingMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.recents.model.TaskStack.DockState: android.graphics.Rect getDockedBounds(int,int,int,android.graphics.Rect,android.content.res.Resources)>
<android.webkit.WebViewProvider.ViewDelegate: void onDetachedFromWindow()>
<android.view.View: int getNextFocusForwardId()>
<com.android.systemui.statusbar.policy.FlashlightController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>
<android.bluetooth.BluetoothGattServer: void close()>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>
<com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndBind(android.content.Context,java.lang.String,java.lang.String,int,int,int,android.os.Handler)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.FlashlightController getFlashlightController()>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList rebuild(com.android.settingslib.applications.ApplicationsState.AppFilter,java.util.Comparator,boolean)>
<android.widget.LinearLayout: void setShowDividers(int)>
<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<com.android.server.MasterClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>
<android.telecom.TelecomManager: void placeCall(android.net.Uri,android.os.Bundle)>
<android.app.Activity: void closeContextMenu()>
<android.net.wifi.WifiManager: boolean is5GHzBandSupported()>
<com.android.server.net.NetworkStatsCollection: void dumpCheckin(java.io.PrintWriter,long,long)>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.widget.PopupWindow: void <init>(int,int)>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockWithFingerprintPossible(int)>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<android.app.Application: void onTerminate()>
<android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
<android.database.AbstractCursor: void setExtras(android.os.Bundle)>
<com.android.gallery3d.glrenderer.BasicTexture: void finalize()>
<com.android.systemui.statusbar.SystemBars: void start()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Bitmap getCroppedBitmap()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setTitle(java.lang.CharSequence)>
<com.android.server.fingerprint.FingerprintUtils: void renameFingerprintForUser(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<android.app.assist.AssistStructure.ViewNode: int getWidth()>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>()>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setConfirmLabel(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchTo(int)>
<com.android.systemui.statusbar.NotificationGuts: boolean hasImportanceChanged()>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeHandling(int)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<android.media.effect.effects.CropEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>
<com.android.systemui.statusbar.CommandQueue: void showTvPictureInPictureMenu()>
<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void keyguardGoingAway()>
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()>
<com.android.defcontainer.DefaultContainerService: android.os.IBinder onBind(android.content.Intent)>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setSubtitle(java.lang.CharSequence)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setPointSpriteTexCoordinateReplacement(boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setStayOnSetting(int)>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void resetTranslation()>
<android.util.BridgeXmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean inflateViews(com.android.systemui.statusbar.NotificationData.Entry,android.view.ViewGroup)>
<android.opengl.GLES32: void glGetSamplerParameterIuiv(int,int,java.nio.IntBuffer)>
<com.android.server.pm.UserManagerService: void clearSeedAccountData()>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>
<com.android.server.policy.PhoneWindowManager: void finishedWakingUp()>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void keyguardDone(boolean,boolean)>
<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>
<android.os.Debug: int getBinderReceivedTransactions()>
<android.mtp.MtpDevice: int getDeviceId()>
<com.android.settingslib.RestrictedLockUtils: android.graphics.drawable.Drawable getRestrictedPadlock(android.content.Context)>
<com.android.settingslib.HelpUtils: android.net.Uri uriWithAddedParameters(android.content.Context,android.net.Uri)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void draw(android.graphics.Canvas)>
<android.database.CursorWindow: long getLong(int,int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<android.renderscript.ScriptIntrinsicBLAS: void ZGEMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setUserLockedChild(android.view.View,boolean)>
<android.provider.ContactsContract.Directory: void notifyDirectoryChange(android.content.ContentResolver)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkSignatures(int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getActivityBanner(android.content.pm.ActivityInfo)>
<com.android.systemui.qs.QuickQSPanel: void onTileClick(com.android.systemui.qs.QSTile)>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.inputmethodservice.InputMethodService: void onWindowHidden()>
<android.util.Rational: int compareTo(android.util.Rational)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySet(java.lang.String)>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeIcon(int)>
<android.speech.tts.Voice: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.view.KeyEvent: void startTracking()>
<android.widget.Button: java.lang.CharSequence getAccessibilityClassName()>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.graphics.drawable.NinePatchDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.net.wifi.WifiManager.WifiLock: void release()>
<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>
<android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
<com.android.documentsui.FilesAppPerfTest: void setUp()>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener)>
<android.media.Cea608CCParser.DisplayListener: android.view.accessibility.CaptioningManager.CaptionStyle getCaptionStyle()>
<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)>
<android.os.AsyncTask: void onCancelled(java.lang.Object)>
<android.util.IntProperty: void setValue(java.lang.Object,int)>
<android.app.Notification.Action: android.app.Notification.Action clone()>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setColumnCount(int)>
<android.telecom.RemoteConference: int getConnectionProperties()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>
<android.app.VoiceInteractor.Prompt: java.lang.String toString()>
<android.widget.SlidingDrawer: void onFinishInflate()>
<com.android.systemui.statusbar.DismissView: android.view.View findContentView()>
<android.mtp.MtpDeviceInfo: boolean isOperationSupported(int)>
<com.android.systemui.recents.views.AnimateableViewBounds: int getClipBottom()>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: void postAnimation()>
<com.android.server.am.ProcessStatsService: byte[] getCurrentStats(java.util.List)>
<android.graphics.pdf.PdfDocument.Page: android.graphics.pdf.PdfDocument.PageInfo getInfo()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.classifier.HistoryEvaluator: void addGesture(float)>
<com.google.android.maps.MapView: void setSatellite(boolean)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void onRtlPropertiesChanged(int)>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>
<com.android.printspooler.model.RemotePrintDocument: void writeContent(android.content.ContentResolver,android.net.Uri)>
<android.graphics.RectF: void <init>(float,float,float,float)>
<android.graphics.drawable.BitmapDrawable: int getAlpha()>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.widget.AdapterViewFlipper: void onDetachedFromWindow()>
<android.media.MediaRouter.RouteGroup: java.lang.String toString()>
<com.android.systemui.qs.QSFooter: android.view.View getView()>
<com.android.server.storage.AppCollector: java.util.List getPackageStats(long)>
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)>
<android.util.FloatMath: float hypot(float,float)>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean isEaSupported()>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>
<android.app.Fragment: android.transition.Transition getReenterTransition()>
<com.android.server.connectivity.NetworkAgentInfo.LingerTimer: java.lang.String toString()>
<android.app.FragmentBreadCrumbs: void onLayout(boolean,int,int,int,int)>
<android.text.style.SuggestionSpan: int getFlags()>
<com.android.documentsui.UriDerivativeLoader: java.lang.Object loadInBackground(java.lang.Object,android.os.CancellationSignal)>
<android.renderscript.ScriptIntrinsicBLAS: void ZHEMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>
<com.android.systemui.qs.tiles.DndTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.os.Parcel: int dataSize()>
<android.view.KeyboardShortcutGroup: void writeToParcel(android.os.Parcel,int)>
<android.view.Menu: android.view.MenuItem getItem(int)>
<com.android.MainActivity: void <init>()>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.Window: void setReenterTransition(android.transition.Transition)>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int)>
<android.view.InputDevice: int getProductId()>
<android.media.session.MediaController.TransportControls: void rewind()>
<android.media.tv.TvView: void setTimeShiftPositionCallback(android.media.tv.TvView.TimeShiftPositionCallback)>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.content.res.AssetFileDescriptor: int describeContents()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserUnlocked()>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>
<com.android.providers.settings.SettingsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.content.res.Resources,int,boolean)>
<android.preference.ListPreference: void setValue(java.lang.String)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: float getXVelocity()>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(android.net.wifi.p2p.WifiP2pConfig)>
<android.content.UriMatcher: int match(android.net.Uri)>
<com.android.tools.layoutlib.create.MethodListener: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setUri(android.net.Uri)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.provider.MediaStore.Audio: java.lang.String keyFor(java.lang.String)>
<com.android.server.location.GeofenceState: java.lang.String toString()>
<android.app.ActivityManagerProxy: android.app.ActivityManager.StackInfo getStackInfo(int)>
<android.app.Activity: void stopLocalVoiceInteraction()>
<android.view.Window: int getNavigationBarColor()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>
<android.opengl.GLES32: void glSamplerParameterIuiv(int,int,int[],int)>
<android.content.res.ResourcesImpl.ThemeImpl: void finalize()>
<android.text.LoginFilter.UsernameFilterGeneric: boolean isAllowed(char)>
<android.media.tv.TvView.TvInputCallback: void onDisconnected(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener: void onEmptySpaceClicked(float,float)>
<android.widget.ArrayAdapter: void clear()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildSnappedBack(android.view.View,float)>
<android.os.health.SystemHealthManager: android.os.health.HealthStats takeUidSnapshot(int)>
<com.android.server.backup.BackupManagerService: long getAvailableRestoreToken(java.lang.String)>
<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStartTiming(java.lang.String)>
<android.renderscript.Byte2: void <init>()>
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.print.PrintAttributes: boolean equals(java.lang.Object)>
<android.widget.TableRow.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void createMenuPopup()>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>
<android.view.textservice.SpellCheckerSubtype: boolean containsExtraValueKey(java.lang.String)>
<android.database.MergeCursor: boolean onMove(int,int)>
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaSync: void setPlaybackParams(android.media.PlaybackParams)>
<android.app.FragmentController: void dispatchStop()>
<android.os.BatteryStats.HistoryItem: void clear()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.graphics.Canvas_Delegate: void native_drawRoundRect(long,float,float,float,float,float,float,long)>
<android.renderscript.Allocation: android.view.Surface getSurface()>
<android.media.AudioRecord.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioRouting)>
<com.android.layoutlib.bridge.BridgeRenderSession: void setSystemBootTimeNanos(long)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.widget.TableLayout: android.widget.TableLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.preference.PreferenceFragment: void onDestroy()>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.State getState()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureFormats()>
<android.graphics.RoundRectangle: boolean isEmpty()>
<com.android.hotspot2.osu.commands.BrowserURI: void <init>(com.android.hotspot2.omadm.XMLNode)>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>
<android.hardware.camera2.CameraManager: void unregisterTorchCallback(android.hardware.camera2.CameraManager.TorchCallback)>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>
<com.android.server.emergency.EmergencyAffordanceService: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.systemui.statusbar.car.CarStatusBar: com.android.systemui.statusbar.policy.BatteryController createBatteryController()>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.pps.HomeSP buildSP(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glFrontFace(int)>
<android.widget.Switch: boolean getSplitTrack()>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>
<android.util.AndroidException: void <init>(java.lang.String)>
<android.app.MediaRouteButton: void setRouteTypes(int)>
<com.android.preload.actions.ScanAllPackagesAction: void run()>
<android.renderscript.ScriptGroup: void execute()>
<android.location.Address: boolean hasLatitude()>
<com.android.systemui.classifier.Stroke: void addPoint(float,float,long)>
<android.view.View: void setEnabled(boolean)>
<com.android.systemui.tuner.TunerActivity.SubSettingsFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<android.hardware.Camera: void startPreview()>
<com.android.systemui.SwipeHelper.LongPressListener: boolean onLongPress(android.view.View,int,int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setConfiguration(com.android.systemui.statusbar.policy.NetworkControllerImpl.Config)>
<com.android.systemui.recents.views.AnimateableViewBounds: int getClipTop()>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
<com.android.systemui.qs.tiles.UserTile: void setListening(boolean)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>
<android.view.ViewGroup: boolean getClipChildren()>
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>
<com.android.systemui.qs.QSIconView: int getIconMeasureMode()>
<android.hardware.camera2.legacy.RequestThreadManager: void <init>(int,android.hardware.Camera,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.legacy.CameraDeviceState)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>
<android.animation.ValueAnimator: void setIntValues(int[])>
<android.database.Cursor: boolean moveToFirst()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintHelp(int,java.lang.String)>
<android.content.ContentResolver: java.util.List getCurrentSyncs()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.net.NetworkCapabilities: int hashCode()>
<android.telecom.Call.Details: boolean equals(java.lang.Object)>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>
<android.view.Window.OnRestrictedCaptionAreaChangedListener: void onRestrictedCaptionAreaChanged(android.graphics.Rect)>
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>
<com.android.systemui.SwipeHelper: long getMaxEscapeAnimDuration()>
<android.telephony.CellSignalStrengthWcdma: int hashCode()>
<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<com.android.server.audio.MediaFocusControl.AudioFocusDeathHandler: void binderDied()>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getCount()>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void updateNoSims()>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>
<javax.microedition.khronos.opengles.GL10: void glScalef(float,float,float)>
<com.android.systemui.qs.tiles.HotspotTile: boolean isAvailable()>
<com.android.nfc_extras.EeAlreadyOpenException: void <init>(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<javax.microedition.khronos.opengles.GL10: void glDrawArrays(int,int,int)>
<android.content.IntentFilter.AuthorityEntry: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleSimSubscriptionInfoChanged()>
<android.net.ip.IpManager.Callback: void setNeighborDiscoveryOffload(boolean)>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
<android.widget.ListPopupWindow: void setWidth(int)>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String[],java.lang.String)>
<android.hardware.radio.RadioManager.BandDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void onAttachedToWindow()>
<android.view.View: int getSystemUiVisibility()>
<com.android.systemui.statusbar.ViewTransformationHelper: android.util.ArraySet getAllTransformingViews()>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: void <init>(android.content.Context)>
<com.android.server.backup.BackupManagerService.FullBackupPreflight: long getExpectedSizeOrErrorCode()>
<android.speech.tts.TextToSpeech: int stop()>
<android.hardware.camera2.legacy.LegacyCameraDevice: void <init>(int,android.hardware.Camera,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.ICameraDeviceCallbacks)>
<android.content.pm.LauncherApps.ShortcutQuery: android.content.pm.LauncherApps.ShortcutQuery setQueryFlags(int)>
<android.view.InputDevice: android.os.Vibrator getVibrator()>
<com.android.server.am.ContentProviderConnection: java.lang.String toClientString()>
<com.android.systemui.qs.QSTile.ResourceIcon: com.android.systemui.qs.QSTile.Icon get(int)>
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>
<android.graphics.pdf.PdfDocument: void finalize()>
<com.android.settingslib.RestrictedLockUtils: void setTextViewPadlock(android.content.Context,android.widget.TextView,boolean)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isCountdownConditionSupported()>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: void <init>(android.content.pm.PackageManager.OnPermissionsChangedListener,android.os.Looper)>
<android.database.AbstractWindowedCursor: boolean isLong(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onWorkChallengeUnlocked()>
<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatarWithBadge(android.graphics.Bitmap,int)>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>
<android.content.DialogInterface: void cancel()>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRotationChanged(int)>
<com.android.systemui.recents.RecentsActivity: void onMultiWindowModeChanged(boolean)>
<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>
<android.view.View: void setContextClickable(boolean)>
<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>
<com.android.systemui.recents.model.FilteredTaskList: void moveTaskToStack(com.android.systemui.recents.model.Task,int,int)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>
<android.app.KeyguardManager: boolean isKeyguardLocked()>
<android.util.TypedValue: void setTo(android.util.TypedValue)>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeNameResource(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void removeCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<android.widget.ListPopupWindow: int getPromptPosition()>
<android.accounts.OperationCanceledException: void <init>()>
<com.google.android.gles_jni.GLImpl: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController)>
<android.content.pm.FeatureGroupInfo: void <init>()>
<android.content.ContentProviderProxy: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<com.android.server.net.NetworkStatsCollection: void <init>(long)>
<android.telecom.RemoteConference.Callback: void onConnectionPropertiesChanged(android.telecom.RemoteConference,int)>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<android.view.MenuItem: int getOrder()>
<com.android.keyguard.KeyguardSecurityView: void onPause()>
<android.widget.AbsSpinner: int pointToPosition(int,int)>
<com.android.server.notification.VisibilityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<android.app.ActivityManagerProxy: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<com.android.systemui.qs.QSAnimator: void setPosition(float)>
<com.android.hotspot2.pps.Credential: void <init>(long,long,java.lang.String,boolean,com.android.anqp.eap.EAPMethod,com.android.hotspot2.pps.Credential.CertType,byte[])>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void setWifiEnabled(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean interceptMediaKey(android.view.KeyEvent)>
<android.text.style.TtsSpan.MoneyBuilder: void <init>()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateExpandSettingsPanel(java.lang.String)>
<android.os.Debug: void resetThreadExternalAllocSize()>
<org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,java.lang.String,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<android.content.RestrictionEntry: void setChoiceValues(android.content.Context,int)>
<android.telecom.Connection: int getConnectionCapabilities()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onNotificationUpdated(com.android.systemui.statusbar.NotificationData.Entry)>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<com.android.systemui.statusbar.policy.KeyguardMonitor.Callback: void onKeyguardChanged()>
<android.animation.Animator: boolean isRunning()>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean setLocationEnabled(boolean)>
<com.android.gallery3d.exif.ExifInterface: short getTypeFromInfo(int)>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.security.keystore.KeyProtection: java.util.Date getKeyValidityStart()>
<android.view.View: boolean performHapticFeedback(int,int)>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>
<com.android.layoutlib.bridge.impl.GcSnapshot: boolean clipRect(float,float,float,float,int)>
<com.android.printservice.recommendation.plugin.hp.HPRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.telecom.TelecomAnalytics.SessionTiming: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<android.print.PrintDocumentInfo: java.lang.String toString()>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissTemperatureWarning()>
<android.appwidget.AppWidgetProvider: void onRestored(android.content.Context,int[],int[])>
<android.widget.ImageView: void setImageLevel(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.content.Intent: void setSelector(android.content.Intent)>
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putBitmap(int,android.graphics.Bitmap)>
<android.content.res.BridgeTypedArray: void bridgeSetValue(int,java.lang.String,boolean,com.android.ide.common.rendering.api.ResourceValue)>
<com.android.systemui.tv.pip.PipOverlayActivity: void onPipActivityClosed()>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>
<android.app.WallpaperManager: void clear(int)>
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>
<android.util.apk.ApkSignatureSchemeV2Verifier.SignatureNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<android.app.Dialog: void create()>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.widget.ResourceCursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<android.view.View: int getBottomPaddingOffset()>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.AbsListView: int getListPaddingBottom()>
<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>
<com.android.anqp.eap.NonEAPInnerAuth: int hashCode()>
<android.hardware.radio.RadioManager.BandConfig: java.lang.String toString()>
<android.media.tv.TvInputManager.TvInputCallback: void onInputRemoved(java.lang.String)>
<android.view.Window: android.content.Context getContext()>
<com.android.systemui.doze.DozeLog: void traceEmergencyCall()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getMoveStatus(int)>
<com.android.systemui.statusbar.phone.ScrimController: void abortKeyguardFadingOut()>
<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>
<com.android.documentsui.RecentsCreateFragment.RecentsCreateLoader: void <init>(android.content.Context,com.android.documentsui.RootsCache,com.android.documentsui.State)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<android.media.PlaybackParams: float getSpeed()>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
<android.view.InputDevice.MotionRange: int getAxis()>
<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<com.android.hotspot2.osu.OSUManager: void networkConfigChange(android.net.wifi.WifiConfiguration)>
<com.android.systemui.recents.misc.Utilities: void matchTaskListSize(java.util.List,java.util.List)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void dismissViewAnimated(android.view.View,java.lang.Runnable,int,long)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>
<android.app.Dialog: void onStart()>
<android.graphics.drawable.DrawableWrapper: boolean onLayoutDirectionChanged(int)>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMANode getListValue(java.util.Iterator)>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.view.View: float getTopFadingEdgeStrength()>
<com.android.systemui.statusbar.phone.QSTileHost: java.util.List loadTileSpecs(android.content.Context,java.lang.String)>
<android.opengl.EGLObjectHandle: long getNativeHandle()>
<android.location.Location: double getLatitude()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<com.android.photos.BitmapRegionTileSource: void <init>(android.content.Context,com.android.photos.BitmapRegionTileSource.BitmapSource)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>
<android.widget.TabWidget: android.graphics.drawable.Drawable getLeftStripDrawable()>
<android.graphics.Paint: float ascent()>
<android.animation.StateListAnimator: void jumpToCurrentState()>
<android.app.ActivityManagerProxy: void exitFreeformMode(android.os.IBinder)>
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>
<android.view.ViewStructure: void setVisibility(int)>
<com.android.printspooler.ui.PrintActivity: boolean canCloseOptions()>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>
<com.android.systemui.statusbar.EmptyShadeView: android.view.View findContentView()>
<android.widget.AbsSpinner: void requestLayout()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.media.SyncParams: android.media.SyncParams setFrameRate(float)>
<android.view.View: float getTranslationZ()>
<android.text.style.TabStopSpan: int getTabStop()>
<com.android.systemui.recents.tv.views.TaskCardView: android.view.View getInfoFieldView()>
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>
<android.view.animation.OvershootInterpolator: void <init>(float)>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation(int)>
<com.android.server.AnyMotionDetector.Vector3: float angleBetween(com.android.server.AnyMotionDetector.Vector3)>
<android.view.IWindowManagerImpl: void setAppOrientation(android.view.IApplicationToken,int)>
<android.os.IPowerManager: boolean isPowerSaveMode()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.service.notification.StatusBarNotification: int getId()>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>
<com.android.hotspot2.asn1.Asn1String: java.util.Collection getChildren()>
<android.telecom.InCallService: void setAudioRoute(int)>
<android.transition.Transition: android.graphics.Rect getEpicenter()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>
<com.android.uiautomator.core.UiDevice: boolean hasWatcherTriggered(java.lang.String)>
<android.location.Location: double convert(java.lang.String)>
<android.preference.Preference: android.os.Bundle peekExtras()>
<com.android.server.TextServicesManagerService: void setCurrentSpellChecker(java.lang.String,java.lang.String)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.app.SearchManager.OnCancelListener)>
<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest getCertificateRequest(android.media.MediaDrm,int,java.lang.String)>
<com.android.systemui.recents.events.activity.LaunchTaskStartedEvent: void <init>(com.android.systemui.recents.views.TaskView,boolean)>
<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.preference.MultiSelectListPreference: android.os.Parcelable onSaveInstanceState()>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>
<com.android.server.backup.SystemBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getIdAttributeResourceValue(int)>
<com.android.systemui.settings.BrightnessController: void registerCallbacks()>
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>
<android.view.View: boolean willNotDraw()>
<android.transition.PatternPathMotion: void <init>(android.graphics.Path)>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>
<com.android.hotspot2.osu.OSUInfo: long getOSUBssid()>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>
<android.view.View: void setForegroundTintMode(android.graphics.PorterDuff.Mode)>
<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>
<android.media.browse.MediaBrowser: void connect()>
<android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onConfigurationChanged()>
<com.android.vpndialogs.ConfirmDialog: void onBackPressed()>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.display.DisplayDensityUtils: void setForcedDisplayDensity(int,int)>
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>
<android.transition.ChangeBounds: void setResizeClip(boolean)>
<android.net.IpPrefix: int hashCode()>
<android.widget.TextView: void setCustomInsertionActionModeCallback(android.view.ActionMode.Callback)>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>
<com.android.systemui.classifier.ClassifierData: void update(android.view.MotionEvent)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<android.telephony.TelephonyManager: boolean canChangeDtmfToneLength()>
<android.renderscript.FieldPacker: short subI16()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onAttachedToWindow()>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>
<android.widget.AbsListView: void dispatchSetPressed(boolean)>
<com.android.systemui.recents.RecentsDebugFlags: boolean isPagingEnabled()>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<android.text.StaticLayout: int getLineCount()>
<android.os.IPowerManager: void shutdown(boolean,java.lang.String,boolean)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void onDraw(android.graphics.Canvas)>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<com.android.systemui.tv.pip.PipManager.Listener: void onPipEntered()>
<com.android.settingslib.AppItem: void <init>(android.os.Parcel)>
<com.android.server.LocationManagerService: void <init>(android.content.Context)>
<android.telecom.TelecomManager: void silenceRinger()>
<android.hardware.camera2.params.RggbChannelVector: void <init>(float,float,float,float)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(java.lang.Class)>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.PanelBar: void setBouncerShowing(boolean)>
<android.view.View: void postInvalidateDelayed(long)>
<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setSystemChildExpanded(boolean)>
<com.android.server.media.MediaSessionService: void notifyRemoteVolumeChanged(int,com.android.server.media.MediaSessionRecord)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: int read()>
<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftView()>
<com.android.server.policy.BarController: boolean checkHiddenLw()>
<com.android.statementservice.retriever.Statement: int hashCode()>
<com.android.documentsui.BaseActivity: void removeEventListener(com.android.documentsui.EventListener)>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<android.hardware.camera2.legacy.ParameterUtils.MeteringData: void <init>(android.hardware.Camera.Area,android.graphics.Rect,android.graphics.Rect)>
<android.content.Loader: void onContentChanged()>
<com.android.systemui.qs.QSTile.DetailAdapter: boolean getToggleEnabled()>
<android.view.inputmethod.CorrectionInfo: int describeContents()>
<com.android.server.AnyMotionDetector: void <init>(android.os.PowerManager,android.os.Handler,android.hardware.SensorManager,com.android.server.AnyMotionDetector.DeviceIdleCallback,float)>
<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>
<android.net.NetworkRequest: int describeContents()>
<android.security.keystore.KeyGenParameterSpec: byte[] getAttestationChallenge()>
<android.transition.Transition: android.transition.Transition excludeTarget(int,boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setIsExpanded(boolean)>
<com.android.server.net.NetworkPolicyManagerService: void bindConnectivityManager(android.net.IConnectivityManager)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: boolean equals(java.lang.Object)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getIndicationView()>
<com.android.server.pm.Installer: void createOatDir(java.lang.String,java.lang.String)>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>
<com.android.documentsui.Display: float screenWidth(android.app.Activity)>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>
<com.android.server.media.MediaSessionRecord: void dump(java.io.PrintWriter,java.lang.String)>
<android.widget.CursorAdapter: boolean hasStableIds()>
<android.widget.ImageView: void drawableHotspotChanged(float,float)>
<com.android.systemui.recents.RecentsImpl: void onVisibilityChanged(android.content.Context,boolean)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.SecurityMessageDisplay: void setNextMessageColor(int)>
<com.android.printspooler.ui.PageAdapter: boolean isOpened()>
<android.net.wifi.nan.ConfigRequest.Builder: android.net.wifi.nan.ConfigRequest.Builder setSupport5gBand(boolean)>
<android.os.Looper: void setMessageLogging(android.util.Printer)>
<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>
<com.android.server.policy.PhoneWindowManager: void onConfigurationChanged()>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>
<com.android.commands.pm.Pm: int runGetMaxUsers()>
<android.view.WindowCallback: void onActionModeFinished(android.view.ActionMode)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<com.android.systemui.recents.misc.SystemServicesProxy: void endProlongedAnimations()>
<android.widget.TextView: int getMinEms()>
<android.content.RestrictionEntry: boolean getSelectedState()>
<com.android.server.net.DnsServerRepository: void <init>()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void showCurrentUserToast(int,int)>
<android.app.Notification.WearableExtender: boolean getHintAmbientBigPicture()>
<android.graphics.drawable.VectorDrawable: boolean isStateful()>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
<android.accessibilityservice.AccessibilityService.MagnificationController.OnMagnificationChangedListener: void onMagnificationChanged(android.accessibilityservice.AccessibilityService.MagnificationController,android.graphics.Region,float,float,float)>
<android.hardware.soundtrigger.SoundTrigger.GenericSoundModel: int describeContents()>
<android.transition.Transition: android.transition.Transition setStartDelay(long)>
<android.graphics.Paint_Delegate: void setShader(long)>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>()>
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()>
<com.android.documentsui.RecentsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.google.android.gles_jni.GLImpl: void glDepthFunc(int)>
<android.preference.PreferenceGroup: int getPreferenceCount()>
<android.media.AudioManager: java.util.List getActiveRecordingConfigurations()>
<com.android.keyguard.KeyguardPatternView: void showPromptReason(int)>
<android.telephony.CellSignalStrengthGsm: int describeContents()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.documentsui.BaseActivity: void <init>(int,java.lang.String)>
<android.view.View: boolean awakenScrollBars(int,boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getFalsingThresholdFactor()>
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glClear(int)>
<android.view.VelocityTracker: void finalize()>
<com.android.systemui.tuner.NavBarTuner: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.provider.DocumentsProvider: void removeDocument(java.lang.String,java.lang.String)>
<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>
<android.app.ProgressDialog: int getSecondaryProgress()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>
<android.text.style.BulletSpan: void <init>(android.os.Parcel)>
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getBackgroundFadeAmount()>
<android.preference.Preference: void setKey(java.lang.String)>
<android.content.IntentFilter: int describeContents()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showTvPictureInPictureMenu()>
<android.graphics.Rect: void union(android.graphics.Rect)>
<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>
<android.text.style.TtsSpan.Builder: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void setInput(java.io.Reader)>
<com.android.systemui.recents.RecentsImplProxy: void onDraggingInRecents(float)>
<com.android.server.job.controllers.IdleController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagDefaultIfd(int)>
<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScoreAsValidated()>
<com.android.server.notification.ZenModeHelper: void onUserUnlocked(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void setDeferredConfiguration(int,android.hardware.camera2.params.OutputConfiguration)>
<com.android.systemui.qs.tiles.LocationTile: java.lang.CharSequence getTileLabel()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Point getShownPositionLw()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.Class)>
<android.app.usage.ConfigurationStats: long getLastTimeStamp()>
<android.widget.NumberPicker: int computeVerticalScrollOffset()>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName(android.content.Context)>
<com.android.systemui.analytics.DataCollector: void onScreenOnFromTouch()>
<android.telecom.PhoneAccount: void writeToParcel(android.os.Parcel,int)>
<com.android.server.usb.UsbService: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
<com.android.server.statusbar.StatusBarManagerService: void handleSystemNavigationKey(int)>
<android.app.ActionBar: int getTabCount()>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.qs.tiles.CastTile: void setListening(boolean)>
<com.android.systemui.qs.QSIconView: void layout(android.view.View,int,int)>
<android.app.DialogFragment: void dismiss()>
<android.os.Bundle: short getShort(java.lang.String,short)>
<android.media.MediaRouter.RouteGroup: void requestUpdateVolume(int)>
<com.android.settingslib.net.UidDetailProvider: int buildKeyForUser(int)>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.hotspot2.pps.DomainMatcher: void <init>(java.util.List,java.util.List)>
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()>
<android.telecom.RemoteConnection: android.os.Bundle getExtras()>
<com.android.layoutlib.bridge.android.BridgeWindow: void closeSystemDialogs(java.lang.String)>
<android.content.pm.LauncherApps: android.content.pm.LauncherActivityInfo resolveActivity(android.content.Intent,android.os.UserHandle)>
<android.view.TextureView: void setTransform(android.graphics.Matrix)>
<com.android.server.pm.PermissionsState: com.android.server.pm.PermissionsState.PermissionState getRuntimePermissionState(java.lang.String,int)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isGoingToNotificationShade()>
<com.android.systemui.statusbar.BaseStatusBar: boolean isPanelFullyCollapsed()>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>
<android.widget.AdapterViewAnimator: void onMeasure(int,int)>
<android.location.Location: void setAccuracy(float)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<android.widget.Adapter: int getViewTypeCount()>
<android.security.keystore.UserNotAuthenticatedException: void <init>()>
<android.view.InputDevice: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getApplicationEnabledSetting(java.lang.String)>
<com.android.location.provider.LocationProviderBase: void onDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: java.util.List popPartialResults(long)>
<android.nfc.cardemulation.HostApduService: void notifyUnhandled()>
<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForInstall(java.lang.String,int,java.lang.String)>
<com.android.hotspot2.omadm.XMLNode: void <init>(com.android.hotspot2.omadm.XMLNode,java.lang.String,org.xml.sax.Attributes)>
<com.android.systemui.qs.SignalTileView: android.view.View createIcon()>
<com.android.settingslib.drawable.UserIconDrawable: boolean isStateful()>
<android.telephony.CellSignalStrengthWcdma: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.graphics.SurfaceTexture: void attachToGLContext(int)>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Canvas: void scale(float,float)>
<android.app.KeyguardManager: boolean isDeviceLocked()>
<android.os.Debug: void startNativeTracing()>
<android.app.UiModeManager: void enableCarMode(int)>
<android.preference.PreferenceGroup: void onAttachedToActivity()>
<android.media.ToneGenerator: void <init>(int,int)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeEndSnapshot(android.os.Bundle)>
<android.widget.Scroller: int getDuration()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForIdleTimeout(long)>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>
<android.graphics.RoundRectangle: boolean contains(double,double,double,double)>
<com.android.preload.actions.RunMonkeyAction: void <init>(com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: android.view.LayoutInflater getInflater(com.android.layoutlib.bridge.android.BridgeContext)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.ExpandHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>
<com.android.server.am.BatteryStatsService: void noteInteractive(boolean)>
<android.print.PageRange: void writeToParcel(android.os.Parcel,int)>
<android.hardware.Camera.Parameters: int getMaxNumMeteringAreas()>
<android.app.VoiceInteractor: android.app.VoiceInteractor.Request getActiveRequest(java.lang.String)>
<com.android.systemui.qs.tiles.NightDisplayTile: int getMetricsCategory()>
<android.view.View: void dispatchDisplayHint(int)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: int compare(android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.MediaSize)>
<android.media.AudioManager: boolean isMusicActive()>
<com.android.systemui.recents.misc.DozeTrigger: void startDozing()>
<com.android.server.location.LocationBlacklist: void <init>(android.content.Context,android.os.Handler)>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<com.android.systemui.recents.views.TaskViewThumbnail: void dump(java.lang.String,java.io.PrintWriter)>
<android.app.Dialog: boolean requestWindowFeature(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.AppOpsManager.OnOpChangedListener: void onOpChanged(java.lang.String,java.lang.String)>
<android.hardware.Camera: void setParameters(android.hardware.Camera.Parameters)>
<com.android.anqp.Constants: java.lang.Integer getHS20ElementID(com.android.anqp.Constants.ANQPElementType)>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connect(boolean)>
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isSafeMode()>
<android.app.usage.UsageStats: long getLastTimeUsed()>
<com.android.server.backup.BackupManagerService: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>
<com.android.server.net.NetworkStatsCollection: void clearDirty()>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])>
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getExternalFilesDir(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean startWorkChallengeIfNecessary(int,android.content.IntentSender,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.view.Display getDisplay()>
<com.android.server.SystemConfig: android.util.ArrayMap getSharedLibraries()>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean equals(java.lang.Object)>
<android.os.Messenger: void <init>(android.os.Handler)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getVibratorOnTimer()>
<com.android.documentsui.model.RootInfo: boolean isLocalOnly()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack)>
<android.widget.TextView: float getLineSpacingExtra()>
<android.media.Rating: android.media.Rating newHeartRating(boolean)>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>
<android.media.MediaSync: void setCallback(android.media.MediaSync.Callback,android.os.Handler)>
<com.android.server.am.ActivityManagerService: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int)>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData build()>
<com.android.printspooler.ui.PrintActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.media.audiofx.BassBoost.OnParameterChangeListener: void onParameterChange(android.media.audiofx.BassBoost,int,int,short)>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.opengl.GLES32: void glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileName(android.content.ComponentName,java.lang.String)>
<com.android.server.job.controllers.IdleController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setOnDismissListener(android.view.View.OnClickListener)>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>
<com.android.hotspot2.osu.SOAPBuilder: java.lang.String buildUpdateResponse(java.lang.String,com.android.hotspot2.osu.OSUError)>
<com.android.systemui.recents.misc.SystemServicesProxy: java.lang.String getBadgedContentDescription(android.content.pm.ActivityInfo,int,android.content.res.Resources)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void abortCurrentGesture()>
<com.android.tools.layoutlib.create.Log: void setVerbose(boolean)>
<com.android.documentsui.RootCursorWrapper: float getFloat(int)>
<android.content.pm.PackageParser.Service: void setPackageName(java.lang.String)>
<com.android.systemui.qs.GlobalSetting: int getValue()>
<android.content.ContentResolver: void cancelSync(android.content.SyncRequest)>
<android.app.ActivityManagerProxy: boolean moveTaskToDockedStack(int,int,boolean,boolean,android.graphics.Rect,boolean)>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<com.android.server.FgThread: android.os.Handler getHandler()>
<com.android.layoutlib.bridge.impl.DelegateManager: void removeJavaReferenceFor(long)>
<android.widget.Toast: int getYOffset()>
<android.webkit.DateSorter: java.lang.String getLabel(int)>
<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
<com.android.server.connectivity.NetworkAgentInfo: boolean isLingering()>
<android.mtp.MtpDevice: int[] getStorageIds()>
<com.android.layoutlib.bridge.impl.RenderAction: void release()>
<com.android.systemui.recents.tv.views.TaskCardView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES30: void glBindVertexArray(int)>
<android.os.FileObserver: void onEvent(int,java.lang.String)>
<com.android.systemui.recents.views.RecentsTransitionHelper: void launchTaskFromRecents(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,boolean,android.graphics.Rect,int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getDataDir()>
<android.content.Context: int checkCallingUriPermission(android.net.Uri,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void dismissKeyboardShortcutsMenu()>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>
<android.app.ActivityManagerProxy: boolean bindBackupAgent(java.lang.String,int,int)>
<com.android.printspooler.ui.AddPrinterActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.preload.ui.UI: java.io.File[] showOpenDialog(boolean)>
<android.net.Network: void bindSocket(java.io.FileDescriptor)>
<javax.microedition.khronos.opengles.GL10: void glMaterialx(int,int,int)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<android.view.WindowManagerPolicy.WindowState: boolean hideLw(boolean)>
<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRule(java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glBindTexture(int,int)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onMagnificationRegionChanged(android.graphics.Region)>
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.media.AudioDeviceInfo: int[] getEncodings()>
<android.media.effect.Effect: void release()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>
<android.app.Activity: void finishAfterTransition()>
<com.android.server.media.RemoteDisplayProviderWatcher: void stop()>
<com.android.server.am.ActivityManagerService: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<android.app.Activity: void onLowMemory()>
<com.android.documentsui.RootsCache: void updateAuthorityAsync(java.lang.String)>
<com.android.keyguard.CarrierText: void updateCarrierText()>
<com.android.documentsui.model.RootInfo: boolean isVideos()>
<com.android.systemui.recents.tv.animations.HomeRecentsEnterExitAnimationHolder: void <init>(android.content.Context,com.android.systemui.recents.tv.views.TaskStackHorizontalGridView)>
<android.content.AsyncTaskLoader: void <init>(android.content.Context)>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.content.ContextWrapper: java.io.File getCodeCacheDir()>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.nfc.NdefRecord: byte[] toByteArray()>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.mtp.MtpObjectInfo: long getSequenceNumberLong()>
<com.android.server.am.ActivityManagerService: void setTaskResizeable(int,int)>
<android.os.BatteryStats.LevelStepTracker: void addLevelSteps(int,long,long)>
<android.os.health.HealthStats: long getTimerTime(int)>
<com.android.hotspot2.pps.Credential: java.lang.String getRealm()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean isLeftVoiceAssist()>
<android.media.MediaRouter: void selectRoute(int,android.media.MediaRouter.RouteInfo)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onDeviceIdle()>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>
<android.app.UiAutomation: void setRunAsMonkey(boolean)>
<com.android.documentsui.services.FileOperationService: int onStartCommand(android.content.Intent,int,int)>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getBounds()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>
<android.app.Activity: void setDefaultKeyMode(int)>
<android.location.GnssNavigationMessageEvent.Callback: void onStatusChanged(int)>
<android.content.Context: boolean deleteDatabase(java.lang.String)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHideSensitive(boolean,boolean)>
<android.media.AudioRouting: void removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>
<android.graphics.Region: boolean isComplex()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onClick(android.view.View)>
<android.view.KeyboardShortcutGroup: void <init>(java.lang.CharSequence,java.util.List)>
<android.app.Fragment: void <init>()>
<javax.microedition.khronos.opengles.GL10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionCancelled()>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>
<android.os.StrictMode.VmPolicy.Builder: void <init>()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean stopService(android.content.Intent)>
<com.android.systemui.qs.external.TileServiceManager: void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener)>
<com.android.documentsui.BaseActivity: void onDocumentPicked(com.android.documentsui.model.DocumentInfo,com.android.documentsui.dirlist.Model)>
<com.android.systemui.statusbar.phone.ScrimController: void updateScrims()>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: com.android.systemui.statusbar.phone.NoisyVelocityTracker obtain()>
<android.view.ActionMode: void invalidate()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telecom.Conference: void onSeparate(android.telecom.Connection)>
<android.telecom.RemoteConference: android.os.Bundle getExtras()>
<com.android.shell.BugreportProgressService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.WifiTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<com.android.hotspot2.omadm.OMAConstructed: void addChild(com.android.hotspot2.omadm.OMANode)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean deleteDatabase(java.lang.String)>
<com.android.hotspot2.osu.UserInputListener: void requestUserInput(java.net.URL,android.net.Network,java.net.URL)>
<android.service.voice.VoiceInteractionSession: void onComputeInsets(android.service.voice.VoiceInteractionSession.Insets)>
<android.service.notification.ZenModeConfig.Diff: android.service.notification.ZenModeConfig.Diff addLine(java.lang.String,java.lang.Object,java.lang.Object)>
<com.android.server.am.DumpHeapProvider: boolean onCreate()>
<com.android.documentsui.StressProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>
<android.view.ScaleGestureDetector: float getPreviousSpan()>
<com.android.systemui.recents.events.EventBus: com.android.systemui.recents.events.EventBus getDefault()>
<android.net.CaptivePortal: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceName()>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<android.widget.ImageView: void setMaxWidth(int)>
<com.android.systemui.statusbar.phone.ManagedProfileController: boolean isWorkModeEnabled()>
<com.android.hotspot2.IMSIParameter: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingStarted()>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>
<android.view.View: void dispatchSetActivated(boolean)>
<com.android.settingslib.animation.AppearAnimationUtils: void createAnimation(android.view.View,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.settingslib.applications.ApplicationsState.Session: void resume()>
<android.bluetooth.le.ScanFilter: byte[] getServiceData()>
<com.android.systemui.statusbar.notification.TextViewTransformState: void recycle()>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.location.Location: float getSpeed()>
<android.text.style.URLSpan: void onClick(android.view.View)>
<com.android.printspooler.ui.FusedPrintersProvider: void addHistoricalPrinter(android.print.PrinterInfo)>
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<com.android.systemui.qs.QSTile: java.lang.CharSequence getTileLabel()>
<android.media.tv.TvRecordingClient.RecordingCallback: void onDisconnected(java.lang.String)>
<android.inputmethodservice.Keyboard: int getHeight()>
<android.transition.Transition: android.transition.PathMotion getPathMotion()>
<com.android.server.updates.ApnDbInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.widget.PopupWindow: void setOverlapAnchor(boolean)>
<com.android.server.pm.UserRestrictionsUtils: boolean canProfileOwnerChange(java.lang.String,int)>
<com.android.settingslib.wifi.WifiTracker: void forceUpdate()>
<com.android.server.am.ActivityManagerService: void positionTaskInStack(int,int,int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getEnabledInputMethodList()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean setBluetoothEnabled(boolean)>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.systemui.stackdivider.MinimizedDockShadow: void onDraw(android.graphics.Canvas)>
<android.media.browse.MediaBrowser.MediaItem: int getFlags()>
<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int,boolean)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: java.lang.String getName(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.app.ActivityManager.AppTask: void finishAndRemoveTask()>
<com.android.server.accessibility.KeyboardInterceptor: void <init>(com.android.server.accessibility.AccessibilityManagerService)>
<com.android.keyguard.EmergencyButton: void onFinishInflate()>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>
<android.media.AudioRecord: void startRecording()>
<android.os.Parcel: void writeMap(java.util.Map)>
<com.android.server.pm.PackageManagerService: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver2,int,int)>
<com.android.systemui.analytics.SensorLoggerSession: int getResult()>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig getConfig()>
<com.android.server.pm.PackageManagerService: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>
<com.android.systemui.qs.QSTile.Host: void removeTile(java.lang.String)>
<com.android.systemui.qs.tiles.CellularTile: void handleClick()>
<android.renderscript.ScriptIntrinsic3DLUT: void setLUT(android.renderscript.Allocation)>
<android.media.audiofx.PresetReverb: void setPreset(short)>
<com.android.keyguard.KeyguardPatternView: void createAnimation(com.android.internal.widget.LockPatternView.CellState,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<android.content.pm.ActivityInfo: java.lang.String toString()>
<android.widget.Editor.EditOperation: void redo()>
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Allocation: java.nio.ByteBuffer getByteBuffer()>
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.settingslib.applications.ApplicationsState.AppFilter: void init(android.content.Context)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float,int)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void stopScanning()>
<android.view.MotionEvent: float getSize()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setEndDelay(float)>
<com.android.systemui.statusbar.policy.RotationLockController: int getRotationLockOrientation()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,int[],int)>
<android.view.Choreographer: void postFrameCallback(android.view.Choreographer.FrameCallback)>
<android.hardware.radio.RadioManager.ModuleProperties: java.lang.String getProduct()>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.String)>
<android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>
<android.webkit.WebView.FindListener: void onFindResultReceived(int,int,boolean)>
<android.media.tv.TvInputManager.TvInputCallback: void onInputStateChanged(java.lang.String,int)>
<android.media.PlaybackParams: float getPitch()>
<android.webkit.WebSettings: void setOffscreenPreRaster(boolean)>
<com.android.documentsui.UriDerivativeLoader: void onCanceled(java.lang.Object)>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>
<com.android.systemui.egg.MLandActivity: void playerPlus(android.view.View)>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
<com.google.android.util.AbstractMessageParser.Video: void <init>(java.lang.String,java.lang.String)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.app.NotificationManager: void notify(int,android.app.Notification)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>
<com.android.systemui.recents.tv.views.TaskCardView: void getFocusedRect(android.graphics.Rect)>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>
<android.view.ViewGroup: void onViewRemoved(android.view.View)>
<android.widget.CalendarView.CalendarViewDelegate: void setDate(long,boolean,boolean)>
<android.content.ContextWrapper: boolean isDeviceProtectedStorage()>
<android.widget.Filter: void <init>()>
<android.database.Cursor: boolean isClosed()>
<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
<com.android.hotspot2.osu.commands.MOData: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.app.ApplicationErrorReport.AnrInfo: void <init>()>
<android.print.PrinterInfo: android.print.PrinterId getId()>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController: void addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener)>
<android.content.CursorLoader: android.net.Uri getUri()>
<android.view.Gravity: boolean isVertical(int)>
<android.speech.RecognitionService: void onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>
<android.content.ContentValues: java.util.Set keySet()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Statement create(com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.Relation)>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<com.android.keyguard.KeyguardPasswordView: void onResume(int)>
<com.android.server.VibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>
<android.animation.AnimatorSet: void setTarget(java.lang.Object)>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean isBitrateModeSupported(int)>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPersistentApplications(int)>
<android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
<android.app.Activity: void onDestroy()>
<android.os.UserManager: android.content.Intent createUserCreationIntent(java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri,android.os.Bundle)>
<android.widget.CompoundButton: void drawableStateChanged()>
<android.graphics.drawable.VectorDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setHomeAsUp(boolean)>
<com.android.systemui.qs.tiles.HotspotTile: int getMetricsCategory()>
<android.media.MediaDrm: void closeSession(byte[])>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void setHasNativeMethods(boolean,java.lang.String)>
<android.hardware.Camera.Parameters: java.lang.String getFocusMode()>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short2)>
<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.String toString()>
<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
<com.google.android.util.AbstractMessageParser.Format: void <init>(char,boolean)>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setUserAuthenticationValidityDurationSeconds(int)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setBlockModes(java.lang.String[])>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>
<android.content.ContentProvider: java.lang.String getCallingPackage()>
<android.text.util.Rfc822Token: int hashCode()>
<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>
<com.android.documentsui.FilesActivity: void onDocumentPicked(com.android.documentsui.model.DocumentInfo,com.android.documentsui.dirlist.Model)>
<android.graphics.drawable.RippleDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.systemui.recents.RecentsImpl: void showPrevAffiliatedTask()>
<com.android.gallery3d.exif.ExifInterface: void readExif(byte[])>
<com.android.server.audio.AudioService.VolumeStreamState: int getStreamType()>
<com.android.server.pm.UserManagerService: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setIntrinsicPadding(int)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.Toolbar.LayoutParams: void <init>(int,int)>
<com.android.server.job.controllers.AppIdleController: com.android.server.job.controllers.AppIdleController get(com.android.server.job.JobSchedulerService)>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>
<android.widget.HorizontalScrollView: void computeScroll()>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.android.keyguard.KeyguardSimPukView: void onAttachedToWindow()>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>
<com.android.server.notification.ZenLog: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void onNotificationClear(android.service.notification.StatusBarNotification)>
<android.os.BaseBundle: void remove(java.lang.String)>
<android.content.IntentFilter: int countDataPaths()>
<com.android.server.twilight.TwilightService: void onLocationChanged(android.location.Location)>
<com.android.egg.neko.NekoService: boolean onStopJob(android.app.job.JobParameters)>
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>
<android.hardware.hdmi.HdmiTvClient.HdmiMhlVendorCommandListener: void onReceived(int,int,int,byte[])>
<android.bluetooth.le.ScanFilter: boolean matches(android.bluetooth.le.ScanResult)>
<com.android.server.wm.AppWindowAnimator: void clearThumbnail()>
<com.android.server.pm.ShortcutService: int getMaxShortcutCountPerActivity(java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean getLastNavBarVisible()>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<com.android.server.am.ActivityManagerService: boolean dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.systemui.statusbar.NotificationData: java.lang.String getOverrideGroupKey(java.lang.String)>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>
<com.android.systemui.SwipeHelper.Callback: void onDragCancelled(android.view.View)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getInstalledApplications(int)>
<com.android.server.wm.TaskStack: void moveToFullscreen()>
<com.android.systemui.statusbar.ActivatableNotificationView: void onAppearAnimationFinished(boolean)>
<com.android.systemui.stackdivider.DividerView: void notifyDockSideChanged(int)>
<com.android.server.pm.PackageManagerService: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,int)>
<android.transition.Transition.TransitionListener: void onTransitionStart(android.transition.Transition)>
<android.view.View: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>
<com.android.hotspot2.est.ESTHandler: java.security.PrivateKey getClientKey()>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.recents.views.RecentsView: boolean launchTask(com.android.systemui.recents.model.Task,android.graphics.Rect,int)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: int getHeight()>
<android.text.BoringLayout: int getLineStart(int)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasRectChangedFrom(android.view.View)>
<android.net.LinkAddress: int getPrefixLength()>
<com.android.systemui.statusbar.phone.PanelBar: void onClosingFinished()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getBssid()>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.AnimationSet: long getStartTime()>
<com.android.server.am.LockTaskNotify: void handleShowToast(int)>
<android.graphics.drawable.NinePatchDrawable: boolean canApplyTheme()>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.content.Context: void setTheme(int)>
<com.android.server.pm.Installer: boolean dumpProfiles(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
<com.android.systemui.statusbar.NotificationBackgroundView: void setRippleColor(int)>
<android.hardware.camera2.params.BlackLevelPattern: int getOffsetForIndex(int,int)>
<javax.microedition.khronos.opengles.GL11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.ScrimView: void setExcludedArea(android.graphics.Rect)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<android.net.Uri: java.lang.String getEncodedUserInfo()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.app.ActivityManagerProxy: boolean isInMultiWindowMode(android.os.IBinder)>
<com.android.systemui.qs.external.CustomTile: java.lang.String toSpec(android.content.ComponentName)>
<android.app.Fragment: void onHiddenChanged(boolean)>
<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.util.SparseLongArray: void clear()>
<android.view.IWindowManagerImpl: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>
<android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
<android.app.backup.BackupDataInput: java.lang.String getKey()>
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>
<android.widget.AbsSeekBar: void setMax(int)>
<com.android.systemui.qs.external.TileServices: com.android.systemui.statusbar.phone.QSTileHost getHost()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void clearInputBridge(android.os.IBinder)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValue(java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.NotificationData: boolean shouldSuppressScreenOff(java.lang.String)>
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
<com.android.keyguard.KeyguardPasswordView: void resetPasswordText(boolean,boolean)>
<com.android.systemui.stackdivider.MinimizedDockShadow: void setDockSide(int)>
<com.android.systemui.statusbar.SignalClusterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result renderDrawable(com.android.ide.common.rendering.api.DrawableParams)>
<android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)>
<android.widget.AbsSeekBar: android.graphics.PorterDuff.Mode getTickMarkTintMode()>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void onSend(byte[],int,int,long)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>
<android.hardware.soundtrigger.SoundTrigger.GenericRecognitionEvent: java.lang.String toString()>
<android.speech.RecognitionListener: void onResults(android.os.Bundle)>
<com.android.hotspot2.OMADMAdapter: java.lang.String getImei()>
<com.android.server.tv.TvInputHal.Callback: void onFirstFrameCaptured(int,int)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>
<com.android.systemui.statusbar.ViewTransformationHelper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.systemui.analytics.DataCollector: void onNotificatonStartDraggingDown()>
<com.android.server.pm.PackageManagerService: byte[] getPermissionGrantBackup(int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>
<android.widget.TextView: boolean getLinksClickable()>
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
<android.renderscript.Int3: void <init>()>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>
<com.android.hotspot2.omadm.OMAConstructed: boolean isLeaf()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.DropBoxManagerService: void onBootPhase(int)>
<android.media.MediaDrm.KeyRequest: java.lang.String getDefaultUrl()>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String)>
<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>
<android.view.IWindowManagerImpl: void updateRotation(boolean,boolean)>
<com.android.systemui.tv.pip.PipMenuActivity: void onBackPressed()>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: boolean isFlexibleConsumer(android.view.Surface)>
<com.android.server.policy.BurnInProtectionHelper: void startBurnInProtection()>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
<android.app.Notification.WearableExtender: java.lang.String getDismissalId()>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.renderscript.ScriptIntrinsicBLAS: void SSPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.server.pm.UserManagerService: java.lang.String getUserAccount(int)>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>
<android.widget.AbsListView: void smoothScrollToPosition(int)>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>
<com.android.systemui.statusbar.tv.TvStatusBar: int getMaxKeyguardNotifications(boolean)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTag(java.lang.Object)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.statementservice.retriever.Utils: boolean hasCommonString(java.util.List,java.util.List)>
<android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)>
<android.app.backup.BackupAgent: void onRestoreFinished()>
<android.media.AudioAttributes.Builder: void <init>()>
<android.graphics.Canvas_Delegate: boolean native_quickReject(long,float,float,float,float)>
<com.android.server.pm.UserManagerService: boolean hasBaseUserRestriction(java.lang.String,int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: boolean equals(java.lang.Object)>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<android.os.BinderProxy: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<com.android.documentsui.dirlist.DirectoryFragment: void onLoadFinished(android.content.Loader,com.android.documentsui.DirectoryResult)>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>
<android.os.Bundle: char[] getCharArray(java.lang.String)>
<android.media.tv.TvView: void timeShiftSetPlaybackParams(android.media.PlaybackParams)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<android.os.PowerManager: boolean isPowerSaveMode()>
<android.app.NotificationManager: void cancel(int)>
<android.os.health.TimerStat: void setTime(long)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.keyguard.EmergencyCarrierArea: void setCarrierTextVisible(boolean)>
<android.app.assist.AssistStructure.ViewNode: int getHeight()>
<com.android.keyguard.KeyguardPasswordView: void afterTextChanged(android.text.Editable)>
<com.android.settingslib.wifi.AccessPoint: boolean matches(android.net.wifi.ScanResult)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>
<com.android.server.am.ActivityManagerService: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStopped()>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>
<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>
<android.content.Loader: void startLoading()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintRunningStateChanged(boolean)>
<android.text.style.SuggestionSpan: void updateDrawState(android.text.TextPaint)>
<android.os.Parcel: void readStringList(java.util.List)>
<com.android.systemui.statusbar.policy.DeadZone: void setFlashOnTouchCapture(boolean)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void setValueAt(int,java.lang.Object)>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>
<android.os.IPowerManager: void userActivity(long,int,int)>
<com.android.server.job.controllers.StateController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<com.android.systemui.statusbar.phone.DozeScrimController: void pulse(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<android.webkit.WebView: java.lang.String getUrl()>
<android.content.Loader: android.content.Context getContext()>
<android.database.CursorWrapper: int getColumnCount()>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<com.android.server.usb.UsbMidiDevice: com.android.server.usb.UsbMidiDevice create(android.content.Context,android.os.Bundle,int,int)>
<android.transition.ArcMotion: void setMinimumHorizontalAngle(float)>
<com.android.systemui.statusbar.KeyboardShortcutsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.view.MenuItem: boolean isVisible()>
<com.android.hotspot2.pps.Credential: void <init>(long,long,java.lang.String,boolean,com.android.anqp.eap.EAPMethod,java.lang.String,java.lang.String,boolean,java.lang.String,boolean)>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>
<android.content.BroadcastReceiver.PendingResult: void abortBroadcast()>
<android.filterpacks.imageproc.PosterizeFilter: void setupPorts()>
<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>
<com.android.hotspot2.asn1.Asn1Oid: java.lang.String toOIDString()>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>
<android.widget.EdgeEffect: void <init>(android.content.Context)>
<android.location.GnssMeasurement: double getCn0DbHz()>
<android.view.View: int getId()>
<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>
<android.location.Location: void reset()>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isDeviceProvisioned()>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.os.Parcel)>
<android.view.ViewGroup: void setTransitionGroup(boolean)>
<android.util.ArrayMap: java.lang.Object valueAt(int)>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>
<android.preference.PreferenceActivity.Header: void readFromParcel(android.os.Parcel)>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setTileEnabled(android.content.ComponentName,boolean)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>
<com.android.server.usage.UnixCalendar: void addDays(int)>
<android.app.FragmentBreadCrumbs: void onMeasure(int,int)>
<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCameraDisabled(android.content.ComponentName,int)>
<android.widget.RemoteViews: int getLayoutId()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.gallery3d.exif.ExifInterface: short getDefinedTagType(int)>
<android.database.AbstractCursor: void close()>
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.accounts.AccountManagerFuture: boolean isDone()>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,int[],int)>
<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Point getImageBounds()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayerAlpha(android.graphics.RectF,int)>
<com.android.server.notification.ZenModeHelper: void setConfig(android.service.notification.ZenModeConfig,java.lang.String)>
<android.util.Rational: android.util.Rational parseRational(java.lang.String)>
<android.util.JsonWriter: android.util.JsonWriter value(long)>
<com.android.keyguard.KeyguardHostView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getDocID()>
<android.content.BroadcastReceiver: void setOrderedHint(boolean)>
<com.android.systemui.statusbar.stack.StackStateAnimator: boolean isRunning()>
<com.android.systemui.doze.DozeLog: void traceNotificationPulse(android.content.Context,long)>
<android.net.wifi.p2p.WifiP2pDevice: boolean isServiceDiscoveryCapable()>
<android.app.Application: void onTrimMemory(int)>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getRightView()>
<com.android.systemui.statusbar.ScrimView: void setViewAlpha(float)>
<android.renderscript.ScriptGroup.Closure: android.renderscript.ScriptGroup.Future getGlobal(android.renderscript.Script.FieldID)>
<android.telephony.CellInfoCdma: int hashCode()>
<com.android.server.am.ActivityManagerService: void clearGrantedUriPermissions(java.lang.String,int)>
<android.os.IPowerManager: void powerHint(int,int)>
<com.android.server.lights.Light: void setVrMode(boolean)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getCameraTurnedOnTimer()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
<android.view.animation.Animation: long getDuration()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void resetHeight()>
<android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
<android.app.ActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,int[],int)>
<android.opengl.GLES10: void glPointSizex(int)>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionContains(java.lang.String)>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<com.android.server.pm.PackageInstallerService: void updateSessionAppLabel(int,java.lang.String)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onNextAlarmChanged()>
<com.android.server.usb.UsbDeviceManager: void bootCompleted()>
<android.app.admin.DevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighResolutionOutputSizes(int)>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.View getVetoButton()>
<android.util.LruCache: void evictAll()>
<android.preference.Preference: boolean getShouldDisableView()>
<android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(long)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setImageResource(int)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void cancelPreloadingRecents()>
<android.media.tv.TvInputService.RecordingSession: void notifyError(int)>
<android.app.Notification.WearableExtender: android.graphics.Bitmap getBackground()>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>
<android.net.LocalSocket: void setSoTimeout(int)>
<com.android.systemui.statusbar.car.CarBatteryController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.UserRestrictionsUtils: boolean canDeviceOwnerChange(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void remQsTile(android.content.ComponentName)>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<com.android.settingslib.drawable.UserIconDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.hotspot2.osu.ClientKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
<android.opengl.GLSurfaceView: void onPause()>
<com.android.systemui.recents.model.FilteredTaskList: boolean setFilter(com.android.systemui.recents.model.TaskFilter)>
<com.android.uiautomator.core.Configurator: long getWaitForSelectorTimeout()>
<android.content.Context: void removeStickyBroadcast(android.content.Intent)>
<com.android.settingslib.bluetooth.PanProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.app.Fragment: void setMenuVisibility(boolean)>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsOpened()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwner(android.content.ComponentName)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbPort[] getPorts()>
<android.location.LocationManager: boolean registerGnssMeasurementsCallback(android.location.GnssMeasurementsEvent.Callback)>
<com.android.systemui.recents.Recents: void onConfigurationChanged(android.content.res.Configuration)>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>
<android.content.res.Configuration: int getLayoutDirection()>
<android.media.MediaCodec: void stop()>
<com.android.server.pm.PackageManagerService: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean startDisappearAnimation(java.lang.Runnable)>
<android.widget.EditText: void setSelection(int,int)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnected(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>
<com.android.systemui.recents.model.FilteredTaskList: boolean contains(com.android.systemui.recents.model.Task)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.android.preload.ui.UI: java.lang.String showInputDialog(java.lang.String)>
<com.android.server.LockSettingsStrongAuth: void <init>(android.content.Context)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistExceptIdleAppInternal(java.lang.String)>
<android.opengl.GLES32: void glGetTexParameterIuiv(int,int,int[],int)>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.view.inputmethod.CursorAnchorInfo.Builder: void reset()>
<android.app.usage.UsageStats: long getFirstTimeStamp()>
<android.provider.BlockedNumberContract: boolean isBlocked(android.content.Context,java.lang.String)>
<android.provider.DocumentsProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String,java.lang.String[])>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>
<android.text.style.StyleSpan: int getStyle()>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer(float[])>
<com.android.systemui.recents.RecentsSystemUser: void startScreenPinning(int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setCarrierNetworkChangeMode(boolean)>
<android.app.Notification.CarExtender.UnreadConversation: android.app.PendingIntent getReadPendingIntent()>
<com.android.server.pm.PackageManagerService: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,int)>
<android.media.MediaSyncEvent: int getType()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void notifyKeyguardShowingChanged()>
<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener,android.os.Handler)>
<android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)>
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>
<com.android.systemui.recents.tv.views.TaskCardView: int getNumberOfVisibleTasks(android.content.Context)>
<android.provider.DocumentsContract: boolean deleteDocument(android.content.ContentResolver,android.net.Uri)>
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>
<android.telecom.RemoteConference: java.util.List getConferenceableConnections()>
<com.android.layoutlib.bridge.android.BridgeWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration,android.graphics.Rect,boolean,boolean)>
<com.android.layoutlib.bridge.bars.IconLoader: java.io.InputStream getIcon()>
<android.provider.ContactsContract.CommonDataKinds.Organization: int getTypeLabelResource(int)>
<android.telephony.CellIdentityLte: boolean equals(java.lang.Object)>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>
<android.widget.Switch: void setChecked(boolean)>
<android.preference.MultiSelectListPreference: void onSetInitialValue(boolean,java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitor: void handlePhoneStateChanged(java.lang.String)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<android.widget.ZoomControls: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: int getMemoryTrimLevel()>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
<android.widget.QuickContactBadge: void setImageToDefault()>
<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void dispatchSetSelected(boolean)>
<android.text.style.TtsSpan.ElectronicBuilder: void <init>()>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>
<android.hardware.camera2.params.LensShadingMap: int getColumnCount()>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,int[],int)>
<com.android.systemui.BatteryMeterDrawable: void draw(android.graphics.Canvas)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.telecom.PhoneAccountHandle: void <init>(android.content.ComponentName,java.lang.String)>
<android.media.tv.TvView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)>
<android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>
<android.util.Size: int getHeight()>
<com.android.documentsui.BaseActivity: void onSaveInstanceState(android.os.Bundle)>
<com.android.keyguard.KeyguardHostView: void reset()>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>
<android.view.View: boolean hasOverlappingRendering()>
<android.app.FragmentController: void attachHost(android.app.Fragment)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long calculateGoingToFullShadeDelay()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isFreeformStack(int)>
<android.graphics.drawable.BitmapDrawable: void <init>()>
<android.view.View: int getNextFocusDownId()>
<android.provider.MediaStore.Audio.Artists: android.net.Uri getContentUri(java.lang.String)>
<com.android.server.pm.KeySetManagerService: void assertScannedPackageValid(android.content.pm.PackageParser.Package)>
<android.hardware.Camera.Parameters: void setZoom(int)>
<android.printservice.PrintJob: android.printservice.PrintDocument getDocument()>
<android.os.Environment: java.lang.String getStorageState(java.io.File)>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController: void addOnShowModeChangedListener(android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener,android.os.Handler)>
<android.widget.CompoundButton: int getCompoundPaddingLeft()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void removeAutoRemovalCallbacks()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isScrolledToBottom()>
<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserTagsURL(java.lang.String,java.lang.String)>
<com.android.server.pm.IntentFilterVerificationState: void setState(int)>
<android.widget.AdapterView: void onDetachedFromWindow()>
<android.media.tv.TvInputService.Session: void onSurfaceChanged(int,int,int)>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Type)>
<com.android.server.am.ActivityManagerService: void killApplicationProcess(java.lang.String,int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<android.os.BatteryStats.HistoryStepDetails: void clear()>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener: void onTileChanged(android.content.ComponentName)>
<android.app.ActivityManagerProxy: boolean removeTask(int)>
<android.text.LoginFilter.UsernameFilterGMail: void <init>()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>
<com.android.server.am.UidRecord: java.lang.String toString()>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isAccessibilityEnabled()>
<android.content.res.BridgeTypedArray: int getLayoutDimension(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onPhoneHintStarted()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPackageSuspendedForUser(java.lang.String,int)>
<android.app.admin.SystemUpdatePolicy: java.lang.String toString()>
<android.view.WindowManagerPolicy.WindowState: boolean getNeedsMenuLw(android.view.WindowManagerPolicy.WindowState)>
<android.transition.TransitionInflater: android.transition.Transition inflateTransition(int)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setCapabilities(android.print.PrinterCapabilitiesInfo)>
<android.widget.RemoteViews: void setScrollPosition(int,int)>
<com.android.server.pm.PackageInstallerSession: void <init>(com.android.server.pm.PackageInstallerService.InternalCallback,android.content.Context,com.android.server.pm.PackageManagerService,android.os.Looper,int,int,java.lang.String,int,android.content.pm.PackageInstaller.SessionParams,long,java.io.File,java.lang.String,boolean,boolean)>
<android.media.audiofx.BassBoost: short getRoundedStrength()>
<com.android.server.net.NetworkPolicyManagerService: int[] getRestrictBackgroundWhitelistedUids()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.app.MediaRouteButton: boolean performLongClick()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isAutoConnectable()>
<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<android.graphics.Paint_Delegate: android.graphics.ColorFilter_Delegate getColorFilter()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setGearListener(com.android.systemui.statusbar.NotificationSettingsIconRow.SettingsIconRowListener)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>
<android.database.CursorWindow: boolean putDouble(double,int,int)>
<com.android.systemui.qs.PagedTileLayout: void onRtlPropertiesChanged(int)>
<com.android.server.wm.BlackFrame: void hide()>
<android.graphics.SumPathEffect_Delegate: boolean isSupported()>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.service.notification.ZenModeConfig.ZenRule: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri,android.os.Bundle)>
<android.provider.DocumentsProvider: java.lang.String[] getDocumentStreamTypes(java.lang.String,java.lang.String)>
<com.android.systemui.tuner.StatusBarSwitch: void onTuningChanged(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glEnableClientState(int)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>
<com.android.MainActivity.WifiReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRunningStateChanged(boolean)>
<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)>
<android.widget.AbsListView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<com.android.systemui.classifier.ClassifierData: void <init>(float)>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryEnabled(boolean)>
<com.android.systemui.ExpandHelper: void setScrollAdapter(com.android.systemui.statusbar.policy.ScrollAdapter)>
<com.android.gallery3d.exif.ExifInterface: int getComponentCountFromInfo(int)>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createEnrollIntent()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>
<com.android.systemui.statusbar.NotificationData: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.SystemConfig: int[] getGlobalGids()>
<android.os.BatteryStats.Uid.Proc: int getNumCrashes(int)>
<android.telecom.Connection: void setRingbackRequested(boolean)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>
<android.webkit.WebViewClient: void onUnhandledInputEvent(android.webkit.WebView,android.view.InputEvent)>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setEncryptionPaddings(java.lang.String[])>
<android.util.SparseBooleanArray: void <init>(int)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setRestingAlpha(float)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isTrusted()>
<android.animation.Animator: void removeListener(android.animation.Animator.AnimatorListener)>
<android.provider.SearchRecentSuggestions: void clearHistory()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<com.android.systemui.qs.QSTileBaseView: void init(android.view.View.OnClickListener,android.view.View.OnLongClickListener)>
<com.android.server.pm.PermissionsState.PermissionState: int getFlags()>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>
<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference.Callback)>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>
<android.webkit.WebView: boolean canGoForward()>
<com.android.gallery3d.glrenderer.BasicTexture: void setBorder(boolean)>
<android.graphics.Canvas: void rotate(float,float,float)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: java.lang.Class getType()>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void updateSettingsAnimator()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setTriggerContentUpdateDelay(long)>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>
<android.opengl.GLES30: boolean glIsVertexArray(int)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String)>
<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>
<android.filterpacks.imageproc.BlackWhiteFilter: void <init>(java.lang.String)>
<com.android.documentsui.dirlist.DirectoryFragment: boolean isDocumentEnabled(java.lang.String,int)>
<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>
<com.android.server.retaildemo.RetailDemoModeService: void onSwitchUser(int)>
<android.media.MediaExtractor: boolean advance()>
<com.android.systemui.qs.QSContainer: boolean isShowingDetail()>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>
<com.android.systemui.qs.QSFooter: void onConfigurationChanged()>
<android.webkit.CookieManager: void flush()>
<com.android.server.twilight.TwilightState: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
<android.content.AsyncQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
<android.content.IntentFilter: boolean hasDataType(java.lang.String)>
<com.android.server.net.NetworkStatsService: void setUidForeground(int,boolean)>
<android.media.MediaPlayer: void setDataSource(android.content.res.AssetFileDescriptor)>
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.widget.TabHost.TabContentFactory)>
<android.hardware.camera2.DngCreator: void <init>(android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.CaptureResult)>
<android.ddm.DdmHandleHeap: void register()>
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)>
<com.android.documentsui.RootsFragment: void show(android.app.FragmentManager,android.content.Intent)>
<android.preference.Preference: void setLayoutResource(int)>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)>
<android.app.AlarmManager.OnAlarmListener: void onAlarm()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setDismissing()>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.hardware.soundtrigger.SoundTrigger.GenericRecognitionEvent: boolean equals(java.lang.Object)>
<android.media.tv.TvInputManager.TvInputCallback: void onInputUpdated(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>
<android.app.Notification.WearableExtender: int getContentIcon()>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<com.google.android.gles_jni.EGLImpl: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>()>
<com.android.systemui.statusbar.notification.NotificationBigTextTemplateViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<com.android.gallery3d.common.Utils: int ceilLog2(float)>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()>
<android.media.tv.TvInputService.Session: void onSetCaptionEnabled(boolean)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: boolean isOverflowPopupNeeded()>
<com.android.hotspot2.Utils: byte[] hexToBytes(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag setTag(com.android.gallery3d.exif.ExifTag)>
<android.app.job.JobInfo: android.content.ComponentName getService()>
<org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void setWallpaper(android.graphics.Bitmap)>
<android.transition.Fade: void <init>(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void updateBackground()>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
<com.android.server.net.NetworkPolicyManagerService: int getRestrictBackgroundByCaller()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAssistManager(com.android.systemui.assist.AssistManager)>
<android.webkit.WebMessagePort.WebMessageCallback: void onMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)>
<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void keyguardDone(boolean)>
<android.os.StatFs: int getBlockSize()>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int)>
<com.android.systemui.qs.external.TileServices: com.android.systemui.qs.external.TileServiceManager onCreateTileService(android.content.ComponentName,android.service.quicksettings.Tile)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback,int)>
<android.widget.GridView: int getRequestedHorizontalSpacing()>
<android.hardware.SensorEventListener2: void onFlushCompleted(android.hardware.Sensor)>
<android.text.style.StyleSpan: int getSpanTypeId()>
<com.android.systemui.statusbar.CommandQueue: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<android.widget.GridLayout: java.lang.CharSequence getAccessibilityClassName()>
<android.media.session.MediaSession: void setExtras(android.os.Bundle)>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<android.view.View: void onVisibilityChanged(android.view.View,int)>
<com.android.server.media.MediaSessionRecord: android.app.PendingIntent getMediaButtonReceiver()>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.dream.DreamBackend: void setEnabled(boolean)>
<com.android.photos.views.TiledImageView: void onPause()>
<android.app.UiModeManager: void setNightMode(int)>
<com.google.android.gles_jni.GLImpl: void glCurrentPaletteMatrixOES(int)>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>
<android.view.Window: void setSharedElementEnterTransition(android.transition.Transition)>
<android.content.pm.PackageInstaller.SessionInfo: int describeContents()>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbTitleRes()>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>
<android.widget.AdapterViewFlipper: boolean isFlipping()>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>
<android.renderscript.Type: android.renderscript.Type createX(android.renderscript.RenderScript,android.renderscript.Element,int)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setLanguageTag(java.lang.String)>
<android.hardware.radio.RadioManager.FmBandConfig: java.lang.String toString()>
<com.android.systemui.tv.pip.PipOverlayActivity: void onShowPipMenu()>
<com.android.systemui.tuner.ClockPreference: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void <init>(android.content.Context)>
<android.media.ExifInterface: long[] getThumbnailRange()>
<android.provider.Settings.System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>
<android.app.assist.AssistStructure.WindowNode: int getLeft()>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingTopOverscroll(float,boolean)>
<com.android.systemui.qs.tiles.WifiTile.WifiSignalCallback: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onKeyguardViewManagerStatesUpdated()>
<com.android.server.usb.UsbAudioDevice: java.lang.String toShortString()>
<android.nfc.cardemulation.NfcFCardEmulation: android.nfc.cardemulation.NfcFCardEmulation getInstance(android.nfc.NfcAdapter)>
<com.android.systemui.qs.QSTile.DetailAdapter: void setToggleState(boolean)>
<android.hardware.camera2.legacy.RequestQueue: android.util.Pair getNext()>
<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.server.am.ProcessStatsService: void shutdownLocked()>
<com.android.server.soundtrigger.SoundTriggerInternal: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.net.wifi.nan.ConfigRequest.Builder: void <init>()>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>
<android.renderscript.Script.LaunchOptions: int getXStart()>
<com.android.anqp.Constants: java.lang.String getTrimmedString(java.nio.ByteBuffer,int,java.nio.charset.Charset)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onActivityDrawn()>
<android.service.notification.NotificationListenerService.RankingMap: int describeContents()>
<android.view.View: boolean showContextMenu(float,float)>
<android.filterpacks.imageproc.SepiaFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.app.NativeActivity: void surfaceDestroyed(android.view.SurfaceHolder)>
<com.android.commands.uiautomator.EventsCommand: java.lang.String shortHelp()>
<android.app.assist.AssistStructure.ViewNode: boolean isFocusable()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.KeyguardMonitor getKeyguardMonitor()>
<com.android.systemui.recents.model.Task.TaskKey: void <init>(int,int,android.content.Intent,int,long,long)>
<android.hardware.Camera.Parameters: void setWhiteBalance(java.lang.String)>
<com.android.shell.BugreportWarningActivity: void onCreate(android.os.Bundle)>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.util.LongSparseArray: void remove(long)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect createRect(android.graphics.RectF)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onPipResizeAboutToStart()>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.notification.NotificationDelegate: void onNotificationActionClick(int,int,java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,float[],int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.A2dpSinkProfile getA2dpSinkProfile()>
<com.android.server.notification.ConditionProviders: void addSystemProvider(com.android.server.notification.SystemConditionProviderService)>
<com.android.server.policy.PhoneWindowManager: void setSafeMode(boolean)>
<com.android.server.Watchdog.HandlerChecker: void scheduleCheckLocked()>
<com.android.server.wm.BlackFrame: void setMatrix(android.graphics.Matrix)>
<android.view.View: int getScrollBarDefaultDelayBeforeFade()>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.telecom.TelecomManager: void showInCallScreen(boolean)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onMeasure(int,int)>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: android.animation.Animator.AnimatorListener decrementOnAnimationEnd()>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreate(android.os.Bundle)>
<android.util.SparseIntArray: void <init>(int)>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String,android.net.Uri)>
<android.drm.DrmStore: void <init>()>
<android.os.Bundle: void clear()>
<android.content.pm.ComponentInfo: int getIconResource()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)>
<android.telecom.ParcelableCallAnalytics.EventTiming: void <init>(int,long)>
<android.view.ActionMode: java.lang.CharSequence getSubtitle()>
<com.google.android.gles_jni.EGLImpl: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<com.android.systemui.tv.pip.PipManager: void suspendPipResizing(int)>
<com.android.server.am.ActivityManagerService: void notifyActivityDrawn(android.os.IBinder)>
<com.android.server.job.controllers.ContentObserverController: void rescheduleForFailure(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: boolean setSystemInsets(android.graphics.Rect)>
<com.android.keyguard.KeyguardSimPinView: int getPromtReasonStringRes(int)>
<com.android.documentsui.dirlist.AnimationView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.views.TiledImageRenderer: void <init>(android.view.View)>
<com.android.systemui.tuner.TunerSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAsciiCapable(boolean)>
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>
<com.android.hotspot2.est.ESTHandler: void execute(boolean)>
<com.android.systemui.egg.MLandActivity: void onPause()>
<android.bluetooth.BluetoothGattService: int getType()>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getClassName()>
<android.graphics.Path_Delegate: void arcTo(float,float,float,float,float,float,boolean)>
<com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener: void onSizeChanged(int,int)>
<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.view.View: boolean performContextClick()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceUuid(android.os.ParcelUuid)>
<android.content.ClipData: int describeContents()>
<android.content.ClipData: java.lang.String toString()>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>
<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>
<com.android.documentsui.model.DocumentStack: void reset()>
<android.widget.ImageView: void setMaxHeight(int)>
<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.widget.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.tuner.TunerService: void setTunerEnabled(android.content.Context,boolean)>
<android.widget.Chronometer: void setCountDown(boolean)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void updateHeaderVisibility(int)>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>
<android.content.ContentProviderResult: int describeContents()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTxPowerLevel(int)>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.ip.RouterAdvertisementDaemon.RaParams: void <init>()>
<com.android.settingslib.RestrictedPreference: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>
<com.android.hotspot2.osu.OSUInfo: com.android.hotspot2.osu.OSUInfo.IconStatus getIconStatus()>
<android.animation.ValueAnimator: int getRepeatCount()>
<android.service.notification.ConditionProviderService: void onUnsubscribe(android.net.Uri)>
<android.view.View: void setNestedScrollingEnabled(boolean)>
<android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>
<com.android.systemui.classifier.AccelerationClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>
<com.android.documentsui.RootCursorWrapper: long getLong(int)>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>
<com.android.hotspot2.omadm.MultiValueMap: java.lang.Object remove(java.lang.String,java.lang.Object)>
<com.android.server.am.ActivityManagerService: boolean stopBinderTrackingAndDump(android.os.ParcelFileDescriptor)>
<com.android.hotspot2.osu.service.RedirectListener: void run()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinVoiceSecure()>
<com.android.server.wallpaper.WallpaperManagerService: java.lang.String getName()>
<android.graphics.Matrix: boolean postSkew(float,float)>
<android.content.CursorLoader: void onStartLoading()>
<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>
<com.android.systemui.recents.views.DropTarget: boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean)>
<com.android.hotspot2.osu.commands.MOData: java.lang.String getURN()>
<android.view.View: void setNextFocusLeftId(int)>
<android.app.ListFragment: void onDestroyView()>
<android.content.ClipData.Item: java.lang.CharSequence coerceToText(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean isDeviceProtectedStorage()>
<com.android.systemui.classifier.FalsingManager: boolean shouldEnforceBouncer()>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float)>
<android.media.session.MediaSession.Token: int describeContents()>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)>
<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getOrCreateCompilerPackageStats(java.lang.String)>
<android.telecom.VideoProfile: void writeToParcel(android.os.Parcel,int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.android.server.trust.TrustManagerService: void updateTrust(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileContactsSearchDisabledForUser(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDeviceProvisioned()>
<android.view.View: void drawableStateChanged()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createIconController()>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.classifier.Stroke: long getDurationNanos()>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setStatusBarState(int)>
<android.provider.Contacts.ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
<android.renderscript.Element: boolean isComplex()>
<android.view.KeyEvent: boolean isSystem()>
<com.android.systemui.statusbar.policy.DeadZone: boolean onTouchEvent(android.view.MotionEvent)>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: void <init>(int,int[])>
<com.android.egg.neko.Cat: void setColorFilter(android.graphics.ColorFilter)>
<android.net.MailTo: java.lang.String toString()>
<com.android.server.pm.UserManagerService: void onBeforeUnlockUser(int)>
<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,int,java.lang.Object)>
<android.net.wifi.WifiManager: void setTdlsEnabledWithMacAddress(java.lang.String,boolean)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>
<com.android.server.hdmi.HdmiControlService: void onStart()>
<com.android.printspooler.ui.FusedPrintersProvider: void onProviderDisabled(java.lang.String)>
<com.android.hotspot2.pps.HomeSP: void <init>(java.util.Map,java.lang.String,java.util.HashSet,java.util.Set,java.util.Set,java.util.List,java.lang.String,java.lang.String,com.android.hotspot2.pps.Credential)>
<android.graphics.drawable.RippleDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>
<android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
<android.widget.RadioGroup: void onFinishInflate()>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: void <init>(android.content.Context,int,com.android.printservice.recommendation.plugin.samsung.VendorInfo,java.lang.String[])>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String[],java.lang.String[])>
<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.String)>
<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>
<android.content.pm.ResolveInfo: java.lang.String toString()>
<android.app.Activity: void onMultiWindowModeChanged(boolean)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String[] decode(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void DSBMV(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>
<android.telecom.Connection: void onCallEvent(java.lang.String,android.os.Bundle)>
<com.android.systemui.qs.external.TileServices: void <init>(com.android.systemui.statusbar.phone.QSTileHost,android.os.Looper)>
<android.renderscript.FieldPacker: void <init>(byte[])>
<android.telephony.CellIdentityWcdma: int getMcc()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.tiles.DataSaverTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: com.android.systemui.recents.tv.views.TaskCardView getChildViewForTask(com.android.systemui.recents.model.Task)>
<android.media.tv.TvInputManager: void updateTvInputInfo(android.media.tv.TvInputInfo)>
<android.transition.VisibilityPropagation: void captureValues(android.transition.TransitionValues)>
<android.os.Process: int[] getExclusiveCores()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateTopPadding(float,boolean,boolean)>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: void WaitForProcessExit(java.lang.Process)>
<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>
<com.android.systemui.statusbar.phone.TrustDrawable: int getOpacity()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void updateSelection(int,int)>
<com.android.documentsui.MimePredicate: void <init>(java.lang.String[])>
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)>
<android.text.HtmlToSpannedConverter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.location.GnssStatus: float getCn0DbHz(int)>
<com.android.systemui.statusbar.policy.AccessibilityController: void onAccessibilityStateChanged(boolean)>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String name()>
<android.graphics.Path: void rMoveTo(float,float)>
<android.graphics.Paint: int getFlags()>
<com.android.systemui.qs.QSAnimator: void onAnimationAtStart()>
<android.net.NetworkStats.Entry: boolean equals(java.lang.Object)>
<com.android.egg.neko.NekoLand: void onDestroy()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQsDetail()>
<com.android.commands.telecom.Telecom: void main(java.lang.String[])>
<com.android.server.am.ActivityManagerService: void startConfirmDeviceCredentialIntent(android.content.Intent)>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isSummaryWithChildren()>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>
<android.telecom.Call.Callback: void onPostDialWait(android.telecom.Call,java.lang.String)>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>
<android.widget.AbsListView: void drawableStateChanged()>
<android.hardware.input.InputManager: int[] getInputDeviceIds()>
<android.text.Layout: int getLineDescent(int)>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.StatusBarIconView createIcon(android.service.notification.StatusBarNotification)>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle,java.lang.String)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>
<android.media.session.MediaSession.Callback: void onPlay()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.app.Notification.Action: android.os.Bundle getExtras()>
<android.app.Fragment: void onCreate(android.os.Bundle)>
<android.media.soundtrigger.SoundTriggerDetector.Callback: void onError()>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.systemui.volume.ZenModePanel: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.ViewGroup: void addView(android.view.View,int,int)>
<android.widget.ListPopupWindow: void setModal(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverflowContainer(com.android.systemui.statusbar.NotificationOverflowContainer)>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: java.lang.String getDebuggeeClassName()>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry getTopEntry()>
<android.webkit.WebView: boolean canZoomOut()>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: boolean isInPictureInPictureMode(android.os.IBinder)>
<android.accessibilityservice.AccessibilityService.MagnificationController: boolean setCenter(float,float,boolean)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.ViewMediatorCallback: int getBouncerPromptReason()>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.content.PeriodicSync: boolean equals(java.lang.Object)>
<android.database.AbstractCursor: void finalize()>
<android.view.MotionEvent: void offsetLocation(float,float)>
<com.android.server.am.ActivityManagerService.Lifecycle: void onStart()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>
<android.widget.HorizontalScrollView: boolean isFillViewport()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getPositionInLinearLayout(android.view.View)>
<com.android.systemui.qs.tiles.BluetoothTile: java.lang.String composeChangeAnnouncement()>
<android.printservice.PrinterDiscoverySession: void onStopPrinterStateTracking(android.print.PrinterId)>
<android.view.Display: void getSize(android.graphics.Point)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.Editor.HandleView: void show()>
<com.android.systemui.statusbar.policy.DataSaverController: void addListener(com.android.systemui.statusbar.policy.DataSaverController.Listener)>
<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>
<android.view.View: int getAccessibilityLiveRegion()>
<com.android.systemui.statusbar.policy.SplitClockView: void onFinishInflate()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>
<com.android.systemui.net.NetworkOverLimitActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.analytics.DataCollector: void onBouncerHidden()>
<android.content.pm.PackageInstaller.SessionParams: int describeContents()>
<com.android.server.notification.ImportanceExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.DiskStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.media.projection.MediaProjectionManagerService: void onSwitchUser(int)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setInProgressLabel(java.lang.CharSequence)>
<com.android.server.DeviceIdleController.LocalService: int[] getPowerSaveWhitelistUserAppIds()>
<android.telecom.Call.Details: java.lang.String propertiesToString(int)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onFling(int)>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void resetScrollPosition()>
<com.android.layoutlib.bridge.bars.IconLoader: java.lang.String getPath()>
<android.media.MediaRouter.UserRouteInfo: void setStatus(java.lang.CharSequence)>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController.OnShowModeChangedListener: void onShowModeChanged(android.accessibilityservice.AccessibilityService.SoftKeyboardController,int)>
<android.view.View: float getX()>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isEnabled()>
<android.provider.DocumentsProvider: android.net.Uri canonicalize(android.net.Uri)>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>
<android.view.MotionEvent: int getPointerCount()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<com.android.server.am.DumpHeapProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.widget.VideoView: int getAudioSessionId()>
<com.android.keyguard.KeyguardPasswordView: int getPasswordTextViewId()>
<com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback: void onBluetoothManagerInitialized(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager)>
<android.view.SurfaceControl.PhysicalDisplayInfo: java.lang.String toString()>
<com.android.systemui.statusbar.phone.ScrimController: void dontAnimateBouncerChangesUntilNextFrame()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>
<com.android.systemui.qs.DataUsageGraph: void setLevels(long,long,long)>
<com.android.uiautomator.core.UiDevice: java.lang.String getProductName()>
<android.media.VolumeProvider: void onAdjustVolume(int)>
<android.app.ActivityManagerProxy: boolean isVrModePackageEnabled(android.content.ComponentName)>
<com.android.server.policy.PhoneWindowManager: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams,android.view.WindowManagerPolicy.WindowState)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>
<android.view.View: int getHorizontalFadingEdgeLength()>
<android.preference.TwoStatePreference: void setDisableDependentsState(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int)>
<android.app.admin.DevicePolicyManager: boolean isProfileOwnerApp(java.lang.String)>
<com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent: void <init>(int)>
<android.media.MediaDrmResetException: void <init>(java.lang.String)>
<com.android.systemui.recents.model.TaskGrouping: int getTaskCount()>
<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
<android.net.nsd.NsdManager.DiscoveryListener: void onStopDiscoveryFailed(java.lang.String,int)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<com.android.server.usb.UsbService: void denyUsbDebugging()>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>
<android.renderscript.Allocation: void copyFrom(java.lang.Object)>
<android.os.CpuUsageInfo: int describeContents()>
<android.hardware.usb.UsbInterface: java.lang.String toString()>
<android.app.Notification.Builder: android.app.Notification getNotification()>
<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: int hashCode()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getIntrinsicHeight()>
<com.android.server.backup.BackupManagerService.BackupRestoreTask: void handleTimeout()>
<android.opengl.GLES30: boolean glIsSync(long)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void bindService(android.content.Context)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.media.midi.MidiOutputPort: void onConnect(android.media.midi.MidiReceiver)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getFreeformTasks()>
<android.media.MediaMetadata: int describeContents()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void layoutContents(android.graphics.Rect,boolean)>
<com.android.tools.layoutlib.create.MethodAdapter: float onInvokeF(java.lang.String,boolean,java.lang.Object)>
<android.os.Debug: int getGlobalGcInvocationCount()>
<android.graphics.drawable.LayerDrawable: void setLayerSize(int,int,int)>
<com.android.server.hdmi.SelectRequestBuffer: void process()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendKeyUp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<com.google.android.gles_jni.GLImpl: int glGetError()>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.bluetooth.le.ScanSettings: int getScanResultType()>
<android.app.Notification.MessagingStyle.Message: android.net.Uri getDataUri()>
<com.android.systemui.statusbar.stack.ScrollContainer: void requestDisallowLongPress()>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.telecom.Call.Details: android.os.Bundle getExtras()>
<com.android.hotspot2.omadm.MOManager: long getTime(com.android.hotspot2.omadm.OMANode)>
<com.android.statementservice.DirectStatementService: void onCreate()>
<android.os.Environment: java.io.File getDataDirectory()>
<android.view.FrameMetrics: long getMetric(int)>
<android.widget.TextView: int getMinLines()>
<android.telecom.TelecomAnalytics.SessionTiming: void <init>(int,long)>
<android.telecom.TelecomManager: java.lang.String getDefaultDialerPackage()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean,long,android.view.animation.Interpolator)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void moveGridTaskViewFocus(android.view.View)>
<android.hardware.camera2.CameraCharacteristics.Key: int hashCode()>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.view.ShadowPainter: void drawSmallRectangleShadow(java.awt.image.BufferedImage,int,int,int,int)>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>
<android.media.MediaDrm: void provideProvisionResponse(byte[])>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.systemui.recents.model.TaskStack: android.util.ArraySet computeComponentsRemoved(java.lang.String,int)>
<com.android.hotspot2.IMSIParameter: boolean matches(java.lang.String)>
<com.android.server.notification.RankingConfig: int getPriority(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,int[],int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.hardware.camera2.CameraDevice: void createConstrainedHighSpeedCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>
<android.graphics.Paint: int getColor()>
<com.android.systemui.assist.AssistManager: void startAssist(android.os.Bundle)>
<android.database.MatrixCursor: long getLong(int)>
<android.text.Layout: float getLineMax(int)>
<com.android.uiautomator.core.UiObject: boolean pinchOut(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int getProjectResourceValue(com.android.resources.ResourceType,java.lang.String,int)>
<android.media.session.MediaSession.Callback: void onRewind()>
<com.android.commands.sm.Sm: void runSetForceAdoptable()>
<android.hardware.Camera.Parameters: int getJpegThumbnailQuality()>
<android.hardware.radio.RadioManager.FmBandConfig: boolean getRds()>
<android.transition.ChangeTransform: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>
<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int)>
<com.android.uiautomator.core.UiObject: boolean pinchIn(int,int)>
<android.webkit.WebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>
<android.app.Fragment: void onDetach()>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void finishKeyguardFadingAway()>
<android.view.SurfaceView: void setVisibility(int)>
<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition.TransitionListener)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.ActivityManagerService: void releasePersistableUriPermission(android.net.Uri,int,int)>
<android.view.ViewGroup.LayoutParams: void resolveLayoutDirection(int)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<com.android.egg.neko.Cat: int getOpacity()>
<android.text.StaticLayout: int getLineForVertical(int)>
<android.media.AudioTrack: void play()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.documentsui.EventListener: void onDirectoryNavigated(android.net.Uri)>
<com.android.server.am.ActivityManagerService: int checkPermission(java.lang.String,int,int)>
<android.hardware.location.ContextHubManager.Callback: void onMessageReceipt(int,int,android.hardware.location.ContextHubMessage)>
<com.android.systemui.statusbar.policy.MobileSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>
<com.android.systemui.statusbar.stack.StackStateAnimator: int getFinalActualHeight(com.android.systemui.statusbar.ExpandableView)>
<com.android.systemui.qs.external.TileServices: boolean isLocked()>
<android.graphics.drawable.GradientDrawable: void setTintList(android.content.res.ColorStateList)>
<android.media.tv.TvContentRating: int hashCode()>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.widget.GridView: void setStretchMode(int)>
<com.android.server.pm.UserManagerService: boolean markGuestForDeletion(int)>
<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>
<android.service.voice.VoiceInteractionSession: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByWho(java.lang.String)>
<android.print.PrinterId: java.lang.String getLocalId()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onProfileTileOpen()>
<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>
<android.opengl.Matrix: void <init>()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isExpanding()>
<android.os.ConditionVariable: void block()>
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void onPanelLaidOut()>
<android.telephony.SubscriptionInfo: java.lang.String toString()>
<com.android.systemui.analytics.DataCollector: void onCameraOn()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,float[],int)>
<com.google.android.gles_jni.GLImpl: void glLightModelf(int,float)>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>
<com.android.server.policy.EnableAccessibilityController: java.util.List getInstalledSpeakingAccessibilityServices(android.content.Context)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setupActionBar()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<com.android.systemui.Prefs: java.util.Map getAll(android.content.Context)>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>
<com.android.hotspot2.WifiNetworkAdapter: java.lang.Integer addNetwork(com.android.hotspot2.pps.HomeSP,java.util.Map,java.security.PrivateKey,android.net.Network)>
<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>
<android.media.AudioTrack: int attachAuxEffect(int)>
<com.android.server.policy.PhoneWindowManager: void layoutWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<com.android.server.backup.BackupManagerService: java.lang.String getCurrentTransport()>
<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()>
<android.widget.Editor.EditOperation: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.PackageManagerService: boolean hasSystemUidErrors()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void topAppWindowChanged(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.view.View getChildAfterViewWhenDismissed()>
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>
<android.os.Debug: void startMethodTracing()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int nextToken()>
<com.android.systemui.analytics.DataCollector: void onTrackingStopped()>
<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>
<android.widget.ListPopupWindow: void postShow()>
<android.content.res.TypedArray: boolean hasValue(int)>
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onStop()>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistAppInternal(java.lang.String)>
<android.widget.Toolbar: void setTitleTextColor(int)>
<com.android.systemui.recents.Recents: void showRecents(boolean,boolean)>
<android.telecom.RemoteConnection.Callback: void onConnectionCapabilitiesChanged(android.telecom.RemoteConnection,int)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodReplacer: boolean isNeeded(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbShortTitleRes()>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>
<android.widget.PopupWindow: boolean isTouchable()>
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>
<android.security.keystore.KeyProtection: boolean isUserAuthenticationValidWhileOnBody()>
<android.service.notification.NotificationListenerService.Ranking: void <init>()>
<com.android.systemui.statusbar.BaseStatusBar: void toggleSplitScreenMode(int,int)>
<com.android.keyguard.ViewMediatorCallback: void userActivity()>
<com.android.server.InputMethodManagerService: void notifyUserAction(int)>
<com.android.printspooler.widget.PrintContentView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.volume.VolumeDialogComponent: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.recents.misc.NamedCounter: java.lang.String nextName()>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.Object)>
<android.os.storage.StorageManager: java.util.List getStorageVolumes()>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<android.opengl.GLES20: void glUniform1f(int,float)>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>
<com.android.systemui.tuner.TunerActivity: void onBackPressed()>
<android.text.format.Time: void <init>(java.lang.String)>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStarted()>
<android.graphics.drawable.LayerDrawable: void setPaddingMode(int)>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>
<android.util.LongSparseArray: void put(long,java.lang.Object)>
<android.app.Instrumentation: void <init>()>
<android.app.Service: void onTrimMemory(int)>
<android.widget.Editor.HandleView: void updateSelection(int)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateHideSensitive()>
<android.text.Layout: float getSpacingAdd()>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>
<android.widget.DoubleDigitManager.CallBack: void singleDigitFinal(int)>
<android.os.PatternMatcher: java.lang.String toString()>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(double,int,int)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder setClassInstanceLimit(java.lang.Class,int)>
<android.content.ClipData: void addItem(android.content.ClipData.Item)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setMessagePermissionChoice(int)>
<android.database.sqlite.SQLiteFullException: void <init>()>
<com.android.systemui.DessertCase: void onPause()>
<android.app.NotificationManager: boolean isNotificationPolicyAccessGranted()>
<android.os.BatteryStats.Uid: android.util.SparseArray getSensorStats()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)>
<android.view.MenuItem: boolean collapseActionView()>
<com.android.systemui.statusbar.phone.PanelView: void setOverExpansion(float,boolean)>
<android.service.quicksettings.TileService: android.service.quicksettings.Tile getQsTile()>
<android.os.DropBoxManager.Entry: int describeContents()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>
<com.android.server.pm.PackageInstallerService: void onSecureContainersAvailable()>
<android.app.LoaderManager.LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable mutate()>
<android.telecom.CallScreeningService: void <init>()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewTouchHandler getTouchHandler()>
<android.app.admin.DevicePolicyManager: void setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean)>
<com.android.settingslib.wifi.WifiTracker: void resumeScanning()>
<android.printservice.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>
<com.android.layoutlib.bridge.android.BridgeContext: int getDynamicIdByStyle(com.android.ide.common.rendering.api.StyleResourceValue)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>
<android.view.AbsSavedState: int describeContents()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.DozeScrimController: void onScreenTurnedOn()>
<android.app.ProgressDialog: void setMax(int)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.android.statementservice.retriever.Relation: java.lang.String toString()>
<android.media.MediaSync: void finalize()>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>
<com.android.systemui.statusbar.policy.KeyButtonView: void playSoundEffect(int)>
<android.transition.Transition: void captureEndValues(android.transition.TransitionValues)>
<android.widget.Adapter: boolean hasStableIds()>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>
<android.media.effect.EffectFactory: boolean isEffectSupported(java.lang.String)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerDown(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int,int,int)>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<com.android.systemui.volume.VolumeDialogController: void setStreamMute(int,boolean)>
<android.view.View: void setScrollBarStyle(int)>
<com.android.server.accessibility.MotionEventInjector: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.ClipData.Item: java.lang.CharSequence getText()>
<android.database.AbstractCursor: boolean isAfterLast()>
<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.statusbar.SignalClusterView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.QSTileHost: void warn(java.lang.String,java.lang.Throwable)>
<com.android.preload.ui.UI: int getSelectedDataTableRow()>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onInvalidated()>
<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>
<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>
<android.location.Address: void setSubLocality(java.lang.String)>
<android.os.Bundle: int describeContents()>
<com.android.systemui.recents.Recents: boolean dockTopTask(int,int,android.graphics.Rect,int)>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMAConstructed reparent(com.android.hotspot2.omadm.OMAConstructed)>
<android.graphics.Canvas_Delegate: int native_saveLayer(long,float,float,float,float,long,int)>
<android.preference.PreferenceActivity: void setListFooter(android.view.View)>
<android.database.AbstractCursor: boolean isClosed()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: boolean isEnabled(int)>
<android.os.Parcel: android.os.Bundle readBundle()>
<android.content.pm.Signature: char[] toChars()>
<android.widget.RatingBar: void setMax(int)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaPlayer: int getSelectedTrack(int)>
<com.android.server.am.ActivityManagerService: void killApplication(java.lang.String,int,int,java.lang.String)>
<android.media.session.MediaSession.QueueItem: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDimmed()>
<android.media.tv.TvContract: java.lang.String buildInputId(android.content.ComponentName)>
<android.content.IntentFilter: void <init>(java.lang.String)>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<com.android.server.policy.PhoneWindowManager: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.content.res.Configuration)>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onWakeAndUnlocking()>
<android.os.PersistableBundle: int describeContents()>
<com.android.server.am.ActivityManagerService: void noteAlarmStart(android.content.IIntentSender,int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getManagedUserId(int)>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setNextAlarmController(com.android.systemui.statusbar.policy.NextAlarmController)>
<android.util.SparseIntArray: void append(int,int)>
<android.content.Context: java.lang.ClassLoader getClassLoader()>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryEnabled(boolean)>
<android.speech.tts.Voice: int describeContents()>
<android.animation.ValueAnimator: long getFrameDelay()>
<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>
<android.animation.ValueAnimator: int getRepeatMode()>
<com.android.photos.views.TiledImageRenderer: void setPosition(int,int,float)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent)>
<android.database.MergeCursor: byte[] getBlob(int)>
<android.view.MotionEvent.PointerCoords: void copyFrom(android.view.MotionEvent.PointerCoords)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.PackageManagerService: int getIntentVerificationStatus(java.lang.String,int)>
<com.android.server.trust.TrustManagerService: void onStart()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setCurrentUser(int)>
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,short[])>
<android.content.pm.PackageParser.ServiceIntentInfo: void <init>(android.content.pm.PackageParser.Service)>
<android.printservice.PrintJob: boolean start()>
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.AlphaOptimizedRelativeLayout: boolean hasOverlappingRendering()>
<android.widget.HeaderViewListAdapter: boolean hasStableIds()>
<android.media.MediaRecorder: void reset()>
<android.media.AudioTrack: int getSampleRate()>
<android.drm.DrmManagerClient.OnErrorListener: void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent)>
<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>
<android.net.Network: long getNetworkHandle()>
<com.android.systemui.recents.model.FilteredTaskList: void removeFilter()>
<android.view.inputmethod.InputMethodSession: void viewClicked(boolean)>
<android.preference.Preference: java.lang.String getKey()>
<com.android.settingslib.SuggestionParser: void markCategoryDone(java.lang.String)>
<android.widget.ListView: int getDividerHeight()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>
<com.android.preload.ui.UI: boolean showConfirmDialog(java.lang.String,java.lang.String)>
<android.graphics.drawable.Drawable: void setDither(boolean)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,float[],int)>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>
<android.media.tv.TvContentRating: java.util.List getSubRatings()>
<com.android.systemui.qs.PageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.systemui.statusbar.ActivatableNotificationView: int getRippleColor()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void removeCallback(android.os.Handler.Callback)>
<android.view.ActionMode.Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.media.MediaMuxer: void release()>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.keyguard.KeyguardHostView: void userActivity()>
<android.hardware.camera2.utils.TypeReference: void <init>()>
<android.telecom.Call.Details: android.os.Bundle getIntentExtras()>
<android.widget.SimpleAdapter.ViewBinder: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>
<android.os.storage.IMountServiceListener.Stub: void <init>()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getValidOutputFormatsForInput(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getRemovedProfiles()>
<android.ddm.DdmHandleHello: void connected()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.widget.TabWidget: int getTabCount()>
<com.android.future.usb.UsbAccessory: boolean equals(java.lang.Object)>
<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountName()>
<android.hardware.camera2.params.StreamConfigurationMap: int hashCode()>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>
<android.webkit.WebView: void setFindListener(android.webkit.WebView.FindListener)>
<android.widget.GridLayout: void <init>(android.content.Context)>
<android.view.ViewGroup: void detachAllViewsFromParent()>
<android.widget.ListPopupWindow: int getSoftInputMode()>
<com.android.preload.ClientUtils: com.android.ddmlib.Client findClient(com.android.ddmlib.IDevice,java.lang.String,int)>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
<android.database.sqlite.SQLiteCursor: void close()>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>
<com.android.server.policy.BarController: int updateVisibilityLw(boolean,int,int)>
<android.widget.AutoCompleteTextView.Validator: java.lang.CharSequence fixText(java.lang.CharSequence)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.BaseActivity: void onBackPressed()>
<android.webkit.CookieManager: boolean acceptCookie()>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setShortDescription(java.lang.CharSequence)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setIcon(java.lang.String)>
<android.media.AudioRecord: int read(byte[],int,int)>
<com.android.hotspot2.pps.HomeSP: java.lang.String getFQDN()>
<android.graphics.drawable.LayerDrawable: int getLeftPadding()>
<android.media.MediaDescription: java.lang.CharSequence getDescription()>
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)>
<com.android.systemui.recents.RecentsActivity: void onPause()>
<android.renderscript.ScriptIntrinsicBLAS: void DTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.photos.views.TiledImageRenderer: int getViewWidth()>
<android.os.Debug: long threadCpuTimeNanos()>
<com.android.keyguard.KeyguardUpdateMonitor: android.telephony.SubscriptionInfo getSubscriptionInfoForSubId(int)>
<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>
<android.widget.CalendarView: int getShownWeekCount()>
<com.android.systemui.qs.QSTileView: void onConfigurationChanged(android.content.res.Configuration)>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.media.audiopolicy.AudioPolicy.AudioPolicyFocusListener: void onAudioFocusGrant(android.media.AudioFocusInfo,int)>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>
<android.telephony.TelephonyManager: boolean isHearingAidCompatibilitySupported()>
<com.android.server.wm.BlackFrame: void clearMatrix()>
<android.view.IWindowManagerImpl: boolean isViewServerRunning()>
<com.android.server.am.BroadcastQueue: void enqueueOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,java.nio.IntBuffer)>
<android.transition.ChangeScroll: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationDelegate: void onClearAll(int,int,int)>
<android.view.MotionEvent: float getToolMinor()>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()>
<com.android.systemui.statusbar.phone.QSTileHost: android.os.Looper getLooper()>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipTop(int)>
<com.android.systemui.settings.BrightnessDialog: void onStop()>
<com.android.uiautomator.core.UiDevice: int getDisplayRotation()>
<android.widget.CompoundButton: void setButtonDrawable(int)>
<com.android.systemui.qs.QSPanel: void onAttachedToWindow()>
<com.android.systemui.tuner.AutoScrollView: boolean onDragEvent(android.view.DragEvent)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserHasTrust(int)>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>
<android.webkit.WebViewProvider.ViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>
<com.android.documentsui.DocumentsApplication: void onTrimMemory(int)>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<android.net.LocalSocket: void setSendBufferSize(int)>
<android.hardware.camera2.legacy.RequestThreadManager: android.hardware.camera2.utils.SubmitInfo submitCaptureRequests(android.hardware.camera2.CaptureRequest[],boolean)>
<android.widget.StackView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.server.wm.TaskStack: boolean getForceScaleToCrop()>
<android.hardware.radio.RadioManager.ModuleProperties: void writeToParcel(android.os.Parcel,int)>
<com.google.android.util.AbstractMessageParser.Resources: java.util.Set getSchemes()>
<com.android.systemui.DessertCaseView.RescalingContainer: float getDarkness()>
<android.os.BatteryStats.LevelStepTracker: int getInitModeAt(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getFileStreamPath(java.lang.String)>
<com.android.systemui.BatteryMeterView: void onPowerSaveChanged(boolean)>
<android.view.View: int getWindowAttachCount()>
<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setIconLocation(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>
<com.android.uiautomator.core.UiCollection: void <init>(com.android.uiautomator.core.UiSelector)>
<android.net.LinkAddress: int hashCode()>
<com.android.server.am.ActivityManagerService: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>
<android.location.Address: void setSubAdminArea(java.lang.String)>
<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>
<android.graphics.RectF: int hashCode()>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForEmpty(long,java.util.concurrent.TimeUnit)>
<com.android.tools.layoutlib.create.AsmGenerator: void generate()>
<com.android.tools.layoutlib.java.UnsafeByteSequence: java.lang.String toString(java.nio.charset.Charset)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setPanelVisible(boolean)>
<android.filterpacks.imageproc.GrainFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.widget.ZoomControls: boolean hasFocus()>
<android.view.IWindowManagerImpl: int getPreferredOptionsPanelGravity()>
<android.graphics.Canvas_Delegate: boolean native_quickReject(long,long)>
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>
<com.android.server.connectivity.NetdEventListenerService: boolean registerNetdEventCallback(android.net.INetdEventCallback)>
<android.view.TextureView: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getStackTranslation()>
<android.service.notification.NotificationListenerService: void cancelAllNotifications()>
<android.hardware.camera2.params.InputConfiguration: int getWidth()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentPosttimeMs()>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.telecom.Connection: void setAddress(android.net.Uri,int)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadRight()>
<android.content.pm.PackageInstaller.SessionInfo: int getSessionId()>
<com.android.server.connectivity.NetdEventListenerService: boolean unregisterNetdEventCallback()>
<android.renderscript.Allocation: void destroy()>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context,android.content.ComponentName)>
<com.android.systemui.statusbar.BaseStatusBar: boolean userAllowsNotificationsInPublic(int)>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.widget.TextView: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.View.DragShadowBuilder: android.view.View getView()>
<android.view.View: boolean isHapticFeedbackEnabled()>
<android.os.health.SystemHealthManager: android.os.health.HealthStats[] takeUidSnapshots(int[])>
<android.graphics.Gradient_Delegate.GradientPaint: int getTransparency()>
<android.hardware.camera2.marshal.MarshalQueryable: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.preference.DialogPreference: void <init>(android.content.Context)>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>
<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.widget.AbsSeekBar: void setSplitTrack(boolean)>
<android.hardware.GeomagneticField: float getHorizontalStrength()>
<android.view.inputmethod.EditorInfo: int describeContents()>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: int getCollapsedHeight()>
<android.net.wifi.WifiScanner.ScanListener: void onResults(android.net.wifi.WifiScanner.ScanData[])>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.graphics.drawable.RippleDrawable: void draw(android.graphics.Canvas)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>
<android.view.View: boolean showContextMenu()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: boolean isAlphaChannelImage()>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void copyTo(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.server.input.InputManagerService: void monitor()>
<android.renderscript.ScriptIntrinsicBLAS: void CTBMV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>
<android.os.Bundle: android.util.Size getSize(java.lang.String)>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.FieldID getFieldID_Input()>
<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void rebootSafeMode(boolean,boolean)>
<com.android.systemui.statusbar.ExpandableView: void notifyHeightChanged(boolean)>
<android.renderscript.Element: android.renderscript.Element U64_3(android.renderscript.RenderScript)>
<com.android.server.am.ActivityManagerService: void setPackageScreenCompatMode(java.lang.String,int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void <init>(com.android.systemui.statusbar.phone.ScrimController,android.content.Context)>
<com.android.hotspot2.pps.Policy: java.util.List getSPExclusionList()>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>
<android.app.DialogFragment: boolean isCancelable()>
<com.android.server.am.ActivityManagerService: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: int getName()>
<android.telecom.Connection: boolean getAudioModeIsVoip()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<com.android.documentsui.dirlist.DirectoryFragment: void pasteFromClipboard()>
<com.android.server.am.ActivityManagerService: int stopUser(int,boolean,android.app.IStopUserCallback)>
<android.view.Display: void getRealSize(android.graphics.Point)>
<android.os.CountDownTimer: void onTick(long)>
<android.widget.ExpandableListView: boolean collapseGroup(int)>
<com.android.server.net.NetworkStatsRecorder.RemoveUidRewriter: void read(java.io.InputStream)>
<com.android.server.am.BatteryStatsService: void noteAlarmStart(java.lang.String,int)>
<android.graphics.Bitmap: int getPixel(int,int)>
<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<com.android.server.updates.TzDataInstallReceiver: void <init>()>
<android.widget.TextView: java.util.Locale getTextServicesLocale()>
<android.service.notification.NotificationListenerService: void onListenerDisconnected()>
<android.hardware.camera2.impl.CameraDeviceImpl: void prepare(int,android.view.Surface)>
<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>
<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>
<com.android.systemui.recents.tv.views.RecentsTvView: void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent)>
<com.android.systemui.recents.events.EventBus: void register(java.lang.Object)>
<android.media.AudioTrack: void flush()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSecurityLoggingEnabled(android.content.ComponentName)>
<android.media.AudioManager: boolean isVolumeFixed()>
<com.android.server.InputMethodManagerService: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService.GrantUri: boolean equals(java.lang.Object)>
<android.widget.ExpandableListView: void setIndicatorBoundsRelative(int,int)>
<android.widget.TableLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeId(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isFullscreenBouncer()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitFormalTypeParameter(java.lang.String)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void setEntry(com.android.systemui.statusbar.NotificationData.Entry)>
<com.android.systemui.statusbar.AlphaOptimizedButton: boolean hasOverlappingRendering()>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>
<com.android.server.DeviceIdleController: void <init>(android.content.Context)>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>
<android.hardware.radio.RadioManager.FmBandConfig: int hashCode()>
<com.android.documentsui.dirlist.IconHelper: void loadThumbnail(android.net.Uri,java.lang.String,int,int,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView)>
<com.android.systemui.qs.tiles.BatteryTile: void onPowerSaveChanged(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<com.android.systemui.statusbar.ExpandableView: void setDimmed(boolean,boolean)>
<android.media.effect.EffectUpdateListener: void onEffectUpdated(android.media.effect.Effect,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.mtp.MtpStorageInfo: java.lang.String getDescription()>
<android.graphics.Rect: void setEmpty()>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setMinutes(int)>
<com.android.server.am.ActivityManagerService: void getProcessStatesAndOomScoresForPIDs(int[],int[],int[])>
<com.android.systemui.statusbar.policy.CallbackHandler: void setSubs(java.util.List)>
<android.util.DisplayMetrics: int hashCode()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.opengles.GL getGL()>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.FloatBuffer)>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<android.widget.ScrollView: void setOverScrollMode(int)>
<com.android.server.notification.ManagedServices: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(android.bluetooth.BluetoothDevice)>
<android.content.ComponentName: java.lang.String toString()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.opengl.GLES32: void glDebugMessageCallback(android.opengl.GLES32.DebugProc)>
<android.renderscript.Allocation: void copyFrom(short[])>
<com.android.server.accessibility.AutoclickController: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<android.widget.Toolbar: void dismissPopupMenus()>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus.Listener)>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void sendTimerMessage(int,long)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnBranded()>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isUploading()>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback,int)>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<com.android.server.job.controllers.TimeController: com.android.server.job.controllers.TimeController get(com.android.server.job.JobSchedulerService)>
<com.android.hotspot2.WifiNetworkAdapter: android.net.Network getCurrentNetwork()>
<com.android.systemui.recents.views.AnimationProps: void <init>(int,int,android.view.animation.Interpolator)>
<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
<com.android.server.pm.PackageInstallerSession: boolean isPrepared()>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setBlockModes(java.lang.String[])>
<android.hardware.radio.RadioManager.BandDescriptor: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.BaseStatusBar: android.os.Bundle getActivityOptions()>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>
<com.android.server.connectivity.LingerMonitor: void <init>(android.content.Context,com.android.server.connectivity.NetworkNotificationManager,int,long)>
<com.android.systemui.statusbar.StatusBarIconView: void debug(int)>
<android.media.SyncParams: android.media.SyncParams setAudioAdjustMode(int)>
<android.security.keystore.KeyNotYetValidException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: void <init>()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void setAlternativeOrder(boolean)>
<android.content.ClipData.Item: void <init>(android.net.Uri)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>
<com.android.server.policy.PhoneWindowManager: void setRecentsVisibilityLw(boolean)>
<com.google.android.util.AbstractMessageParser.Part: void <init>()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightUpdated(float)>
<com.android.server.usage.UsageStatsService: void onStatsUpdated()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void setDependencySet(java.util.Set)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void throwIfCannotDraw(android.graphics.Bitmap)>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display,int)>
<android.app.WallpaperManager: boolean isWallpaperSupported()>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.Settings getProperties()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onReorderingAllowed()>
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>
<android.widget.ListView: void addFooterView(android.view.View)>
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()>
<com.android.commands.svc.DataCommand: void run(java.lang.String[])>
<android.view.View: void offsetLeftAndRight(int)>
<com.android.server.am.ActivityManagerService: android.graphics.Rect getTaskBounds(int)>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>
<com.android.server.policy.WindowOrientationListener: void onTouchStart()>
<com.android.layoutlib.bridge.android.BridgeContext: void revokeUriPermission(android.net.Uri,int)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
<android.view.MotionEvent: int getActionIndex()>
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>
<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>
<android.net.wifi.nan.PublishSettings.Builder: android.net.wifi.nan.PublishSettings build()>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getCacheDir()>
<android.gesture.Gesture: float getLength()>
<android.renderscript.FieldPacker: android.renderscript.Matrix4f subMatrix4f()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetEnd(int)>
<android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
<android.app.ActivityManagerProxy: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.opengl.GLES20: void glHint(int,int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener.Observer: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>
<com.android.server.location.GeofenceState: double getDistanceToBoundary()>
<com.android.systemui.qs.GlobalSetting: void setValue(int)>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>
<android.util.LruCache: int hitCount()>
<android.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>
<android.view.ActionMode: void finish()>
<com.android.documentsui.FilesAppPerfTest: void testFilesWarmStartPerformance()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getEventType()>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSFooter getFooter()>
<android.mtp.MtpDevice: void close()>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>
<android.preference.SeekBarVolumizer.Callback: void onSampleStarting(android.preference.SeekBarVolumizer)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDonePending(boolean)>
<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.qs.external.TileServices getTileServices()>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isTouchExplorationEnabled()>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: void <init>(com.android.ddmlib.Client)>
<android.hardware.fingerprint.IFingerprintDaemon: int enroll(byte[],int,int)>
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>
<android.nfc.tech.MifareClassic: byte[] readBlock(int)>
<com.android.hotspot2.OMADMAdapter: byte[] getMeid()>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>
<android.transition.Transition: long getStartDelay()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result inflate()>
<android.hardware.camera2.params.InputConfiguration: boolean equals(java.lang.Object)>
<android.provider.ContactsContract.PinnedPositions: void undemote(android.content.ContentResolver,long)>
<android.app.ActivityManagerProxy: void resizeTask(int,android.graphics.Rect,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedWakingUp()>
<com.android.layoutlib.bridge.bars.StatusBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.resources.Density,boolean,boolean,int)>
<android.preference.RingtonePreference: void <init>(android.content.Context)>
<android.widget.AdapterView: void setSelection(int)>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>
<android.hardware.camera2.CameraDevice.StateCallback: void onError(android.hardware.camera2.CameraDevice,int)>
<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<com.android.keyguard.ViewMediatorCallback: boolean isScreenOn()>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>
<com.android.server.pm.Installer: void clearAppData(java.lang.String,java.lang.String,int,int,long)>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>
<android.widget.AbsListView: void layoutChildren()>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(android.renderscript.Matrix4f)>
<com.android.gallery3d.glrenderer.UploadedTexture: void <init>(boolean)>
<com.android.systemui.doze.DozeLog: void tracePulseFinish()>
<android.telephony.CellIdentityWcdma: int hashCode()>
<android.app.ListFragment: void <init>()>
<com.android.systemui.recents.model.FilteredTaskList: boolean hasFilter()>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<com.android.server.job.controllers.StateController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setIdle()>
<com.android.hotspot2.osu.ClientKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>
<com.android.systemui.usb.UsbPermissionActivity: void onDestroy()>
<com.android.egg.neko.Cat: void logRemove(android.content.Context)>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>
<android.graphics.Paint: void setStrokeMiter(float)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewScroller getScroller()>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<android.graphics.drawable.Animatable2: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
<android.app.FragmentManagerImpl: void dispatchLowMemory()>
<com.android.systemui.qs.QSIconView: void <init>(android.content.Context)>
<com.android.documentsui.dirlist.DirectoryFragment: boolean onBackPressed()>
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<com.android.server.connectivity.NetworkAgentInfo: boolean unlingerRequest(android.net.NetworkRequest)>
<com.android.systemui.qs.tiles.CastTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.print.PrinterCapabilitiesInfo: int describeContents()>
<android.net.wifi.WifiEnterpriseConfig: void setDomainSuffixMatch(java.lang.String)>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>
<com.android.server.net.NetworkPolicyManagerService: void onTetheringChanged(java.lang.String,boolean)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isNetworkLoggingEnabled()>
<android.telecom.RemoteConnection.VideoProvider: void registerCallback(android.telecom.RemoteConnection.VideoProvider.Callback)>
<android.widget.EdgeEffect: void onAbsorb(int)>
<com.android.location.provider.GmsFusedBatchOptions: void resetSourceToUse(int)>
<com.android.layoutlib.bridge.Bridge: boolean isLocaleRtl(java.lang.String)>
<android.util.ArraySet: boolean containsAll(java.util.Collection)>
<com.google.android.util.AbstractMessageParser: java.lang.String toHtml()>
<com.android.settingslib.drawable.CircleFramedDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.BaseStatusBar: java.lang.Object createHandler()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiConfiguration getConfig()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.classifier.FalsingManager: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.transition.ChangeClipBounds: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.ScriptIntrinsicBLAS: void CHPR2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.printservice.PrinterDiscoverySession: void addPrinters(java.util.List)>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled()>
<android.app.usage.NetworkStats.Bucket: long getRxBytes()>
<android.bluetooth.le.ScanResult: int getRssi()>
<com.android.server.am.ActivityManagerService: void setHasTopUi(boolean)>
<com.android.systemui.statusbar.car.CarBatteryController: void <init>(android.content.Context)>
<com.android.egg.neko.Cat: int getColorIndex(int,int[])>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>
<android.view.View: boolean onSetAlpha(int)>
<com.android.server.policy.PhoneWindowManager: void showRecentApps(boolean)>
<com.android.systemui.statusbar.NotificationContentView: void setHeadsUpChild(android.view.View)>
<android.location.Location: void setElapsedRealtimeNanos(long)>
<com.android.systemui.statusbar.ViewTransformationHelper: void setCustomTransformation(com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int detectSurfaceDataspace(android.view.Surface)>
<android.media.ImageReader: void close()>
<com.android.systemui.recents.misc.SystemServicesProxy: java.util.List getRecentTasks(int,int,boolean,android.util.ArraySet)>
<android.view.View.OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>
<android.media.projection.MediaProjection.Callback: void onStop()>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: boolean canReverse()>
<android.app.admin.DevicePolicyManager: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>
<android.view.View.OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.RecentsConfiguration: com.android.systemui.recents.RecentsActivityLaunchState getLaunchState()>
<android.hardware.camera2.CameraDevice.StateCallback: void onOpened(android.hardware.camera2.CameraDevice)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<android.renderscript.ProgramRaster.Builder: void <init>(android.renderscript.RenderScript)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void startAppearAnimation()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void measure()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void <init>(android.content.Context)>
<com.android.gallery3d.exif.ExifTag: boolean isValidIfd(int)>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.FieldID getFieldID_Input()>
<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>
<com.android.preload.DeviceUtils: void doShell(com.android.ddmlib.IDevice,java.lang.String,long,java.util.concurrent.TimeUnit)>
<android.widget.SearchView: void onWindowFocusChanged(boolean)>
<com.android.server.media.RemoteDisplayProviderWatcher: void start()>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(int,boolean)>
<android.util.BridgeXmlPullAttributes: int getAttributeIntValue(int,int)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long,long,long)>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<com.android.documentsui.NavigationView.Environment: java.lang.String getDrawerTitle()>
<android.graphics.drawable.LayerDrawable: int getId(int)>
<android.media.session.MediaSession.Callback: void <init>()>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>
<android.hardware.radio.RadioMetadata.Builder: android.hardware.radio.RadioMetadata.Builder putBitmap(java.lang.String,android.graphics.Bitmap)>
<android.telecom.TelecomManager: void registerPhoneAccount(android.telecom.PhoneAccount)>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>
<com.android.uiautomator.core.UiDevice: boolean pressRecentApps()>
<android.util.AtomicFile: byte[] readFully()>
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)>
<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall.FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>
<com.android.systemui.usb.UsbResolverActivity: void onDestroy()>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>
<android.app.assist.AssistStructure.ViewNode: int getTop()>
<android.widget.AbsListView: void onAttachedToWindow()>
<com.android.server.am.ActivityManagerService: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenerateMipmapOES(int)>
<com.android.server.policy.WindowOrientationListener: void setCurrentRotation(int)>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<android.widget.TextView: boolean showContextMenu()>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task)>
<android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>
<com.android.server.policy.LogDecelerateInterpolator: void <init>(int,int)>
<android.widget.Editor.HandleView: boolean isAtRtlRun(android.text.Layout,int)>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.Face toFace()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetBottom(int)>
<com.android.server.DropBoxManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>
<android.media.MediaRouter.UserRouteInfo: void setName(java.lang.CharSequence)>
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>
<android.telecom.PhoneAccount: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.nfc.tech.NfcBarcode: byte[] getBarcode()>
<com.android.documentsui.dirlist.Model: android.database.Cursor getItem(java.lang.String)>
<android.graphics.Canvas_Delegate: com.android.layoutlib.bridge.impl.GcSnapshot getSnapshot()>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>
<com.android.server.SamplingProfilerService: void <init>(android.content.Context)>
<android.renderscript.ScriptIntrinsicBLAS: void ZGEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void <init>(android.content.Context,android.os.storage.VolumeInfo,android.os.storage.VolumeInfo)>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.text.BidiFormatter: boolean isRtlContext()>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>
<android.widget.CalendarView.CalendarViewDelegate: int getSelectedWeekBackgroundColor()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor wrap(byte[])>
<com.android.location.fused.FusionEngine: void init(com.android.location.fused.FusionEngine.Callback)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getDevPersistBytes(long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createUserSwitcher()>
<android.hardware.camera2.CaptureFailure: int getReason()>
<android.content.ClipboardManager: void setText(java.lang.CharSequence)>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>
<com.android.server.TextServicesManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void requestLayout()>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.io.OutputStream)>
<com.android.server.pm.PackageManagerService: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>
<android.media.SoundPool: void setPriority(int,int)>
<android.app.MediaRouteButton: void onDetachedFromWindow()>
<android.media.AudioTrack: int getTimestampWithStatus(android.media.AudioTimestamp)>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.view.View: void setForeground(android.graphics.drawable.Drawable)>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setMaxStreams(int)>
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.graphics.Path_Delegate: void moveTo(float,float)>
<android.transition.Transition.TransitionListener: void onTransitionEnd(android.transition.Transition)>
<com.android.documentsui.BaseActivity: com.android.documentsui.BaseActivity get(android.app.Fragment)>
<android.view.WindowCallback: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.widget.ImageView: android.widget.ImageView.ScaleType getScaleType()>
<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getOrganizationColor(android.content.ComponentName)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels()>
<com.android.systemui.recents.RecentsImpl: void startRecentsActivity(android.app.ActivityManager.RunningTaskInfo,boolean,boolean,int)>
<com.android.gallery3d.glrenderer.RawTexture: void prepare(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String,java.lang.String)>
<com.android.server.backup.BackupManagerService: java.lang.String getDataManagementLabel(java.lang.String)>
<android.os.Parcel: long[] createLongArray()>
<com.android.systemui.recents.views.TaskViewTransform: void copyFrom(com.android.systemui.recents.views.TaskViewTransform)>
<android.provider.ContactsContract.Directory: boolean isEnterpriseDirectoryId(long)>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<android.text.method.BaseMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
<android.nfc.tech.NfcF: int getTimeout()>
<android.bluetooth.BluetoothDevice: int describeContents()>
<android.graphics.Canvas_Delegate: void native_drawOval(long,float,float,float,float,long)>
<android.util.DisplayMetrics: boolean equals(android.util.DisplayMetrics)>
<android.widget.TextView: void setImeOptions(int)>
<com.android.tools.layoutlib.create.ICreateInfo: java.util.Set getExcludedClasses()>
<android.webkit.ServiceWorkerWebSettings: int getCacheMode()>
<android.app.Fragment: android.app.Activity getActivity()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void showMenuIcon()>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<android.app.usage.NetworkStats.Bucket: long getTxPackets()>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle()>
<android.webkit.ConsoleMessage: int lineNumber()>
<com.android.server.policy.PhoneWindowManager: int windowTypeToLayerLw(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIconsDark(boolean,boolean)>
<android.graphics.drawable.AnimationDrawable: void stop()>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>
<android.webkit.PermissionRequest: android.net.Uri getOrigin()>
<android.net.DhcpInfo: void <init>()>
<android.location.Address: java.util.Locale getLocale()>
<android.telecom.Connection: android.telecom.Connection.VideoProvider getVideoProvider()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitTypeInsn(int,java.lang.String)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
<android.media.session.MediaController.TransportControls: void fastForward()>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>
<android.widget.LinearLayout: int getShowDividers()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToHexString(long)>
<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin getProfileOrDeviceOwner(android.content.Context,int)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setActivityStarter(com.android.systemui.statusbar.phone.ActivityStarter)>
<android.util.JsonWriter: boolean isLenient()>
<android.renderscript.FieldPacker: void addU16(int)>
<com.android.keyguard.KeyguardSimPinView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.graphics.SweepGradient_Delegate: java.awt.Paint getJavaPaint()>
<com.android.server.display.NightDisplayService: void onAutoModeChanged(int)>
<android.drm.DrmManagerClient: void finalize()>
<android.view.View: float getPivotY()>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putByteArray(int,byte[])>
<android.nfc.cardemulation.CardEmulation: boolean categoryAllowsForegroundPreference(java.lang.String)>
<com.android.systemui.recents.model.TaskStack.DockState: boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean)>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.ConnectivityManager.NetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>
<android.app.Activity: void setProgressBarVisibility(boolean)>
<com.android.systemui.qs.customize.TileAdapter: int getItemCount()>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4f(int,float,float,float,float)>
<android.media.browse.MediaBrowser: android.media.session.MediaSession.Token getSessionToken()>
<com.android.systemui.stackdivider.DividerView: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<com.android.systemui.classifier.EndPointRatioClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.renderscript.Script: void setVar(int,int)>
<com.android.settingslib.drawable.CircleFramedDrawable: void draw(android.graphics.Canvas)>
<android.os.UserManager: boolean setRestrictionsChallenge(java.lang.String)>
<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>
<com.android.systemui.statusbar.policy.AccessibilityController: void <init>(android.content.Context)>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.tv.TvView.TvInputCallback: void onContentAllowed(java.lang.String)>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt)>
<android.opengl.GLES11: boolean glIsTexture(int)>
<com.android.server.policy.PolicyControl: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getAttributeValue(int)>
<com.android.systemui.statusbar.policy.HotspotController: void setHotspotEnabled(boolean)>
<com.android.documentsui.PickFragment: void show(android.app.FragmentManager)>
<android.content.Loader.ForceLoadContentObserver: void <init>()>
<android.os.IBinder: boolean isBinderAlive()>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<com.android.hotspot2.osu.OSUManager: void spDeleted(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConditionsChanged(android.service.notification.Condition[])>
<android.nfc.NfcAdapter.CreateNdefMessageCallback: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>
<android.text.format.Time: boolean parse(java.lang.String)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>
<com.android.documentsui.dirlist.MultiSelectManager.GridModel.OnSelectionChangedListener: boolean onBeforeItemStateChange(java.lang.String,boolean)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.renderscript.AllocationAdapter: void setZ(int)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void setDark(boolean,boolean,long)>
<com.android.server.pm.PolicyComparator: boolean foundDuplicate()>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>
<android.content.pm.PackageParser.Package: boolean hasComponentClassName(java.lang.String)>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void removePermission(java.lang.String)>
<com.android.server.connectivity.KeepaliveTracker: void <init>(android.os.Handler)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>
<com.android.systemui.stackdivider.DividerHandleView: boolean hasOverlappingRendering()>
<android.view.View: void buildDrawingCache()>
<android.text.Layout: int getEllipsisCount(int)>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowDetached()>
<android.transition.TransitionManager: void transitionTo(android.transition.Scene)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.List getRootViews()>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>
<com.android.server.pm.UserManagerService: boolean canHaveRestrictedProfile(int)>
<android.os.Vibrator: boolean hasVibrator()>
<android.widget.TextView: android.view.ActionMode.Callback getCustomSelectionActionModeCallback()>
<com.android.systemui.qs.tiles.FlashlightTile: boolean isAvailable()>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<com.android.gallery3d.common.Utils: java.lang.String maskDebugInfo(java.lang.Object)>
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getLidState()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.classifier.FalsingManager: void onNotificatonStartDraggingDown()>
<android.media.MediaFormat: void setFeatureEnabled(java.lang.String,boolean)>
<android.provider.DocumentsContract: android.net.Uri buildRootsUri(java.lang.String)>
<android.view.AbsSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.widget.TextView: void setScroller(android.widget.Scroller)>
<com.android.systemui.recents.tv.animations.HomeRecentsEnterExitAnimationHolder: void setEnterFromAppStartingAnimationValues(boolean)>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void registerShortcutKey(long)>
<com.android.server.backup.Trampoline: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.media.MediaPlayer: int getVideoWidth()>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>
<android.service.chooser.ChooserTarget: int describeContents()>
<com.android.server.pm.PackageInstallerService: void setPermissionsResult(int,boolean)>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>
<com.android.location.provider.GmsFusedBatchOptions: void setSourceToUse(int)>
<com.android.server.am.BatteryStatsService: void noteStartAudio(int)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh.Primitive)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onConfigured(android.hardware.camera2.CameraCaptureSession)>
<com.android.keyguard.KeyguardPatternView: void cleanUp()>
<com.android.server.fingerprint.EnrollClient: int start()>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>
<android.graphics.Matrix_Delegate: boolean isIdentity()>
<android.graphics.drawable.DrawableWrapper: void setAlpha(int)>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
<android.media.audiopolicy.AudioMix.Builder: void <init>(android.media.audiopolicy.AudioMixingRule)>
<android.graphics.BidiRenderer: void <init>(java.awt.Graphics2D,android.graphics.Paint_Delegate,char[])>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<com.android.server.DropBoxManagerService: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.hardware.Sensor: int getVersion()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeathOnCleartextNetwork()>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>
<com.android.server.audio.AudioService.VolumeStreamState: void checkFixedVolumeDevices()>
<com.android.documentsui.FilesActivityPerfTest: void initTestFiles()>
<android.util.JsonWriter: android.util.JsonWriter nullValue()>
<android.app.DialogFragment: void onDetach()>
<com.android.systemui.Prefs: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.widget.AlphabetIndexer: int compare(java.lang.String,java.lang.String)>
<android.hardware.camera2.legacy.RequestHandlerThread: void removeMessages(int[])>
<com.android.documentsui.RootCursorWrapper: boolean onMove(int,int)>
<android.location.GnssClock: double getBiasNanos()>
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.ListPopupWindow: void setContentWidth(int)>
<com.android.settingslib.graph.UsageView: void setDividerColors(int,int)>
<android.widget.Editor.SuggestionsPopupWindow: android.view.ViewGroup getContentViewForTesting()>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<android.hardware.usb.UsbAccessory: java.lang.String getModel()>
<com.android.systemui.statusbar.RemoteInputController: void <init>(com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,java.lang.String)>
<android.database.MergeCursor: short getShort(int)>
<android.hardware.radio.RadioManager.BandDescriptor: java.lang.String toString()>
<android.webkit.CookieManager: void removeExpiredCookie()>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent.PointerProperties[],android.view.MotionEvent.PointerCoords[],int,int,float,float,int,int,int,int)>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>
<javax.microedition.khronos.opengles.GL10: void glAlphaFunc(int,float)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRect: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.hardware.Sensor: int getType()>
<android.media.ImageReader: int getWidth()>
<android.content.pm.ShortcutInfo: android.content.Intent getIntent()>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.preference.PreferenceActivity: void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence)>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
<com.android.settingslib.location.RecentLocationApps: void <init>(android.content.Context)>
<android.hardware.SensorEventCallback: void onFlushCompleted(android.hardware.Sensor)>
<android.media.MediaTimestamp: long getAnchorSytemNanoTime()>
<android.graphics.Bitmap: int getHeight()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getUser()>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>
<android.hardware.radio.RadioManager.BandConfig: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.dirlist.MultiSelectManager: com.android.documentsui.dirlist.MultiSelectManager.Selection getSelection(com.android.documentsui.dirlist.MultiSelectManager.Selection)>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>
<android.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<android.text.method.TextKeyListener: int getInputType()>
<android.database.AbstractWindowedCursor: long getLong(int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskWrites()>
<android.view.View: int getScrollBarFadeDuration()>
<com.android.systemui.statusbar.car.CarStatusBar: void createUserSwitcher()>
<android.database.sqlite.SQLiteCursor: void deactivate()>
<android.text.HtmlToSpannedConverter: void ignorableWhitespace(char[],int,int)>
<android.media.AsyncPlayer: void <init>(java.lang.String)>
<com.android.systemui.recents.views.TaskStackViewScroller: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackViewScroller.TaskStackViewScrollerCallbacks,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,int[],int)>
<com.android.uiautomator.core.UiObject: boolean dragTo(int,int,int)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void addListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<android.database.AbstractCursor: boolean moveToPosition(int)>
<android.app.ListFragment: long getSelectedItemId()>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.os.BatteryStats.HistoryStepDetails: void writeToParcel(android.os.Parcel)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void show(boolean)>
<android.hardware.display.VirtualDisplay: java.lang.String toString()>
<com.android.gallery3d.exif.ExifTag: void setOffset(int)>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<android.media.Image: int getFormat()>
<android.app.assist.AssistStructure.ViewNode: boolean isAssistBlocked()>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>
<android.view.Window: void setGravity(int)>
<android.view.Window.Callback: void onActionModeFinished(android.view.ActionMode)>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<android.os.IHardwarePropertiesManager: float[] getFanSpeeds(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.print.PrintAttributes.MediaSize: boolean isPortrait()>
<com.android.systemui.statusbar.policy.UserSwitcherController: int getSwitchableUserCount()>
<com.android.systemui.statusbar.phone.LockIcon: void setDeviceInteractive(boolean)>
<android.telephony.SubscriptionManager: android.telephony.SubscriptionInfo getActiveSubscriptionInfoForSimSlotIndex(int)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void stopRepeating()>
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>
<android.provider.DocumentsProvider: java.lang.String renameDocument(java.lang.String,java.lang.String)>
<android.view.View: int computeHorizontalScrollExtent()>
<android.renderscript.Double2: void <init>()>
<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.service.voice.VoiceInteractionSession: void onShow(android.os.Bundle,int)>
<android.os.storage.IMountServiceListener.Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telecom.ParcelableCallAnalytics.AnalyticsEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setBarState(int,boolean,boolean)>
<com.android.settingslib.users.AppRestrictionsHelper: void <init>(android.content.Context,android.os.UserHandle)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleRecentApps()>
<android.app.Activity: boolean showAssist(android.os.Bundle)>
<android.graphics.Paint: void setTextLocales(android.os.LocaleList)>
<android.opengl.GLES10: void glDisable(int)>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>
<com.android.server.job.JobServiceContext: void acknowledgeStartMessage(int,boolean)>
<com.android.systemui.volume.VolumeDialog: void destroy()>
<android.widget.TextView: void onProvideStructure(android.view.ViewStructure)>
<com.android.systemui.SystemUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.documentsui.dirlist.RenameDocumentFragment: void show(android.app.FragmentManager,com.android.documentsui.model.DocumentInfo)>
<android.content.ContentResolver: void requestSync(android.content.SyncRequest)>
<android.graphics.drawable.BitmapDrawable: void getOutline(android.graphics.Outline)>
<com.android.layoutlib.bridge.util.DynamicIdMap: void reset(int)>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size[] convertSizeListToArray(java.util.List)>
<com.android.systemui.recents.events.activity.ConfigurationChangedEvent: void <init>(boolean,boolean,boolean,boolean)>
<com.google.android.gles_jni.GLImpl: void glColor4x(int,int,int,int)>
<com.android.server.fingerprint.EnrollClient: boolean onEnrollResult(int,int,int)>
<android.media.ImageReader: android.media.Image acquireNextImage()>
<android.media.AudioRecord: void removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener)>
<com.android.settingslib.RestrictedLockUtils: void setMenuItemAsDisabledByAdmin(android.content.Context,android.view.MenuItem,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.gallery3d.exif.Rational: long getNumerator()>
<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition[])>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setZenMode(int)>
<com.android.hotspot2.Utils: java.lang.String macToString(long)>
<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>
<android.text.style.TtsSpan.CardinalBuilder: void <init>()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.os.Debug.MemoryInfo: int getTotalPss()>
<com.android.server.pm.IntentFilterVerificationState: void <init>(int,int,java.lang.String)>
<android.service.dreams.DreamService: void onWindowFocusChanged(boolean)>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onCategoriesChanged()>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.widget.TextView: void setSelected(boolean)>
<android.widget.TextClock: void setTimeZone(java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.layoutlib.bridge.util.DynamicIdMap: com.android.util.Pair resolveId(int)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: int getBottomStackSlowDownLength()>
<com.android.systemui.recents.RecentsImpl: void onDraggingInRecents(float)>
<com.android.server.job.controllers.ContentObserverController: com.android.server.job.controllers.ContentObserverController get(com.android.server.job.JobSchedulerService)>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)>
<android.security.keystore.KeyStoreCryptoOperationChunkedStreamer.Stream: android.security.keymaster.OperationResult finish(byte[],byte[])>
<com.android.server.pm.PackageManagerService: void systemReady()>
<android.inputmethodservice.Keyboard: int getMinWidth()>
<android.media.tv.TvView: void timeShiftPause()>
<com.android.systemui.statusbar.policy.SignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>
<android.text.style.URLSpan: void <init>(java.lang.String)>
<android.telecom.GatewayInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLSurfaceView: int getRenderMode()>
<android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
<com.android.server.am.BatteryStatsService: boolean isOnBattery()>
<com.android.systemui.qs.tiles.BluetoothTile: java.lang.CharSequence getTileLabel()>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>
<com.android.server.fingerprint.RemovalClient: int stop(boolean)>
<com.android.systemui.qs.tiles.AirplaneModeTile: java.lang.CharSequence getTileLabel()>
<com.android.keyguard.KeyguardPinBasedInputView: void reset()>
<android.view.animation.Animation: boolean getFillAfter()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void finish()>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.widget.VideoView: void start()>
<android.os.Vibrator: void vibrate(long[],int)>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setIconResourceId(int)>
<com.android.systemui.statusbar.BaseStatusBar: void showNextAffiliatedTask()>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateExpandNotificationsPanel()>
<android.nfc.NfcAdapter.OnNdefPushCompleteCallback: void onNdefPushComplete(android.nfc.NfcEvent)>
<android.widget.ScrollView: void <init>(android.content.Context)>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean)>
<android.widget.LinearLayout: void setWeightSum(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void remQsTile(android.content.ComponentName)>
<android.renderscript.Sampler.Builder: void setMagnification(android.renderscript.Sampler.Value)>
<com.android.server.audio.AudioService.VolumeStreamState: void applyDeviceVolume_syncVSS(int)>
<com.android.server.notification.ManagedServices: boolean isComponentEnabledForCurrentProfiles(android.content.ComponentName)>
<android.widget.ImageView: java.lang.CharSequence getAccessibilityClassName()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onConfiguring()>
<android.graphics.Typeface: int getStyle()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onStartDiscoveryFailed(java.lang.String,int)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getCurrentOverScrolledPixels(boolean)>
<com.android.systemui.statusbar.stack.StackStateAnimator: float getFinalTranslationY(android.view.View)>
<android.app.ActivityManagerProxy: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>
<com.android.server.pm.AbstractStatsBase: void <init>(java.lang.String,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void setTopHeadsUpDragAmount(android.view.View,float)>
<com.android.systemui.tuner.NavBarTuner: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.media.RingtonePlayer: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.os.Bundle)>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>
<android.view.IWindowManagerImpl: void setInTouchMode(boolean)>
<com.android.systemui.analytics.DataCollector: boolean isReportingEnabled()>
<android.media.AudioTrack: int setVolume(float)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>
<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus.Callback)>
<android.bluetooth.BluetoothGattService: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.RootsList: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: byte readByte()>
<com.android.documentsui.model.RootInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>
<android.graphics.Canvas_Delegate: void native_drawTextOnPath(long,java.lang.String,long,float,float,int,long,long)>
<android.net.wifi.p2p.WifiP2pDevice: void <init>()>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>
<android.text.Selection: void selectAll(android.text.Spannable)>
<android.graphics.Rect: boolean intersects(int,int,int,int)>
<com.android.server.am.ActivityManagerService: boolean isInLockTaskMode()>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withoutIPv6()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void setInput(java.io.InputStream,java.lang.String)>
<com.android.systemui.qs.tiles.DndTile: java.lang.String composeChangeAnnouncement()>
<android.location.GnssMeasurement: boolean hasCarrierCycles()>
<android.media.soundtrigger.SoundTriggerManager.Model: android.media.soundtrigger.SoundTriggerManager.Model create(java.util.UUID,java.util.UUID,byte[])>
<com.google.android.gles_jni.EGLDisplayImpl: boolean equals(java.lang.Object)>
<com.android.preload.ui.NullProgressMonitor: void advance(int)>
<android.database.DataSetObserver: void onChanged()>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig.Builder setStereo(boolean)>
<com.android.systemui.recents.RecentsImplProxy: void dockTopTask(int,int,int,android.graphics.Rect)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>
<android.content.Intent: void setSourceBounds(android.graphics.Rect)>
<android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>
<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.pm.PackageManagerService: void updatePackagesIfNeeded()>
<com.android.systemui.tv.pip.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.session.MediaController: int getRatingType()>
<com.android.server.fingerprint.ClientMonitor: boolean onError(int)>
<android.app.Instrumentation: void startAllocCounting()>
<com.android.systemui.statusbar.BaseStatusBar: android.service.notification.StatusBarNotification removeNotificationViews(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<android.view.animation.Animation: void <init>()>
<com.android.systemui.qs.QSTile.Callback: void onScanStateChanged(boolean)>
<android.app.ActivityManagerProxy: boolean startUserInBackground(int)>
<android.view.View: int getSolidColor()>
<android.media.tv.TvView: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<com.google.android.gles_jni.GLImpl: void glLoadIdentity()>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.statusbar.NotificationData.Entry createNotificationViews(android.service.notification.StatusBarNotification)>
<android.widget.SlidingDrawer: void animateClose()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureSizes()>
<android.preference.RingtonePreference: boolean getShowSilent()>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String,int)>
<android.text.HtmlToSpannedConverter: android.text.Spanned convert()>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<android.view.View: boolean getFilterTouchesWhenObscured()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean canSkipBouncer()>
<com.android.systemui.statusbar.ExpandableNotificationRow: float getSpaceForGear()>
<com.android.server.power.SuspendBlocker: void acquire()>
<com.android.systemui.recents.tv.views.RecentsTvView: com.android.systemui.recents.tv.views.TaskStackHorizontalGridView setTaskStackViewAdapter(com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter)>
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String findAddress(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void launchCamera(boolean,int)>
<android.service.dreams.DreamService: void onCreate()>
<com.android.documentsui.State: int describeContents()>
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>
<android.database.MatrixCursor: int getInt(int)>
<android.view.inputmethod.InputMethodInfo: int hashCode()>
<android.app.Notification.Action: int describeContents()>
<android.telecom.Call: void reject(boolean,java.lang.String)>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.hardware.radio.RadioMetadata.Builder: android.hardware.radio.RadioMetadata.Builder putString(java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>
<android.widget.OverScroller: int getCurrY()>
<android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>
<android.media.RemoteController: long getEstimatedMediaPosition()>
<com.android.tools.layoutlib.java.Charsets: byte[] toAsciiBytes(char[],int,int)>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>
<android.location.Criteria: void setHorizontalAccuracy(int)>
<com.android.server.pm.PackageManagerService: void finishPackageInstall(int,boolean)>
<android.view.View: void setContentDescription(java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void DSYRK(int,int,double,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.view.View: void postInvalidate(int,int,int,int)>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>
<android.os.health.TimerStat: void <init>()>
<com.android.media.remotedisplay.RemoteDisplayProvider: java.util.Collection getDisplays()>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getThumbnailCacheSize()>
<com.android.systemui.statusbar.BaseStatusBar: boolean isCollapsing()>
<com.android.layoutlib.bridge.android.BridgeWindow: void windowFocusChanged(boolean,boolean)>
<android.os.Binder: boolean pingBinder()>
<com.android.settingslib.drawer.DashboardCategory: int getTilesCount()>
<android.graphics.Rect: boolean contains(int,int)>
<com.android.systemui.statusbar.notification.TransformState: void reset()>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,float,boolean,boolean)>
<com.android.server.fingerprint.RemovalClient: int start()>
<android.app.ActivityManagerProxy: void finishHeavyWeightApp()>
<com.android.anqp.IconInfo: java.lang.String toString()>
<android.view.View: void setLeft(int)>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int)>
<android.hardware.Camera.Parameters: void setColorEffect(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTRSM(int,int,int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>
<android.mtp.MtpEvent: int getParameter1()>
<com.android.server.notification.ManagedServices: void unregisterService(android.os.IInterface,int)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void setRawInputType(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setExpanded(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.widget.GridLayout: void setColumnCount(int)>
<android.view.ViewGroup: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus.Listener)>
<android.renderscript.ScriptIntrinsicResize: void setInput(android.renderscript.Allocation)>
<android.database.ContentObservable: void dispatchChange(boolean)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onShowRequested(int)>
<android.content.ContentQueryMap: void finalize()>
<android.graphics.Rect: boolean equals(java.lang.Object)>
<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>
<com.android.egg.neko.Cat: void logShare(android.content.Context)>
<com.android.server.statusbar.StatusBarShellCommand: void onHelp()>
<android.view.Menu: void close()>
<android.webkit.WebView: int computeVerticalScrollOffset()>
<android.animation.AnimatorSet: boolean isRunning()>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>
<com.android.systemui.classifier.HumanInteractionClassifier: boolean isFalseTouch()>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.printspooler.model.PrintSpoolerProvider: void destroy()>
<android.content.Intent: android.graphics.Rect getSourceBounds()>
<com.android.keyguard.NumPadKey: void userActivity()>
<com.android.systemui.recents.model.TaskKeyLruCache: void dump(java.lang.String,java.io.PrintWriter)>
<android.widget.TextView: void drawableStateChanged()>
<android.os.Debug.MemoryInfo: void <init>()>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>
<com.android.server.backup.BackupManagerService.Lifecycle: void <init>(android.content.Context)>
<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>
<android.renderscript.Long4: void <init>(long,long,long,long)>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>
<com.android.systemui.statusbar.SignalClusterView: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<android.preference.SwitchPreference: void onBindView(android.view.View)>
<android.content.pm.PackageParser.Package: void setApplicationInfoResourcePath(java.lang.String)>
<android.graphics.Rect: java.lang.String flattenToString()>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.Exception)>
<android.os.ParcelFileDescriptor.OnCloseListener: void onClose(java.io.IOException)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean requestScrollTo()>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>
<android.app.Activity: void onTrimMemory(int)>
<com.android.uiautomator.core.UiDevice: void sleep()>
<com.android.server.pm.PersistentPreferredIntentResolver: com.android.server.pm.PersistentPreferredActivity[] newArray(int)>
<android.graphics.drawable.AnimatedVectorDrawable: void reset()>
<com.android.layoutlib.bridge.impl.RenderAction: java.lang.Integer getId(com.android.resources.ResourceType,java.lang.String)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceChange(android.preference.Preference)>
<com.android.hotspot2.omadm.OMAScalar: void toString(java.lang.StringBuilder,int)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaDrm.OnEventListener: void onEvent(android.media.MediaDrm,byte[],int,int,byte[])>
<com.android.systemui.ExpandHelper.Callback: boolean canChildBeExpanded(android.view.View)>
<android.graphics.PathMeasure: boolean nextContour()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createInputStream(int,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void reset()>
<android.telecom.Conference: void onMerge(android.telecom.Connection)>
<android.security.KeyPairGeneratorSpec: java.util.Date getEndDate()>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.util.JsonReader: void setLenient(boolean)>
<android.database.Observable: void unregisterAll()>
<android.view.View: float getBottomFadingEdgeStrength()>
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>
<com.android.systemui.keyguard.KeyguardViewMediator: void handleDismiss(boolean)>
<com.android.systemui.tv.pip.PipControlsView.Listener: void onClosed()>
<android.content.Intent.FilterComparison: boolean equals(java.lang.Object)>
<android.telecom.Connection: void onStateChanged(int)>
<com.android.systemui.qs.QSTile.Callback: void onAnnouncementRequested(java.lang.CharSequence)>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>
<android.view.Menu: void setQwertyMode(boolean)>
<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)>
<android.database.CursorWrapper: android.os.Bundle getExtras()>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>
<com.android.preload.actions.AbstractThreadedAction: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: java.lang.Object getGroup(int)>
<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall.AMSInterface,android.os.Handler)>
<android.app.ApplicationThreadProxy: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<com.android.hotspot2.AppBridge: void showOsuCount(int,java.util.List)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean hasSystemFeature(java.lang.String,int)>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>
<com.android.server.am.ActivityManagerService: void setSystemServiceManager(com.android.server.SystemServiceManager)>
<android.content.RestrictionEntry: int getType()>
<android.hardware.Camera.Parameters: void setGpsTimestamp(long)>
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.am.BatteryStatsService: void notePhoneOn()>
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.app.assist.AssistStructure.ViewNode: int[] getTextLineCharOffsets()>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardBouncerChanged(boolean)>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<android.print.PrintAttributes.Margins: void <init>(int,int,int,int)>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedFraction()>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>
<android.content.pm.PackageInfo: java.lang.String toString()>
<android.widget.OverScroller: int getCurrX()>
<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>
<com.android.server.net.LockdownVpnTracker: void onVpnStateChanged(android.net.NetworkInfo)>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>
<com.android.location.provider.ProviderRequestUnbundled: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>
<android.os.WorkSource: boolean add(android.os.WorkSource)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDismissAllInProgress(boolean)>
<com.android.systemui.tuner.TunerService: void setValue(java.lang.String,int)>
<android.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context)>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<com.android.settingslib.dream.DreamBackend: android.content.ComponentName getDefaultDream()>
<com.android.server.pm.PolicyComparator: int compare(com.android.server.pm.Policy,com.android.server.pm.Policy)>
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()>
<android.animation.PropertyValuesHolder.PropertyValues.DataSource: java.lang.Object getValueAtFraction(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getOrganizationColorForUser(int)>
<com.android.tools.layoutlib.create.OverrideMethod: void setDefaultListener(com.android.tools.layoutlib.create.MethodListener)>
<com.android.systemui.qs.QSContainer: int getQsMinExpansionHeight()>
<android.widget.ListPopupWindow: long getSelectedItemId()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task getStackFrontMostTask(boolean)>
<android.hardware.soundtrigger.SoundTrigger.GenericSoundModel: java.lang.String toString()>
<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.os.UserHandle: int describeContents()>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMANode getChild(java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo: void setCurrentScore(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<android.telecom.ParcelableCallAnalytics.EventTiming: int getName()>
<android.telephony.SubscriptionInfo: java.lang.String getCountryIso()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespace(java.lang.String)>
<android.app.MediaRouteButton: void drawableStateChanged()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: boolean isReprocessable()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setupActionBar()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowSpan()>
<android.app.Activity: boolean hasWindowFocus()>
<android.widget.QuickContactBadge: void setOverlay(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void <init>(org.xmlpull.v1.XmlPullParser)>
<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>
<android.content.pm.PackageInstaller.SessionParams: void setAppIcon(android.graphics.Bitmap)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: void onAnimationStart()>
<com.android.systemui.statusbar.policy.FlashlightController: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,int)>
<com.android.systemui.recents.RecentsSystemUser: void sendLaunchRecentsEvent()>
<com.android.printspooler.ui.PrintActivity: boolean canOpenOptions()>
<com.android.anqp.I18Name: java.util.Locale getLocale()>
<android.hardware.radio.RadioManager.FmBandDescriptor: int hashCode()>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onPause()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,int[][])>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder addRule(android.media.AudioAttributes,int)>
<android.content.pm.PackageInstaller.Session: void close()>
<com.android.documentsui.NavigationView.Environment: void refreshCurrentRootAndDirectory(int)>
<android.transition.Transition: android.transition.Transition excludeChildren(java.lang.Class,boolean)>
<android.app.admin.DevicePolicyManager: void wipeData(int)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.util.EventLog: int writeEvent(int,java.lang.String)>
<android.animation.LayoutTransition: void disableTransitionType(int)>
<com.android.settingslib.drawable.UserIconDrawable: void onBoundsChange(android.graphics.Rect)>
<android.telephony.TelephonyManager: boolean isVoiceCapable()>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>
<android.os.PowerManager.WakeLock: void release()>
<com.android.systemui.volume.MediaSessions: java.lang.String getControllerName(android.media.session.MediaController)>
<android.database.MergeCursor: boolean requery()>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>
<android.graphics.SumPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.keyguard.KeyguardPasswordView: void resetState()>
<android.app.LauncherActivity: java.util.List makeListItems()>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<android.graphics.drawable.BitmapDrawable: int getGravity()>
<com.android.systemui.volume.VolumeDialogController: void onUserActivityW()>
<android.graphics.PathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<com.android.server.backup.BackupManagerService: java.lang.String[] getTransportWhitelist()>
<com.android.photos.views.TiledImageView: void positionFromMatrix(android.graphics.Matrix)>
<com.android.server.media.MediaRouterService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.media.tv.TvTrackInfo: int getVideoHeight()>
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()>
<android.view.WindowCallback: void onAttachedToWindow()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setSubtitle(java.lang.CharSequence)>
<android.os.Bundle: short getShort(java.lang.String)>
<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback,android.os.Handler)>
<android.app.ActivityManagerProxy: java.util.List getAllStackInfos()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long,boolean)>
<com.android.systemui.qs.PagedTileLayout: boolean updateResources()>
<com.android.server.DeviceIdleController: void onAnyMotionResult(int)>
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>
<com.android.server.usage.UnixCalendar: void addWeeks(int)>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService.DevicePolicyData: void <init>(int)>
<android.hardware.Camera.Parameters: java.lang.String get(java.lang.String)>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateDefaultLayoutParams()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.widget.PopupWindow: boolean isAboveAnchor()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOverscrollTopChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener)>
<com.android.server.media.MediaRouterService: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>
<android.widget.TextView: float getTextScaleX()>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Activity: boolean isImmersive()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView()>
<com.android.systemui.volume.SafetyWarningDialog: void onDismiss(android.content.DialogInterface)>
<com.android.tools.layoutlib.create.Log: void exception(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String)>
<android.opengl.GLES20: void glActiveTexture(int)>
<com.android.documentsui.OpenExternalDirectoryActivity.OpenExternalDirectoryDialogFragment: void onDestroyView()>
<com.android.server.am.ActivityManagerService: boolean moveTaskToDockedStack(int,int,boolean,boolean,android.graphics.Rect,boolean)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.bars.NavigationBar: int getSidePadding(float)>
<android.media.MediaCodec: android.media.Image getOutputImage(int)>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>
<com.android.server.wm.AppTransition: void setCurrentUser(int)>
<com.android.server.notification.ConditionProviders.Callback: void onUserSwitched()>
<android.graphics.drawable.Icon: int describeContents()>
<android.app.admin.DevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.security.PrivateKey,java.security.cert.Certificate[],java.lang.String,boolean)>
<android.graphics.BitmapRegionDecoder: boolean isRecycled()>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.android.layoutlib.bridge.Bridge: android.graphics.Bitmap getCachedBitmap(java.lang.String,java.lang.Object)>
<android.hardware.Sensor: boolean isDynamicSensor()>
<com.android.hotspot2.osu.commands.MOURN: java.lang.String getURN()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGroupsChanged()>
<com.android.systemui.statusbar.CommandQueue: void toggleKeyboardShortcutsMenu(int)>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.media.tv.TvInputService.RecordingSession: void notifyTuned(android.net.Uri)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onConfigurationChanged()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isSecure(int)>
<android.os.BatteryStats.ControllerActivityCounter: android.os.BatteryStats.LongCounter[] getTxTimeCounters()>
<com.android.server.pm.ShortcutService.Lifecycle: void onCleanupUser(int)>
<android.animation.ValueAnimator: java.lang.String toString()>
<android.graphics.Region: android.graphics.Rect getBounds()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()>
<com.android.systemui.qs.QSTile.ResourceIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarIconList: java.lang.String getSlot(int)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaUri(android.net.Uri)>
<android.opengl.EGLObjectHandle: void <init>(long)>
<com.android.documentsui.DocumentsToolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.RippleDrawable: boolean isStateful()>
<android.media.Rating: int getRatingStyle()>
<com.android.systemui.qs.external.TileServices: void onStartSuccessful(android.os.IBinder)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save()>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
<android.hardware.radio.RadioManager.AmBandConfig.Builder: android.hardware.radio.RadioManager.AmBandConfig.Builder setStereo(boolean)>
<android.webkit.WebViewFragment: void <init>()>
<android.media.midi.MidiDeviceInfo.PortInfo: int getType()>
<android.net.UrlQuerySanitizer.ParameterValuePair: void <init>(java.lang.String,java.lang.String)>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.media.AudioMixPort: int ioHandle()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcAtop()>
<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>
<com.android.systemui.statusbar.policy.BatteryController: void setPowerSaveMode(boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOff()>
<android.preference.TwoStatePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>
<android.location.Criteria: int getPowerRequirement()>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>
<android.provider.DocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>
<android.view.View: void setActivated(boolean)>
<com.android.anqp.I18Name: boolean equals(java.lang.Object)>
<android.widget.FrameLayout: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.qs.external.TileServices: void updateQsTile(android.service.quicksettings.Tile,android.os.IBinder)>
<android.os.HandlerThread: void <init>(java.lang.String)>
<android.util.JsonWriter: void setLenient(boolean)>
<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.analytics.SensorLoggerSession: void <init>(long,long)>
<javax.microedition.khronos.opengles.GL10: void glTranslatex(int,int,int)>
<android.os.Debug: void waitForDebugger()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.String toString()>
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyLog()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean,boolean,float)>
<android.content.pm.PackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.server.am.BatteryStatsService: void scheduleWriteToDisk()>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>
<android.util.ArraySet: int size()>
<com.android.settingslib.BatteryInfo.Callback: void onBatteryInfoLoaded(com.android.settingslib.BatteryInfo)>
<com.android.systemui.qs.tiles.DataSaverTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setBackground(android.graphics.Bitmap)>
<android.preference.ListPreference: void <init>(android.content.Context)>
<com.android.hotspot2.osu.OSUResponse: java.util.Map getAttributes()>
<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>
<android.media.AudioManagerInternal.RingerModeDelegate: int onSetRingerModeExternal(int,int,java.lang.String,int,android.media.VolumePolicy)>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>
<com.android.externalstorage.ExternalStorageProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.location.GnssNavigationMessage: java.lang.String toString()>
<android.telecom.Connection: java.lang.String stateToString(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: boolean startScrollToFocusedTaskAnimation(com.android.systemui.recents.model.Task,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showPromptReason(int)>
<android.view.IWindowManagerImpl: boolean isRotationFrozen()>
<com.android.hotspot2.asn1.Asn1Constructed: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer,int)>
<com.android.documentsui.RootCursorWrapper: short getShort(int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitSource(java.lang.String,java.lang.String)>
<android.view.IWindowManagerImpl: void prepareAppTransition(int,boolean)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo build()>
<com.android.systemui.statusbar.notification.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List retrieveNetworkLogs(android.content.ComponentName,long)>
<android.webkit.ClientCertRequest: void <init>()>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canApplyTheme()>
<android.hardware.camera2.impl.CameraDeviceImpl: boolean configureStreamsChecked(android.hardware.camera2.params.InputConfiguration,java.util.List,boolean)>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setActualHeight(int,boolean)>
<javax.microedition.khronos.opengles.GL11: void glColorPointer(int,int,int,int)>
<com.android.server.am.ActivityManagerService: int getLockTaskModeState()>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarView)>
<android.print.PrinterInfo: int hashCode()>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<com.android.systemui.statusbar.stack.HeadsUpAppearInterpolator: void <init>()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,byte[])>
<android.hardware.Camera.Parameters: java.lang.String getSceneMode()>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<com.android.server.backup.Trampoline: void <init>(android.content.Context)>
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: boolean getAttributeBooleanValue(int,boolean)>
<com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler: float getRowTranslationScale(int,int)>
<com.android.server.statusbar.StatusBarManagerInternal: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect,java.lang.String)>
<android.app.Notification.WearableExtender: boolean getHintContentIntentLaunchesActivity()>
<com.android.systemui.qs.QSFooter: void showDeviceMonitoringDialog()>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.notification.ManagedServices: boolean isComponentEnabledForPackage(java.lang.String)>
<com.android.server.backup.Trampoline: java.lang.String[] getTransportWhitelist()>
<android.sax.RootElement: void <init>(java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.StackState getStackState()>
<android.provider.Contacts.ContactMethods: java.lang.String encodePredefinedImProtocol(int)>
<android.view.View: void dispatchStartTemporaryDetach()>
<com.google.android.maps.MapView: void <init>(android.content.Context)>
<com.android.systemui.media.RingtonePlayer: void start()>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getAllIntentFilters(java.lang.String)>
<android.view.View: void dispatchDrawableHotspotChanged(float,float)>
<com.android.server.notification.ScheduleCalendar: long getNextChangeTime(long)>
<com.android.server.pm.Installer: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startDeleteTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getVisibleFrameLw()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<android.app.admin.DevicePolicyManager: boolean hasCaCertInstalled(android.content.ComponentName,byte[])>
<android.graphics.drawable.RippleDrawable: void getHotspotBounds(android.graphics.Rect)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setSize(int,int)>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>
<android.media.AudioTrack: int getPlaybackHeadPosition()>
<com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>
<android.view.ViewPropertyAnimator: long getStartDelay()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getOrganizationNameForUser(int)>
<android.app.Dialog: void openOptionsMenu()>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setZ(int)>
<com.android.photos.views.TiledImageView: boolean isTilingSupported()>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList rebuild(com.android.settingslib.applications.ApplicationsState.AppFilter,java.util.Comparator)>
<com.android.server.job.JobStore: boolean remove(com.android.server.job.controllers.JobStatus,boolean)>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<android.os.CountDownTimer: void cancel()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsExpanded()>
<android.widget.ViewAnimator: void showNext()>
<com.android.keyguard.CarrierText: void onDetachedFromWindow()>
<com.android.hotspot2.omadm.MOManager: void <init>(java.io.File,boolean)>
<android.app.SearchManager.OnCancelListener: void onCancel()>
<com.android.uiautomator.core.UiObject: boolean clickTopLeft()>
<android.app.RemoteInput.Builder: android.os.Bundle getExtras()>
<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Element,int)>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
<android.telecom.ConnectionService: void onRemoteConferenceAdded(android.telecom.RemoteConference)>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,int)>
<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>
<com.android.systemui.statusbar.NotificationData.Entry: void notifyFullScreenIntentLaunched()>
<android.service.dreams.DreamService: boolean isScreenBright()>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<com.android.server.wm.DimLayer.DimLayerUser: android.view.DisplayInfo getDisplayInfo()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isZenAvailable()>
<android.speech.RecognitionService: void onStopListening(android.speech.RecognitionService.Callback)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnail()>
<android.os.WorkSource: void clear()>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasTranslationZChangedFrom(float)>
<com.android.server.policy.PhoneWindowManager: boolean isTopLevelWindow(int)>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>
<android.hardware.Camera: void stopSmoothZoom()>
<android.media.MediaRecorder: int getMaxAmplitude()>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>
<com.android.systemui.recents.tv.RecentsTvActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.recents.model.Task: void addCallback(com.android.systemui.recents.model.Task.TaskCallbacks)>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>
<android.app.backup.BackupDataInputStream: int size()>
<com.google.android.gles_jni.GLImpl: void glShadeModel(int)>
<com.android.server.storage.DeviceStorageMonitorInternal: long getMemoryLowThreshold()>
<com.android.documentsui.DocumentsToolbar: void <init>(android.content.Context)>
<com.android.server.am.CompatModePackages: int getFrontActivityScreenCompatModeLocked()>
<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path.Direction)>
<android.renderscript.Type: android.renderscript.Type createXYZ(android.renderscript.RenderScript,android.renderscript.Element,int,int,int)>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>
<android.util.ArrayMap: void <init>()>
<android.view.MenuItem: int getGroupId()>
<android.service.quicksettings.Tile: void setIcon(android.graphics.drawable.Icon)>
<android.location.LocationProvider: boolean supportsSpeed()>
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>
<android.net.Uri: java.lang.String getFragment()>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<android.app.ActivityManagerProxy: void setTaskResizeable(int,int)>
<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>
<android.view.View: void setNextFocusDownId(int)>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType,java.lang.String)>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onFinishedGoingToSleep()>
<com.android.server.am.ActivityManagerService: boolean isImmersive(android.os.IBinder)>
<com.google.android.maps.MapView: void onRestoreInstanceState(android.os.Bundle)>
<android.hardware.camera2.impl.CameraDeviceImpl: void setRemoteDevice(android.hardware.camera2.ICameraDeviceUser)>
<com.android.server.AppOpsService: void setUidMode(int,int,int)>
<com.android.systemui.recents.tv.views.RecentsTvView: com.android.systemui.recents.tv.views.TaskStackHorizontalGridView getGridView()>
<android.hardware.radio.RadioManager.ProgramInfo: boolean isDigital()>
<com.android.hotspot2.osu.OSUInfo: java.lang.String getServiceDescription(java.util.Locale)>
<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>
<android.app.ProgressDialog: int getProgress()>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>
<com.android.systemui.classifier.EndPointLengthClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.policy.BatteryController createBatteryController()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enforceCanManageCaCerts(android.content.ComponentName)>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.location.provider.ProviderPropertiesUnbundled create(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void removeView(android.view.View)>
<android.graphics.Bitmap: void setHasMipMap(boolean)>
<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,int)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>
<android.text.style.SuggestionSpan: void <init>(java.util.Locale,java.lang.String[],int)>
<android.opengl.GLES20: void glCullFace(int)>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>
<android.view.IWindowManagerImpl: void removeRotationWatcher(android.view.IRotationWatcher)>
<com.android.hotspot2.asn1.Asn1Object: void setEndOfData(int)>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>
<android.content.RestrictionsManager: android.content.Intent createLocalApprovalIntent()>
<com.android.commands.svc.Svc.Command: java.lang.String longHelp()>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,float[],int)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhoto()>
<android.content.pm.PackageManagerInternal.SyncAdapterPackagesProvider: java.lang.String[] getPackages(java.lang.String,int)>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>
<android.widget.TextSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.filterpacks.imageproc.AutoFixFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: int hashCode()>
<com.android.settingslib.dream.DreamBackend: void startDreaming()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>
<android.view.View: void setDrawingCacheQuality(int)>
<com.android.anqp.IconInfo: int hashCode()>
<com.android.settingslib.wifi.AccessPointPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)>
<com.android.server.pm.Installer: void createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>
<com.android.systemui.recents.events.ui.StackViewScrolledEvent: void <init>()>
<android.app.Notification.Builder: android.app.Notification.Builder setProgress(int,int,boolean)>
<android.renderscript.Element: android.renderscript.Element U16_2(android.renderscript.RenderScript)>
<com.android.documentsui.dirlist.IconHelper: android.graphics.drawable.Drawable getDocumentIcon(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig build()>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>
<com.android.systemui.qs.TileLayout: void onMeasure(int,int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<android.media.MediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildDismissed(android.view.View)>
<android.widget.NumberPicker.OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>
<com.android.uiautomator.core.UiScrollable: boolean flingToEnd(int)>
<android.graphics.drawable.Drawable: int getLayoutDirection()>
<android.util.Size: int hashCode()>
<android.printservice.PrintJob: int getAdvancedIntOption(java.lang.String)>
<com.android.documentsui.services.FileOperationService: void onDestroy()>
<android.security.KeyChainException: void <init>()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onAccessPointsChanged(java.util.List)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: void handleLayoutChanged()>
<com.android.systemui.statusbar.phone.PanelBar: void go(int)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<android.webkit.WebSettings: boolean getSaveFormData()>
<com.android.hotspot2.osu.OSUManager: com.android.hotspot2.omadm.MOTree getMOTree(com.android.hotspot2.pps.HomeSP)>
<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void startVerifications(int)>
<android.ddm.DdmHandleHello: void disconnected()>
<com.android.server.am.ActivityManagerService: void killAllBackgroundProcesses()>
<com.android.systemui.qs.tiles.HotspotTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.backup.BackupManagerService: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
<com.android.server.job.JobStore: void readJobMapFromDisk(com.android.server.job.JobStore.JobSet)>
<android.preference.SwitchPreference: void setSwitchTextOff(java.lang.CharSequence)>
<android.renderscript.Script: void setTimeZone(java.lang.String)>
<android.telephony.NeighboringCellInfo: int getPsc()>
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createNavigationBarView(android.content.Context)>
<android.app.Activity: void dismissDialog(int)>
<android.content.Context: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.AnalogClock: void onSizeChanged(int,int,int,int)>
<android.graphics.PointF: void set(float,float)>
<android.location.LocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.content.Intent: void <init>()>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<com.android.vpndialogs.ConfirmDialog: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String getSlot()>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<com.android.systemui.classifier.Point: boolean equals(com.android.systemui.classifier.Point)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPackageUid(java.lang.String,int)>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context,boolean)>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>
<android.provider.Contacts.ContactMethods: java.lang.String encodeCustomImProtocol(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void CTPSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.service.voice.VoiceInteractionSessionService: void onTrimMemory(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>
<android.view.KeyCharacterMap: char getNumber(int)>
<android.graphics.Outline: void offset(int,int)>
<android.graphics.Rect: boolean contains(int,int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showScreenPinningRequest(int)>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void <init>(com.android.systemui.statusbar.phone.PhoneStatusBar,com.android.systemui.statusbar.policy.UserSwitcherController,android.view.ViewStub)>
<com.android.systemui.stackdivider.WindowManagerProxy: void swapTasks()>
<android.content.pm.PackageManagerInternal.PackagesProvider: java.lang.String[] getPackages(int)>
<com.android.gallery3d.common.Utils: void waitWithoutInterrupt(java.lang.Object)>
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiSupplicantStateChanged(int,boolean)>
<android.hardware.camera2.params.Face: int getId()>
<android.widget.ViewAnimator: void removeViewAt(int)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap_Delegate getDelegate(android.graphics.Bitmap)>
<com.android.anqp.HSIconFileElement: void <init>(com.android.anqp.Constants.ANQPElementType,java.nio.ByteBuffer)>
<android.renderscript.FieldPacker: void addU8(short)>
<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>
<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()>
<com.android.hotspot2.omadm.XMLNode: void close()>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.app.Dialog: void openContextMenu(android.view.View)>
<android.graphics.RectF: void <init>(android.graphics.Rect)>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryEnabled(boolean)>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.objectweb.asm.Label,org.objectweb.asm.Label,int)>
<android.graphics.Canvas_Delegate: void native_drawArc(long,float,float,float,float,float,float,boolean,long)>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>
<android.widget.ActionMenuView: boolean showOverflowMenu()>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>
<com.android.keyguard.KeyguardPatternView: void startAppearAnimation()>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<com.android.server.statusbar.StatusBarManagerService: void remTile(android.content.ComponentName)>
<com.android.documentsui.dirlist.MultiSelectManager: void handleLayoutChanged()>
<com.android.documentsui.dirlist.Model: java.lang.String[] getModelIds()>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.WallpaperInfo: java.lang.String getPackageName()>
<com.android.documentsui.model.DocumentInfo: boolean isThumbnailSupported()>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.format.Time: void clear(java.lang.String)>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>
<android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>
<android.database.AbstractCursor: boolean move(int)>
<com.android.systemui.recents.RecentsActivity: boolean onPreDraw()>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
<android.media.midi.MidiReceiver: void <init>(int)>
<android.widget.EditText: void setSelection(int)>
<android.text.ClipboardManager: java.lang.CharSequence getText()>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)>
<android.widget.TextView: void setCompoundDrawablePadding(int)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>
<com.android.systemui.qs.QSContainer: com.android.systemui.qs.QSPanel getQsPanel()>
<android.telecom.Connection: void onDisconnect()>
<android.accessibilityservice.AccessibilityService.MagnificationController: android.graphics.Region getMagnificationRegion()>
<com.android.server.pm.ProtectedPackages: void setDeviceAndProfileOwnerPackages(int,java.lang.String,android.util.SparseArray)>
<android.app.UiAutomation: boolean setRotation(int)>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>
<android.view.KeyCharacterMap: int getModifierBehavior()>
<android.app.Activity: void openOptionsMenu()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>
<com.android.settingslib.dream.DreamBackend: void setActivatedOnDock(boolean)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createSocketPair()>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,int[])>
<android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowAlpha(float)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onDiscoveryStarted(java.lang.String)>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.preload.DeviceUtils: void enableTracing(com.android.ddmlib.IDevice)>
<com.android.server.policy.PhoneWindowManager: void setLastInputMethodWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<android.media.MediaCrypto: void setMediaDrmSession(byte[])>
<android.hardware.camera2.legacy.LegacyCameraDevice: boolean isVideoEncoderConsumer(android.view.Surface)>
<android.view.View: void setVisibility(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>
<android.widget.ListPopupWindow: void setInputMethodMode(int)>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>
<android.telecom.DisconnectCause: java.lang.String toString()>
<android.widget.QuickContactBadge: void onDraw(android.graphics.Canvas)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsVerticalList()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getChildId(int,int)>
<android.view.View: void scrollBy(int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setClipToActualHeight(boolean)>
<com.android.layoutlib.bridge.impl.GcSnapshot: com.android.layoutlib.bridge.impl.GcSnapshot createDefaultSnapshot(android.graphics.Bitmap_Delegate)>
<android.app.ActivityManagerProxy: void startLockTaskMode(android.os.IBinder)>
<com.android.commands.settings.SettingsCmd: java.lang.String resolveCallingPackage()>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String moveDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>
<com.android.server.policy.WakeGestureListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<android.widget.ImageView: boolean getCropToPadding()>
<com.google.android.gles_jni.GLImpl: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence)>
<android.view.KeyEvent: java.lang.String keyCodeToString(int)>
<android.security.keystore.KeyProtection.Builder: void <init>(int)>
<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>
<com.android.documentsui.model.DocumentInfo: java.lang.String toString()>
<com.android.documentsui.ListItem: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>
<android.os.IPowerManager: boolean isScreenBrightnessBoosted()>
<android.content.ContentProviderOperation: boolean isYieldAllowed()>
<android.opengl.GLES20: boolean glIsShader(int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getNumberOfNotificationChildren()>
<com.android.documentsui.Events.MotionInputEvent: void <init>(android.view.MotionEvent,android.support.v7.widget.RecyclerView)>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.soundtrigger.SoundTriggerDetector.Callback: void onDetected(android.media.soundtrigger.SoundTriggerDetector.EventPayload)>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>
<com.android.printspooler.widget.PageContentView: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<com.android.keyguard.KeyguardSecurityContainer: int getLayoutIdFor(com.android.keyguard.KeyguardSecurityModel.SecurityMode)>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.telecom.ConnectionService: void addConference(android.telecom.Conference)>
<android.os.PowerManager: boolean isSustainedPerformanceModeSupported()>
<com.android.tools.layoutlib.create.LogAbortException: void <init>(java.lang.String,java.lang.Object[])>
<com.android.systemui.statusbar.policy.NextAlarmController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>
<com.android.server.pm.PackageManagerService: void removePermission(java.lang.String)>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: int hashCode()>
<android.app.FragmentManager.BackStackEntry: int getId()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void collapseAllGroups()>
<android.ddm.DdmHandleThread: void disconnected()>
<android.widget.Editor.HandleView: int getOffsetAtCoordinate(android.text.Layout,int,float)>
<com.android.systemui.statusbar.policy.AccessibilityController: void onTouchExplorationStateChanged(boolean)>
<com.android.systemui.statusbar.CommandQueue: void clickQsTile(android.content.ComponentName)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int)>
<com.android.server.net.NetworkStatsService: android.net.INetworkStatsSession openSession()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyLog()>
<com.android.hotspot2.osu.UserInputListener: void deAuthNotification(java.lang.String,boolean,int,java.net.URL)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowIndex()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setQsExpanded(boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>
<android.util.Rational: float floatValue()>
<com.android.documentsui.RecentsProvider: boolean onCreate()>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnecting()>
<android.os.Debug: void resetGlobalFreedSize()>
<com.android.egg.neko.PrefState: void setFoodState(int)>
<com.android.server.media.MediaSessionRecord: int getMaxVolume()>
<android.hardware.camera2.dispatch.BroadcastDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.systemui.statusbar.ExpandableNotificationRow: android.animation.Animator getTranslateViewAnimator(float,android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setTrustManaged(boolean)>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>
<com.android.systemui.qs.tiles.DndTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.volume.ZenModePanel: void onDetachedFromWindow()>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward(int)>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams)>
<android.graphics.drawable.GradientDrawable: float getGradientCenterY()>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>
<android.media.AudioFormat.Builder: void <init>()>
<android.graphics.Canvas: void setDensity(int)>
<android.util.SparseArray: void <init>()>
<android.net.wifi.WpsInfo: void <init>(android.net.wifi.WpsInfo)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context)>
<android.content.Loader: void unregisterListener(android.content.Loader.OnLoadCompleteListener)>
<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean onTouchEvent(android.view.MotionEvent)>
<android.service.carrier.CarrierMessagingService: void onSendTextSms(java.lang.String,int,java.lang.String,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.view.WindowCallback: boolean onMenuOpened(int,android.view.Menu)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>
<android.preference.Preference: void notifyDependencyChange(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getFilesDir()>
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.stack.AnimationFilter: void applyCombination(java.util.ArrayList)>
<android.util.MonthDisplayHelper: void nextMonth()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.webkit.WebViewFragment: void onPause()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>
<com.android.gallery3d.util.IntArray: void clear()>
<android.renderscript.Element: android.renderscript.Element FONT(android.renderscript.RenderScript)>
<android.view.ThreadedRenderer.HardwareDrawCallbacks: void onHardwarePreDraw(android.view.DisplayListCanvas)>
<com.android.printspooler.ui.PrintActivity: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>()>
<com.google.android.gles_jni.GLImpl: void glBlendEquation(int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,java.nio.IntBuffer)>
<android.graphics.Outline: void setAlpha(float)>
<com.android.server.accessibility.KeyboardInterceptor: void onKeyEvent(android.view.KeyEvent,int)>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothAdapter getBluetoothAdapter()>
<com.android.server.wm.WindowAnimator: void dumpLocked(java.io.PrintWriter,java.lang.String,boolean)>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.android.hotspot2.utils.HTTPRequest: java.util.Map getHeaders()>
<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<android.database.sqlite.SQLiteAbortException: void <init>()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHeadsupDisappearRunning(boolean)>
<android.os.storage.IObbActionListener.Stub: android.os.IBinder asBinder()>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelMask(int)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDone(boolean)>
<android.app.ApplicationThreadProxy: void processInBackground()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.LomoishFilter: void process(android.filterfw.core.FilterContext)>
<android.content.res.BridgeTypedArray: int getInteger(int,int)>
<com.android.systemui.doze.DozeService: void <init>()>
<android.content.SyncResult: boolean hasError()>
<android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.renderscript.Type: boolean hasFaces()>
<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>
<com.android.server.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>
<com.android.providers.settings.SettingsProvider: java.lang.String getType(android.net.Uri)>
<android.os.Debug: java.util.Map getRuntimeStats()>
<android.app.assist.AssistContent: android.os.Bundle getExtras()>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>
<com.android.gallery3d.exif.ExifInterface: boolean hasThumbnail()>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onDetected(android.service.voice.AlwaysOnHotwordDetector.EventPayload)>
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()>
<com.android.documentsui.SectionedListAdapter.SectionAdapter: android.view.View getHeaderView(android.view.View,android.view.ViewGroup)>
<android.nfc.cardemulation.HostApduService: android.os.IBinder onBind(android.content.Intent)>
<android.content.pm.LauncherApps.ShortcutQuery: void <init>()>
<android.os.Parcel: boolean hasFileDescriptors()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: java.lang.String viewInfo(android.view.View)>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<android.media.RemoteDisplay.Listener: void onDisplayError(int)>
<android.widget.CalendarView: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.view.IWindowManagerImpl: void cancelTaskThumbnailTransition(int)>
<android.bluetooth.BluetoothSocket: int getMaxReceivePacketSize()>
<android.app.NativeActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
<com.android.server.accessibility.AccessibilityManagerService: void <init>(android.content.Context)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<android.graphics.Matrix: void finalize()>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.transition.Transition: boolean isTransitionRequired(android.transition.TransitionValues,android.transition.TransitionValues)>
<android.transition.Transition: java.util.List getTargetTypes()>
<com.android.documentsui.DirectoryLoader: void deliverResult(com.android.documentsui.DirectoryResult)>
<com.android.server.notification.ZenModeHelper: int getZenMode()>
<com.android.keyguard.KeyguardPinBasedInputView: int getPromtReasonStringRes(int)>
<android.os.Looper: java.lang.Thread getThread()>
<com.android.systemui.recents.RecentsActivity: void onBackPressed()>
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>
<com.android.server.hdmi.HdmiControlService: void onBootPhase(int)>
<android.util.AttributeSet: int getStyleAttribute()>
<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>
<android.content.Intent: java.lang.String getScheme()>
<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()>
<android.widget.Editor.HandleView: void updatePosition(int,int,boolean,boolean)>
<android.media.ImageReader: void setOnImageAvailableListener(android.media.ImageReader.OnImageAvailableListener,android.os.Handler)>
<android.widget.TextView: int computeVerticalScrollRange()>
<android.content.pm.ResolveInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int,boolean)>
<android.location.GnssClock: long getFullBiasNanos()>
<android.widget.ImageView: void setBaselineAlignBottom(boolean)>
<android.hardware.camera2.params.MeteringRectangle: android.util.Size getSize()>
<android.app.assist.AssistStructure.ViewNode: int getTextSelectionEnd()>
<android.os.BatteryStats.Uid: android.util.ArrayMap getWakelockStats()>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.widget.TextView: void setImeHintLocales(android.os.LocaleList)>
<com.android.keyguard.PasswordTextView: void reset(boolean,boolean)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onIdle(android.hardware.camera2.CameraDevice)>
<com.android.server.pm.PackageManagerService: void enterSafeMode()>
<com.android.server.notification.ZenModeHelper: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule,java.lang.String)>
<com.android.server.input.InputManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.widget.SlidingDrawer: java.lang.CharSequence getAccessibilityClassName()>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setContentType(int)>
<android.webkit.WebSettings: void setMixedContentMode(int)>
<android.renderscript.ScriptIntrinsicBLAS: void CSYRK(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>
<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.MockView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.BatteryStats.Uid: void noteWifiMulticastEnabledLocked(long)>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.widget.ListView: android.view.View findViewTraversal(int)>
<com.android.systemui.statusbar.phone.PanelView: void setTouchDisabled(boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean enable()>
<android.app.ActionBar: void setDisplayOptions(int)>
<com.android.server.fingerprint.AuthenticationClient: boolean onAuthenticated(int,int)>
<android.content.ContentProviderOperation: boolean isDelete()>
<android.drm.DrmStore.RightsStatus: void <init>()>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrustManaged()>
<android.telecom.StatusHints: android.os.Bundle getExtras()>
<android.widget.EditText: boolean getFreezesText()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,int[],int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setAreThereNotifications()>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>
<android.widget.AdapterView.OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>
<android.widget.SimpleCursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.content.pm.LauncherApps: void startShortcut(java.lang.String,java.lang.String,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>
<com.android.systemui.qs.external.TileLifecycleManager: void onTileRemoved()>
<com.android.nfc_extras.EeNfcDisabledException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStarted()>
<android.text.method.BaseMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.preference.BridgePreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.hardware.display.DisplayManagerInternal.DisplayTransactionListener: void onDisplayTransaction()>
<android.print.PrinterInfo: int getStatus()>
<android.preference.PreferenceFragment: void onDestroyView()>
<android.opengl.GLES32: long glGetPointerv(int)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createExternal(java.lang.String,java.lang.String,byte[])>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)>
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.View: void getFocusedRect(android.graphics.Rect)>
<android.content.Intent: android.content.Intent addFlags(int)>
<com.android.printspooler.model.PrintSpoolerService: void createPrintJob(android.print.PrintJobInfo)>
<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request addRequestHeader(java.lang.String,java.lang.String)>
<android.widget.TextView: android.text.TextPaint getPaint()>
<com.android.location.provider.GmsFusedBatchOptions: float getSmallestDisplacementMeters()>
<android.renderscript.Script: int getVarI(int)>
<com.android.documentsui.model.DocumentInfo: java.lang.String getCursorString(android.database.Cursor,java.lang.String)>
<android.view.MotionEvent: int getDeviceId()>
<com.android.systemui.statusbar.BaseStatusBar: void dismissKeyguardThenExecute(com.android.keyguard.KeyguardHostView.OnDismissAction,boolean)>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>
<android.renderscript.FieldPacker: void addI8(byte)>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>
<android.content.ContentValues: int describeContents()>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>
<android.animation.ValueAnimator: void setFloatValues(float[])>
<android.os.IPowerManager: boolean isLightDeviceIdleMode()>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.systemui.tv.pip.PipRecentsControlsView: void setListener(com.android.systemui.tv.pip.PipRecentsControlsView.Listener)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToRFC3966(java.lang.String,java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View[] getAllViews()>
<com.android.systemui.recents.views.RecentsTransitionHelper: void <init>(android.content.Context)>
<android.content.Context: void startActivities(android.content.Intent[])>
<com.android.keyguard.KeyguardPasswordView: void startAppearAnimation()>
<com.android.documentsui.services.FileOperations: java.lang.String move(android.app.Activity,java.util.List,com.android.documentsui.model.DocumentInfo,com.android.documentsui.model.DocumentStack)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.AdapterViewAnimator: java.lang.CharSequence getAccessibilityClassName()>
<com.android.anqp.Constants: java.lang.Integer getANQPElementID(com.android.anqp.Constants.ANQPElementType)>
<android.app.Notification.MessagingStyle: java.lang.CharSequence getUserDisplayName()>
<android.location.GnssNavigationMessageEvent: java.lang.String toString()>
<android.view.accessibility.AccessibilityWindowInfo: void recycle()>
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>
<android.text.Layout: float getLineWidth(int)>
<com.android.systemui.statusbar.phone.SettingsButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accessibility.AccessibilityManagerService: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>
<android.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.graphics.PointF: void <init>()>
<android.renderscript.FieldPacker: android.renderscript.Matrix3f subMatrix3f()>
<android.graphics.drawable.AnimatedStateListDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.os.health.HealthStats: int getTimerCount(int)>
<android.preference.Preference: boolean shouldCommit()>
<android.graphics.drawable.GradientDrawable: int getAlpha()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void unregisterPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(int[],int)>
<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>
<android.widget.DialerFilter: int getMode()>
<android.security.keystore.KeyProtection: java.lang.String[] getDigests()>
<android.view.ViewGroup: void removeViewAt(int)>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellIdentityGsm: int getPsc()>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>
<android.opengl.GLSurfaceView: void surfaceRedrawNeeded(android.view.SurfaceHolder)>
<com.android.server.fingerprint.EnrollClient: void <init>(android.content.Context,long,android.os.IBinder,android.hardware.fingerprint.IFingerprintServiceReceiver,int,int,byte[],boolean,java.lang.String)>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>
<android.view.View: boolean getClipToOutline()>
<android.app.assist.AssistStructure.ViewNode: int getTextSelectionStart()>
<com.android.systemui.statusbar.phone.LightStatusBarController: void onSystemUiVisibilityChanged(int,int,int,android.graphics.Rect,android.graphics.Rect,boolean,int)>
<android.content.Context: boolean isDeviceEncryptedStorage()>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>
<com.android.hotspot2.OMADMAdapter: com.android.hotspot2.omadm.MOTree getMO(java.lang.String)>
<com.android.server.pm.Installer: void markBootComplete(java.lang.String)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>
<android.location.Address: void <init>(java.util.Locale)>
<com.android.documentsui.model.DocumentInfo: boolean isContainer()>
<android.app.ApplicationThreadProxy: void notifyCleartextNetwork(byte[])>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJsonLocked()>
<android.media.tv.TvInputManager: void unregisterCallback(android.media.tv.TvInputManager.TvInputCallback)>
<android.media.MediaRouter.SimpleCallback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.content.SyncContext: void onFinished(android.content.SyncResult)>
<android.telecom.TelecomManager: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener: boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry,int)>
<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.location.provider.ActivityChangedEvent: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
<android.widget.Toolbar: void setLogo(int)>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.text.Annotation: void <init>(android.os.Parcel)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.renderscript.ScriptIntrinsicBLAS: void CTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.systemui.statusbar.phone.NavigationBarGestureHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.content.IntentFilter: java.lang.String getDataType(int)>
<com.android.server.connectivity.DataConnectionStats: void startMonitoring()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onSettingsActivityTriggered(android.content.Intent)>
<com.android.systemui.qs.QSTile.AnimationIcon: void <init>(int,int)>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>
<com.android.systemui.classifier.DurationCountEvaluator: float evaluate(float)>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(com.android.settingslib.wifi.AccessPoint,android.content.Context,com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache,boolean)>
<android.widget.VideoView: int getDuration()>
<android.telecom.Call: void postDialContinue(boolean)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onTileRemoved()>
<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.backup.KeyValueBackupJob: void schedule(android.content.Context)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>
<android.content.ContentProvider: boolean onCreate()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void <init>(java.lang.String,java.lang.Object,int,int,int,int,java.lang.Object,java.lang.Object)>
<android.app.admin.DevicePolicyManager: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void updateChildrenHeaderAppearance()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational[])>
<android.speech.RecognitionListener: void onRmsChanged(float)>
<android.media.midi.MidiInputPort: void onFlush()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setOrientation(int)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.fakeoemfeatures.FakeView: void onAttachedToWindow()>
<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>
<com.android.server.twilight.TwilightService: void <init>(android.content.Context)>
<android.service.media.MediaBrowserService: android.os.IBinder onBind(android.content.Intent)>
<android.media.session.MediaSession: void setRatingType(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setChildLocationsChangedListener(com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnChildLocationsChangedListener)>
<com.google.android.gles_jni.GLImpl: void glPointParameterx(int,int)>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>
<android.media.session.MediaSession.Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)>
<com.android.layoutlib.bridge.Bridge: void cleanupThread()>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.BluetoothController: java.lang.String getLastDeviceName()>
<com.android.systemui.qs.QSTile.Icon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glBlendFuncSeparate(int,int,int,int)>
<com.android.nfc_extras.NfcAdapterExtras: void authenticate(byte[])>
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient.OnEventListener)>
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>
<android.database.Cursor: int getInt(int)>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>
<android.app.NativeActivity: void onGlobalLayout()>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.tv.views.RecentsTvView: void init(com.android.systemui.recents.model.TaskStack)>
<android.animation.LayoutTransition: long getDuration(int)>
<android.net.ip.IpManager.ProvisioningConfiguration: void <init>(android.net.ip.IpManager.ProvisioningConfiguration)>
<android.hardware.Camera.Size: void <init>(int,int)>
<com.android.keyguard.KeyguardSimPukView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.net.ConnectivityManager: android.net.ProxyInfo getDefaultProxy()>
<android.net.wifi.WifiEnterpriseConfig: void setAltSubjectMatch(java.lang.String)>
<android.widget.RelativeLayout.LayoutParams: void addRule(int)>
<android.os.UserManager: boolean isSystemUser()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<android.view.KeyboardShortcutInfo: int getModifiers()>
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.media.tv.TvView.TvInputCallback: void onTrackSelected(java.lang.String,int,java.lang.String)>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.widget.PopupMenu: android.view.View.OnTouchListener getDragToOpenListener()>
<android.hardware.SensorManager.DynamicSensorCallback: void onDynamicSensorConnected(android.hardware.Sensor)>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.app.UiAutomation: boolean injectInputEvent(android.view.InputEvent,boolean)>
<android.widget.RelativeLayout.LayoutParams: void removeRule(int)>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
<android.util.ArrayMap: void <init>(android.util.ArrayMap)>
<com.android.systemui.stackdivider.DividerView: void injectDependencies(com.android.systemui.stackdivider.DividerWindowManager,com.android.systemui.stackdivider.DividerState)>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>
<android.widget.GridLayout: int getAlignmentMode()>
<android.media.AudioManager: boolean registerRemoteController(android.media.RemoteController)>
<com.android.settingslib.bluetooth.HidProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onClick(android.content.DialogInterface,int)>
<android.app.Service: void onLowMemory()>
<com.android.location.provider.ActivityRecognitionProvider: void registerSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<com.android.systemui.settings.ToggleSlider: void setChecked(boolean)>
<android.view.inputmethod.InputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<com.android.server.wm.WindowManagerService.WindowChangeListener: void windowsChanged()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setMultiplicity(java.lang.String)>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<android.app.admin.DevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpPinnedModeChanged(boolean)>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekNumberColor(int)>
<android.widget.TextView: float getTextSize()>
<com.android.server.am.ActivityManagerService: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>
<com.android.systemui.statusbar.stack.AmbientState: void setShadeExpanded(boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void snapViewIfNeeded(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.NotificationData: java.util.ArrayList getActiveNotifications()>
<com.android.systemui.statusbar.phone.PanelView: void notifyExpandingFinished()>
<android.animation.Animator: void removeAllListeners()>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context)>
<com.android.server.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(android.hardware.camera2.params.MeteringRectangle)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setCallback(com.android.systemui.qs.QSPanel.Callback)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.phone.ManagedProfileController getManagedProfileController()>
<com.android.systemui.Gefingerpoken: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.webkit.WebView: void clearFormData()>
<com.android.gallery3d.common.Utils: void closeSilently(android.database.Cursor)>
<android.animation.Keyframe: float getFraction()>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByExactlyLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeights()>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>
<android.text.AutoText: int getSize(android.view.View)>
<com.android.settingslib.accounts.AuthenticatorHelper: boolean containsAccountType(java.lang.String)>
<com.android.keyguard.CarrierText: void onFinishInflate()>
<android.app.NotificationManager.Policy: java.lang.String suppressedEffectsToString(int)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isSecure()>
<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)>
<android.net.ProxyInfo: java.lang.String[] getExclusionList()>
<com.android.anqp.IconInfo: int getHeight()>
<android.preference.TwoStatePreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.telecom.AuthenticatorService.Authenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setEmptyDragAmount(float)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleDestroy()>
<com.android.server.pm.PermissionsState: void <init>()>
<android.widget.ImageView: boolean getBaselineAlignBottom()>
<com.android.server.media.MediaSessionRecord: java.lang.String getPackageName()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.util.Locale forLanguageTag(java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>
<com.android.wallpapercropper.WallpaperCropActivity: void init()>
<android.app.Notification.CarExtender: int getColor()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getSummary(android.content.res.Resources)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityContainer getSecurityContainer()>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(android.view.View[][],java.lang.Runnable)>
<com.android.systemui.classifier.FalsingLog: void wLogcat(java.lang.String,java.lang.String)>
<android.content.pm.Signature: void <init>(byte[])>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.media.audiofx.Virtualizer: int getVirtualizationMode()>
<com.android.systemui.statusbar.ExpandableView: void setBelowSpeedBump(boolean)>
<android.util.TimingLogger: void <init>(java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.bluetooth.MapProfile: int getOrdinal()>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(int)>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>
<android.text.style.TtsSpan: int getSpanTypeId()>
<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothSupported()>
<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<com.android.hotspot2.omadm.OMAScalar: void <init>(com.android.hotspot2.omadm.OMAConstructed,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>
<javax.microedition.khronos.opengles.GL10: void glLogicOp(int)>
<com.android.commands.svc.Svc.Command: java.lang.String shortHelp()>
<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.ShortcutInfo: void setTimestamp(long)>
<android.media.AudioAttributes: int hashCode()>
<android.widget.NumberPicker: int computeVerticalScrollExtent()>
<android.preference.Preference: java.lang.String toString()>
<android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
<com.android.server.audio.AudioService.VolumeStreamState: void setAllIndexes(com.android.server.audio.AudioService.VolumeStreamState,java.lang.String)>
<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>
<android.media.midi.MidiDeviceService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void registerNonSystemUserCallbacks(android.os.IBinder,int)>
<android.hardware.camera2.params.OutputConfiguration: void <init>(android.view.Surface)>
<android.os.HandlerThread_Delegate: void cleanUp(com.android.layoutlib.bridge.android.BridgeContext)>
<android.graphics.pdf.PdfRenderer: void <init>(android.os.ParcelFileDescriptor)>
<android.content.pm.PackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>
<android.media.tv.TvContract.Programs.Genres: boolean isCanonical(java.lang.String)>
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateVerticalPanelPosition(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.os.ParcelUuid: int describeContents()>
<android.view.animation.Animation: int getRepeatCount()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isAntiFalsingNeeded()>
<android.net.ConnectivityManager: void reportBadNetwork(android.net.Network)>
<android.renderscript.ScriptIntrinsicBLAS: void STPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>
<com.android.systemui.stackdivider.MinimizedDockShadow: void <init>(android.content.Context,android.util.AttributeSet)>
<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
<android.app.VoiceInteractor.PickOptionRequest.Option: void setExtras(android.os.Bundle)>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>
<android.opengl.GLES32: void glMinSampleShading(float)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<android.widget.GridView: void setNumColumns(int)>
<com.google.android.maps.MapView: boolean canCoverCenter()>
<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<com.android.documentsui.Events.MotionInputEvent: boolean isPrimaryButtonPressed()>
<android.view.WindowManagerInternal.WindowsForAccessibilityCallback: void onWindowsForAccessibilityChanged(java.util.List)>
<android.widget.EdgeEffect: boolean isFinished()>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.graphics.NinePatch_Delegate: byte[] serialize(com.android.ninepatch.NinePatchChunk)>
<android.app.Notification.Builder: android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent)>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>
<android.os.BatteryStats.LevelStepTracker: void writeToParcel(android.os.Parcel)>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: void onPermissionsChanged(int)>
<com.android.systemui.recents.ScreenPinningRequest: void clearPrompt()>
<com.android.server.pm.PackageInstallerService: void abandonSession(int)>
<android.media.browse.MediaBrowser.MediaItem: int describeContents()>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow(long)>
<android.nfc.tech.NfcA: int getTimeout()>
<android.graphics.Path: void offset(float,float)>
<com.android.documentsui.RootsLoader: java.util.Collection loadInBackground()>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,java.lang.Object)>
<com.android.tools.layoutlib.create.MethodAdapter: int onInvokeI(java.lang.String,boolean,java.lang.Object)>
<android.widget.AdapterView: long getSelectedItemId()>
<com.android.server.pm.PackageInstallerSession: void setClientProgress(float)>
<android.widget.CalendarView.CalendarViewDelegate: int getFirstDayOfWeek()>
<com.android.systemui.qs.tiles.HotspotTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: android.os.IBinder asBinder()>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.media.MediaPlayer: android.media.MediaPlayer.TrackInfo[] getTrackInfo()>
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>
<com.android.hotspot2.utils.HTTPRequest: void <init>(com.android.hotspot2.utils.HTTPMessage.Method,java.net.URL)>
<android.view.View: void invalidate(int,int,int,int)>
<android.filterpacks.imageproc.TintFilter: void process(android.filterfw.core.FilterContext)>
<android.view.View: boolean awakenScrollBars(int)>
<android.media.midi.MidiManager: void registerDeviceCallback(android.media.midi.MidiManager.DeviceCallback,android.os.Handler)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<com.android.systemui.recents.misc.ForegroundThread: android.os.Handler getHandler()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPlmn()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setAlpha(int)>
<com.android.systemui.SwipeHelper: float getTranslation(android.view.View)>
<com.android.printspooler.ui.PrintProgressFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
<android.os.Bundle: void putAll(android.os.Bundle)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitTypeArgument()>
<com.android.nfc_extras.EeNfcDisabledException: void <init>()>
<android.security.net.config.DirectoryCertificateSource.CertSelector: boolean match(java.security.cert.X509Certificate)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>
<android.app.assist.AssistStructure: int describeContents()>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigPicture(android.graphics.Bitmap)>
<android.widget.TabWidget: void removeAllViews()>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>
<android.app.FragmentManager: void invalidateOptionsMenu()>
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<android.app.NotificationManager: void setInterruptionFilter(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.media.AudioRecord: void startRecording(android.media.MediaSyncEvent)>
<android.hardware.camera2.CameraCaptureSession: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.app.assist.AssistContent: android.content.Intent getIntent()>
<android.widget.AutoCompleteTextView: void showDropDown()>
<android.media.RemoteControlClient.OnGetPlaybackPositionListener: long onGetPlaybackPosition()>
<android.graphics.Paint_Delegate: float getStrokeWidth()>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>
<android.hardware.camera2.legacy.RequestHolder: java.util.Collection getHolderTargets()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(float[],int)>
<android.hardware.Sensor: int getFifoMaxEventCount()>
<com.android.server.twilight.TwilightService: void onStart()>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,java.nio.IntBuffer)>
<com.android.printservice.recommendation.plugin.hp.HPRecommendationPlugin: void <init>(android.content.Context)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setKeyValidityEnd(java.util.Date)>
<android.speech.tts.TextToSpeechService: void onStop()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.widget.CalendarView: int getDateTextAppearance()>
<android.security.KeyPairGeneratorSpec: java.util.Date getStartDate()>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Point getUpperLeftPoint()>
<com.android.server.am.ActivityManagerService: void installSystemProviders()>
<com.android.hotspot2.asn1.OidMappings: com.android.hotspot2.asn1.OidMappings.SigEntry getSigEntry(com.android.hotspot2.asn1.Asn1Oid)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: com.android.systemui.recents.model.TaskStack.DockState[] getDockStatesForCurrentOrientation()>
<android.media.tv.TvView.TvInputCallback: void onTimeShiftStatusChanged(java.lang.String,int)>
<android.media.AudioDevicePort: java.lang.String address()>
<com.android.server.trust.TrustArchive: void logAgentDied(int,android.content.ComponentName)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.phone.LockIcon getLockIcon()>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>
<android.hardware.Sensor: float getResolution()>
<com.android.systemui.tv.pip.PipRecentsControlsView: void startFocusGainAnimation()>
<android.net.ip.IpManager.Callback: void setFallbackMulticastFilter(boolean)>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.volume.VolumeDialogController.State: java.lang.String toString()>
<com.android.settingslib.net.UidDetailProvider: int getUserIdForKey(int)>
<android.net.Uri: boolean isOpaque()>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>
<com.android.printspooler.model.PrintSpoolerService: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>
<android.app.WallpaperInfo: android.net.Uri loadContextUri(android.content.pm.PackageManager)>
<com.android.systemui.recents.model.TaskGrouping: boolean isFrontMostTask(com.android.systemui.recents.model.Task)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata build()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onDraggedDown(android.view.View,int)>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withApfCapabilities(android.net.apf.ApfCapabilities)>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.os.HardwarePropertiesManager: float[] getFanSpeeds()>
<android.hardware.camera2.utils.TypeReference: java.lang.String toString()>
<com.android.systemui.classifier.HistoryEvaluator: void addStroke(float)>
<android.app.Fragment: void onPause()>
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>
<com.android.documentsui.OperationDialogFragment: void show(android.app.FragmentManager,int,java.util.ArrayList,com.android.documentsui.model.DocumentStack,int)>
<android.content.RestrictionEntry: void setChoiceEntries(android.content.Context,int)>
<com.android.documentsui.Events.InputEvent: boolean isActionUp()>
<android.inputmethodservice.Keyboard: void setKeyHeight(int)>
<android.nfc.NdefRecord: android.net.Uri toUri()>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: android.os.Bundle getParams()>
<com.google.android.util.AbstractMessageParser: java.lang.String reverse(java.lang.String)>
<android.print.PrinterId: int describeContents()>
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>
<android.widget.ListView: void addHeaderView(android.view.View)>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.telephony.CellIdentityGsm: int hashCode()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: boolean equals(java.lang.Object)>
<android.hardware.radio.RadioManager.ModuleProperties: java.lang.String getVersion()>
<com.android.server.notification.NotificationSignalExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<android.text.LoginFilter: void onStart()>
<android.widget.TextView: void setTextLocales(android.os.LocaleList)>
<android.webkit.WebView: int computeHorizontalScrollRange()>
<android.opengl.GLES32: void glDrawRangeElementsBaseVertex(int,int,int,int,int,java.nio.Buffer,int)>
<com.google.android.gles_jni.GLImpl: void <init>()>
<com.android.systemui.qs.DataUsageGraph: void onDraw(android.graphics.Canvas)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>
<android.os.BatteryStats.HistoryTag: void writeToParcel(android.os.Parcel,int)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.tools.layoutlib.create.InjectMethodsAdapter: void visitEnd()>
<android.media.tv.TvView: void draw(android.graphics.Canvas)>
<com.android.anqp.HSOsuProvidersElement: java.lang.String getSSID()>
<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>
<android.view.KeyboardShortcutGroup: void addItem(android.view.KeyboardShortcutInfo)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int adjustDisableFlags(int)>
<android.text.BoringLayout: int getEllipsisStart(int)>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFinishedGoingToSleep(int)>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>
<com.android.tools.layoutlib.create.MethodListener: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getScanMode()>
<android.net.RouteInfo: java.net.InetAddress getGateway()>
<android.widget.NumberPicker: void onMeasure(int,int)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<com.android.keyguard.KeyguardPasswordView: boolean needsInput()>
<com.android.settingslib.RestrictedPreference: void performClick()>
<android.widget.TimePicker: boolean isEnabled()>
<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.SurfaceView: void setSecure(boolean)>
<android.accessibilityservice.AccessibilityService.SoftKeyboardController: int getShowMode()>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>
<android.renderscript.RenderScript: long getMinorVersion()>
<com.android.systemui.BatteryMeterDrawable: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.qs.QSTile: java.lang.String composeChangeAnnouncement()>
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.server.wm.TaskStack: void getDimBounds(android.graphics.Rect)>
<android.net.Network: java.lang.String toString()>
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml.Encoding,org.xml.sax.ContentHandler)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.lang.String)>
<android.os.BatteryStats.Uid.Proc: int countExcessivePowers()>
<android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(java.lang.String,java.lang.String)>
<android.view.animation.LayoutAnimationController: void setOrder(int)>
<android.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addMediaSize(android.print.PrintAttributes.MediaSize,boolean)>
<android.view.WindowManager.BadTokenException: void <init>()>
<com.android.hotspot2.asn1.Asn1Integer: java.util.Collection getChildren()>
<android.view.Display: int getRotation()>
<com.android.server.policy.WindowOrientationListener: void onTouchEnd()>
<android.app.ActivityManagerProxy: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4x(int,int,int,int,int)>
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>
<com.android.systemui.classifier.LengthCountClassifier: java.lang.String getTag()>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onSystemReady()>
<com.android.server.notification.ZenModeHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.printspooler.ui.PrintActivity: void onRequestContentUpdate()>
<com.android.location.provider.FusedLocationHardware: void injectDeviceContext(int)>
<android.media.session.MediaController: void adjustVolume(int,int)>
<android.widget.TextView: boolean getShowSoftInputOnFocus()>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void readByteArray(byte[],int,int)>
<android.util.ArrayMap: void <init>(int)>
<android.view.View: boolean getRevealOnFocusHint()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: int getBluetoothState()>
<android.renderscript.Matrix3f: void <init>(float[])>
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>
<com.android.systemui.statusbar.phone.LockIcon: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.ScrimView: void animateViewAlpha(float,long,android.view.animation.Interpolator)>
<android.telecom.CallScreeningService.CallResponse.Builder: android.telecom.CallScreeningService.CallResponse.Builder setDisallowCall(boolean)>
<android.view.WindowCallback: void onDetachedFromWindow()>
<android.print.PrintJobId: boolean equals(java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glStencilOp(int,int,int)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>
<android.view.KeyEvent: boolean isNumLockOn()>
<com.android.printspooler.ui.PrintErrorFragment.OnActionListener: void onActionPerformed()>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange,int)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onError(int,java.lang.Object,android.hardware.camera2.legacy.RequestHolder)>
<com.android.systemui.statusbar.BaseStatusBar: void onExpandClicked(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getJavaPkgClasses()>
<android.transition.PatternPathMotion: void <init>()>
<com.android.settingslib.HelpUtils: void addIntentParameters(android.content.Context,android.content.Intent,java.lang.String,boolean)>
<com.android.server.policy.EnableAccessibilityController: void <init>(android.content.Context,java.lang.Runnable)>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.documentsui.MimePredicate: boolean apply(com.android.documentsui.model.DocumentInfo)>
<com.android.vpndialogs.ConfirmDialog: void onCreate(android.os.Bundle)>
<android.util.FloatMath: float exp(float)>
<android.media.audiofx.AudioEffect: boolean hasControl()>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.transition.Explode: void captureEndValues(android.transition.TransitionValues)>
<android.webkit.WebView: android.webkit.WebMessagePort[] createWebMessageChannel()>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void addSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<android.os.AsyncTask: java.lang.Object get()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceIdMatches(java.lang.String)>
<com.android.systemui.classifier.FalsingManager: boolean isClassiferEnabled()>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>
<com.android.server.am.BatteryStatsService: void noteConnectivityChanged(int,java.lang.String)>
<android.hardware.camera2.params.OutputConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>
<com.android.systemui.tuner.TunerZenModePanel: void setCallback(com.android.systemui.volume.ZenModePanel.Callback)>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>
<android.opengl.GLES32: java.lang.String glGetObjectPtrLabel(long)>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>
<android.location.Location: void setAltitude(double)>
<com.android.keyguard.KeyguardUpdateMonitor: int getNextSubIdForState(com.android.internal.telephony.IccCardConstants.State)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation)>
<android.widget.TextView: int getLineHeight()>
<android.media.browse.MediaBrowser: void subscribe(java.lang.String,android.os.Bundle,android.media.browse.MediaBrowser.SubscriptionCallback)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isPinnedHeadsUp(android.view.View)>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>
<android.widget.Editor.HandleView: boolean offsetHasBeenChanged()>
<android.graphics.drawable.ColorDrawable: void <init>()>
<com.android.documentsui.SectionedListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.server.backup.Trampoline: java.lang.String[] listAllTransports()>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>
<android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void cancelFocusTimerIndicator()>
<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>
<com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener: void onReset(com.android.systemui.statusbar.ExpandableView)>
<android.view.Window: void setFeatureInt(int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceInteractive()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onDismissRequested(int)>
<android.os.Parcel: void readCharArray(char[])>
<android.media.AudioRecord: int getAudioSessionId()>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>
<com.android.systemui.classifier.FalsingManager: void onLeftAffordanceOn()>
<android.app.admin.DevicePolicyManager: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.QSTileHost: void animateToggleQSExpansion()>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
<com.android.server.notification.RankingHelper: int getPriority(java.lang.String,int)>
<android.widget.Toast: void setGravity(int,int,int)>
<android.bluetooth.BluetoothGattServer: boolean notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)>
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserProvisioningState(int,int)>
<com.android.systemui.stackdivider.DividerHandleView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.analytics.DataCollector: void onTrackingStarted()>
<com.android.systemui.qs.QSContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: java.lang.String getString(byte[])>
<android.media.midi.MidiDeviceService: android.media.midi.MidiReceiver[] getOutputPortReceivers()>
<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionPending()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void inflateNavigationBarView(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setQsContainer(android.view.ViewGroup)>
<com.android.server.am.ActivityManagerService: void updateLockTaskPackages(int,java.lang.String[])>
<android.service.notification.ConditionProviderService: void onSubscribe(android.net.Uri)>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>(android.os.Parcel)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>
<android.app.WallpaperInfo: boolean getShowMetadataInPreview()>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>
<com.android.hotspot2.asn1.Asn1Octets: java.util.Collection getChildren()>
<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: com.android.systemui.recents.model.Task getFocusedTask()>
<android.widget.AbsSeekBar: void drawableStateChanged()>
<com.android.systemui.statusbar.GestureRecorder.Gesture: java.lang.String toJson()>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType,int)>
<com.android.systemui.tv.pip.PipRecentsControlsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.ScriptIntrinsicBLAS: void CGEMV(int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<com.android.settingslib.wifi.AccessPoint: java.lang.Object getTag()>
<android.graphics.BidiRenderer: android.graphics.RectF renderText(int,int,int,float[],int,boolean)>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>
<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionStarting(long,long)>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)>
<com.android.hotspot2.omadm.MultiValueMap: java.util.Collection values()>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>
<android.filterfw.core.GraphRunner.OnRunnerDoneListener: void onRunnerDone(int)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsListView: void clearChoices()>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String,java.lang.String)>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>
<android.net.wifi.RttManager.RttCapabilities: java.lang.String toString()>
<android.view.Gravity: boolean isHorizontal(int)>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ActionBar: int getNavigationItemCount()>
<android.app.Fragment: void onDestroyOptionsMenu()>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<com.android.preload.DumpDataIO: java.util.Collection deserialize(java.io.File)>
<com.android.settingslib.bluetooth.MapProfile: boolean isProfileReady()>
<com.android.mtp.AppFuse: android.os.ParcelFileDescriptor openFile(int,int)>
<com.android.systemui.qs.tiles.UserDetailItemView: void onFinishInflate()>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryInputEnabled(boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void boostScreenBrightness(long)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<android.widget.GridLayout: int getColumnCount()>
<com.android.server.am.ActivityManagerService: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: boolean isSplit()>
<android.drm.DrmInfoRequest: int getInfoType()>
<android.media.audiofx.AutomaticGainControl: boolean isAvailable()>
<android.animation.AnimationHandler.AnimationFrameCallback: void doAnimationFrame(long)>
<com.android.server.SystemConfig: android.util.SparseArray getSystemPermissions()>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackage(java.lang.String,int,java.lang.String)>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isEnabledForCurrentProfiles()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.ParceledListSlice retrievePreRebootSecurityLogs(android.content.ComponentName)>
<com.android.server.am.ActivityManagerService: boolean supportsLocalVoiceInteraction()>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
<com.google.android.maps.MapView: void onSaveInstanceState(android.os.Bundle)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: boolean equals(java.lang.Object)>
<android.util.SparseBooleanArray: boolean get(int,boolean)>
<android.telecom.ConnectionService: void conferenceRemoteConnections(android.telecom.RemoteConnection,android.telecom.RemoteConnection)>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<com.android.server.backup.BackupUtils: byte[] hashSignature(byte[])>
<android.media.AudioPortConfig: java.lang.String toString()>
<android.transition.TransitionValues: java.lang.String toString()>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>
<com.android.systemui.statusbar.phone.IconMerger: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>
<com.android.server.audio.AudioService.VolumeController: boolean suppressAdjustment(int,int,boolean)>
<com.android.systemui.recents.views.RecentsView: com.android.systemui.recents.model.TaskStack getStack()>
<com.android.systemui.qs.QSTile.State: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void setOnNotificationPostedTrimLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo,int)>
<android.inputmethodservice.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>
<android.telecom.TelecomAnalytics.SessionTiming: long getTime()>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>
<android.widget.Chronometer: void setBase(long)>
<android.content.IntentFilter: boolean matchAction(java.lang.String)>
<android.widget.GridLayout: void setRowOrderPreserved(boolean)>
<android.preference.Preference: boolean persistFloat(float)>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setTransferMode(int)>
<android.view.accessibility.AccessibilityManager: void interrupt()>
<android.inputmethodservice.KeyboardView: void invalidateKey(int)>
<com.android.server.wallpaper.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.text.Layout: int getOffsetToLeftOf(int)>
<com.android.server.am.ActivityManagerService: boolean setProcessMemoryTrimLevel(java.lang.String,int,int)>
<com.android.systemui.statusbar.ExpandableOutlineView: boolean isOutlineShowing()>
<com.android.server.am.ProcessStatsService: boolean setMemFactorLocked(int,boolean,long)>
<android.widget.Toolbar: int getContentInsetStartWithNavigation()>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrusted()>
<android.media.audiofx.BassBoost.Settings: void <init>(java.lang.String)>
<com.android.server.pm.ShortcutService: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>
<android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.content.pm.PackageParser.Package: void setApplicationInfoBaseCodePath(java.lang.String)>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>
<com.android.documentsui.FilteringCursorWrapper: int getCount()>
<android.renderscript.Byte3: void <init>(byte,byte,byte)>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
<android.telecom.PhoneAccount: int describeContents()>
<com.android.egg.neko.Cat: void logRename(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>
<com.android.systemui.keyguard.KeyguardService: android.os.IBinder onBind(android.content.Intent)>
<android.text.Annotation: java.lang.String getValue()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: void <init>(int)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>
<android.telecom.Connection: void onPlayDtmfTone(char)>
<com.android.systemui.classifier.ClassifierData: com.android.systemui.classifier.Stroke getStroke(int)>
<android.widget.NumberPicker: void setValue(int)>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>
<android.widget.Checkable: void setChecked(boolean)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionFinished()>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.os.Message: java.lang.String toString()>
<android.animation.TimeAnimator: void start()>
<android.util.LruCache: void evictAll()>
<com.android.hotspot2.est.ESTHandler: void <init>(com.android.hotspot2.osu.commands.GetCertData,android.net.Network,com.android.hotspot2.OMADMAdapter,javax.net.ssl.KeyManager,java.security.KeyStore,com.android.hotspot2.pps.HomeSP,int)>
<com.android.systemui.statusbar.phone.QSTileHost: android.content.Context getContext()>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onBusy()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.camera2.DngCreator: void close()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.graphics.Path: void rLineTo(float,float)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>
<android.content.pm.PackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)>
<com.android.systemui.statusbar.stack.ScrollContainer: void lockScrollTo(android.view.View)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: boolean shouldShowNotification(com.android.systemui.statusbar.NotificationData.Entry,com.android.systemui.statusbar.NotificationData)>
<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.os.health.HealthStats: java.util.Map getStats(int)>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyAlpha(float)>
<android.widget.ImageSwitcher: void <init>(android.content.Context)>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)>
<android.view.Window: void setContentView(android.view.View)>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<com.android.documentsui.dirlist.IconHelper: void stopLoading(android.widget.ImageView)>
<com.android.systemui.qs.tiles.BluetoothTile: void setListening(boolean)>
<android.hardware.camera2.CameraCaptureSession: boolean isReprocessable()>
<com.android.gallery3d.exif.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()>
<javax.microedition.khronos.opengles.GL11Ext: void glCurrentPaletteMatrixOES(int)>
<android.util.PathParser.PathData: long getNativePtr()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.GestureRecorder getGestureRecorder()>
<android.hardware.camera2.marshal.impl.MarshalQueryableSize: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.am.ActivityManagerService: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<com.google.android.gles_jni.GLImpl: void glFrontFace(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartFrontTaskEnterAnimation(boolean)>
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<android.app.VoiceInteractor.Prompt: int describeContents()>
<android.view.View: void onProvideStructure(android.view.ViewStructure)>
<com.android.systemui.qs.PagedTileLayout: int getColumnCount()>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation)>
<com.android.server.net.NetworkPolicyManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.provider.MediaStore.Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)>
<android.app.AutomaticZenRule: int getInterruptionFilter()>
<com.android.gallery3d.common.Utils: java.lang.String escapeXml(java.lang.String)>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onLevelChanged(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: boolean isEnabled()>
<android.view.Display.Mode: float getRefreshRate()>
<android.widget.TableRow: android.view.View getVirtualChildAt(int)>
<android.widget.ProgressBar: void postInvalidate()>
<com.android.systemui.statusbar.BaseStatusBar: void logNotificationExpansion(java.lang.String,boolean,boolean)>
<android.os.storage.StorageVolume: boolean isRemovable()>
<android.preference.PreferenceActivity: boolean isMultiPane()>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<com.android.server.fingerprint.RemovalClient: boolean onAuthenticated(int,int)>
<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.renderscript.ScriptIntrinsicBLAS: void CHEMM(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>
<com.android.server.statusbar.StatusBarManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.fingerprint.ClientMonitor: boolean onEnumerationResult(int,int)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterx(int,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getNotificationsTopY()>
<com.android.systemui.qs.tiles.CellularTile: void setListening(boolean)>
<android.util.Rational: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.PanelView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.exif.ExifTag: boolean setTimeValue(long)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.location.Address: void setExtras(android.os.Bundle)>
<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>
<com.android.server.backup.NotificationBackupHelper: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.HotspotController getHotspotController()>
<com.android.tools.layoutlib.create.Log: void error(java.lang.String,java.lang.Object[])>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>
<android.app.admin.DevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>
<com.android.systemui.ViewInvertHelper: void update(boolean)>
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>
<com.android.server.AnyMotionDetector: void stop()>
<com.android.systemui.qs.tiles.DndTile: int getMetricsCategory()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setOnKeyguard(boolean)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int)>
<android.animation.LayoutTransition.TransitionListener: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>
<com.android.systemui.qs.QSContainer: int calculateContainerHeight()>
<com.android.layoutlib.bridge.android.BridgeContext: void unbindService(android.content.ServiceConnection)>
<android.util.LongSparseArray: void delete(long)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void setXfermode(android.graphics.Xfermode)>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
<com.android.systemui.statusbar.policy.PreviewInflater: boolean wouldLaunchResolverActivity(android.content.Context,android.content.Intent,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isRemoved()>
<android.widget.DialerFilter: void removeFilterWatcher(android.text.TextWatcher)>
<com.android.systemui.statusbar.notification.HybridGroupManager: void setOverflowNumberColor(android.widget.TextView,int)>
<android.webkit.WebView: boolean zoomIn()>
<com.android.systemui.qs.QSFooter: void onClick(android.content.DialogInterface,int)>
<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>
<com.android.systemui.tuner.DemoModeFragment: void onDestroy()>
<android.renderscript.Element: android.renderscript.Element I8_4(android.renderscript.RenderScript)>
<com.android.documentsui.RootCursorWrapper: void close()>
<com.android.systemui.statusbar.DismissViewButton: void getDrawingRect(android.graphics.Rect)>
<com.android.systemui.recents.views.TaskStackView: void onAttachedToWindow()>
<com.android.anqp.eap.ExpandedEAPMethod: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<com.android.server.am.CompatModePackages: void setPackageAskCompatModeLocked(java.lang.String,boolean)>
<com.android.documentsui.RootCursorWrapper: int getCount()>
<com.android.settingslib.drawable.CircleFramedDrawable: int getOpacity()>
<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<com.android.settingslib.deviceinfo.PrivateStorageInfo: com.android.settingslib.deviceinfo.PrivateStorageInfo getPrivateStorageInfo(com.android.settingslib.deviceinfo.StorageVolumeProvider)>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<android.net.LinkProperties: java.util.List getLinkAddresses()>
<com.android.server.policy.RecentApplicationsBackground: void draw(android.graphics.Canvas)>
<com.android.server.policy.PhoneWindowManager: void setCurrentOrientationLw(int)>
<com.android.hotspot2.WifiNetworkAdapter: com.android.hotspot2.pps.HomeSP getCurrentSP()>
<android.media.MediaFormat: float getFloat(java.lang.String)>
<android.hardware.radio.RadioMetadata.Builder: void <init>()>
<android.widget.ListPopupWindow: void <init>(android.content.Context)>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateKeyguardUnoccluding()>
<android.opengl.GLES11: void glPointParameterf(int,float)>
<android.renderscript.FieldPacker: void addF32(float)>
<android.content.pm.LauncherApps.ShortcutQuery: android.content.pm.LauncherApps.ShortcutQuery setShortcutIds(java.util.List)>
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canOpenOptions()>
<android.view.Display: int getState()>
<android.media.MediaRouter.Callback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.app.Notification.Builder: android.app.Notification.Builder setShowWhen(boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>
<com.android.server.notification.EventConditionProvider: void <init>()>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitNative(int,java.lang.Object)>
<android.view.View: int getLeftPaddingOffset()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.app.admin.DevicePolicyManager: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)>
<android.content.CursorLoader: void setSelectionArgs(java.lang.String[])>
<android.content.EntityIterator: void reset()>
<android.hardware.radio.RadioManager.BandConfig: int describeContents()>
<com.android.systemui.qs.tiles.WorkModeTile: java.lang.CharSequence getTileLabel()>
<com.android.server.notification.ZenModeHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean)>
<com.android.pacprocessor.PacService: void onCreate()>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice()>
<android.view.MotionEvent: java.lang.String actionToString(int)>
<com.android.settingslib.drawer.UserAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.service.carrier.MessagePdu: java.util.List getPdus()>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onAllSizesComputed()>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>
<android.renderscript.FieldPacker: android.renderscript.Long4 subLong4()>
<com.android.systemui.statusbar.stack.StackScrollState: boolean applyState(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.StackViewState)>
<android.nfc.tech.NfcV: byte getResponseFlags()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.view.View: android.content.res.Resources getResources()>
<android.database.DataSetObserver: void onInvalidated()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateDismissView(boolean)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser create(java.io.File,boolean)>
<com.android.server.am.ActivityManagerService: void stopLockTaskMode()>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setPointSpriteEnabled(boolean)>
<android.view.TextureView: void onDraw(android.graphics.Canvas)>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>
<android.app.FragmentManager.BackStackEntry: java.lang.String getName()>
<com.android.systemui.qs.tiles.ColorInversionTile: void setListening(boolean)>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long4)>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void <init>(com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.phone.NotificationPanelView)>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.renderscript.RenderScript: void releaseAllContexts()>
<android.graphics.Camera: void rotateX(float)>
<android.media.tv.TvTrackInfo: java.lang.CharSequence getDescription()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.DismissFocusedTaskViewEvent)>
<android.app.ActivityManagerProxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<com.android.server.pm.UserManagerService: void setQuietModeEnabled(int,boolean)>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>
<android.database.AbstractCursor: void <init>()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void updateChildrenHeaderAppearance()>
<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.server.policy.keyguard.KeyguardStateMonitor.OnShowingStateChangedCallback: void onShowingStateChanged(boolean)>
<android.net.NetworkStats.Entry: boolean isEmpty()>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getCollapsedHeight()>
<com.android.systemui.qs.external.TileServiceManager: void setBindAllowed(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void setAlternativeOrder(boolean)>
<android.content.Context: java.lang.String getPackageResourcePath()>
<android.hardware.Sensor: int getReportingMode()>
<com.android.server.connectivity.NetworkNotificationManager: void setProvNotificationVisible(boolean,int,java.lang.String)>
<com.android.systemui.egg.MLand: void setScoreFieldHolder(android.view.ViewGroup)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>
<android.text.DynamicLayout: int getEllipsisStart(int)>
<android.animation.FloatArrayEvaluator: void <init>(float[])>
<android.media.MediaPlayer: void pause()>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void <init>(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void animateCollapsePanels()>
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>
<com.android.server.retaildemo.RetailDemoModeService: void <init>(android.content.Context)>
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>
<android.telecom.RemoteConnection.Callback: void onDestroyed(android.telecom.RemoteConnection)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)>
<com.android.server.wm.animation.ClipRectTBAnimation: void <init>(int,int,int,int,int,int,android.view.animation.Interpolator)>
<android.widget.ImageView: void setBaseline(int)>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>
<com.android.printspooler.widget.PrintOptionsLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setHeadsUpUser(int)>
<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>
<android.telecom.Conference: boolean addConnection(android.telecom.Connection)>
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.media.midi.MidiReceiver: void onSend(byte[],int,int,long)>
<com.android.server.pm.PackageManagerService: int checkSignatures(java.lang.String,java.lang.String)>
<android.animation.Animator.AnimatorListener: void onAnimationEnd(android.animation.Animator)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onScreenTurningOn()>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean isPanelFullyCollapsed()>
<com.android.printspooler.model.CustomPrinterIconCache: android.graphics.drawable.Icon getIcon(android.print.PrinterId)>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String toString()>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.VideoCapabilities getVideoCapabilities()>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.widget.ScrollView: void onDetachedFromWindow()>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm getGridAlgorithm()>
<android.hardware.camera2.legacy.RequestHandlerThread: void onLooperPrepared()>
<android.widget.GridView: void layoutChildren()>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>
<com.android.layoutlib.bridge.impl.ParserFactory: org.xmlpull.v1.XmlPullParser instantiateParser(java.lang.String)>
<com.android.gallery3d.glrenderer.Texture: int getWidth()>
<com.android.documentsui.dirlist.DirectoryFragment: void showRecentsOpen(android.app.FragmentManager,int)>
<android.graphics.Region: void finalize()>
<com.android.keyguard.KeyguardPasswordView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.android.server.net.NetworkStatsCollection: void readLegacyUid(java.io.File,boolean)>
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()>
<android.graphics.ColorMatrixColorFilter_Delegate: java.lang.String getSupportMessage()>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>
<android.hardware.usb.UsbAccessory: java.lang.String toString()>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadPackageIcon(android.content.Context,java.lang.String,int)>
<android.view.SurfaceControl.PhysicalDisplayInfo: void <init>(android.view.SurfaceControl.PhysicalDisplayInfo)>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>
<com.android.systemui.statusbar.phone.ScrimController: int getScrimBehindColor()>
<android.view.View: void jumpDrawablesToCurrentState()>
<android.media.MediaCodecInfo.VideoCapabilities: boolean areSizeAndRateSupported(int,int,double)>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>
<com.android.server.NativeDaemonEvent: int getCmdNumber()>
<android.media.SubtitleTrack.RenderingWidget.OnChangedListener: void onChanged(android.media.SubtitleTrack.RenderingWidget)>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>
<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()>
<android.app.Activity: void onBackPressed()>
<com.android.systemui.statusbar.NotificationGuts: void drawableStateChanged()>
<android.media.browse.MediaBrowser.MediaItem: boolean isBrowsable()>
<android.webkit.WebMessagePort: void close()>
<android.view.IWindowManagerImpl: void stopAppFreezingScreen(android.os.IBinder,boolean)>
<android.database.ContentObserver: void dispatchChange(boolean)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>
<android.database.CursorWindow: float getFloat(int,int)>
<android.util.Property: boolean isReadOnly()>
<com.android.keyguard.KeyguardPatternView: void showMessage(java.lang.String,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: void updateContent(com.android.gallery3d.glrenderer.GLCanvas)>
<android.graphics.Path: void rewind()>
<com.android.server.pm.IntentFilterVerificationState: void setPendingState()>
<com.android.systemui.classifier.FalsingManager: void onNotificatonStopDraggingDown()>
<com.android.keyguard.KeyguardHostView: void setViewMediatorCallback(com.android.keyguard.ViewMediatorCallback)>
<android.widget.ListView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.notification.HeaderTransformState: void initFrom(android.view.View)>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setLargeIcon(android.graphics.Bitmap)>
<android.graphics.drawable.Animatable: void start()>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelIndexMask(int)>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>
<android.service.carrier.CarrierIdentifier: int describeContents()>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setFormat(int)>
<android.media.MediaDrm: android.media.MediaDrm.KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>
<android.app.assist.AssistStructure.WindowNode: java.lang.CharSequence getTitle()>
<android.graphics.RectF: boolean intersect(float,float,float,float)>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
<android.view.Window: android.view.Window.Callback getCallback()>
<android.app.VoiceInteractor.AbortVoiceRequest: void onAbortResult(android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache: void <init>(android.content.pm.PackageManager)>
<android.service.media.MediaBrowserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.commands.pm.Pm: int runForceDexOpt()>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.Class)>
<com.android.server.location.RemoteListenerHelper.ListenerOperation: void execute(android.os.IInterface)>
<android.opengl.EGLContext: boolean equals(java.lang.Object)>
<android.widget.HeaderViewListAdapter: int getCount()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setQuantity(java.lang.String)>
<android.graphics.Path_Delegate: android.graphics.Path_Delegate getDelegate(long)>
<android.widget.ImageView: void setAdjustViewBounds(boolean)>
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)>
<android.graphics.Canvas_Delegate: void native_drawBitmap(long,int[],int,int,float,float,int,int,boolean,long)>
<android.opengl.GLES32: void glGetTexParameterIiv(int,int,java.nio.IntBuffer)>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.hardware.camera2.legacy.GLThreadManager: void setConfigurationAndWait(java.util.Collection,android.hardware.camera2.legacy.CaptureCollector)>
<com.android.systemui.qs.PageIndicator: void setLocation(float)>
<android.graphics.drawable.Drawable: boolean isFilterBitmap()>
<android.util.TypedValue: java.lang.CharSequence coerceToString()>
<android.widget.ExpandableListView.OnChildClickListener: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>
<android.text.style.LeadingMarginSpan.Standard: int getLeadingMargin(boolean)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchDragEvent(android.view.DragEvent)>
<com.android.server.job.JobStore: int size()>
<android.text.style.ImageSpan: void <init>(android.content.Context,int)>
<android.app.ActivityManagerProxy: boolean canBypassWorkChallenge(android.app.PendingIntent)>
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>
<android.service.media.CameraPrewarmService: android.os.IBinder onBind(android.content.Intent)>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,int[],int)>
<android.app.ActivityManagerProxy: int getActivityDisplayId(android.os.IBinder)>
<com.android.gallery3d.exif.ExifTag: int getComponentCount()>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadMimeIcon(android.content.Context,java.lang.String)>
<android.util.BridgeXmlPullAttributes: int getAttributeNameResource(int)>
<android.app.Dialog: void setTitle(int)>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>
<com.android.documentsui.MimePredicate: boolean mimeMatches(java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.policy.BluetoothController: void addStateChangedCallback(com.android.systemui.statusbar.policy.BluetoothController.Callback)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void waitUntilIdle()>
<android.util.LruCache: int evictionCount()>
<com.android.tools.layoutlib.create.Log: void errPrintln(java.lang.String)>
<com.android.hotspot2.WifiNetworkAdapter: android.net.wifi.WifiInfo getConnectionInfo()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setGroupExpansionChanging(boolean)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.server.notification.RankingHelper: void extractSignals(com.android.server.notification.NotificationRecord)>
<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.ExitRecentsWindowFirstAnimationFrameEvent)>
<com.android.systemui.assist.AssistOrbContainer: com.android.systemui.assist.AssistOrbView getOrb()>
<com.android.printservice.recommendation.plugin.hp.ServiceResolveQueue.ResolveCallback: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<android.media.tv.TvInputService.Session: boolean onTrackballEvent(android.view.MotionEvent)>
<android.app.ActivityManagerProxy: void restart()>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>
<android.app.ActivityManager.AppTask: void moveToFront()>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL)>
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)>
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewStructure: int addChildCount(int)>
<com.android.systemui.statusbar.NotificationHeaderUtil: void restoreNotificationHeader(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.media.MediaRouterService: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<android.widget.DialerFilter: void <init>(android.content.Context)>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteRecycledResources()>
<android.telephony.CellSignalStrengthLte: int hashCode()>
<android.database.sqlite.SQLiteStatement: java.lang.String toString()>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo build()>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<android.mtp.MtpDevice: void finalize()>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context)>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setOnActivatedListener(com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener)>
<com.android.keyguard.KeyguardSimPukView: void onDetachedFromWindow()>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking()>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,byte[])>
<com.android.systemui.qs.tiles.LocationTile: void setListening(boolean)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean hasFlashlight()>
<android.graphics.RoundRectangle: double getY()>
<com.android.systemui.statusbar.policy.KeyButtonView: void abortCurrentGesture()>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo.Builder setContentRect(android.graphics.Rect)>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>
<android.text.DynamicLayout: int getLineDescent(int)>
<com.android.preload.ClientUtils: com.android.ddmlib.Client[] findAllClients(com.android.ddmlib.IDevice)>
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>
<android.widget.CheckedTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.TextView.OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<android.os.BinderProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.os.BatteryStats.LongCounter: long getCountLocked(int)>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>
<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>
<android.telecom.PhoneAccountHandle: java.lang.String toString()>
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>
<android.opengl.Matrix: float length(float,float,float)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onFinishInflate()>
<android.app.admin.DevicePolicyManager: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<android.content.pm.PackageInstaller.Session: void commit(android.content.IntentSender)>
<com.android.systemui.statusbar.ViewTransformationHelper: void resetTransformedView(android.view.View)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setUsesChronometer(boolean)>
<com.android.documentsui.dirlist.MultiSelectManager: boolean setItemsSelected(java.lang.Iterable,boolean)>
<com.android.server.content.ContentService.Lifecycle: void onStart()>
<com.android.server.UiThread: com.android.server.UiThread get()>
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>
<com.android.systemui.DessertCaseView: void fillFreeList(int)>
<android.filterpacks.imageproc.ImageStitcher: void setupPorts()>
<android.graphics.Outline: void setOval(android.graphics.Rect)>
<android.widget.EdgeEffect: void onPull(float,float)>
<android.os.BatteryStats.Timer: long getTotalTimeLocked(long,int)>
<android.net.LocalSocket: void setReceiveBufferSize(int)>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<android.view.ScaleGestureDetector: float getCurrentSpanY()>
<com.android.externalstorage.MountReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.media.MediaPlayer: void <init>()>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>
<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<android.content.pm.ShortcutInfo: java.lang.String getPackage()>
<com.android.documentsui.dirlist.DocumentHolder: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>
<com.android.systemui.recents.model.TaskStack: void setTasks(android.content.Context,java.util.List,boolean)>
<android.service.carrier.CarrierIdentifier: java.lang.String getMnc()>
<android.widget.CheckedTextView: void jumpDrawablesToCurrentState()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void setFeature(java.lang.String,boolean)>
<android.transition.TransitionSet: android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: int getRotationLockOrientation()>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedScanBatchingSupported()>
<com.android.layoutlib.bridge.impl.Stack: void push(java.lang.Object)>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void onGroupExpanded(int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.systemui.statusbar.NotificationContentView: int getBackgroundColor(int)>
<android.graphics.drawable.BitmapDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>
<com.android.systemui.qs.tiles.BatteryTile: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void reset()>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void registerRanker()>
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.view.InputQueue: void finalize()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotEnabled()>
<android.telecom.Connection.VideoProvider: void onSetDeviceOrientation(int)>
<android.view.ViewParent: void bringChildToFront(android.view.View)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.bluetooth.BluetoothClass: int getDeviceClass()>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>
<android.media.AudioTrack: android.media.AudioDeviceInfo getPreferredDevice()>
<com.android.systemui.qs.PagedTileLayout.PageListener: void onPageChanged(boolean)>
<com.android.systemui.qs.external.TileLifecycleManager: void onServiceDisconnected(android.content.ComponentName)>
<android.graphics.drawable.ColorDrawable: void setTintList(android.content.res.ColorStateList)>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<com.android.tools.layoutlib.create.InjectMethodsAdapter: void <init>(org.objectweb.asm.ClassVisitor,com.android.tools.layoutlib.create.ICreateInfo.InjectMethodRunnable)>
<android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>
<com.android.systemui.qs.customize.TileAdapter.Holder: void stopDrag()>
<com.android.server.midi.MidiService: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>
<android.widget.SectionIndexer: java.lang.Object[] getSections()>
<android.service.dreams.DreamService: void setFullscreen(boolean)>
<android.app.Activity: android.transition.Scene getContentScene()>
<android.webkit.CookieManager: void removeSessionCookie()>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String getCertURL()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void init()>
<android.view.WindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSave()>
<com.android.anqp.ANQPElement: void <init>(com.android.anqp.Constants.ANQPElementType)>
<android.hardware.camera2.params.MeteringRectangle: int getHeight()>
<android.widget.ListPopupWindow: int getHeight()>
<android.text.BoringLayout: int getEllipsizedWidth()>
<android.widget.TextView: void setWidth(int)>
<android.speech.tts.UtteranceProgressListener: void onDone(java.lang.String)>
<com.android.printspooler.ui.PageAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,int)>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>
<android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean shouldLockout(long)>
<android.content.pm.LauncherApps: boolean hasShortcutHostPermission()>
<com.android.server.PinnerService: void onSwitchUser(int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>
<android.widget.AbsListView: void onDisplayHint(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setAnimationRunning(boolean)>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>
<android.filterpacks.imageproc.CrossProcessFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<android.app.LoaderManager: void enableDebugLogging(boolean)>
<com.android.documentsui.UriDerivativeLoader: java.lang.Object loadInBackground()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>
<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>
<com.android.settingslib.drawer.SettingsDrawerAdapter: int getCount()>
<com.android.systemui.usb.UsbResolverActivity: boolean onTargetSelected(com.android.internal.app.ResolverActivity.TargetInfo,boolean)>
<android.hardware.camera2.legacy.BurstHolder: void <init>(int,boolean,android.hardware.camera2.CaptureRequest[],java.util.Collection)>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>
<android.transition.ArcMotion: float getMinimumVerticalAngle()>
<android.widget.TextView: void setSingleLine(boolean)>
<android.graphics.drawable.LayerDrawable: int getPaddingMode()>
<android.view.View: android.os.IBinder getWindowToken()>
<com.android.systemui.recents.views.TaskStackView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.server.accessibility.AccessibilityManagerService: void enableAccessibilityService(android.content.ComponentName,int)>
<android.widget.TabHost: void onTouchModeChanged(boolean)>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.telecom.Call: java.lang.String getRemainingPostDialSequence()>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,float[],int)>
<android.hardware.camera2.CameraCaptureSession: void abortCaptures()>
<com.android.server.notification.ScheduleCalendar: void setTimeZone(java.util.TimeZone)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,float[],int)>
<android.view.View: void setImportantForAccessibility(int)>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.widget.Filter.FilterResults: void <init>()>
<com.google.android.gles_jni.GLImpl: void glFrustumf(float,float,float,float,float,float)>
<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnBeginSynthesis(int,int,int)>
<com.android.server.AppOpsService.Callback: void unlinkToDeath()>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPickupVibrationThreshold()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<com.android.server.pm.PreferredComponent: boolean sameSet(android.content.ComponentName[])>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>
<android.view.KeyEvent: char getMatch(char[])>
<com.android.tools.layoutlib.create.RenameClassAdapter: java.lang.String renameInternalType(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Context createDeviceProtectedStorageContext()>
<com.android.hotspot2.utils.HTTPRequest: void doAuthenticate(com.android.hotspot2.utils.HTTPResponse,java.lang.String,byte[],java.net.URL,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>
<com.android.documentsui.dirlist.DocumentHolder.EventListener: boolean onKey(com.android.documentsui.dirlist.DocumentHolder,int,android.view.KeyEvent)>
<com.android.systemui.volume.VolumeDialog: void setAutomute(boolean)>
<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>
<android.graphics.drawable.DrawableWrapper: void getHotspotBounds(android.graphics.Rect)>
<com.android.systemui.volume.VolumeDialogController: void register()>
<com.android.server.usb.UsbService: void <init>(android.content.Context)>
<com.android.systemui.classifier.Stroke: float getTotalLength()>
<android.location.LocationProvider: boolean requiresSatellite()>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onRepeatingRequestError(long)>
<android.view.WindowManagerPolicy.ScreenOnListener: void onScreenOn()>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>
<android.app.admin.SystemUpdatePolicy: void writeToParcel(android.os.Parcel,int)>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>
<android.hardware.Camera.Parameters: void setGpsLatitude(double)>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap)>
<android.content.ComponentName: java.lang.String flattenToString()>
<com.android.systemui.qs.tiles.WifiTile: void setDetailListening(boolean)>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>
<com.android.location.provider.LocationRequestUnbundled: long getInterval()>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<android.view.InputEvent: int describeContents()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionFinished()>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.HardwarePropertiesManagerService: float[] getDeviceTemperatures(java.lang.String,int,int)>
<com.android.server.notification.ScheduleConditionProvider: void onConnected()>
<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>
<com.android.server.am.ActivityManagerService: boolean isAssistDataAllowedOnCurrentActivity()>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
<com.android.systemui.recents.ScreenPinningRequest: android.widget.FrameLayout.LayoutParams getRequestLayoutParams(boolean)>
<android.app.job.JobInfo.TriggerContentUri: int hashCode()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedPhoneNumbers(android.content.Context,java.util.List)>
<android.view.KeyboardShortcutGroup: java.util.List getItems()>
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.app.assist.AssistStructure.ViewNode: android.app.assist.AssistStructure.ViewNode getChildAt(int)>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)>
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>
<com.android.layoutlib.bridge.bars.Config: java.lang.String getWifiIconType(int)>
<com.android.externalstorage.TestDocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.qs.QSPanel: void closeDetail()>
<android.hardware.camera2.CameraDevice: java.lang.String getId()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail build()>
<com.android.egg.neko.Cat: android.graphics.drawable.Icon createNotificationLargeIcon(android.content.Context)>
<android.media.SyncParams: float getTolerance()>
<android.inputmethodservice.Keyboard.Key: boolean isInside(int,int)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
<android.renderscript.Element: android.renderscript.Element U32_3(android.renderscript.RenderScript)>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>
<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsClosed()>
<com.android.settingslib.applications.AppUtils: java.lang.CharSequence getLaunchByDefaultSummary(com.android.settingslib.applications.ApplicationsState.AppEntry,android.hardware.usb.IUsbManager,android.content.pm.PackageManager,android.content.Context)>
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.NextAlarmController: void onReceive(android.content.Context,android.content.Intent)>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.hardware.camera2.utils.SurfaceUtils: android.util.Size getSurfaceSize(android.view.Surface)>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData.Builder setRxFilter(byte[],int)>
<android.media.browse.MediaBrowser: java.lang.String getRoot()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryStorageVolume()>
<com.android.documentsui.RootCursorWrapper: java.lang.String[] getColumnNames()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasDockedTask()>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,float[],int)>
<com.android.settingslib.applications.ApplicationsState: java.lang.String normalize(java.lang.String)>
<android.media.audiofx.EnvironmentalReverb.Settings: java.lang.String toString()>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>
<android.app.ApplicationThreadProxy: void scheduleSuicide()>
<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>
<com.android.server.policy.WindowOrientationListener: void disable()>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDitherEnabled(boolean)>
<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.widget.AdapterViewFlipper: void setFlipInterval(int)>
<com.android.server.am.ActivityManagerService: void resumeAppSwitches()>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteRemoved(android.media.session.MediaSession.Token)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromTop()>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isDozing()>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.graphics.drawable.ColorDrawable: void getOutline(android.graphics.Outline)>
<android.app.AutomaticZenRule: java.lang.String getName()>
<android.telecom.RemoteConnection: void unregisterCallback(android.telecom.RemoteConnection.Callback)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isFlippedVertically()>
<android.location.Address: java.lang.String getSubLocality()>
<com.google.android.gles_jni.GLImpl: void glClearDepthf(float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExpedited(boolean)>
<android.widget.TextView: android.view.ActionMode.Callback getCustomInsertionActionModeCallback()>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>
<android.media.tv.TvInputService.Session: boolean onSelectTrack(int,java.lang.String)>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.FieldID getFieldID_Input()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: java.util.List toList()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.renderscript.ScriptIntrinsicBLAS: void CHER2(int,android.renderscript.Float2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.widget.AdapterViewAnimator: void deferNotifyDataSetChanged()>
<android.util.ArraySet: boolean retainAll(java.util.Collection)>
<android.widget.CursorTreeAdapter: void changeCursor(android.database.Cursor)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<android.util.Base64InputStream: boolean markSupported()>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setOnClickListener(android.view.View.OnClickListener)>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.view.ViewGroup: boolean isTransitionGroup()>
<com.android.server.am.ActivityManagerService: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>
<com.android.keyguard.KeyguardPinBasedInputView: void resetPasswordText(boolean,boolean)>
<com.android.printspooler.model.PrintSpoolerService: void setProgress(android.print.PrintJobId,float)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<com.android.server.InputMethodManagerService: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<com.android.keyguard.KeyguardPatternView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,float[],int)>
<android.view.IWindowManagerImpl: void removeWallpaperInputConsumer()>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.widget.AbsListView: int getBottomPaddingOffset()>
<android.view.Window: android.view.View getCurrentFocus()>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>
<com.android.server.notification.RankingHelper: com.android.server.notification.NotificationSignalExtractor findExtractor(java.lang.Class)>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,android.renderscript.Allocation,int,int,int)>
<android.print.PrintJob: void cancel()>
<android.webkit.WebSettings: boolean getSavePassword()>
<com.android.printspooler.widget.PrintContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.MotionEvent.PointerProperties: void <init>()>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getCircleRadius()>
<com.android.hotspot2.Utils: java.lang.String bssidsToString(java.util.Collection)>
<android.widget.AutoCompleteTextView.Validator: boolean isValid(java.lang.CharSequence)>
<com.android.server.backup.PackageManagerBackupAgent: boolean hasMetadata()>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.RectEvaluator: android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.notification.TransformState: void setVisible(boolean,boolean)>
<com.android.uiautomator.core.UiSelector: java.lang.String toString()>
<android.net.NetworkInfo: java.lang.String getReason()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,int[],int)>
<android.graphics.Bitmap: boolean hasMipMap()>
<com.android.uiautomator.core.UiObject: boolean isChecked()>
<android.telecom.ConnectionService: boolean onUnbind(android.content.Intent)>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.os.Parcel: void readIntArray(int[])>
<com.android.systemui.SystemUIService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.tv.TvStatusBar: boolean shouldDisableNavbarGestures()>
<android.webkit.CacheManager: boolean startCacheTransaction()>
<android.database.CursorWrapper: boolean moveToLast()>
<com.android.server.content.SyncStorageEngine.OnSyncRequestListener: void onSyncRequest(com.android.server.content.SyncStorageEngine.EndPoint,int,android.os.Bundle)>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>
<com.android.settingslib.SuggestionParser: void <init>(android.content.Context,android.content.SharedPreferences,int)>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotSupported()>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersChanged(java.util.List)>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>
<android.telephony.CellIdentityLte: int getEarfcn()>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceDisconnected()>
<com.android.settingslib.graph.UsageGraph: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextChange(java.lang.String)>
<android.widget.RatingBar: java.lang.CharSequence getAccessibilityClassName()>
<android.media.session.PlaybackState.Builder: void <init>(android.media.session.PlaybackState)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isSummaryOfGroup(android.service.notification.StatusBarNotification)>
<com.android.hotspot2.WifiNetworkAdapter: void doIconQuery(long,java.lang.String)>
<com.android.server.am.ActivityManagerService: void reportActivityFullyDrawn(android.os.IBinder)>
<com.android.uiautomator.core.UiObject: boolean dragTo(com.android.uiautomator.core.UiObject,int)>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
<android.renderscript.Script: void getVarV(int,android.renderscript.FieldPacker)>
<com.android.commands.sm.Sm: void runSetSdcardfs()>
<android.app.assist.AssistContent: void setWebUri(android.net.Uri)>
<com.android.server.fingerprint.EnumerateClient: int start()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOn()>
<android.content.ComponentName: java.lang.String toShortString()>
<android.media.session.MediaController: java.lang.String getPackageName()>
<android.hardware.radio.RadioManager.BandDescriptor: int getType()>
<android.net.http.HttpResponseCache: void delete()>
<android.util.Rational: double doubleValue()>
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>
<android.telephony.CellSignalStrengthCdma: boolean equals(java.lang.Object)>
<com.android.systemui.classifier.FalsingManager: void onNotificatonStartDismissing()>
<android.view.inputmethod.InputContentInfo: int describeContents()>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>
<android.location.LocationProvider: int getAccuracy()>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<android.app.Notification.Action.Extender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>
<android.hardware.camera2.legacy.LegacyCameraDevice: boolean isClosed()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.io.OutputStream)>
<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>
<com.android.egg.neko.PrefState: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getAllTags()>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.preference.PreferenceActivity: void onDestroy()>
<android.widget.AdapterViewFlipper: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.preload.ui.NullProgressMonitor: void start(int)>
<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>
<android.widget.Spinner: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.NotificationContentView: void setClipToActualHeight(boolean)>
<com.android.server.notification.RankingConfig: void setVisibilityOverride(java.lang.String,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>
<android.widget.AnalogClock: void onDraw(android.graphics.Canvas)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void addUnfocusedTaskOverride(com.android.systemui.recents.views.TaskView,float)>
<com.google.android.util.AbstractMessageParser.Acronym: java.lang.String getValue()>
<com.android.server.pm.Policy: java.lang.String toString()>
<com.android.systemui.assist.AssistManager: void <init>(com.android.systemui.statusbar.BaseStatusBar,android.content.Context)>
<android.print.PrintAttributes.Resolution: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void onDensityOrFontScaleChanged(android.content.Context)>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceConnected(android.bluetooth.BluetoothPbap)>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,android.os.Looper,boolean,boolean)>
<com.android.printspooler.ui.FusedPrintersProvider: void onReset()>
<com.android.server.media.projection.MediaProjectionManagerService: void <init>(android.content.Context)>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>
<com.android.documentsui.Events.MotionInputEvent: boolean isShiftKeyDown()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>
<android.app.Dialog: void onStop()>
<android.drm.DrmInfoStatus: void <init>(int,int,android.drm.ProcessedData,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: boolean isForceHiding(android.view.WindowManager.LayoutParams)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>
<com.android.server.trust.TrustArchive: void logGrantTrust(int,android.content.ComponentName,java.lang.String,long,int)>
<android.widget.TextView: int getShadowColor()>
<android.database.Cursor: boolean moveToLast()>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>
<com.android.documentsui.RootsCache: java.util.Collection getRootsForAuthorityBlocking(java.lang.String)>
<android.speech.tts.SynthesisRequest: java.lang.String getText()>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)>
<com.android.server.tv.UinputBridge: void sendKeyUp(android.os.IBinder,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void checkError()>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.content.AsyncTaskLoader: java.lang.Object loadInBackground()>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>
<com.android.hotspot2.Utils: java.lang.String toUnicodeEscapedString(java.lang.String)>
<android.mtp.MtpObjectInfo: long getDateCreated()>
<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getBackOfStackTransform()>
<android.preference.PreferenceManager: void setStorageDeviceProtected()>
<android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.net.wifi.p2p.WifiP2pDeviceList: int describeContents()>
<android.webkit.PermissionRequest: void grant(java.lang.String[])>
<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>
<android.view.View: void setAccessibilityDelegate(android.view.View.AccessibilityDelegate)>
<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>
<android.media.tv.TvView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.graphics.Bitmap: void setPremultiplied(boolean)>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession.Token)>
<com.android.systemui.classifier.HumanInteractionClassifier: void setType(int)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.Settings getProperties()>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>
<android.content.pm.LabeledIntent: int getIconResource()>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.view.accessibility.AccessibilityEvent: void appendRecord(android.view.accessibility.AccessibilityRecord)>
<android.util.Spline.LinearSpline: java.lang.String toString()>
<android.app.ApplicationThreadProxy: void updateTimePrefs(boolean)>
<android.view.IWindowManagerImpl: void setAppTask(android.os.IBinder,int,int,android.graphics.Rect,android.content.res.Configuration,int,boolean)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setPositiveButton(int,android.view.View.OnClickListener)>
<android.view.textservice.TextInfo: int describeContents()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float)>
<android.app.ActivityManager: void moveTaskToFront(int,int)>
<android.text.StaticLayout.Builder: void finalize()>
<android.os.BaseBundle: long[] getLongArray(java.lang.String)>
<android.filterpacks.imageproc.VignetteFilter: void process(android.filterfw.core.FilterContext)>
<android.graphics.YuvImage: int getYuvFormat()>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.widget.AbsListView: boolean isTextFilterEnabled()>
<com.android.systemui.recents.views.TaskViewHeader: void setDimAlpha(float)>
<android.widget.PopupWindow: void <init>()>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>
<android.inputmethodservice.Keyboard: boolean isShifted()>
<android.media.MediaActionSound: void play(int)>
<android.content.res.BridgeTypedArray: int getLayoutDimension(int,java.lang.String)>
<android.os.BatteryStats.Uid: long getWifiBatchedScanTime(int,long,int)>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String,android.webkit.ValueCallback)>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>
<android.content.res.BridgeTypedArray: int length()>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>
<com.android.systemui.statusbar.NotificationContentView: void setRemoved()>
<android.text.format.Time: void switchTimezone(java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getMenuButton()>
<android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
<android.hardware.fingerprint.IFingerprintDaemon: int postEnroll()>
<android.preference.DialogPreference: void onDialogClosed(boolean)>
<android.view.ScaleGestureDetector: float getCurrentSpan()>
<com.android.hotspot2.asn1.Asn1Boolean: boolean getValue()>
<com.android.server.net.LockdownVpnTracker: void <init>(android.content.Context,android.os.INetworkManagementService,com.android.server.ConnectivityService,com.android.server.connectivity.Vpn,com.android.internal.net.VpnProfile)>
<android.service.dreams.DreamService: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>
<android.util.Spline.MonotoneCubicSpline: java.lang.String toString()>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onConnectedChanged()>
<android.view.View: boolean isShown()>
<android.view.animation.AnticipateInterpolator: void <init>(float)>
<com.android.server.pm.PreferredComponent: boolean sameSet(java.util.List)>
<android.drm.DrmConvertedStatus: void <init>(int,byte[],int)>
<android.os.MemoryFile: void close()>
<android.webkit.CookieManager: void removeAllCookie()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<android.speech.tts.SynthesisRequest: int getSpeechRate()>
<android.os.Message: void setAsynchronous(boolean)>
<android.app.Fragment: boolean isVisible()>
<android.provider.DocumentsProvider: void deleteDocument(java.lang.String)>
<android.service.notification.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewParent: int getTextAlignment()>
<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>
<android.util.LruCache: java.util.Map snapshot()>
<com.android.server.am.CompatModePackages: void setPackageScreenCompatModeLocked(java.lang.String,int)>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>
<android.view.animation.Animation: boolean isFillEnabled()>
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.Fragment.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.telecom.TelecomManager: void cancelMissedCallsNotification()>
<android.view.Window: void setMediaController(android.media.session.MediaController)>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.app.ActionBar: void selectTab(android.app.ActionBar.Tab)>
<android.os.Parcel: void writeList(java.util.List)>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>
<android.content.ContentProvider: void setWritePermission(java.lang.String)>
<com.android.documentsui.dirlist.DocumentHolder: void <init>(android.content.Context,android.view.View)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.telecom.InCallService.VideoCall.Callback: void onSessionModifyResponseReceived(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>
<android.speech.tts.Voice: void <init>(java.lang.String,java.util.Locale,int,int,boolean,java.util.Set)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Activity: boolean isDestroyed()>
<com.android.documentsui.RootsCache: void setBootCompletedResult(android.content.BroadcastReceiver.PendingResult)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup: java.lang.String toString()>
<android.app.ActionBar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedWakingUp()>
<com.android.server.am.ActivityManagerService: void bootAnimationComplete()>
<com.android.hotspot2.osu.OSUCache: java.util.Map pushScanResults(java.util.Collection)>
<android.graphics.drawable.NinePatchDrawable: void setAutoMirrored(boolean)>
<com.android.preload.DumpData: void <init>(java.lang.String,java.util.Map,java.util.Date)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>
<android.os.Bundle: void putChar(java.lang.String,char)>
<android.widget.Scroller: void abortAnimation()>
<com.android.server.pm.PackageManagerService: boolean isProtectedBroadcast(java.lang.String)>
<android.hardware.camera2.legacy.BurstHolder: java.util.List produceRequestHolders(long)>
<android.os.Parcel: android.util.SizeF readSizeF()>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.job.JobStore: int countJobsForUid(int)>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>
<android.telecom.Connection: void onUnhold()>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void updateVerticalLocation()>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.net.ConnectivityManager.NetworkCallback: void onLosing(android.net.Network,int)>
<com.android.server.pm.PermissionsState: java.util.List getRuntimePermissionStates(int)>
<android.graphics.Canvas_Delegate: void native_drawLines(long,float[],int,int,long)>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onDestroy()>
<android.opengl.GLES20: boolean glIsBuffer(int)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.BaseStatusBar: void startAssist(android.os.Bundle)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: void require(int,java.lang.String,java.lang.String)>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>
<android.graphics.Paint: void setARGB(int,int,int,int)>
<android.hardware.GeomagneticField: float getY()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getId()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setState(int[])>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: void <init>(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.documentsui.DirectoryLoader: void cancelLoadInBackground()>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUid(int,java.lang.String,long,long,int)>
<android.opengl.GLES30: void glPauseTransformFeedback()>
<android.widget.AbsSpinner: void onMeasure(int,int)>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>
<android.view.MotionEvent: float getX(int)>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>
<android.graphics.Paint: android.os.LocaleList getTextLocales()>
<android.view.ViewGroup.MarginLayoutParams: int getMarginEnd()>
<com.android.server.connectivity.NetdEventListenerService: void <init>(android.net.ConnectivityManager,android.net.metrics.IpConnectivityLog)>
<android.graphics.Canvas_Delegate: void native_drawPoint(long,float,float,long)>
<com.android.systemui.SystemUI: void overrideNotificationAppName(android.content.Context,android.app.Notification.Builder)>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>
<com.android.settingslib.drawer.Tile: int describeContents()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSsidStr()>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>
<com.android.server.pm.PackageManagerService: int movePackage(java.lang.String,java.lang.String)>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<com.android.systemui.statusbar.policy.DataSaverController.Listener: void onDataSaverChanged(boolean)>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
<com.android.server.am.HealthStatsBatteryStatsWriter: void writeProc(android.os.health.HealthStatsWriter,android.os.BatteryStats.Uid.Proc)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setProtectionStatus(int)>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>
<com.android.egg.neko.NekoLand: void onCreate(android.os.Bundle)>
<android.database.CursorWrapper: void close()>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onSwipeFromLeft()>
<android.telecom.Conference: android.telecom.DisconnectCause getDisconnectCause()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.app.usage.UsageEvents.Event: android.content.res.Configuration getConfiguration()>
<android.webkit.WebView: void destroy()>
<android.net.wifi.WifiEnterpriseConfig: int describeContents()>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.renderscript.Matrix2f: void transpose()>
<com.android.systemui.statusbar.phone.PanelView: boolean isTrackingBlocked()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: android.view.View getChildAtPosition(android.view.MotionEvent)>
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
<android.media.tv.TvInputInfo: int getTunerCount()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<android.os.Handler_Delegate: void setCallback(android.os.Handler_Delegate.IHandlerCallback)>
<android.app.assist.AssistStructure.ViewNode: boolean isSelected()>
<com.android.systemui.stackdivider.DividerView: void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent)>
<com.android.server.UpdateLockService: void releaseUpdateLock(android.os.IBinder)>
<android.webkit.WebView: void postWebMessage(android.webkit.WebMessage,android.net.Uri)>
<android.content.ContentQueryMap: void requery()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure(com.android.internal.telephony.IccCardConstants.State)>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: java.lang.CharSequence getPrompt()>
<android.widget.TimePicker.TimePickerDelegate: int getMinute()>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>
<com.android.server.notification.RankingHelper: int getImportance(java.lang.String,int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.CommandQueue: void dismissKeyboardShortcutsMenu()>
<android.text.LoginFilter: void onStop()>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>
<com.android.documentsui.FilesActivity: void <init>()>
<com.android.server.pm.PackageInstallerService: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(java.lang.String)>
<android.renderscript.Int3: void <init>(int,int,int)>
<android.text.style.LeadingMarginSpan.Standard: int getSpanTypeId()>
<com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installKeyPair(android.content.ComponentName,byte[],byte[],byte[],java.lang.String,boolean)>
<com.android.systemui.qs.SignalTileView: void onMeasure(int,int)>
<android.opengl.GLES30: void glResumeTransformFeedback()>
<android.provider.Settings.System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showAssistDisclosure()>
<android.widget.ToggleButton: java.lang.CharSequence getAccessibilityClassName()>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>
<android.transition.Transition: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
<android.os.UserManager: boolean isQuietModeEnabled(android.os.UserHandle)>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>
<android.app.job.JobInfo.TriggerContentUri: int describeContents()>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String getURI()>
<android.graphics.BidiRenderer: android.graphics.RectF renderText(int,int,boolean,float[],int,boolean)>
<com.android.systemui.recents.views.TaskView: void hideActionButton(boolean,int,boolean,android.animation.Animator.AnimatorListener)>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>
<android.view.View: int resolveSizeAndState(int,int,int)>
<com.android.systemui.recents.misc.Utilities: android.util.ArraySet objectToSet(java.lang.Object,android.util.ArraySet)>
<com.android.settingslib.dream.DreamBackend: void preview(com.android.settingslib.dream.DreamBackend.DreamInfo)>
<android.view.View: void dispatchSetPressed(boolean)>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: void <init>(org.apache.harmony.jpda.tests.share.JPDATestOptions,org.apache.harmony.jpda.tests.framework.LogWriter)>
<android.media.tv.TvRecordingClient.RecordingCallback: void onTuned(android.net.Uri)>
<android.filterpacks.imageproc.FillLightFilter: void process(android.filterfw.core.FilterContext)>
<android.webkit.WebBackForwardList: int getSize()>
<com.android.systemui.recents.RecentsImpl: void cancelPreloadingRecents()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHeadsUp(boolean)>
<android.util.MonthDisplayHelper: int getColumnOf(int)>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean drag(int,int,int,int,int)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>
<com.android.systemui.qs.tiles.RotationLockTile: java.lang.CharSequence getTileLabel()>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(float[],int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getPeekHeight()>
<android.widget.Editor.HandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<com.android.location.fused.FusedLocationService: android.os.IBinder onBind(android.content.Intent)>
<android.os.Message: void <init>()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: float getYVelocity()>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>
<com.android.systemui.qs.QSPanel: void addTile(com.android.systemui.qs.QSTile,boolean)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>
<com.android.systemui.statusbar.notification.HeaderTransformState: boolean transformViewTo(com.android.systemui.statusbar.notification.TransformState,float)>
<android.telecom.Call: void removeExtras(java.util.List)>
<com.android.server.accessibility.MotionEventInjector: void <init>(android.os.Looper)>
<android.widget.SearchView: android.os.Parcelable onSaveInstanceState()>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>
<android.os.StrictMode: void noteSlowCall(java.lang.String)>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>
<com.android.server.trust.TrustAgentWrapper: void onDeviceUnlocked()>
<android.graphics.BlendComposite: boolean equals(java.lang.Object)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getDockedDividerSize(android.content.Context)>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.CharSequence getAppLabel()>
<android.media.ToneGenerator: boolean startTone(int,int)>
<com.android.server.backup.BackupManagerService: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)>
<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpUnPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.media.midi.MidiDeviceStatus: boolean isInputPortOpen(int)>
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>
<android.view.MotionEvent: float getTouchMajor()>
<android.widget.StackView: void showPrevious()>
<com.android.systemui.qs.external.TileLifecycleManager: void setTileAdded(android.content.Context,android.content.ComponentName,boolean)>
<com.android.server.am.HealthStatsBatteryStatsWriter: void writePid(android.os.health.HealthStatsWriter,android.os.BatteryStats.Uid.Pid)>
<android.media.MediaExtractor: void release()>
<android.media.midi.MidiManager: void unregisterDeviceCallback(android.media.midi.MidiManager.DeviceCallback)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void notifyFling(boolean)>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistExceptIdleInternal()>
<android.graphics.FontFamily_Delegate: java.awt.Font getFont(int,boolean)>
<android.app.ActivityManagerProxy: void setFocusedStack(int)>
<android.renderscript.Allocation: void setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)>
<android.view.MotionEvent: float getTouchMinor(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsOES(short,short,short,short,short)>
<com.android.documentsui.Events: boolean isMouseType(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setWindowState(int,int)>
<android.widget.Toolbar: int getContentInsetRight()>
<android.app.ActionBar: void setElevation(float)>
<android.renderscript.Script: android.renderscript.Script.InvokeID createInvokeID(int)>
<android.location.LocationProvider: boolean requiresNetwork()>
<com.android.preload.ui.UI: com.android.ddmlib.Client getSelectedClient()>
<com.android.systemui.recents.views.RecentsView: android.graphics.drawable.Drawable getBackgroundScrim()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.session.PlaybackState: long getBufferedPosition()>
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>
<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>
<com.android.server.pm.PackageManagerService: void verifyPendingInstall(int,int)>
<android.view.ViewGroup: boolean hasFocusable()>
<com.android.systemui.statusbar.policy.AccessibilityController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure()>
<android.accessibilityservice.AccessibilityService.MagnificationController: boolean setScale(float,boolean)>
<android.os.ParcelFileDescriptor: void close()>
<android.widget.AdapterView: void <init>(android.content.Context)>
<android.content.pm.LauncherActivityInfo: java.lang.CharSequence getLabel()>
<android.media.audiofx.Visualizer: void finalize()>
<android.hardware.Camera.Parameters: void setSceneMode(java.lang.String)>
<android.location.Criteria: int getVerticalAccuracy()>
<android.widget.Editor.EasyEditDeleteListener: void onDeleteClick(android.text.style.EasyEditSpan)>
<com.android.hotspot2.omadm.XMLNode: com.android.hotspot2.omadm.XMLNode getSoleChild()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>
<android.media.tv.TvView: void timeShiftSeekTo(long)>
<android.text.InputFilter.LengthFilter: int getMax()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installCaCert(android.content.ComponentName,byte[])>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
<com.android.server.pm.ShortcutService: int getRemainingCallCount(java.lang.String,int)>
<com.android.server.pm.UserManagerService: android.os.ParcelFileDescriptor getUserIcon(int)>
<android.media.MediaCodec.CryptoInfo: void set(int,int[],int[],byte[],byte[],int)>
<android.opengl.GLES30: long glFenceSync(int,int)>
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()>
<android.hardware.camera2.params.MeteringRectangle: java.lang.String toString()>
<com.android.server.twilight.TwilightState: long sunriseTimeMillis()>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>
<com.android.server.backup.Trampoline: boolean hasBackupPassword()>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<com.android.printservice.recommendation.PrintServicePlugin: void stop()>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<com.android.layoutlib.bridge.android.BridgeContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.graphics.Path: void rQuadTo(float,float,float,float)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.String getPackageForType(java.lang.String)>
<android.content.pm.Signature: void <init>(java.lang.String)>
<android.media.MediaRouter.RouteInfo: boolean isConnecting()>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()>
<android.hardware.fingerprint.IFingerprintDaemon: int closeHal()>
<android.widget.CalendarView.CalendarViewDelegate: void setUnfocusedMonthDateColor(int)>
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.systemui.keyboard.KeyboardUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.InflateException: void <init>()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<android.media.MediaActionSound: void load(int)>
<com.android.systemui.analytics.DataCollector: void onScreenTurningOn()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getCustomPrinterIcon(android.print.PrinterId,android.print.IPrintSpoolerCallbacks,int)>
<com.android.server.backup.BackupManagerService.Lifecycle: void onUnlockUser(int)>
<android.content.ContentProvider: void shutdown()>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>
<android.app.Activity: int getRequestedOrientation()>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<android.util.Rational: boolean isFinite()>
<android.text.style.TtsSpan.TextBuilder: void <init>(java.lang.String)>
<android.view.WindowId.FocusObserver: void onFocusLost(android.view.WindowId)>
<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>
<android.hardware.camera2.params.InputConfiguration: int hashCode()>
<android.widget.NumberPicker: int getValue()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.documentsui.ThumbnailCache: int sizeOf(android.net.Uri,android.graphics.Bitmap)>
<android.renderscript.Program.BaseProgramBuilder: void initProgram(android.renderscript.Program)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void flushPackageRestrictionsAsUser(int)>
<android.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.radio.RadioTuner.Callback: void onError(int)>
<android.util.EventLogTags: android.util.EventLogTags.Description get(java.lang.String)>
<android.os.ParcelFormatException: void <init>()>
<android.media.MediaCodecInfo.AudioCapabilities: int[] getSupportedSampleRates()>
<android.app.SearchableInfo: int describeContents()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: void <init>(java.lang.String,int)>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<android.webkit.WebViewProvider.ViewDelegate: void setScrollBarStyle(int)>
<com.android.hotspot2.pps.Policy: int getMaxBSSLoad()>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>
<com.android.server.am.DumpHeapProvider: java.io.File getJavaFile()>
<com.android.anqp.HSIconFileElement: com.android.anqp.HSIconFileElement.StatusCode getStatusCode()>
<android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
<android.os.Process: int getThreadPriority(int)>
<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>
<android.service.notification.Condition: void <init>(android.os.Parcel)>
<com.android.systemui.recents.misc.SystemServicesProxy: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<com.android.server.InputMethodManagerService: void clearLastInputMethodWindowForTransition(android.os.IBinder)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void dataSetChanged()>
<android.app.ActivityManagerProxy: int getAppStartMode(int,java.lang.String)>
<android.widget.TextView: android.os.LocaleList getImeHintLocales()>
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<com.android.preload.actions.ExportAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>
<com.android.documentsui.RecentsProvider: android.net.Uri buildRecent()>
<com.android.server.am.ActivityManagerService: int sendIntentSender(android.content.IIntentSender,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>
<android.webkit.WebView: void reload()>
<android.widget.DialerFilter: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.anqp.OSUProvider: java.lang.String getOSUServer()>
<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>
<android.widget.Switch: java.lang.CharSequence getAccessibilityClassName()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>
<com.android.systemui.qs.external.CustomTile: java.lang.CharSequence getTileLabel()>
<android.text.method.BaseMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.graphics.RectF: boolean isEmpty()>
<android.graphics.drawable.VectorDrawable_Delegate.VNativeObject: java.lang.Object getDelegate(long)>
<android.os.DropBoxManager: void <init>()>
<android.view.IWindowManagerImpl: boolean requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.telephony.ServiceState: boolean getRoaming()>
<com.android.systemui.volume.ZenModePanel: void addZenConditions(int)>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int)>
<android.renderscript.Element: android.renderscript.Element F64_2(android.renderscript.RenderScript)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: boolean isEmpty()>
<android.content.ContentProvider: void onTrimMemory(int)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putObject(int,java.lang.Object)>
<com.android.egg.neko.Food: long getInterval(android.content.Context)>
<com.android.server.am.ContentProviderConnection: void toClientString(java.lang.StringBuilder)>
<com.android.systemui.egg.MLand: com.android.systemui.egg.MLand.Player getPlayer(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>
<com.android.server.wm.TaskStack: java.lang.String toShortString()>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.security.keystore.KeyInfo: java.lang.String[] getSignaturePaddings()>
<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>
<android.security.keystore.KeyGenParameterSpec: boolean isInvalidatedByBiometricEnrollment()>
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>
<android.view.View: void stopNestedScroll()>
<android.webkit.WebSettings: boolean getAllowUniversalAccessFromFileURLs()>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>
<com.android.systemui.GuestResumeSessionReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.telecom.RemoteConnection.Callback: void onConferenceChanged(android.telecom.RemoteConnection,android.telecom.RemoteConference)>
<android.content.pm.ProviderInfo: void <init>()>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityForConsumptionEnd(java.util.Date)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onKey(int,int[])>
<com.android.systemui.power.PowerNotificationWarnings: void showTemperatureWarning()>
<android.os.AsyncTask: void execute(java.lang.Runnable)>
<android.animation.ObjectAnimator: void setupStartValues()>
<android.widget.ActivityChooserModel.ActivityResolveInfo: void <init>(android.content.pm.ResolveInfo)>
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>
<com.android.settingslib.net.SummaryForAllUidLoader: void <init>(android.content.Context,android.net.INetworkStatsSession,android.os.Bundle)>
<android.content.pm.ServiceInfo: int describeContents()>
<android.view.MotionEvent: int getFlags()>
<android.media.SoundPool: void stop(int)>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.media.ToneGenerator: int getAudioSessionId()>
<android.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.statusbar.DragDownHelper: void <init>(android.content.Context,android.view.View,com.android.systemui.ExpandHelper.Callback,com.android.systemui.statusbar.DragDownHelper.DragDownCallback)>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,float[],int)>
<com.android.systemui.recents.model.Task.TaskKey: int hashCode()>
<com.android.commands.sm.Sm: void main(java.lang.String[])>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: com.android.documentsui.State getDisplayState()>
<com.android.systemui.statusbar.policy.Listenable: void setListening(boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onClick(android.view.View)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setShowingLegacyBackground(boolean)>
<com.android.server.location.GeofenceManager: void removeFence(java.lang.String)>
<android.view.View: void setOnContextClickListener(android.view.View.OnContextClickListener)>
<android.os.IPowerManager: void rebootSafeMode(boolean,boolean)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>
<com.android.documentsui.dirlist.MultiSelectManager: com.android.documentsui.dirlist.MultiSelectManager.Selection getSelection()>
<com.android.server.notification.ZenModeFiltering: boolean matchesCallFilter(android.content.Context,int,android.service.notification.ZenModeConfig,android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onIdle(android.hardware.camera2.CameraDevice)>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,org.xmlpull.v1.XmlPullParser)>
<android.hardware.camera2.utils.TaskSingleDrainer: void taskFinished()>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void startKeyguardExitAnimation(long,long)>
<com.android.systemui.qs.QSPanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.documentsui.model.RootInfo: int hashCode()>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>
<android.media.midi.MidiDeviceInfo.PortInfo: int getPortNumber()>
<android.bluetooth.le.ScanResult: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,float[],int)>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isSecure()>
<android.net.wifi.WpsInfo: java.lang.String toString()>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>
<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>
<com.android.systemui.recents.model.TaskStack.DockState.ViewState: void draw(android.graphics.Canvas)>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: com.android.systemui.statusbar.phone.LockscreenWallpaper.LoaderResult loadBitmap(int,android.os.UserHandle)>
<android.inputmethodservice.KeyboardView: void onAttachedToWindow()>
<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable.Orientation)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: boolean setPinnedStackSize(android.graphics.Rect,android.graphics.Rect)>
<android.hardware.camera2.params.OutputConfiguration: void <init>(int,android.view.Surface)>
<android.graphics.SumPathEffect_Delegate: java.lang.String getSupportMessage()>
<android.print.PrintJobInfo: long getCreationTime()>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void updateTransformedTypes()>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.Number)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,android.content.res.Configuration,boolean)>
<android.view.ScaleGestureDetector: boolean isQuickScaleEnabled()>
<android.content.RestrictionEntry: void <init>(int,java.lang.String)>
<android.widget.Toolbar: int getTitleMarginStart()>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>
<android.os.BatteryStats.HistoryTag: void readFromParcel(android.os.Parcel)>
<com.android.systemui.recents.Recents: com.android.systemui.recents.RecentsConfiguration getConfiguration()>
<android.widget.ListAdapter: boolean areAllItemsEnabled()>
<com.android.server.notification.CalendarTracker: void setCallback(com.android.server.notification.CalendarTracker.Callback)>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig.Builder setAf(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onWindowVisibilityChanged(int)>
<android.media.AudioRecord: int read(short[],int,int,int)>
<com.android.server.am.BatteryStatsService: void noteWifiScanStopped(int)>
<com.android.layoutlib.bridge.util.ReflectionUtils: boolean isInstanceOf(java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>
<com.android.printspooler.renderer.IPdfRenderer: void closeDocument()>
<android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)>
<android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)>
<android.app.Fragment.SavedState: int describeContents()>
<android.bluetooth.le.AdvertiseData: boolean getIncludeTxPowerLevel()>
<android.bluetooth.BluetoothAdapter: int getScanMode()>
<com.android.commands.telecom.Telecom: void onShowUsage(java.io.PrintStream)>
<android.content.res.TypedArray: int length()>
<com.android.documentsui.DocumentsActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.hotspot2.osu.OSUManager: java.net.URL prepareUserInput(java.lang.String)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: int getExpandedHeight()>
<android.transition.TransitionSet: android.transition.TransitionSet addListener(android.transition.Transition.TransitionListener)>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>
<com.android.documentsui.DirectoryLoader: void onStartLoading()>
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>
<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>
<com.android.documentsui.SaveFragment: com.android.documentsui.SaveFragment get(android.app.FragmentManager)>
<android.hardware.camera2.params.RggbChannelVector: float getBlue()>
<com.android.server.notification.ZenModeConditions: void onServiceAdded(android.content.ComponentName)>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>
<android.app.Notification: int describeContents()>
<android.mtp.MtpDevice: byte[] getObject(int,int)>
<com.android.server.net.NetworkStatsRecorder: void dumpLocked(com.android.internal.util.IndentingPrintWriter,boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void onClick(android.view.View)>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.android.server.am.BatteryStatsService: void noteSyncFinish(java.lang.String,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.media.MediaDrm: byte[] getSecureStop(byte[])>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.graphics.drawable.LayerDrawable: int getAlpha()>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean setStackScrollToInitialState()>
<android.media.SRTTrack: void onData(byte[],boolean,long)>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRect: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.server.wm.DisplaySettings.Entry: void <init>(java.lang.String)>
<com.android.pacprocessor.PacService: void onDestroy()>
<android.webkit.WebView: android.graphics.Picture capturePicture()>
<android.widget.TextView: int getGravity()>
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.volume.MediaSessions: void <init>(android.content.Context,android.os.Looper,com.android.systemui.volume.MediaSessions.Callbacks)>
<com.android.systemui.statusbar.RemoteInputController.Callback: void onRemoteInputActive(boolean)>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>
<com.android.hotspot2.osu.OSUSocketFactory: java.util.Set buildCertSet()>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.tools.layoutlib.create.CreateInfo: java.util.Set getExcludedClasses()>
<android.view.View: void onLayout(boolean,int,int,int,int)>
<com.android.keyguard.KeyguardSecurityView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<android.util.EventLog.Event: java.lang.Object getData()>
<com.android.systemui.qs.QSIconView: android.view.View createIcon()>
<com.android.systemui.settings.ToggleSlider.Listener: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<android.widget.Scroller: void setFinalY(int)>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>
<com.android.systemui.statusbar.ScrimView: void setDrawAsSrc(boolean)>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.Provider)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: boolean isVisible()>
<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int,int)>
<android.net.NetworkInfo: boolean isFailover()>
<com.android.documentsui.DocumentsToolbar: void setOnActionViewCollapsedListener(com.android.documentsui.DocumentsToolbar.OnActionViewCollapsedListener)>
<com.android.layoutlib.bridge.bars.StatusBar: void loadIcon(int,java.lang.String,com.android.resources.Density)>
<android.transition.ChangeScroll: void captureEndValues(android.transition.TransitionValues)>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.widget.TextView: void setTextAppearance(int)>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.util.Base64InputStream: void mark(int)>
<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
<com.android.systemui.recents.views.TaskStackView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.QSTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.settingslib.net.SummaryForAllUidLoader: android.net.NetworkStats loadInBackground()>
<com.google.android.util.AbstractMessageParser.Acronym: void <init>(java.lang.String,java.lang.String)>
<android.preference.PreferenceActivity.Header: int describeContents()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence)>
<android.net.Uri.Builder: void <init>()>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
<com.android.server.notification.ConditionProviders: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.am.ActivityManagerService: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>
<android.widget.ExpandableListAdapter: boolean isEmpty()>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void updateEverything()>
<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPanelScrimMinFraction(float)>
<com.android.commands.wm.Wm: void main(java.lang.String[])>
<android.media.MediaRouter: int getRouteCount()>
<android.app.Notification.Builder: android.app.Notification.Builder recoverBuilder(android.content.Context,android.app.Notification)>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onEnabledChanged(boolean)>
<com.android.layoutlib.bridge.impl.PorterDuffUtility: java.awt.Composite getComposite(android.graphics.PorterDuff.Mode,int)>
<android.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.app.FragmentTransaction: boolean isEmpty()>
<com.android.printspooler.ui.PrintActivity: void onUpdateCanceled()>
<android.hardware.SensorEventCallback: void onSensorAdditionalInfo(android.hardware.SensorAdditionalInfo)>
<com.android.keyguard.KeyguardAbsKeyInputView: void reset()>
<android.view.View: void setId(int)>
<android.hardware.Camera.Parameters: boolean isAutoWhiteBalanceLockSupported()>
<com.android.server.notification.EventConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.app.Fragment: void onAttachFragment(android.app.Fragment)>
<android.view.WindowAnimationFrameStats: int describeContents()>
<android.os.BatteryStats.Uid: void noteActivityPausedLocked(long)>
<android.mtp.MtpStorageInfo: long getFreeSpace()>
<android.media.midi.MidiInputPort: void finalize()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
<android.telephony.SubscriptionInfo: int getDataRoaming()>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<android.text.method.TextKeyListener: void clear(android.text.Editable)>
<com.android.systemui.SystemUI: void start()>
<com.android.systemui.qs.QSTileBaseView: void onStateChanged(com.android.systemui.qs.QSTile.State)>
<com.android.printspooler.ui.FusedPrintersProvider: boolean onCancelLoad()>
<com.android.settingslib.wifi.AccessPoint: void generateOpenNetworkConfig()>
<com.android.server.usb.UsbDeviceManager: void clearUsbDebuggingKeys()>
<com.android.server.pm.PermissionsState: boolean isPermissionReviewRequired(int)>
<android.text.BoringLayout: void ellipsized(int,int)>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>
<com.android.systemui.recents.events.activity.UndockingTaskEvent: void <init>()>
<android.media.TimedMetaData: byte[] getMetaData()>
<android.app.ActivityManager: boolean isLowRamDevice()>
<android.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()>
<android.printservice.PrintJob: boolean isCompleted()>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)>
<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.Class wrapClassIfPrimitive(java.lang.Class)>
<android.app.NotificationManager: boolean removeAutomaticZenRule(java.lang.String)>
<android.view.ViewParent: int getTextDirection()>
<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>
<android.bluetooth.BluetoothHealthAppConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.preference.Preference: void setEnabled(boolean)>
<android.mtp.MtpObjectInfo: long getCompressedSizeLong()>
<com.android.systemui.Prefs: void putString(android.content.Context,java.lang.String,java.lang.String)>
<android.webkit.WebMessage: void <init>(java.lang.String)>
<android.hardware.camera2.utils.TaskDrainer.DrainListener: void onDrained()>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.provider.MediaStore.Audio.Genres.Members: android.net.Uri getContentUri(java.lang.String,long)>
<android.widget.VideoView: boolean canSeekBackward()>
<com.android.systemui.statusbar.notification.TransformState: boolean transformScale()>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>
<android.net.dhcp.DhcpPacket.ParseException: void <init>(int,java.lang.String,java.lang.Object[])>
<android.media.MediaSync.Callback: void onAudioBufferConsumed(android.media.MediaSync,java.nio.ByteBuffer,int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.IterateRecentsEvent)>
<com.android.printspooler.renderer.IPdfEditor: void write(android.os.ParcelFileDescriptor)>
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getIndeterminateTintMode()>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])>
<com.android.systemui.statusbar.phone.PanelView: boolean flingExpands(float,float,float,float)>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
<android.media.audiofx.Visualizer: int getCaptureSize()>
<android.opengl.GLES20: boolean glIsProgram(int)>
<android.hardware.camera2.CameraCharacteristics.Key: boolean equals(java.lang.Object)>
<android.os.health.HealthStats: int getTimerKeyAt(int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>
<com.android.server.fingerprint.FingerprintUtils: void addFingerprintForUser(android.content.Context,int,int)>
<android.transition.ChangeClipBounds: void captureEndValues(android.transition.TransitionValues)>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.widget.PopupMenu: void setGravity(int)>
<android.widget.TextView: boolean isInputMethodTarget()>
<com.android.server.twilight.TwilightManager: void unregisterListener(com.android.server.twilight.TwilightListener)>
<com.google.android.util.AbstractMessageParser.TrieNode: boolean exists()>
<android.webkit.WebView: boolean canGoBackOrForward(int)>
<com.android.hotspot2.osu.HTTPHandler: byte[] getTLSUnique()>
<android.app.AlarmManager: void setExact(int,long,java.lang.String,android.app.AlarmManager.OnAlarmListener,android.os.Handler)>
<android.os.ParcelUuid: void <init>(java.util.UUID)>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)>
<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>
<com.android.printspooler.widget.PrintOptionsLayout: void onMeasure(int,int)>
<com.google.android.gles_jni.GLImpl: void glNormal3x(int,int,int)>
<android.hardware.camera2.CaptureRequest: boolean isReprocess()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>
<android.os.BatteryStats.Uid: long getProcessStateTime(int,long,int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void onBusEvent(com.android.systemui.stackdivider.events.StartedDragingEvent)>
<com.android.systemui.analytics.DataCollector: void onLeftAffordanceOn()>
<android.util.ArrayMap: java.util.Set keySet()>
<com.android.hotspot2.osu.commands.BrowserURI: java.lang.String getURI()>
<com.android.server.am.ActivityManagerService: void notifyEnterAnimationComplete(android.os.IBinder)>
<android.hardware.camera2.legacy.GLThreadManager: void queueNewFrame()>
<android.util.ArraySet: boolean addAll(java.util.Collection)>
<android.database.sqlite.SQLiteClosable: void close()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.ExpandableNotificationRow getViewAtPosition(float)>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificates(java.security.cert.X509Certificate[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addNavigationBar()>
<android.app.Notification.Builder: android.app.Notification.Builder setActions(android.app.Notification.Action[])>
<com.android.systemui.recents.views.RecentsView: void dump(java.lang.String,java.io.PrintWriter)>
<android.app.ApplicationThreadProxy: void scheduleMultiWindowModeChanged(android.os.IBinder,boolean)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void setHomeAsUp(boolean)>
<com.android.systemui.statusbar.NotificationHeaderUtil.ViewComparator: boolean isEmpty(android.view.View)>
<android.widget.GridView: int getNumColumns()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setForceUnlocked(boolean)>
<android.view.View: void onAttachedToWindow()>
<android.os.MessageQueue: void addOnFileDescriptorEventListener(java.io.FileDescriptor,int,android.os.MessageQueue.OnFileDescriptorEventListener)>
<android.media.MediaCodec: void setOutputSurface(android.view.Surface)>
<com.android.hotspot2.omadm.XMLNode: void setText(java.lang.String)>
<android.widget.TextView: float getLetterSpacing()>
<com.android.systemui.power.PowerNotificationWarnings: void dismissInvalidChargerWarning()>
<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence getMessage()>
<com.android.server.policy.PhoneWindowManager: void beginLayoutLw(boolean,int,int,int,int)>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
<android.view.Display: android.view.Display.Mode[] getSupportedModes()>
<android.graphics.drawable.AnimatedStateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.content.res.Resources: int getInteger(int)>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>
<com.android.server.net.DelayedDiskWrite.Writer: void onWriteCalled(java.io.DataOutputStream)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.lang.String getLastDeviceName()>
<android.app.Notification.WearableExtender: int getContentAction()>
<com.android.shell.BugreportStorageProvider: void deleteDocument(java.lang.String)>
<android.widget.Switch: int getSwitchPadding()>
<android.app.Activity: void finishAffinity()>
<com.android.systemui.recents.views.TaskView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.systemui.statusbar.ExpandableView: void setChangingPosition(boolean)>
<android.widget.TextView: int getLeftPaddingOffset()>
<com.android.systemui.qs.tiles.WifiTile: boolean isAvailable()>
<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilStarted()>
<com.android.commands.content.Content: void main(java.lang.String[])>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>
<android.widget.TableRow: void onMeasure(int,int)>
<android.app.SearchableInfo: int getImeOptions()>
<com.android.systemui.statusbar.policy.RemoteInputView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<android.app.usage.ConfigurationStats: long getTotalTimeActive()>
<android.content.pm.PackageParser.Component: void appendComponentShortName(java.lang.StringBuilder)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<javax.microedition.khronos.opengles.GL10: void glClearStencil(int)>
<android.accounts.AuthenticatorDescription: int hashCode()>
<android.service.carrier.CarrierMessagingService: void onFilterSms(android.service.carrier.MessagePdu,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<com.android.systemui.statusbar.StatusBarState: java.lang.String toShortString(int)>
<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.app.FragmentHostCallback: void <init>(android.content.Context,android.os.Handler,int)>
<javax.microedition.khronos.egl.EGL10: int eglGetError()>
<android.widget.ViewSwitcher.ViewFactory: android.view.View makeView()>
<android.media.tv.TvView: void onDetachedFromWindow()>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
<com.google.android.util.AbstractMessageParser.Html: void trimTrailingWhitespace()>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<com.android.server.am.ContentProviderConnection: void toShortString(java.lang.StringBuilder)>
<android.app.LoaderManagerImpl: java.lang.String toString()>
<android.opengl.GLSurfaceView: void onResume()>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>
<android.content.RestrictionEntry: java.lang.String getSelectedString()>
<android.transition.Transition: android.transition.Transition excludeChildren(int,boolean)>
<android.renderscript.Allocation: void copyFrom(android.renderscript.BaseObj[])>
<android.print.PrinterId: int hashCode()>
<android.net.wifi.WifiManager: boolean isP2pSupported()>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.media.AudioRecord: void release()>
<android.widget.ProgressBar: void onVisibilityAggregated(boolean)>
<android.app.ActivityManager.AppTask: void setExcludeFromRecents(boolean)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOut()>
<android.service.chooser.ChooserTarget: java.lang.CharSequence getTitle()>
<android.location.GnssStatusCallback: void onSatelliteStatusChanged(android.location.GnssStatus)>
<android.os.storage.IMountService.Stub: android.os.IBinder asBinder()>
<android.opengl.GLES10: void glFlush()>
<android.view.OrientationEventListener: void onOrientationChanged(int)>
<com.google.android.gles_jni.GLImpl: void glStencilOp(int,int,int)>
<android.hardware.usb.UsbRequest: boolean initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>()>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>
<com.android.server.clipboard.ClipboardService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.audiofx.Visualizer: int getScalingMode()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.media.tv.TvView: void <init>(android.content.Context)>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tiles.UserDetailItemView: void setAvatarEnabled(boolean)>
<android.view.VelocityTracker: float getYVelocity()>
<android.hardware.camera2.dispatch.DuckTypingDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,java.lang.Class)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<com.android.systemui.qs.tiles.DndTile: void setListening(boolean)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setListener(com.android.systemui.qs.TouchAnimator.Listener)>
<android.text.Layout: int getOffsetForHorizontal(int,float)>
<android.view.ViewGroup: void dispatchDrawableHotspotChanged(float,float)>
<android.app.PendingIntent: boolean equals(java.lang.Object)>
<android.widget.ListPopupWindow: void clearListSelection()>
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)>
<android.view.View: void offsetTopAndBottom(int)>
<com.android.server.accessibility.MagnificationGestureHandler.MotionEventHandler: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.egg.neko.NekoService: void registerJob(android.content.Context,long)>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>
<com.android.hotspot2.Utils: java.lang.String toUTCString(long)>
<android.media.tv.TvInputInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.app.Dialog: void registerForContextMenu(android.view.View)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String,long)>
<android.app.admin.DevicePolicyManager: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<android.bluetooth.BluetoothServerSocket: void close()>
<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>
<android.net.NetworkStats.Entry: void <init>(long,long,long,long,long)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setDateModified(long)>
<android.telecom.Connection: void <init>()>
<android.speech.tts.TextToSpeechService: java.util.List onGetVoices()>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>
<android.app.IntentService: void onStart(android.content.Intent,int)>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>()>
<com.android.server.content.SyncStorageEngine.OnAuthorityRemovedListener: void onAuthorityRemoved(com.android.server.content.SyncStorageEngine.EndPoint)>
<android.view.Window: void setDimAmount(float)>
<com.android.commands.svc.NfcCommand: void <init>()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void mark(int)>
<android.preference.PreferenceFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showMessage(java.lang.String,int)>
<android.location.GnssStatus: boolean usedInFix(int)>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.app.NativeActivity: void onLowMemory()>
<com.android.server.LockSettingsStorage.Callback: void initialize(android.database.sqlite.SQLiteDatabase)>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>
<com.android.server.am.UnsupportedDisplaySizeDialog: void show()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>
<android.app.usage.UsageStats: int describeContents()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<com.android.server.fingerprint.EnumerateClient: void <init>(android.content.Context,long,android.os.IBinder,android.hardware.fingerprint.IFingerprintServiceReceiver,int,int,boolean,java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelFullyOpened()>
<com.android.server.SystemConfig: android.util.ArraySet getAllowInPowerSaveExceptIdle()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setDrawableWithBadge(android.graphics.drawable.Drawable,int)>
<javax.microedition.khronos.opengles.GL10: void glAlphaFuncx(int,int)>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>
<android.service.voice.VoiceInteractionSession: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsExpansionEnabled(boolean)>
<com.android.documentsui.StressProvider: android.database.Cursor queryRoots(java.lang.String[])>
<android.renderscript.ScriptIntrinsicBLAS: void CGBMV(int,int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Float2,android.renderscript.Allocation,int)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>
<android.preference.RingtonePreference: boolean getShowDefault()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>
<android.webkit.CacheManager.CacheResult: java.lang.String getLastModified()>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: void sendPickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setCancelLabel(java.lang.CharSequence)>
<com.android.hotspot2.utils.HTTPRequest: void main(java.lang.String[])>
<com.android.server.job.controllers.BatteryController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<com.android.systemui.volume.SegmentedButtons: void setSelectedValue(java.lang.Object,boolean)>
<android.os.ParcelFileDescriptor: void checkError()>
<android.os.BatteryStats.Uid.Proc: int getStarts(int)>
<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>
<android.os.Debug: void startMethodTracing(java.lang.String)>
<android.app.job.JobParameters: int describeContents()>
<com.android.systemui.recents.RecentsImpl: void showRelativeAffiliatedTask(boolean)>
<com.android.egg.neko.NekoLand: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,int[],int)>
<android.telecom.PhoneAccountHandle: android.os.UserHandle getUserHandle()>
<com.android.server.tv.TvInputHal.Callback: void onDeviceAvailable(android.media.tv.TvInputHardwareInfo,android.media.tv.TvStreamConfig[])>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<com.android.systemui.qs.QSTile: void handleDestroy()>
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.String,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>
<android.widget.FilterQueryProvider: android.database.Cursor runQuery(java.lang.CharSequence)>
<android.animation.Animator: void removePauseListener(android.animation.Animator.AnimatorPauseListener)>
<com.android.settingslib.users.AppRestrictionsHelper: java.util.List getVisibleApps()>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasMobileDataFeature()>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long2)>
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<com.android.settingslib.wifi.AccessPoint: int getRssi()>
<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()>
<android.content.pm.PackageInstaller.SessionParams: void setOriginatingUid(int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onScrollChanged(int,int,int,int)>
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.widget.ListView: void onMeasure(int,int)>
<android.content.pm.PackageInstaller: void unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<android.opengl.GLES20: void glBlendFunc(int,int)>
<com.android.documentsui.FilesActivityPerfTest: void <init>()>
<android.util.AttributeSet: java.lang.String getAttributeName(int)>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>
<com.android.systemui.recents.model.FilteredTaskList: int indexOf(com.android.systemui.recents.model.Task)>
<com.android.systemui.statusbar.GestureRecorder: void saveLater()>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPasswordTextViewId()>
<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>
<android.content.pm.PackageInstaller.SessionParams: void setAppPackageName(java.lang.String)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<com.android.systemui.qs.PagedTileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>
<android.app.NotificationManager: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOff()>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: int hashCode()>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoWidth(int)>
<com.android.server.job.JobPackageTracker: void noteInactive(com.android.server.job.controllers.JobStatus)>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()>
<android.app.TaskStackBuilder: void startActivities()>
<com.android.commands.wm.Wm: void onShowUsage(java.io.PrintStream)>
<com.android.hotspot2.omadm.OMANode: java.lang.String getPathString()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProfileActivePasswordSufficientForParent(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dismiss(boolean)>
<android.graphics.DashPathEffect: void <init>(float[],float)>
<android.media.JetPlayer: boolean clearQueue()>
<com.android.hotspot2.asn1.Asn1Constructed: void addChild(com.android.hotspot2.asn1.Asn1Object)>
<android.location.Address: void setLongitude(double)>
<android.provider.Settings.System: android.net.Uri getUriFor(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<android.webkit.WebView: void setScrollBarStyle(int)>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String,java.lang.Exception)>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.service.carrier.CarrierMessagingService.SendMultipartSmsResult: int getSendStatus()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>
<com.android.systemui.recents.views.TaskViewTransform: void reset()>
<com.android.uiautomator.core.Configurator: long getActionAcknowledgmentTimeout()>
<com.android.systemui.statusbar.SignalClusterView: void setSecurityController(com.android.systemui.statusbar.policy.SecurityController)>
<com.android.hotspot2.osu.commands.GetCertData: byte[] getPassword()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float)>
<android.view.View: void createContextMenu(android.view.ContextMenu)>
<com.android.systemui.recents.views.TaskView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<android.widget.TableRow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setTranscription(java.lang.String)>
<com.android.settingslib.drawer.UserAdapter: void <init>(android.content.Context,java.util.ArrayList)>
<android.text.format.Time: long toMillis(boolean)>
<com.android.systemui.volume.VolumeDialogController.State: com.android.systemui.volume.VolumeDialogController.State copy()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onFinishInflate()>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>
<com.android.anqp.eap.ExpandedEAPMethod: int hashCode()>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>
<android.util.Range: int hashCode()>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy build()>
<android.os.Message: void sendToTarget()>
<com.android.hotspot2.pps.HomeSP: com.android.hotspot2.pps.Credential getCredential()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkRequest requestAt(int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withoutIpReachabilityMonitor()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.provider.ContactsContract.CommonDataKinds.Phone: int getTypeLabelResource(int)>
<android.drm.DrmEvent: java.lang.String getMessage()>
<android.view.View: void dispatchFinishTemporaryDetach()>
<com.android.tools.layoutlib.java.Charsets: byte[] toBigEndianUtf16Bytes(char[],int,int)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressBackgroundTintMode()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightChanged(boolean)>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>
<javax.microedition.khronos.opengles.GL10: void glRotatex(int,int,int,int)>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void clearFocus()>
<android.view.ViewGroup: int getNestedScrollAxes()>
<com.android.systemui.statusbar.StackScrollerDecorView: void performRemoveAnimation(long,float,java.lang.Runnable)>
<com.android.server.am.ProcessStatsService: int getMemFactorLocked()>
<android.view.Menu: void removeGroup(int)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.VoiceInteractor.Request: void onCancel()>
<android.widget.TextSwitcher: java.lang.CharSequence getAccessibilityClassName()>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>()>
<android.database.AbstractCursor: boolean moveToPrevious()>
<com.android.settingslib.dream.DreamBackend: android.content.ComponentName getActiveDream()>
<android.util.SparseArray: void delete(int)>
<com.android.systemui.statusbar.car.CarNavigationButton: void setResources(android.graphics.drawable.Drawable)>
<android.telecom.AuthenticatorService.Authenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsTag(int)>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
<com.android.location.provider.GmsFusedBatchOptions: void resetFlag(int)>
<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<android.util.LruCache: void trimToSize(int)>
<android.service.notification.ZenModeConfig.XmlV1: int[] tryParseDays(java.lang.String)>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.opengl.GLES20: void glUniform2f(int,float,float)>
<android.app.Application: void onLowMemory()>
<android.graphics.drawable.ColorDrawable: boolean isStateful()>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskViewHeader: android.widget.ImageView getIconView()>
<android.media.MediaFormat: int getInteger(java.lang.String)>
<com.android.hotspot2.osu.commands.ClientCertInfo: java.lang.String toString()>
<com.android.server.usage.AppIdleHistory: void setIdleLocked(java.lang.String,int,boolean,long)>
<com.android.server.midi.MidiService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.systemui.statusbar.NotificationData: void filterAndSort()>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDialog()>
<com.android.systemui.recents.views.TaskStackView: void updateToInitialState()>
<android.widget.Chronometer: boolean isCountDown()>
<android.widget.ListPopupWindow: void show()>
<android.os.BatteryStats.Timer: long getTimeSinceMarkLocked(long)>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,int,int)>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.preference.MultiSelectListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute(int)>
<android.widget.ImageSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.transition.Transition: void setMatchOrder(int[])>
<android.database.sqlite.SQLiteDatabase: void finalize()>
<android.filterpacks.imageproc.SepiaFilter: void process(android.filterfw.core.FilterContext)>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>
<android.content.UriPermission: boolean isWritePermission()>
<android.telecom.Connection: void setNextPostDialChar(char)>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionScaleUp(int,int,int,int)>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setMonth(int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldPeek(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.StatusBarNotification)>
<android.media.AudioDeviceInfo: boolean isSource()>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>
<android.os.OperationCanceledException: void <init>(java.lang.String)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory[] getAccessoryList()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.Object getSystemService(java.lang.String)>
<android.animation.StateListAnimator: android.animation.StateListAnimator clone()>
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()>
<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void addStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.server.statusbar.StatusBarManagerInternal: void setCurrentUser(int)>
<android.telecom.Call.Details: android.telecom.GatewayInfo getGatewayInfo()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
<android.widget.ImageView: int getImageAlpha()>
<android.content.SyncResult: void <init>()>
<android.graphics.drawable.DrawableWrapper: boolean isStateful()>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void init()>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter: boolean matches(android.bluetooth.BluetoothDevice)>
<android.text.BoringLayout: int getLineCount()>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void stop()>
<com.android.systemui.stackdivider.DividerView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setHeadsUpUser(int)>
<android.widget.ListView: boolean areHeaderDividersEnabled()>
<com.android.keyguard.KeyguardHostView: void onResume()>
<android.graphics.BlendComposite: float getAlpha()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAccessibilityController(com.android.systemui.statusbar.policy.AccessibilityController)>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.service.voice.VoiceInteractionSession: void onHide()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void sleep(long)>
<android.app.Fragment: void setAllowEnterTransitionOverlap(boolean)>
<android.text.style.StrikethroughSpan: void <init>()>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onUnlockUser(int)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getDisplayFrameLw()>
<android.telecom.Connection: int getConnectionProperties()>
<android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>
<android.app.Activity: void onPostResume()>
<android.widget.ZoomControls: java.lang.CharSequence getAccessibilityClassName()>
<com.android.anqp.I18Name: void <init>(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long getKeyguardFadingAwayDuration()>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.graphics.drawable.RotateDrawable: void setPivotXRelative(boolean)>
<com.android.gallery3d.glrenderer.GLId: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<android.hardware.radio.RadioManager.AmBandDescriptor: java.lang.String toString()>
<android.hardware.camera2.legacy.CameraDeviceState: void setCameraDeviceCallbacks(android.os.Handler,android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener)>
<android.renderscript.Short4: void <init>(short,short,short,short)>
<com.android.uiautomator.core.UiScrollable: boolean flingForward()>
<android.media.ToneGenerator: void release()>
<android.widget.RadioGroup: void check(int)>
<com.android.server.backup.PackageManagerBackupAgent: java.util.List getStorableApplications(android.content.pm.PackageManager)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.CursorWindow: void <init>(java.lang.String)>
<android.hardware.camera2.CameraDevice: void close()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>
<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRebuildComplete(java.util.ArrayList)>
<android.app.ActionBar: void hide()>
<android.view.animation.Animation: boolean isInitialized()>
<android.os.Process: long getStartElapsedRealtime()>
<android.app.ActivityManagerProxy: void appNotRespondingViaProvider(android.os.IBinder)>
<com.android.settingslib.drawer.SettingsDrawerActivity: java.util.List getDashboardCategories()>
<android.webkit.ServiceWorkerWebSettings: void setAllowContentAccess(boolean)>
<android.media.MediaRouterClientState.RouteInfo: void <init>(android.media.MediaRouterClientState.RouteInfo)>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>
<com.android.systemui.statusbar.policy.WifiSignalController: void <init>(android.content.Context,boolean,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<android.view.View: boolean isFocusableInTouchMode()>
<android.graphics.BitmapShader_Delegate: java.awt.Paint getJavaPaint()>
<android.widget.SlidingDrawer: void onMeasure(int,int)>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersInvalid()>
<android.database.AbstractWindowedCursor: int getInt(int)>
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void onFinishInflate()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String nextText()>
<com.android.systemui.statusbar.BaseStatusBar: int getMaxKeyguardNotifications(boolean)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void recycle()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getEphemeralApplications(int)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnEnabled()>
<android.os.LocaleList: java.lang.String toString()>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.AudioManager: boolean isSpeakerphoneOn()>
<android.animation.BidirectionalTypeConverter: void <init>(java.lang.Class,java.lang.Class)>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.telecom.DisconnectCause: java.lang.CharSequence getDescription()>
<com.android.photos.views.TiledImageRenderer: int suggestedTileSize(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glDisable(int)>
<com.android.server.pm.ShortcutService: int getIconMaxDimensions(java.lang.String,int)>
<android.hardware.usb.UsbDevice: java.lang.String toString()>
<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.app.ActivityManagerProxy: void setVrThread(int)>
<android.graphics.Path_Delegate: void transform(android.graphics.Matrix_Delegate,android.graphics.Path_Delegate)>
<com.android.server.wallpaper.WallpaperManagerService: boolean isWallpaperBackupEligible(int,int)>
<android.view.Window.Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.content.res.ColorStateList: int getChangingConfigurations()>
<com.android.settingslib.drawer.DashboardCategory: void addTile(com.android.settingslib.drawer.Tile)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean shouldDelayChildPressedState()>
<android.webkit.WebView: void dispatchDraw(android.graphics.Canvas)>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleClick()>
<android.widget.Scroller: boolean isFinished()>
<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>
<android.webkit.JsResult: void confirm()>
<android.widget.SimpleCursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.graphics.drawable.NinePatchDrawable: boolean isFilterBitmap()>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>
<android.view.SurfaceControl.PhysicalDisplayInfo: void <init>()>
<android.widget.ScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<com.android.systemui.statusbar.phone.BarTransitions: void onTransition(int,int,boolean)>
<android.content.SyncStats: void <init>(android.os.Parcel)>
<android.webkit.WebView: void goBack()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<com.android.documentsui.services.FileOperationService: void onProgress(com.android.documentsui.services.CopyJob)>
<com.android.settingslib.datetime.ZoneGetter: java.lang.String getTimeZoneOffsetAndName(java.util.TimeZone,java.util.Date)>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaRouter.SimpleCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void <init>(android.app.Activity,int)>
<com.android.systemui.qs.QSContainer: void setHeightOverride(int)>
<com.android.systemui.power.PowerNotificationWarnings: void <init>(android.content.Context,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.Cursor: int getCount()>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<com.android.server.pm.PackageManagerService: java.lang.String getPermissionControllerPackageName()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onActive(android.hardware.camera2.CameraDevice)>
<android.graphics.drawable.ColorDrawable: void setColor(int)>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.usage.UsageStatsXml: long parseBeginTime(java.io.File)>
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>
<android.renderscript.Script: void invoke(int,android.renderscript.FieldPacker)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void flush()>
<android.view.View: java.lang.Object getTag()>
<android.widget.AbsSeekBar: int getKeyProgressIncrement()>
<com.android.server.notification.ZenModeHelper: void onUserSwitched(int)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: java.lang.CharSequence getPackageName()>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwnerLocked(com.android.server.devicepolicy.DevicePolicyManagerService.ActiveAdmin,int)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Context: java.lang.String getPackageName()>
<android.view.AttachInfo_Accessor: void detachFromWindow(android.view.View)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result insertChild(java.lang.Object,com.android.ide.common.rendering.api.ILayoutPullParser,int,com.android.ide.common.rendering.api.IAnimationListener)>
<android.view.View: void cancelLongPress()>
<android.graphics.RegionIterator: void finalize()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>
<android.app.backup.BackupDataInput: void skipEntityData()>
<android.media.Tokenizer.OnTokenListener: void onData(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void write(byte[],int,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getWidth()>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Token tokenForUrl(java.lang.String,java.lang.String)>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>
<com.android.documentsui.Events.InputEvent: boolean isPrimaryButtonPressed()>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
<com.android.commands.hid.Event: byte[] getReport()>
<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setMaxSearchSwipes(int)>
<android.app.Notification.CarExtender: android.app.Notification.CarExtender setColor(int)>
<com.google.android.util.AbstractMessageParser.Format: java.util.List getInfo()>
<android.graphics.Paint: float getStrokeWidth()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>
<com.android.systemui.recents.model.RecentsTaskLoader: void onTrimMemory(int)>
<com.android.wallpapercropper.WallpaperCropActivity: void onDestroy()>
<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>
<com.android.hotspot2.osu.OSUManager: void recheckTimers()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.text.DynamicLayout: int getParagraphDirection(int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleClick()>
<android.net.LocalSocket: boolean isClosed()>
<android.app.ActivityManagerProxy: android.os.IBinder asBinder()>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.google.android.util.AbstractMessageParser.Token: java.util.List getInfo()>
<android.os.Parcel: void writeSize(android.util.Size)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isAutoConnectable()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.qs.QSTile: boolean shouldAnnouncementBeDelayed()>
<android.widget.TextView: int getRightPaddingOffset()>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule build()>
<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void disable(int,int,boolean)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.webkit.WebViewFragment: void onResume()>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.opengl.GLES10: void glDisableClientState(int)>
<android.view.IWindowManagerImpl: void setDockedStackResizing(boolean)>
<com.android.server.VibratorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.display.DisplayTransformManager: void setDaltonizerMode(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void startAssist(android.os.Bundle)>
<android.app.ActivityManagerProxy: boolean isUserAMonkey()>
<android.os.CountDownTimer: void <init>(long,long)>
<com.android.hotspot2.utils.HTTPMessage: java.nio.ByteBuffer getPayload()>
<android.location.Criteria: java.lang.String toString()>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingStarted()>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.android.systemui.qs.PagedTileLayout: void onFinishInflate()>
<android.view.Window: void setSharedElementReturnTransition(android.transition.Transition)>
<com.android.server.pm.PermissionsState.PermissionState: boolean isGranted()>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.hotspot2.OMADMAdapter: com.android.hotspot2.OMADMAdapter getInstance(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String[],boolean)>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>
<android.widget.TextClock: java.lang.String getTimeZone()>
<android.media.Ringtone: void play()>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartY()>
<android.os.IPowerManager: void wakeUp(long,java.lang.String,java.lang.String)>
<android.view.View: void setHapticFeedbackEnabled(boolean)>
<android.security.keystore.AndroidKeyStoreHmacSpi.HmacSHA1: void <init>()>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.util.Range: boolean contains(java.lang.Comparable)>
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<com.android.systemui.statusbar.ActivatableNotificationView: void updateBackgroundAlpha(float)>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean boundScroll()>
<com.android.systemui.volume.SegmentedButtons: void setSelectedStyle(android.widget.TextView,boolean)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int)>
<android.graphics.drawable.Drawable: void setHotspot(float,float)>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setX(int,int)>
<android.print.PrintAttributes.MediaSize: int getHeightMils()>
<android.app.Notification.Builder: android.widget.RemoteViews createHeadsUpContentView()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void extendVerificationTimeout(int,int,long)>
<android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void onRtlPropertiesChanged(int)>
<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>
<android.app.LoaderManagerImpl: android.app.FragmentHostCallback getFragmentHostCallback()>
<android.app.FragmentController: void dispatchTrimMemory(int)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)>
<android.view.WindowManager.LayoutParams: void <init>(int)>
<com.android.systemui.classifier.Classifier: void onSensorChanged(android.hardware.SensorEvent)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
<android.widget.TextView: int getMaxLines()>
<android.net.wifi.WifiManager.WpsCallback: void onStarted(java.lang.String)>
<android.view.IWindowManagerImpl: void setEventDispatching(boolean)>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateChildOrderChangedEvent()>
<android.media.MediaDrm.CryptoSession: byte[] encrypt(byte[],byte[],byte[])>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void startScreenPinning(int)>
<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onPanelTrackingStarted()>
<android.hardware.camera2.legacy.LegacyCameraDevice: long cancelRequest(int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void close()>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,int)>
<android.service.notification.NotificationListenerService.Ranking: int getSuppressedVisualEffects()>
<android.app.backup.RestoreObserver: void restoreStarting(int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<android.text.util.Rfc822Token: java.lang.String toString()>
<android.os.RecoverySystem.ProgressListener: void onProgress(int)>
<android.view.KeyboardShortcutGroup: void <init>(java.lang.CharSequence)>
<com.android.server.notification.ZenLog: void traceSetZenMode(int,java.lang.String)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.database.CursorWrapper: boolean moveToNext()>
<android.opengl.GLES10: void glDepthRangex(int,int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawARGB(int,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarIconList: com.android.internal.statusbar.StatusBarIcon getIcon(int)>
<android.content.CursorLoader: void setUri(android.net.Uri)>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Matrix: void setValues(float[])>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onFinishedGoingToSleep()>
<com.android.documentsui.UriDerivativeLoader: void onStartLoading()>
<android.app.Activity: void setSecondaryProgress(int)>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<com.android.systemui.recents.model.FilteredTaskList: void updateFilteredTaskIndices()>
<android.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.tv.TvStatusBar: void maybeEscalateHeadsUp()>
<android.database.AbstractWindowedCursor: double getDouble(int)>
<android.media.MediaCodec.CryptoInfo.Pattern: int getEncryptBlocks()>
<android.location.GnssMeasurement: boolean hasCarrierFrequencyHz()>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int,java.lang.Object)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: int hashCode()>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.content.pm.PackageParser.PackageParserException: void <init>(int,java.lang.String)>
<android.service.chooser.ChooserTarget: void <init>(java.lang.CharSequence,android.graphics.drawable.Icon,float,android.content.ComponentName,android.os.Bundle)>
<com.android.commands.uiautomator.RunTestCommand: com.android.uiautomator.testrunner.UiAutomatorTestRunner getRunner()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.server.net.NetworkStatsService: void incrementOperationCount(int,int,int)>
<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void <init>(android.content.Context,com.android.server.policy.keyguard.KeyguardStateMonitor.OnShowingStateChangedCallback)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void registerDropTargetForCurrentDrag(com.android.systemui.recents.views.DropTarget)>
<com.android.server.am.BroadcastQueue: void enqueueParallelBroadcastLocked(com.android.server.am.BroadcastRecord)>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: float getBottomMostNotificationBottom()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.hotspot2.omadm.XMLNode: java.lang.String toString()>
<android.net.wifi.WifiScanner.WifiChangeListener: void onQuiescence(android.net.wifi.ScanResult[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStarted()>
<android.gesture.Gesture: long getID()>
<com.android.systemui.DessertCaseView: void onDraw(android.graphics.Canvas)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isOnAffordanceIcon(float,float)>
<android.content.RestrictionsManager: boolean hasRestrictionsProvider()>
<android.graphics.LightingColorFilter_Delegate: java.lang.String getSupportMessage()>
<com.android.server.pm.PackageManagerService: boolean isSafeMode()>
<com.android.systemui.statusbar.BaseStatusBar: void bindDismissListener(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.content.res.BridgeTypedArray: int getChangingConfigurations()>
<com.android.systemui.egg.MLand: void stop()>
<com.android.systemui.statusbar.SystemBars: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.util.AbstractMessageParser.Token: boolean controlCaps()>
<android.view.animation.AnimationSet: void setDuration(long)>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(android.net.wifi.p2p.WifiP2pGroup)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String,java.lang.String)>
<android.nfc.cardemulation.NfcFCardEmulation: java.lang.String getNfcid2ForService(android.content.ComponentName)>
<com.android.egg.neko.PrefState: int getFoodState()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.usb.UsbDeviceConnection: boolean setInterface(android.hardware.usb.UsbInterface)>
<com.android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
<com.android.uiautomator.core.UiDevice: boolean isScreenOn()>
<android.app.assist.AssistStructure: void writeToParcel(android.os.Parcel,int)>
<android.widget.Toolbar: void onDetachedFromWindow()>
<android.view.View: int getMinimumHeight()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getSecurityPatch()>
<android.graphics.Outline: float getRadius()>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<javax.microedition.khronos.opengles.GL10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.app.Service: void onStart(android.content.Intent,int)>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>
<android.renderscript.Allocation: void ioReceive()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAnonymousIdentity()>
<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>
<com.android.preload.DumpTableModel: java.util.List getData()>
<android.widget.SectionIndexer: int getSectionForPosition(int)>
<com.android.server.accessibility.MagnificationGestureHandler.MotionEventHandler: void clear()>
<android.media.SRTTrack: void onData(android.media.SubtitleData)>
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.android.server.policy.PhoneWindowManager: int getConfigDisplayWidth(int,int,int,int)>
<android.telecom.RemoteConnection: int getVideoState()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String longToString(long)>
<com.android.systemui.assist.AssistOrbContainer: boolean isShowing()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>
<com.android.systemui.qs.QSDetail: boolean isClosingDetail()>
<android.widget.ImageView: boolean getAdjustViewBounds()>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,int[])>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,float)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void removeSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent: void <init>(android.content.Context,boolean)>
<com.android.hotspot2.omadm.XMLNode: void <init>(com.android.hotspot2.omadm.XMLNode,java.lang.String,java.util.Map)>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>
<com.android.server.tv.UinputBridge: void finalize()>
<com.android.server.net.DnsServerEntry: void <init>(java.net.InetAddress,long)>
<android.content.ContentValues: void <init>(android.content.ContentValues)>
<android.widget.Spinner: void setDropDownWidth(int)>
<com.android.commands.hid.Device: void close()>
<android.media.midi.MidiDevice: android.media.midi.MidiInputPort openInputPort(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartLaunchTargetLaunchAnimation(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.pm.PackageInstallerSession: boolean isSealed()>
<android.app.Activity: android.view.View getCurrentFocus()>
<android.location.Location: void removeAccuracy()>
<android.view.MenuItem: boolean hasSubMenu()>
<android.telecom.RemoteConnection.Callback: void onVoipAudioChanged(android.telecom.RemoteConnection,boolean)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void fadeKeyguardWhilePulsing()>
<com.google.android.maps.MapView: boolean isSatellite()>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setupHost(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.systemui.qs.QSPanel: void clickTile(android.content.ComponentName)>
<android.graphics.drawable.InsetDrawable: int getOpacity()>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>
<android.app.ProgressDialog: boolean isIndeterminate()>
<android.util.PathParser_Delegate: boolean canMorph(android.util.PathParser_Delegate.PathDataNode[],android.util.PathParser_Delegate.PathDataNode[])>
<android.service.voice.VoiceInteractionSession.Request: java.lang.String getCallingPackage()>
<com.android.systemui.qs.QSTile: void setListening(boolean)>
<com.android.settingslib.bluetooth.MapProfile: boolean isAutoConnectable()>
<android.os.WorkSource: boolean remove(android.os.WorkSource)>
<android.app.UiAutomation: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<com.android.server.am.BatteryStatsService: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingToHeight(float,boolean,float,float,boolean)>
<android.media.MediaDrm.ProvisionRequest: byte[] getData()>
<com.android.systemui.recents.model.Task: void <init>()>
<android.media.session.MediaSession.Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)>
<com.android.keyguard.KeyguardSimPinView: void verifyPasswordAndUnlock()>
<android.bluetooth.le.AdvertiseSettings: int getMode()>
<com.android.server.am.ActivityManagerService: int checkPermissionWithToken(java.lang.String,int,int,android.os.IBinder)>
<com.android.server.notification.RankingHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.server.display.NightDisplayService: void onActivated(boolean)>
<com.android.gallery3d.common.Utils: int parseIntSafely(java.lang.String,int)>
<android.graphics.PointF: void offset(float,float)>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener)>
<com.android.layoutlib.bridge.bars.NavigationBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.resources.Density,int,boolean,boolean,int)>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>
<android.content.Loader: void rollbackContentChanged()>
<com.android.gallery3d.glrenderer.GLCanvas: void restore()>
<com.android.keyguard.KeyguardSecurityContainer: java.lang.CharSequence getCurrentSecurityModeContentDescription()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void prepare(int,android.view.Surface)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: boolean hasOverlappingRendering()>
<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>
<android.os.ServiceManagerProxy: java.lang.String[] listServices()>
<com.android.systemui.statusbar.BaseStatusBar: void setNotificationsShown(java.lang.String[])>
<android.app.ActivityManagerProxy: void updateLockTaskPackages(int,java.lang.String[])>
<com.android.settingslib.wifi.WifiTracker: void pauseScanning()>
<com.android.systemui.qs.QSPanel: void setTiles(java.util.Collection)>
<android.content.res.BridgeTypedArray: android.content.res.ComplexColor getComplexColor(int)>
<android.speech.tts.SynthesisRequest: java.lang.String getCountry()>
<android.app.FragmentController: void dispatchPause()>
<android.view.KeyEvent: int getRepeatCount()>
<android.media.MediaPlayer: void setSyncParams(android.media.SyncParams)>
<android.renderscript.Int4: void <init>(int,int,int,int)>
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>
<com.android.keyguard.KeyguardSecurityCallback: void reportUnlockAttempt(int,boolean,int)>
<android.media.Tokenizer.OnTokenListener: void onLineEnd()>
<com.android.server.audio.AudioService.VolumeStreamState: void readSettings()>
<com.android.systemui.statusbar.phone.StatusBarIconList: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.SystemUISecondaryUserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.uiautomator.testrunner.IAutomationSupport: void sendStatus(int,android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateKeyguardState(boolean,boolean)>
<android.bluetooth.BluetoothAdapter.LeScanCallback: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])>
<android.view.InputDevice.MotionRange: float getMin()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: com.android.layoutlib.bridge.impl.LayoutParserWrapper peekTillLayoutStart()>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>
<com.android.server.am.ActivityManagerService: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<android.widget.ExpandableListView: void <init>(android.content.Context)>
<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>
<android.os.BatteryStats.HistoryItem: void setTo(long,byte,android.os.BatteryStats.HistoryItem)>
<android.graphics.Canvas_Delegate: void native_drawRect(long,float,float,float,float,long)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getRealm()>
<android.opengl.GLES20: void glDeleteShader(int)>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onCallDataUsageChanged(android.telecom.RemoteConnection.VideoProvider,long)>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(short,short,int,int)>
<android.telephony.CellIdentityWcdma: int getPsc()>
<com.android.uiautomator.core.UiObject: java.lang.String getContentDescription()>
<com.android.systemui.statusbar.NotificationContentView: void onLayout(boolean,int,int,int,int)>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>
<android.location.GpsSatellite: float getSnr()>
<android.app.MediaRouteButton: boolean performClick()>
<com.google.android.util.AbstractMessageParser: java.lang.String getRawText()>
<android.widget.ArrayAdapter: int getCount()>
<com.android.keyguard.KeyguardStatusView: void onAttachedToWindow()>
<com.android.printspooler.widget.PrintOptionsLayout: void setColumnCount(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void endConfigure(boolean)>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>
<com.android.documentsui.RootCursorWrapper: double getDouble(int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean canOpenPopup()>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinition(short,int)>
<com.android.systemui.statusbar.car.CarStatusBar: void createNavigationBarView(android.content.Context)>
<android.util.ArrayMap: int size()>
<android.view.MotionEvent: float getSize(int)>
<android.provider.ContactsContract.CommonDataKinds.Relation: int getTypeLabelResource(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void buzzBeepBlinked()>
<com.android.systemui.recents.tv.views.TaskCardView: void onFinishInflate()>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconUri(android.net.Uri)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.backup.BackupManagerService: void opComplete(int,long)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setInteracting(int,boolean)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
<android.graphics.drawable.GradientDrawable: int getGradientType()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.pm.PackageManager getPackageManager()>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>
<com.android.location.provider.LocationProviderBase: long onGetStatusUpdateTime()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isGroupExpanded(android.service.notification.StatusBarNotification)>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats queryDetailsForUidTag(int,java.lang.String,long,long,int,int)>
<com.android.server.pm.PermissionsState.PermissionState: void <init>(com.android.server.pm.PermissionsState.PermissionState)>
<com.android.systemui.qs.SecureSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>
<com.google.android.gles_jni.EGLImpl: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<android.renderscript.Type: android.renderscript.Element getElement()>
<com.android.hotspot2.osu.IconCache: void clear()>
<android.app.MediaRouteActionProvider: boolean overridesItemVisibility()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void setZen(int,android.net.Uri,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onUnlockMethodStateChanged()>
<android.media.MediaPlayer.TrackInfo: void writeToParcel(android.os.Parcel,int)>
<android.telecom.RemoteConnection.VideoProvider: void requestCallDataUsage()>
<android.media.PlaybackParams: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Paint: float getTextSkewX()>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Interpolator: int getKeyFrameCount()>
<android.text.Html: java.lang.String toHtml(android.text.Spanned)>
<android.app.ApplicationErrorReport.AnrInfo: void <init>(android.os.Parcel)>
<android.app.FragmentManagerImpl: void dispatchCreate()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void setSystemInsets(android.graphics.Rect)>
<android.app.AutomaticZenRule: int hashCode()>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder before(android.animation.Animator)>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>
<android.app.Activity: boolean isChild()>
<android.net.NetworkRequest.Builder: void <init>()>
<com.android.documentsui.DocumentsActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.gesture.GestureStore: void load(java.io.InputStream)>
<android.content.IntentFilter: void addCategory(java.lang.String)>
<android.media.tv.TvView: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.hardware.Camera.Area: void <init>(android.graphics.Rect,int)>
<com.android.tools.idea.editors.theme.widgets.PressedButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<android.transition.Slide: void captureStartValues(android.transition.TransitionValues)>
<android.transition.ChangeBounds: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.LinearLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.content.pm.PackageInstaller: java.util.List getMySessions()>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,java.nio.IntBuffer)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon,android.print.IPrintSpoolerCallbacks,int)>
<android.app.admin.DeviceAdminReceiver: void onSecurityLogsAvailable(android.content.Context,android.content.Intent)>
<android.app.ExpandableListActivity: long getSelectedPosition()>
<android.widget.RemoteViews: void setImageViewIcon(int,android.graphics.drawable.Icon)>
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>
<com.android.egg.neko.NekoTile: void onTileRemoved()>
<com.android.systemui.recents.model.Task.TaskKey: java.lang.String toString()>
<com.android.photos.views.TiledImageView: void onLayout(boolean,int,int,int,int)>
<android.os.TokenWatcher: void released()>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutCancelled()>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean handleSlideBack()>
<com.android.location.provider.GmsFusedBatchOptions: double getMaxPowerAllocationInMW()>
<com.google.android.util.AbstractMessageParser.Link: java.util.List getInfo()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context)>
<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.media.tv.TvTrackInfo: float getVideoFrameRate()>
<android.os.FileObserver: void stopWatching()>
<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>
<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>
<android.view.accessibility.AccessibilityEvent: void recycle()>
<com.android.systemui.statusbar.FlingAnimationUtils: void <init>(android.content.Context,float)>
<android.graphics.Color: int red(int)>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri)>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameColor(int)>
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)>
<android.util.LongSparseArray: void <init>()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setShowForAllUsers(android.app.AlertDialog,boolean)>
<com.android.hotspot2.omadm.MOTree: java.lang.String getDtdRev()>
<android.util.SparseIntArray: int valueAt(int)>
<android.view.ViewStructure: void setContextClickable(boolean)>
<com.android.hotspot2.omadm.XMLNode: void addChild(com.android.hotspot2.omadm.XMLNode)>
<android.text.ParcelableSpan: int getSpanTypeId()>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent)>
<android.renderscript.Script: void setVar(int,long)>
<com.android.server.net.NetworkStatsRecorder: void resetLocked()>
<android.webkit.WebChromeClient: boolean onJsTimeout()>
<android.view.Display.HdrCapabilities: float getDesiredMaxLuminance()>
<com.android.hotspot2.utils.HTTPMessage: java.nio.ByteBuffer getBinaryPayload()>
<android.hardware.Camera.Parameters: boolean getVideoStabilization()>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],android.net.Uri,java.lang.String)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getBluetoothScanTimer()>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationStartY(float)>
<android.renderscript.Sampler.Builder: void setAnisotropy(float)>
<android.app.job.JobParameters: boolean isOverrideDeadlineExpired()>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<android.media.tv.TvInputService.Session: void onOverlayViewSizeChanged(int,int)>
<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>
<android.speech.tts.Voice: java.util.Locale getLocale()>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoHeight(int)>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>
<com.android.documentsui.model.RootInfo: void write(java.io.DataOutputStream)>
<android.graphics.BlendComposite: android.graphics.BlendComposite.BlendingMode getMode()>
<com.android.server.am.ActivityManagerService: void showBootMessage(java.lang.CharSequence,boolean)>
<android.widget.NumberPicker: void setMinValue(int)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void startSelection(int,int)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.server.am.ActiveServices: boolean dumpService(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent)>
<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>
<android.bluetooth.BluetoothManager: int getConnectionState(android.bluetooth.BluetoothDevice,int)>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.graphics.drawable.AnimationDrawable: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.net.wifi.WifiEnterpriseConfig: void <init>()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap.Config)>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>
<android.widget.ExpandableListAdapter: java.lang.Object getChild(int,int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String convertToQuotedString(java.lang.String)>
<android.opengl.GLES32: void glReadnPixels(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)>
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()>
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
<com.android.tools.layoutlib.java.System_Delegate: void setNanosTime(long)>
<com.android.server.am.ActivityManagerService: boolean isRootVoiceInteraction(android.os.IBinder)>
<android.view.Window: void setEnterTransition(android.transition.Transition)>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>
<com.android.tools.layoutlib.create.DependencyFinder: void printMissingDeps(java.util.List)>
<android.view.View: int getScrollX()>
<android.telecom.PhoneAccount: java.lang.String toString()>
<android.app.ActivityManagerProxy: void clearPendingBackup()>
<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<android.app.ApplicationThreadProxy: void scheduleInstallProvider(android.content.pm.ProviderInfo)>
<android.hardware.camera2.CaptureRequest: boolean equals(java.lang.Object)>
<android.app.backup.FullBackup.BackupScheme: void parseBackupSchemeFromXmlLocked(org.xmlpull.v1.XmlPullParser,java.util.Set,java.util.Map)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>
<com.android.server.pm.PackageInstallerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService)>
<com.android.server.statusbar.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>
<com.android.systemui.power.PowerNotificationWarnings: boolean isInvalidChargerWarningShowing()>
<android.opengl.GLES10: void glLightModelx(int,int)>
<com.android.systemui.recents.RecentsSystemUser: void updateRecentsVisibility(boolean)>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.KernelID getKernelID()>
<android.widget.ActivityChooserModel.ActivityChooserModelClient: void setActivityChooserModel(android.widget.ActivityChooserModel)>
<com.android.systemui.qs.external.TileLifecycleManager: void onStopListening()>
<android.transition.TransitionValues: boolean equals(java.lang.Object)>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYRK(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>
<com.android.systemui.qs.QSPanel: void setBrightnessMirror(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<android.media.WebVttParser.Phase: void parse(java.lang.String)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setListening(boolean)>
<android.view.MenuInflater: void <init>(android.content.Context)>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>
<android.renderscript.FieldPacker: long subI64()>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
<com.android.systemui.settings.BrightnessController: void setBackgroundLooper(android.os.Looper)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: boolean pointInView(float,float,float)>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setOverridesImplicitlyEnabledSubtype(boolean)>
<android.renderscript.Long2: void <init>()>
<android.graphics.Gradient_Delegate.GradientPaint: void precomputeGradientColors()>
<com.android.printspooler.util.ApprovedPrintServices: void addApprovedService(android.content.ComponentName)>
<android.hardware.usb.UsbDevice: java.lang.String getSerialNumber()>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>
<android.graphics.drawable.ShapeDrawable: boolean onStateChange(int[])>
<android.inputmethodservice.InputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.graphics.ComposePathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.server.am.ActivityManagerService: boolean getPackageAskScreenCompat(java.lang.String)>
<com.android.wallpapercropper.CropView: void onSizeChanged(int,int,int,int)>
<com.android.server.wm.BlackFrame: void printTo(java.lang.String,java.io.PrintWriter)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore create()>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void dataSetChanged()>
<com.android.systemui.statusbar.ActivatableNotificationView.OnActivatedListener: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>
<android.view.DragAndDropPermissions: void writeToParcel(android.os.Parcel,int)>
<android.preference.BridgePreferenceInflater: android.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet)>
<android.content.res.Configuration: java.lang.String toString()>
<com.android.systemui.qs.QSPanel: void setHost(com.android.systemui.statusbar.phone.QSTileHost,com.android.systemui.qs.customize.QSCustomizer)>
<android.app.ActivityManagerProxy: boolean releaseActivityInstance(android.os.IBinder)>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback,android.os.Handler)>
<android.graphics.LayerRasterizer: void <init>()>
<android.renderscript.Int4: void <init>()>
<android.graphics.drawable.RotateDrawable: boolean isPivotXRelative()>
<android.location.GnssMeasurement: double getAccumulatedDeltaRangeMeters()>
<com.android.server.fingerprint.EnrollClient: boolean onAuthenticated(int,int)>
<android.filterpacks.imageproc.TintFilter: void setupPorts()>
<com.android.systemui.qs.QSDualTileLabel: void setTextColor(int)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setImagePixWidth(long)>
<android.gesture.GestureLibrary: boolean load()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
<android.os.Bundle: float getFloat(java.lang.String,float)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isClearable()>
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager.CaptionStyle getUserStyle()>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.model.Task,com.android.systemui.recents.views.AnimationProps,boolean)>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>
<com.android.settingslib.drawable.UserIconDrawable: void <init>()>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>
<com.android.systemui.statusbar.BaseStatusBar: void destroy()>
<javax.microedition.khronos.opengles.GL10: void glStencilFunc(int,int,int)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: void getStackScrollState(com.android.systemui.statusbar.stack.AmbientState,com.android.systemui.statusbar.stack.StackScrollState)>
<com.android.server.job.JobSchedulerShellCommand: int onCommand(java.lang.String)>
<com.android.systemui.qs.QSTile: void fireToggleStateChanged(boolean)>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.security.KeyStoreParameter: boolean isEncryptionRequired()>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>
<android.webkit.WebViewProvider.ViewDelegate: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<android.text.Layout: java.lang.CharSequence getText()>
<org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>
<android.preference.Preference: float getPersistedFloat(float)>
<android.app.ActivityManagerProxy: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<android.widget.AbsListView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>
<android.graphics.ComposeShader_Delegate: java.awt.Paint getJavaPaint()>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContentInvalid()>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,byte[])>
<com.android.systemui.statusbar.BaseStatusBar: void addPostCollapseAction(java.lang.Runnable)>
<android.media.session.MediaController.TransportControls: void playFromUri(android.net.Uri,android.os.Bundle)>
<android.mtp.MtpObjectInfo: long getImagePixHeightLong()>
<com.android.systemui.statusbar.policy.DateView: void onAttachedToWindow()>
<com.android.server.usb.UsbService: void bootCompleted()>
<com.android.server.policy.PhoneWindowManager: boolean hasNavigationBar()>
<com.android.server.media.MediaSessionRecord: void <init>(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,com.android.server.media.MediaSessionService,android.os.Handler)>
<android.net.wifi.nan.TlvBufferUtils.TlvIterable: java.util.Iterator iterator()>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleClick()>
<android.media.projection.MediaProjection: void stop()>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setCountryCode(java.lang.String)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: void <init>(com.android.internal.view.menu.MenuBuilder,android.content.Context)>
<com.android.systemui.statusbar.phone.TrustDrawable: void stop()>
<android.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)>
<com.android.systemui.statusbar.tv.TvStatusBar: void setAreThereNotifications()>
<com.android.server.pm.PackageManagerService: void deleteCompilerPackageStats(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener: void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice)>
<android.print.PrinterInfo: boolean equals(java.lang.Object)>
<android.app.assist.AssistContent: int describeContents()>
<com.android.systemui.volume.VolumeDialogController: void setActiveStream(int)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: boolean isWhitespace()>
<android.view.Choreographer_Delegate: android.view.Choreographer getInstance()>
<android.media.tv.TvView: void selectTrack(int,java.lang.String)>
<com.android.server.notification.SystemConditionProviderService: java.lang.String formatDuration(long)>
<com.android.server.power.ShutdownThread: void rebootOrShutdown(android.content.Context,boolean,java.lang.String)>
<android.text.style.QuoteSpan: int getColor()>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>
<android.widget.PopupWindow: void setInputMethodMode(int)>
<android.media.effect.Effect: void apply(int,int,int,int)>
<android.app.ActivityManagerProxy: void startSystemLockTaskMode(int)>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>
<android.app.Notification.WearableExtender: void <init>(android.app.Notification)>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>
<com.android.shell.BugreportStorageProvider: boolean onCreate()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void updateGroupOverflow()>
<android.view.GestureDetector: void setContextClickListener(android.view.GestureDetector.OnContextClickListener)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>
<android.service.notification.Condition: int hashCode()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.text.TextUtils.SimpleStringSplitter: boolean hasNext()>
<android.widget.SimpleAdapter: void setDropDownViewResource(int)>
<com.android.server.notification.ScheduleConditionProvider: android.content.ComponentName getComponent()>
<com.android.server.job.JobServiceContext: void onServiceDisconnected(android.content.ComponentName)>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData.Builder setServiceSpecificInfo(byte[],int)>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String)>
<android.bluetooth.BluetoothClass: int hashCode()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.mtp.MtpObjectInfo: int getStorageId()>
<android.hardware.display.VirtualDisplay: void release()>
<com.google.android.gles_jni.GLImpl: void glClear(int)>
<android.telecom.Connection: void setActive()>
<com.android.systemui.statusbar.BaseStatusBar: com.android.systemui.SwipeHelper.LongPressListener getNotificationLongClicker()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putLong(int,long)>
<android.hardware.camera2.CameraManager: void registerTorchCallback(android.hardware.camera2.CameraManager.TorchCallback,android.os.Handler)>
<com.android.anqp.I18Name: int hashCode()>
<com.android.preload.DeviceUtils: void init(int)>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<com.android.preload.actions.ShowDataAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.media.tv.TvTrackInfo: float getVideoPixelAspectRatio()>
<android.media.FaceDetector.Face: float pose(int)>
<android.app.DialogFragment: void onDestroyView()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToBottom()>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isTopLevelChild(com.android.systemui.statusbar.NotificationData.Entry)>
<android.location.Address: void setAddressLine(int,java.lang.String)>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<android.text.format.Time: void <init>(android.text.format.Time)>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>
<android.telecom.Connection: void setRinging()>
<android.hardware.Camera.Parameters: java.util.List getSupportedFlashModes()>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.am.ActivityManagerService: void setFocusedTask(int)>
<com.android.systemui.statusbar.tv.TvStatusBar: void animateExpandSettingsPanel(java.lang.String)>
<android.filterpacks.videosink.MediaEncoderFilter.OnRecordingDoneListener: void onRecordingDone()>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getHint()>
<android.content.pm.ApplicationInfo: int describeContents()>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void updateInvertHelper()>
<com.android.server.NetworkManagementSocketTagger: void tag(java.io.FileDescriptor)>
<com.android.systemui.statusbar.CommandQueue: void addQsTile(android.content.ComponentName)>
<android.view.ActionMode: java.lang.CharSequence getTitle()>
<android.telephony.CellSignalStrength: int getAsuLevel()>
<android.renderscript.RenderScript: void contextDump()>
<com.android.hotspot2.osu.commands.BrowserURI: java.lang.String toString()>
<com.android.layoutlib.bridge.android.BridgeContext: com.android.ide.common.rendering.api.LayoutlibCallback getLayoutlibCallback()>
<com.android.server.NetworkTimeUpdateService: void systemRunning()>
<android.graphics.Paint_Delegate: float getJavaStrokeMiter()>
<android.view.Window: int getForcedWindowFlags()>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<android.print.PrintManager: java.util.List getPrintJobs()>
<com.android.systemui.qs.customize.TileAdapter: int getItemViewType(int)>
<android.preference.Preference: void onParentChanged(android.preference.Preference,boolean)>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.VpnService.Builder: android.os.ParcelFileDescriptor establish()>
<android.widget.CalendarView: int getFocusedMonthDateColor()>
<android.util.AttributeSet: int getAttributeNameResource(int)>
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>
<android.view.WindowInsets: int getStableInsetRight()>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
<android.bluetooth.BluetoothGatt: boolean executeReliableWrite()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void wakeUpIfDozing(long,android.view.MotionEvent)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onUnlockComplete()>
<com.example.android.networkusage.StackOverflowXmlParser: java.util.List parse(java.io.InputStream)>
<android.hardware.camera2.legacy.BurstHolder: boolean isRepeating()>
<android.inputmethodservice.InputMethodService: void setBackDisposition(int)>
<com.android.server.connectivity.KeepaliveTracker: void handleEventPacketKeepalive(com.android.server.connectivity.NetworkAgentInfo,android.os.Message)>
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera.CameraInfo)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: long skip(long)>
<com.android.defcontainer.DefaultContainerService: void <init>()>
<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<com.android.server.am.ActivityManagerService: void startSystemLockTaskMode(int)>
<android.service.carrier.MessagePdu: void <init>(java.util.List)>
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent.PointerProperties)>
<android.opengl.GLES32: int glGetGraphicsResetStatus()>
<com.android.settingslib.accessibility.AccessibilityUtils: void setAccessibilityServiceState(android.content.Context,android.content.ComponentName,boolean)>
<com.android.gallery3d.common.Utils: boolean handleInterrruptedException(java.lang.Throwable)>
<com.android.documentsui.model.DocumentInfo: void updateFromUri(android.content.ContentResolver,android.net.Uri)>
<javax.microedition.khronos.opengles.GL10: void glClearColor(float,float,float,float)>
<android.graphics.Matrix: boolean preScale(float,float)>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.media.session.MediaController.TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>
<com.android.server.pm.UserManagerService: void makeInitialized(int)>
<com.android.systemui.usb.UsbDebuggingActivity: void onStop()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Relation getRelation()>
<android.nfc.tech.NfcA: short getSak()>
<android.graphics.Gradient_Delegate.GradientPaint: int getGradientColor(float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isExpanded()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<android.content.SyncRequest: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.StatusBarIconView: void onRtlPropertiesChanged(int)>
<android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)>
<com.android.systemui.statusbar.phone.ScrimController: boolean onPreDraw()>
<com.android.systemui.qs.tiles.UserTile: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable)>
<android.app.job.JobParameters: android.net.Uri[] getTriggeredContentUris()>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean setPowerSaveMode(boolean)>
<com.android.layoutlib.bridge.impl.DelegateManager: void <init>(java.lang.Class)>
<com.android.server.pm.PackageManagerService: boolean setRequiredForSystemUser(java.lang.String,boolean)>
<com.android.location.provider.LocationProviderBase: boolean onSendExtraCommand(java.lang.String,android.os.Bundle)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>
<android.printservice.PrinterDiscoverySession: boolean isDestroyed()>
<com.android.hotspot2.omadm.OMAScalar: java.lang.String getScalarValue(java.util.Iterator)>
<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera.AutoFocusMoveCallback)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onVisibilityChanged(boolean)>
<android.preference.Preference: int getTitleRes()>
<com.android.systemui.settings.CurrentUserTracker: void onReceive(android.content.Context,android.content.Intent)>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>
<android.widget.ListPopupWindow: android.view.View.OnTouchListener createDragToOpenListener(android.view.View)>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.server.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<com.android.uiautomator.core.UiScrollable: double getSwipeDeadZonePercentage()>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
<android.content.res.BridgeTypedArray: int getDimensionPixelOffset(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabledForUser(int)>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.media.MediaCodecList: void <init>(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteBuffer(int)>
<com.android.systemui.recents.RecentsImpl: void toggleRecents(int)>
<android.os.Parcelable.ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>
<android.net.ip.IpManager.Callback: void onReachabilityLost(java.lang.String)>
<com.android.systemui.qs.QSTileBaseView: void handleStateChanged(com.android.systemui.qs.QSTile.State)>
<android.widget.Spinner: void <init>(android.content.Context,int)>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.LinearLayout: void setHorizontalGravity(int)>
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>
<com.android.settingslib.net.ChartDataLoader: void <init>(android.content.Context,android.net.INetworkStatsSession,android.os.Bundle)>
<android.preference.PreferenceActivity: void onHeaderClick(android.preference.PreferenceActivity.Header,int)>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: void <init>(android.content.res.Resources,int,int)>
<com.android.server.am.ActivityManagerService: boolean canShowErrorDialogs()>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.KeyguardSecurityView: void showUsabilityHint()>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>
<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>
<com.android.hotspot2.osu.commands.MOData: com.android.hotspot2.omadm.MOTree getMOTree()>
<android.os.AsyncTask: void onPreExecute()>
<android.hardware.Sensor: java.lang.String getName()>
<com.android.hotspot2.omadm.OMAScalar: void <init>(com.android.hotspot2.omadm.OMAConstructed,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchLeftAffordance()>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>
<android.app.ActivityManagerProxy: boolean supportsLocalVoiceInteraction()>
<android.content.ContentUris: android.net.Uri.Builder appendId(android.net.Uri.Builder,long)>
<com.android.settingslib.AppItem: void <init>(int)>
<com.android.settingslib.drawer.Tile: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon)>
<android.media.MediaMetadata: java.util.Set keySet()>
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>
<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitSource(java.lang.String,java.lang.String)>
<android.telecom.InCallService.VideoCall.Callback: void onCallSessionEvent(int)>
<com.android.printspooler.ui.PageAdapter: void close(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<com.android.server.location.LocationProviderProxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<android.view.PointerIcon: int describeContents()>
<android.content.AsyncQueryHandler: void cancelOperation(int)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAuthFailed()>
<com.android.systemui.stackdivider.DividerView: boolean isHorizontalDivision()>
<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String toHtml(boolean)>
<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig.ZenRule)>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<android.media.session.MediaSession.QueueItem: void <init>(android.media.MediaDescription,long)>
<android.content.pm.PackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>
<com.android.systemui.recents.model.RecentsTaskLoader: void unloadTaskData(com.android.systemui.recents.model.Task)>
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager.RegistrationListener)>
<com.android.layoutlib.bridge.android.BridgeContext: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<com.android.nfc_extras.NfcAdapterExtras: java.lang.String getDriverName()>
<android.widget.PopupWindow: int getAnimationStyle()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void <init>(java.lang.String)>
<android.os.storage.IMountService.Stub: android.os.storage.IMountService asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void startKeyguardFadingAway()>
<com.android.server.pm.Policy: java.lang.String getMatchedSeinfo(android.content.pm.PackageParser.Package)>
<android.bluetooth.BluetoothGatt: void disconnect()>
<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>
<com.android.hotspot2.omadm.MOManager: boolean isConfigured()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isCaCertApproved(java.lang.String,int)>
<com.android.systemui.qs.QSTile.BooleanState: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()>
<android.telecom.Conference: void onUnhold()>
<com.android.layoutlib.bridge.MockView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.AbsListView: boolean isScrollingCacheEnabled()>
<android.app.Notification: java.lang.String toString()>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Intent: android.content.Intent getSelector()>
<android.security.KeyChain: android.content.Intent createInstallIntent()>
<android.content.IntentFilter: int countDataAuthorities()>
<android.media.MediaRouterClientState.RouteInfo: int describeContents()>
<com.android.settingslib.applications.AppUtils: boolean hasPreferredActivities(android.content.pm.PackageManager,java.lang.String)>
<com.android.server.am.ActivityManagerService: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
<android.widget.Switch: void <init>(android.content.Context)>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>
<com.android.systemui.qs.QSFooter: void onClick(android.view.View)>
<android.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.Layout: boolean isSpanned()>
<com.android.systemui.volume.Interaction: void register(android.view.View,com.android.systemui.volume.Interaction.Callback)>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>
<com.android.systemui.qs.external.TileLifecycleManager: void onReceive(android.content.Context,android.content.Intent)>
<android.app.ActivityGroup: void onDestroy()>
<android.ext.services.notification.Ranker: android.service.notification.Adjustment onNotificationEnqueued(android.service.notification.StatusBarNotification,int,boolean)>
<com.google.android.util.SmileyParser: void <init>(java.lang.String,com.google.android.util.SmileyResources)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawLines(float[],android.graphics.Paint)>
<android.drm.DrmInfo: int getInfoType()>
<android.graphics.FontFamily_Delegate: android.graphics.FontFamily_Delegate.FontVariant getVariant()>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: int getCount()>
<android.gesture.GestureLibrary: boolean isReadOnly()>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.views.BlockingGLTextureView: void destroy()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isLoaded()>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withStaticConfiguration(android.net.StaticIpConfiguration)>
<android.hardware.camera2.impl.CameraDeviceImpl: void createReprocessableCaptureSessionByConfigurations(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void requestAppKeyboardShortcuts(android.view.WindowManager.KeyboardShortcutsReceiver,int)>
<android.accessibilityservice.AccessibilityService: java.lang.Object getSystemService(java.lang.String)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.BluetoothController getBluetoothController()>
<com.android.hotspot2.omadm.MOManager: boolean isEnabled()>
<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onUserSwitched(int)>
<com.android.systemui.recents.tv.views.TaskCardView: void <init>(android.content.Context)>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>
<android.graphics.PixelXorXfermode: void <init>(int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void updatePointerIcon(android.view.IWindow)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)>
<android.graphics.SurfaceTexture: void <init>(int,boolean)>
<android.service.notification.ZenModeConfig.ZenRule: boolean equals(java.lang.Object)>
<android.media.audiopolicy.AudioPolicy.AudioPolicyStatusListener: void onStatusChange()>
<javax.microedition.khronos.opengles.GL10: void glMatrixMode(int)>
<com.android.systemui.statusbar.NotificationContentView: void setIsChildInGroup(boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void startHintAnimation(boolean,java.lang.Runnable)>
<com.android.server.pm.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.SignalClusterView: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin getDeviceOwner(android.content.Context)>
<android.service.voice.VoiceInteractionSession: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.qs.QSTile.DetailAdapter: android.content.Intent getSettingsIntent()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void inflateMenus()>
<android.media.MediaCodec.BufferInfo: void set(int,int,long,int)>
<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<com.android.location.provider.ActivityRecognitionProviderClient: void <init>()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void notificationLightPulse(int,int,int)>
<android.widget.ScrollView: int computeVerticalScrollRange()>
<android.widget.ScrollView: void smoothScrollTo(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>
<android.graphics.BitmapRegionDecoder: void finalize()>
<com.android.server.policy.PhoneWindowManager: boolean isNavBarForcedShownLw(android.view.WindowManagerPolicy.WindowState)>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>
<com.android.systemui.classifier.LengthCountEvaluator: float evaluate(float)>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>
<com.android.server.am.ProcessStatsService: void addSysMemUsageLocked(long,long,long,long,long)>
<com.android.systemui.recents.events.activity.HideRecentsEvent: void <init>(boolean,boolean)>
<android.widget.MediaController.MediaPlayerControl: void pause()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.io.OutputStream)>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>
<android.telephony.PhoneStateListener: void onDataActivity(int)>
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void onRecentsResumed()>
<com.android.server.audio.AudioService.VolumeController: void setController(android.media.IVolumeController)>
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context,int)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationStart(android.animation.Animator)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setAppName(java.lang.String)>
<android.print.PrintDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>
<com.android.systemui.qs.external.TileServices: void recalculateBindAllowance()>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>
<android.widget.LinearLayout: boolean isMeasureWithLargestChildEnabled()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.UserInfoController,com.android.systemui.statusbar.policy.BluetoothController,com.android.systemui.statusbar.policy.RotationLockController,com.android.systemui.statusbar.policy.DataSaverController)>
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>
<android.service.quicksettings.TileService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.external.TileServices: void startUnlockAndRun(android.os.IBinder)>
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.webkit.WebView: void computeScroll()>
<com.android.fakeoemfeatures.FakeView: void onDetachedFromWindow()>
<android.app.ActivityManagerProxy: boolean isInPictureInPictureMode(android.os.IBinder)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setUserSetupComplete(boolean)>
<android.os.OperationCanceledException: void <init>()>
<android.net.ConnectivityManager: android.net.Network getBoundNetworkForProcess()>
<com.android.systemui.tv.pip.PipRecentsControlsView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsForServiceLocked(android.content.ComponentName)>
<com.android.systemui.analytics.SensorLoggerSession: void setTouchArea(int,int)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: float getYVelocity()>
<android.content.pm.Signature: byte[] toByteArray()>
<android.media.MediaMetadataEditor: void addEditableKey(int)>
<android.widget.NumberPicker: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.media.AudioManager: void unregisterAudioRecordingCallback(android.media.AudioManager.AudioRecordingCallback)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isVertical()>
<com.google.android.util.AbstractMessageParser.Video: com.google.android.util.AbstractMessageParser.Video matchURL(java.lang.String,java.lang.String)>
<com.android.server.NetworkManagementSocketTagger: void install()>
<android.util.apk.ApkSignatureSchemeV2Verifier.SignatureNotFoundException: void <init>(java.lang.String)>
<android.service.notification.NotificationListenerService: void onListenerConnected()>
<android.graphics.pdf.PdfRenderer: void finalize()>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>
<com.android.systemui.stackdivider.DividerView: boolean startDragging(boolean,boolean)>
<android.bluetooth.BluetoothClass: boolean hasService(int)>
<libcore.io.MemoryMappedFile_Delegate: void setDataDir(java.io.File)>
<com.android.systemui.statusbar.notification.TransformState: void initFrom(android.view.View)>
<android.view.ViewDebug: void stopRecyclerTracing()>
<com.android.server.updates.ApnDbInstallReceiver: void <init>()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isPluggedIn()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothEnabled()>
<com.android.documentsui.BaseActivity: void setRootsDrawerOpen(boolean)>
<com.android.systemui.SwipeHelper: void setDensityScale(float)>
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher.ViewFactory)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.media.session.MediaController.TransportControls: void sendCustomAction(android.media.session.PlaybackState.CustomAction,android.os.Bundle)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment)>
<android.os.Messenger: void send(android.os.Message)>
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>
<android.transition.CircularPropagation: void setPropagationSpeed(float)>
<com.android.systemui.qs.tiles.AirplaneModeTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>
<com.android.systemui.recents.misc.SystemServicesProxy: void getThumbnail(int,com.android.systemui.recents.model.ThumbnailData)>
<com.android.systemui.qs.QSTile.ResourceIcon: boolean equals(java.lang.Object)>
<android.opengl.GLES32: java.lang.String[] glGetDebugMessageLog(int,int[],int,int[],int,int[],int,int[],int)>
<android.hardware.soundtrigger.SoundTrigger.GenericSoundModel: void <init>(java.util.UUID,java.util.UUID,byte[])>
<com.android.systemui.statusbar.CommandQueue: void appTransitionFinished()>
<android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>
<android.view.TextureView.SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<android.print.PrintAttributes.Margins: int hashCode()>
<android.media.MediaCodecInfo.AudioCapabilities: int getMaxInputChannelCount()>
<com.android.systemui.tuner.PreviewNavInflater: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setVerticalPanelTranslation(float)>
<com.android.server.notification.RankingConfig: void setPriority(java.lang.String,int,int)>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onSessionModifyResponseReceived(android.telecom.RemoteConnection.VideoProvider,int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.TextServicesManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.layoutlib.bridge.Bridge: com.android.ide.common.rendering.api.Result getViewIndex(java.lang.Object)>
<android.hardware.radio.RadioTuner.Callback: void onProgramInfoChanged(android.hardware.radio.RadioManager.ProgramInfo)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
<android.content.Intent: boolean hasCategory(java.lang.String)>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glTexParameterx(int,int,int)>
<android.preference.Preference: void notifyChanged()>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>
<android.widget.HorizontalScrollView: java.lang.CharSequence getAccessibilityClassName()>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>
<android.telecom.RemoteConnection: java.lang.CharSequence getCallerDisplayName()>
<com.android.systemui.statusbar.notification.NotificationBigPictureTemplateViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<android.widget.AbsSeekBar: void <init>(android.content.Context)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onAvailabilityChanged(int)>
<com.android.systemui.recents.model.TaskStack: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicLUT: void setBlue(int,int)>
<android.renderscript.Sampler.Builder: void setMinification(android.renderscript.Sampler.Value)>
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>
<com.android.commands.settings.SettingsCmd: void run()>
<android.text.Layout: float getLineRight(int)>
<com.android.vpndialogs.ManageDialog: void onClick(android.content.DialogInterface,int)>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>
<android.graphics.Paint: java.util.Locale getTextLocale()>
<android.app.assist.AssistStructure.ViewNode: java.lang.CharSequence getContentDescription()>
<android.content.res.AssetFileDescriptor: void close()>
<android.view.IWindowManagerImpl: void setAnimationScales(float[])>
<android.content.ContextWrapper: android.content.res.Resources.Theme getTheme()>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.media.MediaRouterService: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: boolean isReorderingAllowed()>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<android.transition.TransitionManager: void go(android.transition.Scene)>
<android.app.Activity: void reportFullyDrawn()>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createReEnrollIntent()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: boolean needsAntiFalsing()>
<android.app.FragmentManager: void popBackStack(int,int)>
<com.android.server.connectivity.KeepaliveTracker: void handleStopAllKeepalives(com.android.server.connectivity.NetworkAgentInfo,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getPrefix()>
<android.bluetooth.le.AdvertiseData: android.util.SparseArray getManufacturerSpecificData()>
<android.media.AudioManager: int generateAudioSessionId()>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>
<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void onTransition(int,int,boolean)>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo,int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.tv.pip.PipManager: android.graphics.Rect getPipBounds()>
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.QSFooter: void setListening(boolean)>
<com.android.systemui.tv.pip.PipRecentsControlsView: void startFocusLossAnimation()>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(int[],int,int[],int)>
<com.android.server.am.ActivityManagerService: void removeStack(int)>
<com.android.keyguard.KeyguardPatternView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSystemOnlyUser(android.content.ComponentName)>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>
<android.view.textservice.TextInfo: int getCookie()>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(java.util.UUID[],android.bluetooth.BluetoothAdapter.LeScanCallback)>
<android.app.SystemServiceRegistry.ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<com.android.systemui.statusbar.policy.WifiSignalController: void handleBroadcast(android.content.Intent)>
<com.android.systemui.statusbar.TransformableView: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.widget.TabHost: void clearAllTabs()>
<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.opengl.GLES11: boolean glIsBuffer(int)>
<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>
<android.graphics.drawable.LayerDrawable: int getRightPadding()>
<com.android.systemui.assist.AssistOrbContainer: void show(boolean,boolean)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.assist.AssistManager: void destroy()>
<android.telecom.InCallService.VideoCall: void setPauseImage(android.net.Uri)>
<android.telephony.CellInfoGsm: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo getCollectionItemInfo()>
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.volume.VolumeDialogController: boolean hasVibrator()>
<com.android.systemui.qs.QSTile.DetailAdapter: int getMetricsCategory()>
<android.database.CrossProcessCursor: boolean onMove(int,int)>
<android.view.inputmethod.ExtractedText: int describeContents()>
<android.webkit.CacheManager.CacheResult: void setInputStream(java.io.InputStream)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setOccluded(boolean,boolean)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,java.nio.IntBuffer)>
<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)>
<android.transition.Scene: void exit()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isCharged()>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(long)>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<android.media.tv.TvContract: boolean isChannelUriForPassthroughInput(android.net.Uri)>
<android.printservice.PrinterDiscoverySession: void removePrinters(java.util.List)>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>
<android.view.View.DragShadowBuilder: void <init>()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.PbapServerProfile getPbapProfile()>
<com.android.systemui.recents.model.Task: void <init>(com.android.systemui.recents.model.Task.TaskKey,int,int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean,boolean,android.graphics.Rect,android.app.ActivityManager.TaskDescription,int,android.content.ComponentName)>
<android.media.audiofx.Equalizer: short[] getBandLevelRange()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<com.android.keyguard.KeyguardSecurityContainer: boolean needsInput()>
<android.graphics.Canvas_Delegate: void native_drawPaint(long,long)>
<com.android.providers.settings.SettingsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>
<android.provider.ContactsContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.renderscript.Matrix3f: void translate(float,float)>
<com.android.server.accessibility.KeyEventDispatcher: void setOnKeyEventResult(com.android.server.accessibility.AccessibilityManagerService.Service,boolean,int)>
<android.view.animation.AnimationSet: void restrictDuration(long)>
<com.android.systemui.classifier.EndPointLengthClassifier: java.lang.String getTag()>
<android.opengl.EGLDisplay: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldDelayChildPressedState()>
<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback)>
<android.media.session.MediaSession: android.media.session.MediaSession.Token getSessionToken()>
<android.app.ActivityManagerProxy: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result render(long,boolean)>
<android.telecom.ConnectionService: java.util.Collection getAllConferences()>
<android.content.ContentProviderOperation: boolean isWriteOperation()>
<android.graphics.Paint: boolean isSubpixelText()>
<android.text.HtmlToSpannedConverter: void characters(char[],int,int)>
<android.telecom.Conference: void onPlayDtmfTone(char)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintContentIntentLaunchesActivity(boolean)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.systemui.qs.external.TileServiceManager: void clearPendingBind()>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>
<android.os.FileObserver: void <init>(java.lang.String,int)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.opengl.GLES31: void glBindProgramPipeline(int)>
<android.media.session.PlaybackState: void writeToParcel(android.os.Parcel,int)>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>
<android.app.DialogFragment: android.app.Dialog getDialog()>
<com.android.server.wm.TaskStack: boolean getBoundsAnimating()>
<android.service.notification.Condition: boolean equals(java.lang.Object)>
<android.view.ViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getText()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setRouteFlags(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void dump(java.io.PrintWriter)>
<android.widget.Scroller: int getCurrX()>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.text.Html.ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<android.view.ViewPropertyAnimator: void cancel()>
<android.view.IWindowManagerImpl: boolean isKeyguardLocked()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetRight(int)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setAssociationDesc(int)>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>
<android.hardware.Camera.Parameters: void setPictureFormat(int)>
<com.android.server.policy.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy.WindowState,int,boolean)>
<com.google.android.gles_jni.GLImpl: void glColorMask(boolean,boolean,boolean,boolean)>
<android.media.SubtitleTrack.RenderingWidget: void setSize(int,int)>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>
<com.android.systemui.classifier.FalsingLog: void e(java.lang.String,java.lang.String)>
<android.os.BatteryStats.BitDescription: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.view.WindowManagerPolicy.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.telephony.TelephonyManager: boolean isVoicemailVibrationEnabled(android.telecom.PhoneAccountHandle)>
<com.android.systemui.recents.model.Task: void dump(java.lang.String,java.io.PrintWriter)>
<android.app.AlarmManager: void setTime(long)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDeleteReturns()>
<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>
<android.net.LinkProperties: java.lang.String toString()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: java.lang.String toString()>
<com.android.server.policy.PhoneWindowManager: int getSystemDecorLayerLw()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dump(java.lang.String,java.io.PrintWriter)>
<android.util.Base64InputStream: long skip(long)>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>
<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>
<android.graphics.Paint_Delegate: int getStyle()>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.media.audiopolicy.AudioPolicy.Builder: void <init>(android.content.Context)>
<android.app.ApplicationThreadProxy: android.os.IBinder asBinder()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: int getPageIndex()>
<android.drm.DrmManagerClient.OnEventListener: void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent)>
<android.app.usage.UsageEvents.Event: long getTimeStamp()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void updateTaskGridRect(int)>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccount)>
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>(java.lang.String)>
<android.hardware.Camera.Parameters: int getInt(java.lang.String)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telecom.Conference: void setOnHold()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: float getAttributeFloatValue(int,float)>
<com.android.systemui.statusbar.BaseStatusBar: void showRecentApps(boolean,boolean)>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void <init>()>
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>
<com.android.gallery3d.common.Utils: float parseFloatSafely(java.lang.String,float)>
<android.view.View: int getVerticalScrollbarPosition()>
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>
<com.android.server.media.MediaResourceMonitorService: void onStart()>
<android.app.Dialog: android.view.View onCreatePanelView(int)>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.systemui.recents.tv.animations.HomeRecentsEnterExitAnimationHolder: void startEnterAnimation(boolean)>
<android.webkit.WebSettings: int getTextZoom()>
<android.webkit.WebViewProvider.ViewDelegate: void onOverScrolled(int,int,boolean,boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>
<android.graphics.drawable.VectorDrawable: int getOpacity()>
<android.media.MediaDrm: void releaseAllSecureStops()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void recoverFromLightCycle()>
<com.android.printspooler.model.PageContentRepository.RenderSpec: void <init>(int,int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<android.bluetooth.BluetoothDevice: boolean createBond()>
<android.view.View: int getBaseline()>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromParcel(android.os.Parcel,com.android.documentsui.model.Durable)>
<com.google.android.util.AbstractMessageParser.TrieNode: void addToTrie(com.google.android.util.AbstractMessageParser.TrieNode,java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiDevice: boolean openNotification()>
<android.widget.TableLayout: void onLayout(boolean,int,int,int,int)>
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()>
<com.android.server.notification.NotificationSignalExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
<android.telecom.ConnectionRequest: android.net.Uri getAddress()>
<com.android.documentsui.RootsLoader: void deliverResult(java.util.Collection)>
<com.android.systemui.volume.MediaSessions: void dump(java.io.PrintWriter)>
<android.content.ActivityNotFoundException: void <init>(java.lang.String)>
<android.telecom.Call: java.util.List getCannedTextResponses()>
<android.service.dreams.DreamService: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.view.View: void setLayerType(int,android.graphics.Paint)>
<android.media.AudioRecord: int read(float[],int,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingSettings(float,boolean)>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>
<android.graphics.Rect: void union(int,int,int,int)>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreSettings(boolean)>
<com.android.keyguard.EmergencyButton: void setCallback(com.android.keyguard.EmergencyButton.EmergencyButtonCallback)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.KeyguardMonitor getKeyguardMonitor()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onVisibilityChanged(android.view.View,int)>
<android.ddm.DdmHandleProfiling: void disconnected()>
<com.android.systemui.classifier.FalsingManager: void onSucccessfulUnlock()>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
<android.view.SurfaceView: void <init>(android.content.Context)>
<com.android.server.net.NetworkStatsCollection: void recordCollection(com.android.server.net.NetworkStatsCollection)>
<android.view.View.AttachInfo.Callbacks: void playSoundEffect(int)>
<android.view.View: boolean isDuplicateParentStateEnabled()>
<android.view.View: int getScrollIndicators()>
<android.text.TabStops: void <init>(int[],int)>
<android.text.Layout: int getLineStart(int)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void tearDown()>
<com.android.server.am.BatteryStatsService: long computeChargeTimeRemaining()>
<android.media.tv.TvInputService.Session: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.os.Handler_Delegate.IHandlerCallback: void sendMessageAtTime(android.os.Handler,android.os.Message,long)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureCompleted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<android.view.View: boolean isEnabled()>
<com.android.systemui.Somnambulator: void <init>()>
<android.media.VolumeProvider: int getMaxVolume()>
<com.android.egg.neko.Food: int getType()>
<android.view.Window: void takeInputQueue(android.view.InputQueue.Callback)>
<com.android.preload.DeviceUtils: com.android.ddmlib.IDevice findDevice(java.lang.String,int)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.graphics.RectF: boolean equals(java.lang.Object)>
<android.media.MediaSync: android.media.MediaTimestamp getTimestamp()>
<com.android.systemui.statusbar.stack.AmbientState: float getStackTranslation()>
<android.widget.AutoCompleteTextView: void performValidation()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionPolicy(android.content.ComponentName)>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRevealParameters(int,int,int)>
<com.android.anqp.eap.NonEAPInnerAuth: com.android.anqp.eap.NonEAPInnerAuth.NonEAPType getType()>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>
<android.graphics.Path_Delegate: void rMoveTo(float,float)>
<com.android.server.policy.WindowOrientationListener: boolean canDetectOrientation()>
<com.android.systemui.statusbar.policy.CastController: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<android.widget.ImageButton: boolean onSetAlpha(int)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.widget.TimePicker.TimePickerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraUnavailable(java.lang.String)>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>
<android.content.ClipData.Item: android.net.Uri getUri()>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
<android.widget.ExpandableListAdapter: long getCombinedGroupId(long)>
<android.view.Choreographer.FrameCallback: void doFrame(long)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadUp()>
<android.view.IWindowManagerImpl: float[] getAnimationScales()>
<android.media.midi.MidiDeviceServer.Callback: void onDeviceStatusChanged(android.media.midi.MidiDeviceServer,android.media.midi.MidiDeviceStatus)>
<com.android.systemui.power.PowerUI: void start()>
<android.content.IntentFilter: android.content.IntentFilter.AuthorityEntry getDataAuthority(int)>
<android.view.View: boolean canScrollVertically(int)>
<android.inputmethodservice.InputMethodService: void hideStatusIcon()>
<android.view.IWindowManagerImpl: void removeWindowToken(android.os.IBinder)>
<android.view.WindowManager.InvalidDisplayException: void <init>()>
<com.android.systemui.BatteryMeterView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.NotificationContentView: void setClipTopAmount(int)>
<com.android.documentsui.RootsFragment: void onResume()>
<android.app.Activity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>
<android.hardware.camera2.utils.TaskSingleDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getFirstChildNotGone()>
<android.preference.DialogPreference: void onClick()>
<android.widget.GridLayout: boolean isRowOrderPreserved()>
<android.bluetooth.BluetoothManager: java.util.List getDevicesMatchingConnectionStates(int,int[])>
<com.android.systemui.qs.tiles.WifiTile: void handleUpdateState(com.android.systemui.qs.QSTile.SignalState,java.lang.Object)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentInfo(java.lang.CharSequence)>
<com.android.gallery3d.exif.ExifTag: java.lang.String forceGetValueAsString()>
<android.media.midi.MidiReceiver: void <init>()>
<android.os.Trace: void beginSection(java.lang.String)>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)>
<com.android.systemui.statusbar.RemoteInputController: void addSpinning(java.lang.String,java.lang.Object)>
<com.android.server.PinnerService: void <init>(android.content.Context)>
<android.location.Address: java.lang.String getFeatureName()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryRemoved(com.android.systemui.statusbar.NotificationData.Entry)>
<android.location.GnssStatus.Callback: void onFirstFix(int)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>
<com.android.systemui.tuner.TunerSwitch: void onAttached()>
<com.android.server.SystemServer: void <init>()>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>
<android.content.UriPermission: java.lang.String toString()>
<com.android.server.pm.PermissionsState.PermissionState: boolean isDefault()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>
<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<com.android.systemui.statusbar.policy.BluetoothController: int getBluetoothState()>
<android.renderscript.Allocation: void setAutoPadding(boolean)>
<android.content.ClipDescription: java.lang.String toString()>
<android.content.SyncRequest: int describeContents()>
<android.provider.DocumentsContract: android.net.Uri buildRecentDocumentsUri(java.lang.String,java.lang.String)>
<android.media.tv.TvTrackInfo: byte getVideoActiveFormatDescription()>
<android.media.MediaCodec.CryptoInfo.Pattern: void set(int,int)>
<android.view.Menu: boolean performIdentifierAction(int,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setFlashlightController(com.android.systemui.statusbar.policy.FlashlightController)>
<android.view.Window: android.transition.Transition getSharedElementExitTransition()>
<android.widget.Editor.HandleView: int getCurrentCursorOffset()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean hasActiveNotifications()>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<com.android.documentsui.Events.InputEvent: boolean isMouseEvent()>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setExtras(android.os.Bundle)>
<com.android.systemui.statusbar.notification.TransformState: int[] getLaidOutLocationOnScreen()>
<com.android.systemui.statusbar.policy.FlashlightController: void setFlashlight(boolean)>
<android.accounts.Account: boolean equals(java.lang.Object)>
<com.android.server.connectivity.NetworkAgentInfo: void dumpLingerTimers(java.io.PrintWriter)>
<com.android.egg.neko.Cat: android.graphics.drawable.Icon createIcon(android.content.Context,int,int)>
<com.android.systemui.recents.views.TaskStackViewScroller.TaskStackViewScrollerCallbacks: void onStackScrollChanged(float,float,com.android.systemui.recents.views.AnimationProps)>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<com.android.systemui.qs.PseudoGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.hdmi.HdmiCecMessageValidator.ParameterValidator: int isValid(byte[])>
<android.media.AudioRecord.Builder: android.media.AudioRecord.Builder setBufferSizeInBytes(int)>
<android.webkit.CookieSyncManager: void stopSync()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void dragRecipientExited(android.view.IWindow)>
<android.provider.Contacts.Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.AbsListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<android.view.animation.AnimationSet: void setStartOffset(long)>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>
<android.widget.AbsListView: void requestLayout()>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<com.android.server.updates.SELinuxPolicyInstallReceiver: void <init>()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void start()>
<com.android.documentsui.model.RootInfo: boolean isAdvanced()>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
<android.net.LocalSocket: boolean isOutputShutdown()>
<com.android.documentsui.dirlist.DirectoryFragment: void create(android.app.FragmentManager,int,com.android.documentsui.model.RootInfo,com.android.documentsui.model.DocumentInfo,java.lang.String,int)>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<android.os.Handler: void removeMessages(int)>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()>
<android.hardware.Camera.Parameters: void setGpsLongitude(double)>
<com.android.hotspot2.asn1.Asn1ID: int getTag()>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>
<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker.CheckEventResult checkEvent(android.service.notification.ZenModeConfig.EventInfo,long)>
<com.android.systemui.statusbar.notification.NotificationBigPictureTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.externalstorage.ExternalStorageProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewSizes()>
<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: boolean hasOverlappingRendering()>
<com.android.server.hdmi.HdmiCecMessage: int getDestination()>
<android.telephony.CellSignalStrengthLte: int getDbm()>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>
<com.android.systemui.classifier.AnglesClassifier: java.lang.String getTag()>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>
<com.android.server.Watchdog: void addThread(android.os.Handler)>
<com.android.documentsui.FilesActivityPerfTest: com.android.documentsui.model.RootInfo getInitialRoot()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<com.android.systemui.statusbar.SignalClusterView: void onFinishInflate()>
<android.widget.Toolbar: void setTitleMarginTop(int)>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,float[],int)>
<android.app.NativeActivity: void onCreate(android.os.Bundle)>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.opengl.GLES32: void glSamplerParameterIuiv(int,int,java.nio.IntBuffer)>
<android.hardware.camera2.CaptureFailure: int getSequenceId()>
<com.android.documentsui.RecentsProvider: android.net.Uri buildResume(java.lang.String)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation.MipmapControl,int)>
<com.android.systemui.qs.external.TileServices: void onStartActivity(android.os.IBinder)>
<android.bluetooth.le.ScanFilter: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.View getStatusBarView()>
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)>
<android.widget.SimpleAdapter: android.widget.Filter getFilter()>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>
<com.android.systemui.tv.pip.PipManager: com.android.systemui.tv.pip.PipRecentsOverlayManager getPipRecentsOverlayManager()>
<android.content.BroadcastReceiver.PendingResult: boolean getAbortBroadcast()>
<android.service.quicksettings.Tile: void setContentDescription(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void updateNotificationIcons(com.android.systemui.statusbar.NotificationData)>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.keyguard.EmergencyButton: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>
<android.content.Intent: boolean filterEquals(android.content.Intent)>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View,android.graphics.RectF)>
<com.android.systemui.recents.Recents: void toggleRecents(android.view.Display)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getContext()>
<com.android.server.pm.PackageManagerService: void resetApplicationPreferences(int)>
<android.location.Location: void setBearing(float)>
<com.android.server.statusbar.StatusBarManagerService: void addTile(android.content.ComponentName)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)>
<com.android.hotspot2.osu.OSUInfo: com.android.anqp.HSIconFileElement getIconFileElement()>
<com.android.keyguard.KeyguardUpdateMonitor: void onKeyguardVisibilityChanged(boolean)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>
<android.os.MessageQueue: void finalize()>
<android.text.style.BulletSpan: void <init>()>
<android.widget.AbsListView: boolean isStackFromBottom()>
<android.view.WindowInsets: java.lang.String toString()>
<com.android.server.pm.PackageManagerService: int movePrimaryStorage(java.lang.String)>
<com.android.server.storage.DeviceStorageMonitorInternal: boolean isMemoryLow()>
<com.android.documentsui.FilesActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.BatteryController getBatteryController()>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>
<com.android.systemui.recents.model.TaskStack: void removeGroup(com.android.systemui.recents.model.TaskGrouping)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEvent)>
<com.android.systemui.statusbar.stack.StackScrollState: void applyViewState(android.view.View,com.android.systemui.statusbar.stack.ViewState)>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<android.transition.Scene: void enter()>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getSignaturePaddings()>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionInfo)>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>
<com.android.tools.layoutlib.java.AutoCloseable: void close()>
<android.widget.ListPopupWindow: boolean isShowing()>
<android.net.Network: boolean equals(java.lang.Object)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.widget.DialerFilter: void onModeChange(int,int)>
<com.android.systemui.statusbar.policy.AccessibilityController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<android.view.ViewStructure: void setAccessibilityFocused(boolean)>
<android.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>
<android.os.Process: void killProcess(int)>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<android.app.FragmentTransaction: void commitNowAllowingStateLoss()>
<android.os.Bundle: java.lang.Object clone()>
<android.database.CursorWrapper: boolean isAfterLast()>
<android.media.tv.TvInputInfo: boolean isHidden(android.content.Context)>
<android.net.wifi.p2p.WifiP2pDevice: int describeContents()>
<android.media.Image: int getHeight()>
<com.android.systemui.qs.TileLayout: boolean updateResources()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getPositionDescription()>
<android.util.SparseBooleanArray: int keyAt(int)>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>
<com.android.server.pm.PackageManagerService: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>
<android.net.EthernetManager.Listener: void onAvailabilityChanged(boolean)>
<android.view.ViewGroupOverlay: void remove(android.view.View)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,int[],int)>
<android.widget.OverScroller: void forceFinished(boolean)>
<android.app.admin.DevicePolicyManager: boolean requestBugreport(android.content.ComponentName)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.preload.Main: com.android.ddmlib.IDevice getDevice()>
<android.media.session.MediaSession: boolean isActive()>
<android.view.View: void setScaleY(float)>
<android.printservice.PrinterDiscoverySession: void <init>()>
<android.app.VoiceInteractor.PickOptionRequest.Option: java.lang.CharSequence getSynonymAt(int)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setExtras(android.os.Bundle)>
<android.widget.SlidingDrawer: void animateOpen()>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.content.pm.LauncherApps: void unregisterCallback(android.content.pm.LauncherApps.Callback)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<android.media.MediaMuxer: void start()>
<javax.microedition.khronos.opengles.GL10: void glOrthox(int,int,int,int,int,int)>
<com.android.gallery3d.glrenderer.RawTexture: boolean isFlippedVertically()>
<com.android.systemui.statusbar.policy.NetworkController.EmergencyListener: void setEmergencyCallsOnly(boolean)>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>
<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>
<android.webkit.FindActionModeCallback.NoAction: void onDestroyActionMode(android.view.ActionMode)>
<com.android.server.am.ActivityManagerService: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>
<android.content.pm.PackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent)>
<android.speech.tts.SynthesisCallback: int audioAvailable(byte[],int,int)>
<com.android.server.usb.UsbAlsaManager: java.util.ArrayList getConnectedDevices()>
<android.nfc.tech.MifareClassic: void decrement(int,int)>
<javax.microedition.khronos.opengles.GL10: void glPointSizex(int)>
<com.android.systemui.recents.misc.Utilities: float mapRange(float,float,float)>
<com.android.server.notification.ZenLog: void traceDisableEffects(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>
<android.os.Handler: void <init>()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.impl.CameraMetadataNative createDefaultRequest(int)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void staggeredLog()>
<android.widget.TextView: void append(java.lang.CharSequence)>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<android.media.MediaCodec.CryptoException: int getErrorCode()>
<android.os.Debug: void stopNativeTracing()>
<android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>
<android.widget.AbsListView: void setStackFromBottom(boolean)>
<android.net.wifi.p2p.WifiP2pManager.ChannelListener: void onChannelDisconnected()>
<android.renderscript.ScriptIntrinsicBLAS: void CHER2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,float,android.renderscript.Allocation)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationUri(android.net.Uri)>
<com.android.systemui.statusbar.BaseStatusBar: void setBouncerShowing(boolean)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>
<android.hardware.radio.RadioManager.ModuleProperties: boolean isCaptureSupported()>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>
<android.widget.AbsListView: int getListPaddingLeft()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFrameRates()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIconsDarkArea(android.graphics.Rect)>
<android.filterpacks.imageproc.NegativeFilter: void setupPorts()>
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addKernel(android.renderscript.Script.KernelID)>
<com.android.server.pm.ShortcutService: void enableShortcuts(java.lang.String,java.util.List,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapsePanels(int,boolean,boolean)>
<com.android.settingslib.wifi.WifiTracker: boolean doSavedNetworksExist()>
<android.view.Window: android.transition.Scene getContentScene()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context)>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>
<com.android.systemui.qs.QSDetailItems: void onFinishInflate()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void finishDeferredConfiguration(java.util.List)>
<com.android.server.pm.PackageManagerService: java.lang.String getServicesSystemSharedLibraryPackageName()>
<android.telephony.CellSignalStrengthCdma: int hashCode()>
<android.bluetooth.BluetoothGattCallback: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)>
<android.webkit.WebView: void goForward()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.params.MeteringRectangle: int getMeteringWeight()>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>
<android.animation.AnimatorSet: void setStartDelay(long)>
<android.content.pm.FeatureInfo: java.lang.String toString()>
<android.text.LoginFilter.PasswordFilterGMail: void <init>(boolean)>
<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>
<android.app.job.JobScheduler: void cancelAll()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<android.widget.AbsSeekBar: int getThumbOffset()>
<android.app.FragmentManager: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>
<android.widget.Gallery: void dispatchSetSelected(boolean)>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void updateResources()>
<android.preference.GenericInflater.Factory: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.view.IWindowManagerImpl: float getCurrentAnimatorScale()>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchNextTaskRequestEvent)>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver.PendingResult goAsync()>
<android.content.Context: java.io.File getFilesDir()>
<android.media.session.MediaController: android.media.session.MediaController.TransportControls getTransportControls()>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[])>
<android.view.KeyEvent: boolean isMetaPressed()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onAdjustVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMinification()>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<com.android.MainActivity.OSUService: java.util.List getOsuInfos()>
<android.graphics.Paint: int getAlpha()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void resetExposedGearView(boolean,boolean)>
<com.android.systemui.SystemUISecondaryUserService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.AdapterViewAnimator: void advance()>
<com.android.systemui.statusbar.BaseStatusBar: void updatePublicContentView(com.android.systemui.statusbar.NotificationData.Entry,android.service.notification.StatusBarNotification)>
<javax.microedition.khronos.opengles.GL10: void glFinish()>
<android.renderscript.ScriptIntrinsicBLAS: void CHER(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.telecom.VideoProfile: boolean isAudioOnly(int)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelection(java.lang.String,java.lang.String[])>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>
<android.os.AsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.net.http.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>
<android.app.FragmentBreadCrumbs: void onBackStackChanged()>
<android.hardware.fingerprint.IFingerprintDaemon: int cancelAuthentication()>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Path_Delegate: void setJavaShape(java.awt.Shape)>
<android.view.Window: boolean hasFeature(int)>
<android.media.MediaDrm.CryptoSession: byte[] sign(byte[],byte[])>
<android.webkit.WebViewFactoryProvider.Statics: android.net.Uri[] parseFileChooserResult(int,android.content.Intent)>
<android.media.midi.MidiReceiver: int getMaxMessageSize()>
<android.media.midi.MidiDevice.MidiConnection: void finalize()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.BaseStatusBar: void setNotificationShown(android.service.notification.StatusBarNotification)>
<android.app.VoiceInteractor.Request: void cancel()>
<com.android.server.usage.AppIdleHistory: boolean isIdleLocked(java.lang.String,int,long)>
<com.android.tools.layoutlib.create.AsmGenerator: void <init>(com.android.tools.layoutlib.create.Log,java.lang.String,com.android.tools.layoutlib.create.ICreateInfo)>
<android.graphics.Canvas: void skew(float,float)>
<android.media.AudioTrack.Builder: android.media.AudioTrack.Builder setAudioAttributes(android.media.AudioAttributes)>
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.content.Loader.OnLoadCompleteListener: void onLoadComplete(android.content.Loader,java.lang.Object)>
<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>
<android.print.PrinterDiscoverySession.OnPrintersChangeListener: void onPrintersChanged()>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(long)>
<android.os.CommonClock.OnTimelineChangedListener: void onTimelineChanged(long)>
<android.net.Uri: boolean isAbsolute()>
<android.hardware.TriggerEventListener: void onTrigger(android.hardware.TriggerEvent)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.view.AttachInfo_Accessor: void dispatchOnPreDraw(android.view.View)>
<android.telecom.Conference: long getConnectionTime()>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.tv.views.RecentsTvView: void <init>(android.content.Context)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setDescription(java.lang.CharSequence)>
<android.media.MediaCodec: void setOnFrameRenderedListener(android.media.MediaCodec.OnFrameRenderedListener,android.os.Handler)>
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>
<android.content.res.BridgeTypedArray: float getFraction(int,int,int,float)>
<android.widget.Gallery: boolean showContextMenu()>
<com.android.hotspot2.osu.OSUClient: void <init>(java.lang.String,java.security.KeyStore)>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.media.AudioManager.AudioRecordingCallback: void onRecordingConfigChanged(java.util.List)>
<android.content.IntentFilter.AuthorityEntry: int match(android.net.Uri)>
<com.android.location.fused.FusionEngine: void onProviderEnabled(java.lang.String)>
<android.os.DropBoxManager.Entry: int getFlags()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.HotspotController getHotspotController()>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onConnected()>
<com.android.hotspot2.osu.service.RedirectListener: java.net.URL getURL()>
<android.content.res.BridgeAssetManager: void clearSystem()>
<com.android.server.twilight.TwilightState: java.lang.String toString()>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnSuccess()>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent)>
<android.renderscript.Matrix3f: void multiply(android.renderscript.Matrix3f)>
<com.android.server.job.controllers.DeviceIdleJobsController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dismiss(boolean)>
<com.android.documentsui.DocumentsToolbar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onCrossedThreshold(boolean)>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
<android.telecom.InCallService: void onCanAddCallChanged(boolean)>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setVisible(boolean)>
<android.os.UserHandle: boolean equals(java.lang.Object)>
<android.graphics.Canvas_Delegate: boolean native_clipPath(long,long,int)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String toString()>
<android.content.res.BridgeTypedArray: float getDimension(int,float)>
<android.graphics.Shader_Delegate: java.awt.Paint getJavaPaint()>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.MeteringData convertMeteringRectangleToLegacy(android.graphics.Rect,android.hardware.camera2.params.MeteringRectangle,android.hardware.camera2.legacy.ParameterUtils.ZoomData)>
<com.android.uiautomator.core.UiScrollable: boolean scrollTextIntoView(java.lang.String)>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void removeSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.server.notification.RankingHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.location.GnssMeasurement: double getSnrInDb()>
<android.widget.AdapterViewAnimator: void showNext()>
<android.graphics.YuvImage: byte[] getYuvData()>
<com.android.server.notification.NotificationManagerService.NotificationRankers: android.os.IInterface asInterface(android.os.IBinder)>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent)>
<android.graphics.drawable.AnimatedVectorDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.qs.external.TileLifecycleManager: void binderDied()>
<android.content.Context: boolean stopService(android.content.Intent)>
<android.hardware.camera2.utils.TypeReference: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.systemui.egg.MLand: void showSplash()>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>
<com.android.systemui.classifier.SpeedAnglesPercentageEvaluator: float evaluate(float)>
<android.content.RestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,int,float,float,float,float,android.content.ClipData)>
<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>
<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>
<android.telecom.Conference: void onHold()>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<com.android.systemui.statusbar.StatusBarIconView: boolean equalIcons(android.graphics.drawable.Icon,android.graphics.drawable.Icon)>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.qs.QSTile createTile(java.lang.String)>
<com.android.documentsui.dirlist.DirectoryFragment: void selectAllFiles()>
<android.view.inputmethod.CompletionInfo: int describeContents()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>
<android.view.InputDevice: int getSources()>
<com.android.settingslib.wifi.AccessPoint: int compareTo(com.android.settingslib.wifi.AccessPoint)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.inputmethodservice.Keyboard.Row)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addTriangle(int,int,int)>
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>
<com.android.systemui.recents.model.RecentsPackageMonitor: void onPackageModified(java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,android.os.Looper,boolean,boolean,boolean)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment)>
<android.media.MediaPlayer: void setVideoScalingMode(int)>
<android.content.Intent: void removeExtra(java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo newInstance(java.lang.String,java.lang.String,java.util.List)>
<com.android.server.pm.PackageManagerService: android.util.ArraySet getOptimizablePackages()>
<com.android.captiveportallogin.CaptivePortalLoginActivity: void onBackPressed()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void removeObsoletePrintJobs()>
<android.content.Loader: java.lang.String dataToString(java.lang.Object)>
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()>
<com.android.documentsui.Events: boolean isTouchType(int)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getGlobalAlertBytes(long)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.model.Task findAnchorTask(java.util.List,android.util.MutableBoolean)>
<android.widget.ViewAnimator: int getBaseline()>
<android.app.Notification.WearableExtender: java.util.List getActions()>
<android.telecom.CallScreeningService: android.os.IBinder onBind(android.content.Intent)>
<android.telecom.RemoteConnection.VideoProvider.Callback: void onVideoQualityChanged(android.telecom.RemoteConnection.VideoProvider,int)>
<android.view.TextureView: boolean isOpaque()>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameColor(android.content.res.ColorStateList)>
<android.app.ActionBar.OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>
<android.text.HtmlToSpannedConverter: void startPrefixMapping(java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: void crashApplication(int,int,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isOnKeyguard()>
<android.opengl.GLES10: void glLoadIdentity()>
<com.android.egg.neko.NekoDialog: void <init>(android.content.Context)>
<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>
<android.telephony.SignalStrength: int getCdmaEcio()>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>
<com.android.systemui.statusbar.NotificationGuts: void closeControls(int,int,boolean)>
<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>
<android.content.IntentSender: int hashCode()>
<android.graphics.drawable.DrawableWrapper: int getAlpha()>
<android.graphics.Point: int hashCode()>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int,int)>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setVisibility(int)>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.text.util.Linkify.TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>
<android.print.PrintAttributes: android.print.PrintAttributes.Resolution getResolution()>
<com.android.server.am.BroadcastQueue: boolean replaceOrderedBroadcastLocked(com.android.server.am.BroadcastRecord)>
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(java.nio.FloatBuffer)>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String detailedOptions()>
<com.android.systemui.statusbar.StackScrollerDecorView: void onLayout(boolean,int,int,int,int)>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollOffset()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(java.lang.CharSequence)>
<com.android.printspooler.model.PrintSpoolerService: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>
<com.android.keyguard.ViewMediatorCallback: void resetKeyguard()>
<android.media.MediaDrm.CryptoSession: byte[] decrypt(byte[],byte[],byte[])>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.UpdateLockService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.ImageView: boolean setFrame(int,int,int,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean needsInput()>
<android.content.Intent: void writeToParcel(android.os.Parcel,int)>
<com.android.hotspot2.omadm.OMAParser: void <init>()>
<android.hardware.Camera.Parameters: boolean isSmoothZoomSupported()>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>
<android.content.pm.PackageParser.Package: long getLatestForegroundPackageUseTimeInMills()>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<android.content.RestrictionEntry: android.content.RestrictionEntry createBundleArrayEntry(java.lang.String,android.content.RestrictionEntry[])>
<com.android.settingslib.accessibility.AccessibilityUtils: java.util.Set getEnabledServicesFromSettings(android.content.Context,int)>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void inflateStatusBarWindow(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: float getFloat(java.lang.String,float)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyLidSwitchChanged(long,boolean)>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<android.preference.TwoStatePreference: void setSummaryOff(java.lang.CharSequence)>
<android.view.Menu: void setGroupEnabled(int,boolean)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void onClick(android.view.View)>
<android.view.View: void onFinishInflate()>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[])>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>
<android.location.GnssClock: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarView: void setWeekNumberColor(int)>
<android.graphics.drawable.shapes.RoundRectShape: void getOutline(android.graphics.Outline)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCodeGeneric(java.lang.Object[])>
<android.provider.ContactsContract.CommonDataKinds.Event: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<com.android.systemui.assist.AssistManager: void registerVoiceInteractionSessionListener()>
<com.android.settingslib.drawer.DashboardCategory: com.android.settingslib.drawer.Tile getTile(int)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean isReprocessable()>
<android.app.Fragment: void setHasOptionsMenu(boolean)>
<com.android.server.ServiceWatcher: boolean start()>
<android.preference.Preference: void setWidgetLayoutResource(int)>
<com.android.systemui.statusbar.ServiceMonitor: android.content.ComponentName getComponent()>
<com.android.layoutlib.bridge.bars.Config: boolean showOnScreenNavBar(int)>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.NumberPicker: void setEnabled(boolean)>
<android.opengl.GLES20: void glCompileShader(int)>
<android.view.InputDevice: boolean isVirtual()>
<android.widget.CalendarView.CalendarViewDelegate: void setShownWeekCount(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isTrusted()>
<com.android.systemui.statusbar.policy.UserInfoController: void reloadUserInfo()>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.soundtrigger.SoundTriggerManager.Model: byte[] getModelData()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh()>
<com.android.documentsui.Display: float actionBarHeight(android.content.Context)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean isLocationEnabled()>
<android.service.dreams.DreamService: android.view.View onCreatePanelView(int)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void <init>()>
<android.util.LruCache: int maxSize()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<android.view.View: int getTextDirection()>
<com.android.printspooler.ui.PrintActivity: void onSecurePdfFile()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setContentHeaderView(android.view.View)>
<android.hardware.camera2.impl.CameraDeviceImpl: void close()>
<android.graphics.Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>
<com.android.documentsui.Events.MotionInputEvent: java.lang.String toString()>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.mtp.MtpStorageInfo: int getStorageId()>
<com.android.anqp.eap.NonEAPInnerAuth: java.lang.String mapInnerType(com.android.anqp.eap.NonEAPInnerAuth.NonEAPType)>
<android.hardware.radio.RadioManager.BandConfig: int getLowerLimit()>
<com.android.systemui.volume.ZenModePanel: void setHidden(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.drawable.Drawable,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>
<android.view.ViewGroup.MarginLayoutParams: void setLayoutDirection(int)>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String toString()>
<android.webkit.WebViewFragment: void onDestroyView()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: int getChargingSpeed(int,int)>
<com.android.systemui.recents.tv.views.TaskCardView: android.view.View getDismissIconView()>
<android.content.pm.PackageParser.Package: void setPackageName(java.lang.String)>
<com.android.systemui.qs.QSPanel: boolean isShowingCustomize()>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.Prefs: int getInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getGlobalSetting(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setNoSims(boolean)>
<android.database.CursorJoiner: boolean hasNext()>
<android.view.Window: int getStatusBarColor()>
<com.android.server.wm.TaskStack: void getFullScreenBounds(android.graphics.Rect)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onUserInteraction()>
<com.android.systemui.statusbar.NotificationData: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean isTrackingHeadsUp()>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>()>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
<com.android.systemui.recents.RecentsImpl: void hideRecents(boolean,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: float getAlpha()>
<com.android.systemui.statusbar.stack.AmbientState: com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild()>
<android.app.Notification.WearableExtender: boolean getContentIntentAvailableOffline()>
<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>
<android.util.AtomicFile: java.io.FileOutputStream startWrite()>
<android.content.ComponentName: android.content.ComponentName createRelative(android.content.Context,java.lang.String)>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.Class,boolean)>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>
<android.os.PatternMatcher: void <init>(android.os.Parcel)>
<com.android.systemui.recents.RecentsImpl: void preloadRecents()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getColumnCount()>
<com.android.settingslib.applications.ApplicationsState.AppFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>
<com.android.server.am.BatteryStatsService: void noteFlashlightOn(int)>
<android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float)>
<android.service.notification.NotificationListenerService: void requestUnbind()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String getMediaId()>
<com.android.documentsui.dirlist.FragmentTuner.SelectionDetails: boolean canDelete()>
<android.graphics.pdf.PdfDocument: void <init>()>
<com.android.gallery3d.glrenderer.GLId: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isLightDeviceIdleMode()>
<android.media.tv.TvContract: boolean isChannelUri(android.net.Uri)>
<android.widget.AbsSeekBar: void onRtlPropertiesChanged(int)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.filterpacks.imageproc.SepiaFilter: void setupPorts()>
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setCropBounds(android.graphics.RectF)>
<android.transition.ChangeScroll: void <init>()>
<com.android.server.policy.PhoneWindowManager: void finishLayoutLw()>
<android.security.KeyPairGeneratorSpec: int getKeySize()>
<com.android.systemui.statusbar.notification.ActionListTransformState: void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>
<android.view.View: android.view.View focusSearch(int)>
<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>
<android.app.usage.UsageEvents.Event: java.lang.String getShortcutId()>
<android.webkit.WebSettings: boolean getUseWideViewPort()>
<android.accessibilityservice.AccessibilityService.MagnificationController: boolean removeListener(android.accessibilityservice.AccessibilityService.MagnificationController.OnMagnificationChangedListener)>
<android.telephony.CellInfoCdma: int describeContents()>
<android.location.Location: void <init>(java.lang.String)>
<android.gesture.Gesture: java.lang.Object clone()>
<android.telephony.CellIdentityWcdma: int getUarfcn()>
<com.android.systemui.statusbar.CommandQueue: void handleSystemNavigationKey(int)>
<android.view.View: void invalidate()>
<android.renderscript.Allocation: int getBytesSize()>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getBottomStackPeekSize()>
<android.widget.ZoomButtonsController.OnZoomListener: void onZoom(boolean)>
<android.app.AutomaticZenRule: void setConditionId(android.net.Uri)>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>
<com.android.layoutlib.bridge.util.ReflectionUtils: java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<android.app.job.JobInfo: long getMinLatencyMillis()>
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>
<android.hardware.Camera.OnZoomChangeListener: void onZoomChange(int,boolean,android.hardware.Camera)>
<android.renderscript.ScriptGroup.Closure: void finalize()>
<com.android.systemui.statusbar.BackDropView: void onVisibilityChanged(android.view.View,int)>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>
<android.opengl.GLES10: void glMatrixMode(int)>
<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.android.systemui.recents.RecentsImpl: void showRecents(boolean,boolean,boolean,boolean,boolean,int)>
<com.android.commands.media.Media: void onRun()>
<android.app.backup.BackupManager: void <init>(android.content.Context)>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>
<android.security.keystore.KeyGenParameterSpec: boolean isUserAuthenticationRequired()>
<android.view.Window: android.view.View findViewById(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int checkPermission(java.lang.String,java.lang.String)>
<com.android.documentsui.dirlist.IconHelper: void setViewMode(int)>
<android.view.View: void setFilterTouchesWhenObscured(boolean)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getMinHeight()>
<android.hardware.SensorManager.DynamicSensorCallback: void onDynamicSensorDisconnected(android.hardware.Sensor)>
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingFinished()>
<com.android.systemui.qs.external.CustomTile: void setListening(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<android.webkit.WebView: void pauseTimers()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getUserRestrictions(android.content.ComponentName)>
<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>
<android.app.AutomaticZenRule: void setName(java.lang.String)>
<android.view.WindowInsets: int getStableInsetTop()>
<android.net.Credentials: int getPid()>
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void showMirror()>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<com.android.documentsui.State: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.systemui.statusbar.policy.DeadZone: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>
<com.android.server.pm.ShortcutService: void reportShortcutUsed(java.lang.String,java.lang.String,int)>
<android.media.AudioFormat: int getEncoding()>
<android.graphics.Paint: void setHinting(int)>
<android.content.pm.PackageInstaller.SessionCallback: void onCreated(int)>
<android.content.res.BridgeTypedArray: java.lang.CharSequence[] getTextArray(int)>
<com.android.systemui.recents.views.TaskViewTransform: void applyToTaskView(com.android.systemui.recents.views.TaskView,java.util.ArrayList,com.android.systemui.recents.views.AnimationProps,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setComponents(com.android.systemui.RecentsComponent,com.android.systemui.stackdivider.Divider)>
<android.widget.TextView: int getTopPaddingOffset()>
<com.android.server.LockSettingsService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo newInstance(java.lang.String,java.lang.String,java.util.Map)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<android.os.WorkSource: java.lang.String toString()>
<com.android.systemui.recents.views.RecentsView: void updateStack(com.android.systemui.recents.model.TaskStack,boolean)>
<android.widget.Scroller: int getFinalY()>
<com.example.android.networkusage.SettingsActivity: void onResume()>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>
<android.content.Intent: android.content.Intent cloneFilter()>
<android.app.Notification.Builder: android.app.Notification.Builder extend(android.app.Notification.Extender)>
<javax.microedition.khronos.opengles.GL10: void glBindTexture(int,int)>
<android.app.Activity: void overridePendingTransition(int,int)>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>
<com.android.server.connectivity.NetworkAgentInfo: boolean satisfies(android.net.NetworkRequest)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForInstall(java.lang.String,int,int,java.lang.String)>
<android.content.IntentFilter: java.lang.String getAction(int)>
<com.android.systemui.statusbar.CommandQueue: void cancelPreloadRecentApps()>
<android.media.tv.TvInputInfo: boolean isPassthroughInput()>
<android.location.Address: java.lang.String getAddressLine(int)>
<com.android.settingslib.display.DisplayDensityUtils: int getCurrentIndex()>
<com.android.documentsui.FilteringCursorWrapper: void <init>(android.database.Cursor,java.lang.String[],java.lang.String[],long)>
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>
<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.server.am.BatteryStatsService: long getAwakeTimePlugged()>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>
<android.widget.Switch: void setSwitchPadding(int)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>
<android.view.WindowManagerPolicy.WindowState: java.lang.String getOwningPackage()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,float[],int)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
<android.opengl.GLES10: void glScissor(int,int,int,int)>
<com.android.systemui.analytics.SensorLoggerSession: void addSensorEvent(android.hardware.SensorEvent,long)>
<android.util.SparseArray: void remove(int)>
<android.media.Tokenizer.TokenizerPhase: android.media.Tokenizer.TokenizerPhase start()>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: org.apache.harmony.jpda.tests.jdwp.share.JDWPUnitDebuggeeWrapper createDebuggeeWrapper()>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.graphics.drawable.ShapeDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.server.pm.Policy: java.util.Map getInnerPackages()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void setDirectoryKey(java.lang.String)>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>
<com.android.server.am.CompatModePackages: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>
<android.media.MediaRecorder: void setOutputFormat(int)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener,boolean)>
<android.net.ip.RouterAdvertisementDaemon.RaParams: void <init>(android.net.ip.RouterAdvertisementDaemon.RaParams)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.BluetoothHealthCallback: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<com.android.systemui.SwipeHelper: float getSize(android.view.View)>
<android.widget.PopupWindow: boolean isSplitTouchEnabled()>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameColor(android.content.res.ColorStateList)>
<android.graphics.Gradient_Delegate: java.lang.String getSupportMessage()>
<android.os.Binder: void restoreCallingIdentity(long)>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>
<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: java.lang.String policyToString(int)>
<com.android.systemui.statusbar.NotificationBackgroundView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.transition.ChangeTransform: void setReparent(boolean)>
<android.renderscript.Element: android.renderscript.Element F16_3(android.renderscript.RenderScript)>
<android.widget.TableLayout: void requestLayout()>
<android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setBlendFunc(android.renderscript.ProgramStore.BlendSrcFunc,android.renderscript.ProgramStore.BlendDstFunc)>
<android.app.DialogFragment: void onCancel(android.content.DialogInterface)>
<android.view.SurfaceView: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void setSelectedUser(android.os.UserHandle)>
<com.android.hotspot2.omadm.OMAConstants: com.android.hotspot2.osu.OSUError mapError(java.lang.String)>
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.trust.TrustArchive: java.lang.String formatDuration(long)>
<android.view.Window: void addFlags(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<com.android.server.notification.NotificationComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<android.renderscript.ScriptIntrinsicBLAS: void ZTPMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.view.Window.Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isInSafeMode()>
<com.android.server.pm.PermissionsState: int[] computeGids(int[])>
<android.widget.ExpandableListAdapter: long getCombinedChildId(long,long)>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>
<com.android.documentsui.model.RootInfo: android.net.Uri getUri()>
<com.android.systemui.statusbar.NotificationContentView: com.android.systemui.statusbar.notification.HybridNotificationView getSingleLineView()>
<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFingerprintAuthenticated(int)>
<android.telecom.VideoProfile.CameraCapabilities: int describeContents()>
<com.android.server.LockSettingsStrongAuth: void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<android.opengl.EGL14: boolean eglWaitClient()>
<android.security.keystore.KeyGenParameterSpec: boolean isRandomizedEncryptionRequired()>
<android.view.ActionMode: java.lang.Object getTag()>
<android.graphics.drawable.InsetDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.uiautomator.core.UiDevice: boolean pressHome()>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRecentsRoot()>
<com.android.server.search.SearchManagerService.Lifecycle: void <init>(android.content.Context)>
<android.service.voice.VoiceInteractionSession: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.policy.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy.OnKeyguardExitResult)>
<android.widget.TableLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.externalstorage.ExternalStorageProvider: void deleteDocument(java.lang.String)>
<com.android.systemui.recents.misc.RectFEvaluator: android.graphics.RectF evaluate(float,android.graphics.RectF,android.graphics.RectF)>
<android.inputmethodservice.InputMethodService: void onViewClicked(boolean)>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>
<android.widget.TabHost.TabSpec: java.lang.String getTag()>
<android.app.usage.ConfigurationStats: void writeToParcel(android.os.Parcel,int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int)>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.server.ConsumerIrService: int[] getCarrierFrequencies()>
<android.telecom.PhoneAccount: boolean hasCapabilities(int)>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>
<com.android.systemui.assist.AssistOrbView: android.widget.ImageView getLogo()>
<android.location.GnssMeasurement: float getCarrierFrequencyHz()>
<com.android.systemui.recents.views.RecentsView: void onAttachedToWindow()>
<android.view.View: void setClipToOutline(boolean)>
<android.graphics.ColorMatrix: void <init>()>
<com.android.server.am.BatteryStatsService: void noteWifiRssiChanged(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setScrimBehindChangeRunnable(java.lang.Runnable)>
<com.google.android.gles_jni.GLImpl: void glStencilMask(int)>
<android.webkit.WebSettings: boolean supportZoom()>
<android.transition.Visibility: boolean isVisible(android.transition.TransitionValues)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<android.app.Activity: void onUserInteraction()>
<android.hardware.SensorManager: boolean flush(android.hardware.SensorEventListener)>
<android.webkit.WebView: void findAllAsync(java.lang.String)>
<com.android.systemui.volume.SegmentedButtons.Callback: void onSelected(java.lang.Object,boolean)>
<android.os.PersistableBundle: java.lang.String toString()>
<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>
<com.android.systemui.tuner.ClipboardView: void onDetachedFromWindow()>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.systemui.recents.events.EventBus.Event: java.lang.Object clone()>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.LayoutParams)>
<com.android.server.am.ActivityManagerService: void suppressResizeConfigChanges(boolean)>
<android.widget.ResourceCursorAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setNeedsInput(boolean)>
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getTickMark()>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateHeadsUpAnimation(com.android.systemui.statusbar.ExpandableNotificationRow,boolean)>
<com.android.systemui.recents.views.TaskStackView: void updateTaskViewToTransform(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.AnimationProps)>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<android.hardware.radio.RadioManager.BandDescriptor: int getRegion()>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>
<com.android.printspooler.model.PrintSpoolerService: void onCreate()>
<com.android.server.policy.StatusBarController: boolean skipAnimation()>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>
<android.content.AsyncQueryHandler: void onUpdateComplete(int,java.lang.Object,int)>
<com.android.server.trust.TrustAgentWrapper: void onDeviceLocked()>
<com.android.server.audio.AudioService.VolumeStreamState: int getIndex(int)>
<com.android.gallery3d.exif.ExifTag: int getOffset()>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>
<com.android.systemui.ImageWallpaper: void onCreate()>
<com.android.systemui.qs.QSDetail: void onFinishInflate()>
<android.os.BadParcelableException: void <init>(java.lang.String)>
<android.os.WorkSource: void set(android.os.WorkSource)>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled(java.lang.Thread)>
<com.android.systemui.statusbar.phone.QSTileHost: void changeTiles(java.util.List,java.util.List)>
<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()>
<android.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)>
<com.android.systemui.recents.RecentsDebugFlags: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<com.android.server.am.BatteryStatsService: void noteUserActivity(int,int)>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void switchInputMethod(boolean)>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getInstallerPackageName()>
<android.view.MotionEvent: int findPointerIndex(int)>
<android.os.IHardwarePropertiesManager: float[] getDeviceTemperatures(java.lang.String,int,int)>
<android.os.FileBridge.FileBridgeOutputStream: void write(byte[],int,int)>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.tiles.LocationTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.graphics.Canvas_Delegate: void native_rotate(long,float)>
<com.android.server.power.PowerManagerService: void <init>(android.content.Context)>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.graphics.PorterDuffXfermode_Delegate: android.graphics.PorterDuff.Mode getMode()>
<android.app.NotificationManager.Policy: int describeContents()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.widget.AdapterViewAnimator: int getBaseline()>
<com.android.systemui.recents.views.TaskView: void setTouchEnabled(boolean)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void <init>(android.content.Context,com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer,java.lang.String[])>
<android.util.Pools.SynchronizedPool: void <init>(int)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: void hideBand()>
<android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>
<com.android.systemui.qs.tiles.DataSaverTile: java.lang.String composeChangeAnnouncement()>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>
<com.android.server.job.controllers.IdleController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<android.graphics.Paint: float getLetterSpacing()>
<android.graphics.Region: boolean isEmpty()>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>
<com.android.server.backup.BackupManagerService: void setBackupProvisioned(boolean)>
<com.android.hotspot2.osu.OSUManager: void doIconQuery(long,java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getDimensionForDevice(android.content.Context,int,int,int,int)>
<com.android.preload.ui.UI: void showMessageDialog(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>
<android.app.ActionBar: boolean isShowing()>
<com.android.systemui.statusbar.ScrimView: void onDraw(android.graphics.Canvas)>
<android.widget.Toolbar: void onLayout(boolean,int,int,int,int)>
<android.text.Layout: int getEllipsisStart(int)>
<android.service.carrier.CarrierIdentifier: java.lang.String getImsi()>
<android.widget.ListView: void setSelection(int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showPromptReason(int)>
<android.app.admin.DevicePolicyManager: void uninstallAllUserCaCerts(android.content.ComponentName)>
<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setUserExpanded(boolean,boolean)>
<com.android.systemui.egg.MLand: int getControllerPlayer(int)>
<android.provider.ContactsContract.ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.location.LocationProvider: boolean hasMonetaryCost()>
<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>
<android.graphics.Bitmap: void recycle()>
<android.view.animation.AnticipateOvershootInterpolator: void <init>()>
<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>
<com.android.server.backup.BackupManagerService: void backupNow()>
<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller.SessionParams)>
<com.android.server.backup.BackupManagerService: java.lang.String getDestinationString(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandSettingsPanel(java.lang.String)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollOffset()>
<com.android.systemui.SwipeHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.os.Process: boolean isApplicationUid(int)>
<com.android.mtp.MtpDocumentsProvider: void shutdown()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onStopDiscoveryFailed(java.lang.String,int)>
<android.webkit.WebViewProvider.ViewDelegate: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<android.app.FragmentController: void dispatchStart()>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.Display: android.view.Display.Mode getMode()>
<android.app.ApplicationErrorReport.AnrInfo: void dump(android.util.Printer,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.app.AutomaticZenRule: void setEnabled(boolean)>
<com.android.printspooler.ui.PageAdapter: void onViewRecycled(android.support.v7.widget.RecyclerView.ViewHolder)>
<com.android.systemui.recents.views.AnimationProps: void <init>(int,android.view.animation.Interpolator,android.animation.Animator.AnimatorListener)>
<android.content.pm.PackageParser.Package: java.lang.String toString()>
<android.renderscript.FieldPacker: void align(int)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<android.widget.SearchView: void <init>(android.content.Context)>
<android.view.WindowInsets: boolean isRound()>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>
<android.app.Instrumentation.ActivityResult: int getResultCode()>
<android.view.PixelCopy: void request(android.view.Surface,android.graphics.Bitmap,android.view.PixelCopy.OnPixelCopyFinishedListener,android.os.Handler)>
<android.hardware.SensorManager: boolean cancelTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<com.android.server.net.NetworkPolicyManagerService: void removeUidPolicy(int,int)>
<android.os.BatteryStats.LevelStepTracker: long computeTimeEstimate(long,long,int[])>
<com.android.server.notification.ConditionProviders: void onUserSwitched(int)>
<com.android.systemui.recents.views.TaskView: void setDimAlpha(float)>
<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.graphics.drawable.AnimatedVectorDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.TableLayout: boolean isColumnCollapsed(int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCapturePartial(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<com.android.systemui.recents.tv.views.TaskCardView: com.android.systemui.recents.tv.animations.RecentsRowFocusAnimationHolder getRecentsRowFocusAnimationHolder()>
<com.google.android.gles_jni.GLImpl: void glTexEnvx(int,int,int)>
<android.opengl.GLES20: boolean glIsEnabled(int)>
<com.android.systemui.qs.QSTile.BooleanState: java.lang.StringBuilder toStringBuilder()>
<com.android.layoutlib.bridge.impl.ResourceHelper: boolean parseFloatAttribute(java.lang.String,java.lang.String,android.util.TypedValue,boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void fadeGrayscale(boolean,long)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<android.content.pm.PackageInstaller.SessionParams: void writeToParcel(android.os.Parcel,int)>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.systemui.statusbar.ExpandableView: void setClipToActualHeight(boolean)>
<com.android.server.backup.PackageManagerBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.location.Location: void writeToParcel(android.os.Parcel,int)>
<android.content.Intent: int getFlags()>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getCompilerPackageStats(java.lang.String)>
<com.android.systemui.recents.views.TaskViewTransform: void fillIn(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setExpandedHeight(float)>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>
<com.android.hotspot2.asn1.Asn1Oid: boolean equals(java.lang.Object)>
<android.widget.Switch: android.content.res.ColorStateList getThumbTintList()>
<android.webkit.WebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)>
<android.text.style.LocaleSpan: void <init>(java.util.Locale)>
<android.view.MotionEvent: float getHistoricalY(int)>
<com.android.tools.layoutlib.create.OverrideMethod: int invokeI(java.lang.String,boolean,java.lang.Object)>
<android.net.IpPrefix: java.lang.String toString()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedWakingUp()>
<android.media.browse.MediaBrowser.ItemCallback: void onError(java.lang.String)>
<com.android.anqp.Constants: java.lang.String getPrefixedString(java.nio.ByteBuffer,int,java.nio.charset.Charset,boolean)>
<android.view.ViewGroup: void dispatchProvideStructure(android.view.ViewStructure)>
<com.android.server.statusbar.StatusBarManagerInternal: void showTvPictureInPictureMenu()>
<com.android.hotspot2.est.ESTHandler: void close()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeyType(java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: void setExpandedChild(android.view.View)>
<android.view.KeyEvent: java.lang.String getCharacters()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquationSeparate(int,int)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.opengl.GLES10: void glMaterialx(int,int,int)>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>
<android.webkit.WebViewDatabase: boolean hasFormData()>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>
<android.transition.TransitionManager: void go(android.transition.Scene,android.transition.Transition)>
<com.android.documentsui.Events.InputEvent: boolean isShiftKeyDown()>
<android.view.View: void drawableHotspotChanged(float,float)>
<android.media.browse.MediaBrowser: void subscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)>
<com.android.server.policy.PhoneWindowManager: void setInitialDisplaySize(android.view.Display,int,int,int)>
<android.app.assist.AssistStructure.ViewNode: int getLeft()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void getTaskStackBounds(android.graphics.Rect,android.graphics.Rect,int,int,int,android.graphics.Rect)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,int[],int)>
<com.android.server.am.BatteryStatsService: void publish(android.content.Context)>
<com.android.systemui.classifier.ClassifierData: java.util.ArrayList getEndingStrokes()>
<com.android.printspooler.model.RemotePrintDocument: boolean hasLaidOutPages()>
<com.android.printspooler.ui.FusedPrintersProvider: void onProviderEnabled(java.lang.String)>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.documentsui.dirlist.MultiSelectManager: boolean hasSelection()>
<android.media.audiofx.Equalizer: void <init>(int,int)>
<android.renderscript.ScriptIntrinsicBLAS: void SGEMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>
<com.android.systemui.statusbar.phone.ManagedProfileController: boolean hasActiveProfile()>
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.systemui.tuner.PreviewNavInflater: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.bluetoothmidiservice.BluetoothMidiService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.egg.MLand: void onDraw(android.graphics.Canvas)>
<com.android.providers.settings.SettingsHelper: void <init>(android.content.Context)>
<android.renderscript.Matrix2f: void <init>()>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>
<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>
<com.android.hotspot2.osu.HTTPHandler: java.security.cert.X509Certificate getOSUCertificate(java.net.URL)>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<com.android.tools.layoutlib.create.AsmAnalyzer: void <init>(com.android.tools.layoutlib.create.Log,java.util.List,com.android.tools.layoutlib.create.AsmGenerator,java.lang.String[],java.lang.String[],java.util.Set,java.lang.String[])>
<android.hardware.camera2.legacy.CaptureCollector: void <init>(int,android.hardware.camera2.legacy.CameraDeviceState)>
<android.bluetooth.BluetoothProfile: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>
<android.media.Rating: float getStarRating()>
<android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)>
<android.view.Window: void invalidatePanelMenu(int)>
<com.android.systemui.statusbar.phone.PanelView: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.view.WindowId: void registerFocusObserver(android.view.WindowId.FocusObserver)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setShowForAllUsers(boolean)>
<android.app.Fragment: java.lang.String getTag()>
<android.widget.GridView: int getVerticalSpacing()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean isEmpty()>
<android.content.pm.PackageInstaller.SessionInfo: float getProgress()>
<android.provider.Contacts.People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)>
<android.graphics.Canvas: void rotate(float)>
<android.os.Message: android.os.Handler getTarget()>
<android.widget.CalendarView: long getMaxDate()>
<android.widget.ScrollView: void computeScroll()>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.renderscript.Script.FieldBase: void <init>()>
<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager.CarrierFrequencyRange[] getCarrierFrequencies()>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.internal.telephony.IccCardConstants.State getSimState(int)>
<android.widget.SearchView: void onActionViewExpanded()>
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getHeight()>
<android.media.RingtoneManager: int inferStreamType()>
<com.android.systemui.statusbar.phone.PanelView: void flingToHeight(float,boolean,float,float,boolean)>
<com.android.systemui.statusbar.policy.KeyButtonView: void loadAsync(java.lang.String)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsDetailShowing()>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>
<android.hardware.camera2.utils.ParamsUtils: android.util.Rational createRational(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.ButtonDispatcher getHomeButton()>
<android.widget.SimpleAdapter: long getItemId(int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvi(int,int,int)>
<android.preference.DialogPreference: void onActivityDestroy()>
<android.telephony.SubscriptionManager: void addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)>
<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowFamily(int)>
<android.graphics.drawable.ColorDrawable: boolean onStateChange(int[])>
<android.graphics.Movie: boolean isOpaque()>
<android.net.Credentials: int getUid()>
<android.printservice.PrintDocument: android.print.PrintDocumentInfo getInfo()>
<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.telecom.Connection: java.lang.String capabilitiesToString(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionPending()>
<com.android.server.pm.PermissionsState: int grantInstallPermission(com.android.server.pm.BasePermission)>
<com.android.nfc_extras.EeExternalFieldException: void <init>()>
<android.bluetooth.BluetoothGattServer: void clearServices()>
<com.android.printspooler.widget.CustomErrorEditText: java.lang.CharSequence getError()>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.net.TrafficStats: long getUidTxPackets(int)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackType(int)>
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()>
<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.graphics.MaskFilter: void finalize()>
<android.view.Display: void getRectSize(android.graphics.Rect)>
<android.app.Notification.Builder: android.app.Notification.Builder setNumber(int)>
<android.bluetooth.le.AdvertiseSettings: boolean isConnectable()>
<com.android.systemui.statusbar.RemoteInputController: boolean isRemoteInputActive()>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.android.server.wm.AppWindowAnimator: void setAnimation(android.view.animation.Animation,int,int,boolean,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: void createCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>
<android.hardware.camera2.legacy.RequestHolder: int numJpegTargets()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setGravity(int)>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>
<android.provider.MediaStore.Video.Media: android.net.Uri getContentUri(java.lang.String)>
<android.media.SyncParams: android.media.SyncParams setTolerance(float)>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.content.DialogInterface: void dismiss()>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder addMixRule(int,java.lang.Object)>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener: void stop()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.widget.FrameLayout getContentRoot()>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TableRow: android.widget.TableRow.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstAtop()>
<android.widget.ListPopupWindow: void setSoftInputMode(int)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<com.android.gallery3d.common.Utils: long crc64Long(java.lang.String)>
<android.view.ViewStructure: android.view.ViewStructure asyncNewChild(int)>
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.PackageManagerService: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>
<android.graphics.Matrix: java.lang.String toShortString()>
<com.android.systemui.statusbar.tv.TvStatusBar: void addQsTile(android.content.ComponentName)>
<com.android.systemui.recents.views.AnimationProps: com.android.systemui.recents.views.AnimationProps setListener(android.animation.Animator.AnimatorListener)>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<android.media.MediaRecorder: void setOrientationHint(int)>
<com.android.gallery3d.common.BitmapUtils: boolean isSupportedByRegionDecoder(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glAlphaFunc(int,float)>
<android.app.Activity: void startLocalVoiceInteraction(android.os.Bundle)>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>
<android.database.CursorWindow: void onAllReferencesReleased()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>
<android.app.Notification.InboxStyle: void <init>(android.app.Notification.Builder)>
<android.widget.VideoView: void onMeasure(int,int)>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void removeListener(android.animation.Animator.AnimatorListener)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnEndRunnable(java.lang.Runnable)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read()>
<com.android.hotspot2.osu.commands.MOData: void <init>(android.net.wifi.PasspointManagementObjectDefinition)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>
<android.app.DialogFragment: void onStart()>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateShadowAlpha()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>
<android.text.format.DateUtils: java.lang.String getAMPMString(int)>
<android.net.TrafficStats: long getTotalTxPackets()>
<android.animation.ObjectAnimator: void setupEndValues()>
<com.android.systemui.qs.external.TileLifecycleManager: void handleDestroy()>
<android.net.NetworkCapabilities: boolean hasTransport(int)>
<android.view.animation.Animation: void scaleCurrentDuration(float)>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,byte[])>
<android.telecom.Conference: int getConnectionCapabilities()>
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>
<android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>
<android.widget.Checkable: boolean isChecked()>
<com.android.settingslib.bluetooth.Utils: void setErrorListener(com.android.settingslib.bluetooth.Utils.ErrorListener)>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context)>
<com.android.systemui.recents.RecentsImpl: void onConfigurationChanged()>
<android.webkit.CacheManager.CacheResult: void setEncoding(java.lang.String)>
<android.widget.StackView: void showNext()>
<android.graphics.Paint: boolean isStrikeThruText()>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<android.view.VelocityTracker: void clear()>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateDefaultLayoutParams()>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<com.android.wallpapercropper.CropView: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.graphics.drawable.NinePatchDrawable: int getAlpha()>
<android.provider.VoicemailContract.Voicemails: android.net.Uri buildSourceUri(java.lang.String)>
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.os.CommonClock.OnServerDiedListener: void onServerDied()>
<android.filterpacks.imageproc.DocumentaryFilter: void process(android.filterfw.core.FilterContext)>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>
<android.app.LoaderManager.LoaderCallbacks: void onLoaderReset(android.content.Loader)>
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair previewCaptured(long)>
<com.android.gallery3d.glrenderer.BasicTexture: void setSize(int,int)>
<android.view.ViewParent: void requestFitSystemWindows()>
<android.view.inputmethod.BaseInputConnection: android.os.Handler getHandler()>
<com.android.systemui.statusbar.notification.ActionListTransformState: void resetTransformedView()>
<com.android.settingslib.bluetooth.MapProfile: boolean isConnectable()>
<com.android.preload.actions.ComputeThresholdXAction: void <init>(java.lang.String,com.android.preload.DumpTableModel,java.lang.String)>
<android.net.wifi.WifiManager.WpsCallback: void onFailed(int)>
<com.android.documentsui.NavigationView.Environment: boolean isSearchExpanded()>
<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<android.telecom.InCallService: void setMuted(boolean)>
<android.service.notification.ZenModeConfig.ScheduleInfo: android.service.notification.ZenModeConfig.ScheduleInfo copy()>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>
<android.net.Uri: java.util.List getPathSegments()>
<android.widget.PopupWindow: void setHeight(int)>
<com.android.server.notification.ScheduleCalendar: java.lang.String toString()>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.animation.LayoutTransition: boolean isTransitionTypeEnabled(int)>
<android.view.View: boolean canScrollHorizontally(int)>
<android.widget.TableRow: void onLayout(boolean,int,int,int,int)>
<android.widget.Gallery: void setAnimationDuration(int)>
<android.renderscript.ScriptIntrinsicBLAS: void CSYR2K(int,int,android.renderscript.Float2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Float2,android.renderscript.Allocation)>
<android.text.util.Rfc822Token: java.lang.String getComment()>
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent.PointerCoords)>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void <init>(java.lang.String)>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>
<android.os.Parcel: boolean[] createBooleanArray()>
<android.content.Context: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.security.keystore.KeyInfo: int getKeySize()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightError()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.accessibilityservice.AccessibilityService.MagnificationController: float getCenterY()>
<android.view.View: boolean hasWindowFocus()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: char[] getTextCharacters(int[])>
<com.android.server.am.ActivityManagerService: boolean convertFromTranslucent(android.os.IBinder)>
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)>
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasForegroundColor()>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.widget.ListView: boolean areFooterDividersEnabled()>
<com.android.server.location.GeofenceManager: void <init>(android.content.Context,com.android.server.location.LocationBlacklist)>
<android.database.CursorWindow: void <init>(boolean)>
<android.provider.ContactsContract.StatusUpdates: int getPresenceIconResourceId(int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>
<com.android.server.wm.TaskStack: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte)>
<com.android.systemui.statusbar.tv.TvStatusBar: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.media.MediaCodec: void setInputSurface(android.view.Surface)>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<com.android.preload.DumpData: java.util.Map invertData()>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<android.widget.CursorTreeAdapter: void notifyDataSetInvalidated()>
<android.content.ComponentCallbacks: void onLowMemory()>
<android.webkit.ClientCertRequest: void cancel()>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getType(boolean)>
<android.app.PendingIntent: java.lang.String getCreatorPackage()>
<android.graphics.drawable.LayerDrawable: void setLayerWidth(int,int)>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void reverse()>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<com.android.photos.views.TiledImageRenderer: void notifyModelInvalidated()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.renderscript.Long3: void <init>(long,long,long)>
<android.telecom.Call: void unregisterCallback(android.telecom.Call.Callback)>
<android.app.Dialog: void setCancelMessage(android.os.Message)>
<android.content.res.Resources.Theme: void dump(int,java.lang.String,java.lang.String)>
<android.util.EventLog: int writeEvent(int,int)>
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)>
<android.webkit.WebSettings: int getDisabledActionModeMenuItems()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int next()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textStartsWith(java.lang.String)>
<android.os.Debug: int getGlobalAllocSize()>
<com.android.server.notification.EventConditionProvider: void onBootComplete()>
<android.app.ActivityManagerProxy: android.app.IActivityContainer createStackOnDisplay(int)>
<com.android.settingslib.drawer.ProfileSelectDialog: void show(android.app.FragmentManager,com.android.settingslib.drawer.Tile)>
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean supportsProfiles()>
<com.android.mtp.MtpDocumentsService: android.os.IBinder onBind(android.content.Intent)>
<android.media.Rating: boolean hasHeart()>
<com.android.settingslib.wifi.AccessPointPreference: void onLevelChanged()>
<android.telecom.VideoProfile: boolean isVideo(int)>
<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(java.lang.String,boolean)>
<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)>
<com.android.systemui.volume.VolumeUI: void onConfigurationChanged(android.content.res.Configuration)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>
<android.view.Display.HdrCapabilities: int hashCode()>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,int[],int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ActivatableNotificationView getActivatedChild()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isBlackListedActivity(java.lang.String)>
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>
<android.graphics.Path_Delegate: void native_setFillType(long,int)>
<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateDefaultLayoutParams()>
<com.android.systemui.qs.tiles.FlashlightTile: java.lang.CharSequence getTileLabel()>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<android.app.Notification.Style: void internalSetSummaryText(java.lang.CharSequence)>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.service.carrier.MessagePdu: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsSeekBar: android.content.res.ColorStateList getTickMarkTintList()>
<com.android.systemui.statusbar.EmptyShadeView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.usb.UsbDeviceConnection: boolean setConfiguration(android.hardware.usb.UsbConfiguration)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void setTaskStackHorizontalGridView(com.android.systemui.recents.tv.views.TaskStackHorizontalGridView)>
<android.widget.SearchView.OnCloseListener: boolean onClose()>
<com.android.systemui.qs.tiles.NightDisplayTile: com.android.systemui.qs.QSTile.BooleanState newTileState()>
<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onFinishedGoingToSleep(int)>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeIcon(java.lang.String)>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: boolean handleEvent(com.android.documentsui.Events.MotionInputEvent)>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>
<android.graphics.Region: boolean set(android.graphics.Rect)>
<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.app.FragmentHostCallback: boolean onUseFragmentManagerInflaterFactory()>
<android.content.pm.ShortcutManager: java.util.List getPinnedShortcuts()>
<android.view.animation.LinearInterpolator: void <init>()>
<com.android.systemui.statusbar.phone.PanelView: void collapse(boolean,float)>
<com.android.gallery3d.glrenderer.Texture: int getHeight()>
<android.telecom.InCallService.VideoCall: void requestCallDataUsage()>
<com.android.systemui.statusbar.SignalClusterView: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.gallery3d.glrenderer.GLCanvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<android.util.LruCache: int maxSize()>
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onServiceStateChange(int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getContentHeight()>
<com.android.systemui.statusbar.phone.AutoTileManager: void destroy()>
<android.graphics.Outline: void setEmpty()>
<com.android.documentsui.LocalPreferences: void setDisplayFileSize(android.content.Context,boolean)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>
<com.android.systemui.tuner.TunerActivity: void onCreate(android.os.Bundle)>
<android.graphics.Canvas_Delegate: boolean native_clipRect(long,float,float,float,float,int)>
<android.print.PrintAttributes.Margins: int getRightMils()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStrongAuthStateChanged(int)>
<com.android.systemui.statusbar.policy.NetworkController: void removeSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<android.media.session.MediaController: android.media.session.MediaController.PlaybackInfo getPlaybackInfo()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<com.google.android.gles_jni.GLImpl: void glDepthRangef(float,float)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setCertificateSubject(javax.security.auth.x500.X500Principal)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.ControllerActivityCounter getBluetoothControllerActivity()>
<com.android.server.notification.ScheduleCalendar: void setSchedule(android.service.notification.ZenModeConfig.ScheduleInfo)>
<android.util.ArraySet: boolean removeAll(java.util.Collection)>
<android.graphics.drawable.LayerDrawable: void setLayerHeight(int,int)>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void addCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onDestroy()>
<com.android.egg.neko.PrefState: void removeCat(com.android.egg.neko.Cat)>
<android.media.midi.MidiDeviceStatus: android.media.midi.MidiDeviceInfo getDeviceInfo()>
<android.widget.VideoView: void resume()>
<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>
<android.app.ActivityManagerProxy: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isSwipingInProgress()>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: java.lang.Process launchProcess(java.lang.String)>
<com.android.hotspot2.omadm.OMANode: java.lang.String toString()>
<com.android.location.provider.LocationProviderBase: void onDisable()>
<android.graphics.SurfaceTexture: void <init>(int)>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.view.MotionEvent: float getToolMinor(int)>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onTaskDataLoaded(com.android.systemui.recents.model.Task,android.app.ActivityManager.TaskThumbnailInfo)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment,float)>
<com.android.systemui.statusbar.NotificationOverflowContainer: com.android.systemui.statusbar.NotificationOverflowIconsView getIconsView()>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.QSTile: void removeCallbacks()>
<com.android.systemui.analytics.SensorLoggerSession: java.lang.String toString()>
<android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.NetworkController getNetworkController()>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.view.View: void setOnDragListener(android.view.View.OnDragListener)>
<android.widget.Scroller: int getStartY()>
<android.net.IpPrefix: int describeContents()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.photos.views.BlockingGLTextureView: void render()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: android.content.Context getActionMenuContext()>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>
<android.widget.Gallery: void setSpacing(int)>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>
<android.hardware.camera2.utils.TaskDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener,java.lang.String)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>
<android.content.pm.PackageParser.Instrumentation: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.InstrumentationInfo)>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<android.service.media.MediaBrowserService.BrowserRoot: android.os.Bundle getExtras()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void openInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,java.lang.String,int,int,int)>
<android.renderscript.ScriptGroup.Binding: void <init>(android.renderscript.Script.FieldID,java.lang.Object)>
<com.android.systemui.egg.MLand: void setupPlayers(int)>
<android.service.notification.ZenModeConfig.EventInfo: int hashCode()>
<com.android.systemui.statusbar.NotificationBackgroundView: void drawableHotspotChanged(float,float)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.pm.PackageManager: java.util.List getAllPermissionGroups(int)>
<android.text.DynamicLayout: android.text.Layout.Directions getLineDirections(int)>
<com.android.server.backup.Trampoline: void setAutoRestore(boolean)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<android.app.Notification.Builder: android.app.Notification.Builder setAutoCancel(boolean)>
<android.net.wifi.nan.ConfigRequest.Builder: android.net.wifi.nan.ConfigRequest.Builder setMasterPreference(int)>
<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: long flush()>
<android.util.Range: android.util.Range extend(java.lang.Comparable,java.lang.Comparable)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateSpeedBumpIndex(int)>
<android.view.ViewStub: void onMeasure(int,int)>
<android.animation.ValueAnimator: long getDuration()>
<com.android.server.retaildemo.UserInactivityCountdownDialog: void onStop()>
<com.android.systemui.qs.customize.CustomizeTileView: void setAppLabel(java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int,boolean)>
<com.android.server.vr.SettingsObserver.SettingChangeListener: void onSettingChanged()>
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>
<com.android.gallery3d.exif.ExifInterface: int setTagDefinition(short,int,short,short,int[])>
<com.android.server.job.controllers.ConnectivityController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSubscriptionAddress(android.net.Uri)>
<android.text.StaticLayout: int getLineTop(int)>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>
<android.content.ContentResolver: void cancelSync(android.net.Uri)>
<android.os.SystemClock: void sleep(long)>
<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)>
<android.view.View: void onWindowVisibilityChanged(int)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
<com.android.server.media.MediaResourceMonitorService: void <init>(android.content.Context)>
<android.app.ActionBar.TabListener: void onTabSelected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<com.android.settingslib.bluetooth.PanProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<android.widget.Spinner: void onMeasure(int,int)>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>
<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: java.lang.String toString()>
<android.widget.PopupWindow: void <init>(android.view.View,int,int)>
<android.app.admin.DevicePolicyManager: boolean isCallerApplicationRestrictionsManagingPackage()>
<android.graphics.Paint: void setAntiAlias(boolean)>
<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasConflictingGestures()>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>
<android.widget.AbsListView: long pointToRowId(int,int)>
<android.service.voice.VoiceInteractionSession.CompleteVoiceRequest: void sendCompleteResult(android.os.Bundle)>
<android.preference.TwoStatePreference: void setSummaryOff(int)>
<android.os.Message: void setTarget(android.os.Handler)>
<android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean isPlatformFile()>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: void sendConfirmationResult(boolean,android.os.Bundle)>
<com.android.systemui.power.PowerNotificationWarnings: void showLowBatteryWarning(boolean)>
<android.view.ViewManager: void removeView(android.view.View)>
<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void onClick(android.view.View)>
<android.app.FragmentManager: void popBackStack(java.lang.String,int)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>
<android.content.pm.PackageParser.Component: void setPackageName(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.media.RingtoneManager: android.database.Cursor getCursor()>
<android.media.AudioRecordingConfiguration: int getClientAudioSource()>
<android.net.NetworkCapabilities: int describeContents()>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivities(java.util.List)>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context)>
<com.android.uiautomator.core.UiDevice: boolean pressDelete()>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void goToKeyguard()>
<com.android.anqp.eap.NonEAPInnerAuth: java.lang.String toString()>
<android.app.backup.IFullBackupRestoreObserver: void onStartRestore()>
<android.graphics.Region: void setEmpty()>
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.telecom.CallScreeningService.CallResponse: boolean getDisallowCall()>
<com.android.location.provider.GmsFusedBatchOptions: boolean isFlagSet(int)>
<android.service.voice.VoiceInteractionSessionService: android.service.voice.VoiceInteractionSession onNewSession(android.os.Bundle)>
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>
<com.android.systemui.recents.views.TaskStackViewScroller: void fling(float,int,int,int,int,int,int)>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentProviderClient)>
<com.android.tools.layoutlib.create.AsmGenerator: void setRewriteMethodCallClasses(java.util.Set)>
<android.provider.DocumentsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>
<android.util.ArrayMap: java.lang.String toString()>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig build()>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range getBitrateRange()>
<com.android.server.notification.NotificationUsageStats.Aggregate: void addSample(long)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.phone.ManagedProfileController getManagedProfileController()>
<com.android.hotspot2.osu.OSUResponse: void <init>(com.android.hotspot2.omadm.XMLNode,com.android.hotspot2.osu.OSUMessageType,java.lang.String[])>
<com.android.photos.views.BlockingGLTextureView: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void removeLongPressCallback()>
<android.service.voice.VoiceInteractionService: int getDisabledShowContext()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.filterpacks.imageproc.DuotoneFilter: void <init>(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void generateAddAnimation(android.view.View,boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStopped()>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void resetState()>
<com.android.documentsui.State: boolean hasLocationChanged()>
<android.view.MenuItem: android.content.Intent getIntent()>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemClick(com.android.systemui.qs.QSDetailItems.Item)>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>
<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.View: boolean isAttachedToWindow()>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: void onBindDocumentHolder(com.android.documentsui.dirlist.DocumentHolder,android.database.Cursor)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<android.widget.RadioGroup: void clearCheck()>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>
<android.text.style.BackgroundColorSpan: int describeContents()>
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])>
<org.apache.http.conn.ConnectTimeoutException: void <init>()>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,int)>
<com.android.server.policy.WindowOrientationListener: void enable()>
<com.android.systemui.statusbar.notification.TextViewTransformState: com.android.systemui.statusbar.notification.TextViewTransformState obtain()>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void finishDeferredConfiguration(java.util.List)>
<com.android.systemui.statusbar.NotificationGuts.OnGutsClosedListener: void onGutsClosed(com.android.systemui.statusbar.NotificationGuts)>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isShowingAndNotOccluded()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasTransposedNavigationBar()>
<android.renderscript.FieldPacker: void subalign(int)>
<android.app.Activity: void setTheme(int)>
<com.android.systemui.qs.QSTile: void setListening(java.lang.Object,boolean)>
<android.view.TextureView: void onVisibilityChanged(android.view.View,int)>
<android.widget.AbsListView: int pointToPosition(int,int)>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>
<android.widget.Editor.HandleView: void onDraw(android.graphics.Canvas)>
<com.android.documentsui.FilesActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.android.systemui.classifier.AnglesPercentageEvaluator: float evaluate(float)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.security.keystore.KeyProtection: int getUserAuthenticationValidityDurationSeconds()>
<com.android.systemui.statusbar.KeyboardShortcuts: void toggle(android.content.Context,int)>
<com.android.layoutlib.bridge.impl.PlayAnimationThread: void <init>(android.animation.Animator,com.android.layoutlib.bridge.impl.RenderSessionImpl,java.lang.String,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.systemui.statusbar.NotificationContentView: boolean hasOverlappingRendering()>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)>
<android.net.nsd.NsdServiceInfo: java.lang.String toString()>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>
<android.view.inputmethod.CursorAnchorInfo: boolean equals(java.lang.Object)>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.ExpandableView: int getIntrinsicHeight()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<com.android.server.pm.PackageManagerService: int getMoveStatus(int)>
<android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
<android.util.EventLog.Event: int getTag()>
<com.android.layoutlib.bridge.util.NinePatchInputStream: boolean markSupported()>
<com.android.server.InputMethodManagerService.Lifecycle: void onSwitchUser(int)>
<android.widget.Adapter: int getCount()>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean isVisible()>
<com.android.server.input.InputManagerService: void setPointerIconType(int)>
<com.android.layoutlib.bridge.bars.Config: boolean isGreaterOrEqual(int,int)>
<com.google.android.gles_jni.GLImpl: void glAlphaFuncx(int,int)>
<com.android.uiautomator.core.UiObject: boolean isScrollable()>
<com.android.server.notification.ConditionProviders: boolean subscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>
<android.net.http.HttpResponseCache: int getHitCount()>
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>
<android.telephony.CellIdentityCdma: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.File,boolean,com.android.resources.Density)>
<android.content.ContentQueryMap: void close()>
<com.android.hotspot2.omadm.OMANode: java.util.Map buildAttributes(java.lang.String[])>
<com.android.shell.RemoteBugreportReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.net.RouteInfo: int describeContents()>
<android.location.Address: int getMaxAddressLineIndex()>
<com.android.commands.uiautomator.RunTestCommand: void run(java.lang.String[])>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>
<android.net.ip.IpReachabilityMonitor.Callback: void notifyLost(java.net.InetAddress,java.lang.String)>
<android.content.RestrictionEntry: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: android.view.NotificationHeaderView getNotificationHeader()>
<android.telecom.PhoneAccount: boolean isEnabled()>
<com.android.settingslib.BatteryInfo: com.android.settingslib.BatteryInfo getBatteryInfo(android.content.Context,android.content.Intent,android.os.BatteryStats,long,boolean)>
<android.media.session.MediaController: java.util.List getQueue()>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showWithDismissAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable)>
<com.android.systemui.qs.external.TileLifecycleManager: void onTileAdded()>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>
<com.android.systemui.statusbar.policy.CallbackHandler: void <init>()>
<android.view.View: float getLeftFadingEdgeStrength()>
<android.graphics.drawable.GradientDrawable: android.content.res.ColorStateList getColor()>
<com.android.server.fingerprint.RemovalClient: boolean onEnumerationResult(int,int)>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.qs.GlobalSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>
<android.media.session.PlaybackState: int getState()>
<android.view.inputmethod.InputConnectionWrapper: void closeConnection()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.hardware.radio.RadioManager.BandConfig: int getRegion()>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void clearTimerMessage()>
<android.view.InputDevice.MotionRange: float getRange()>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>
<com.android.anqp.eap.EAPMethod: int hashCode()>
<com.android.systemui.qs.tiles.ColorInversionTile: int getMetricsCategory()>
<com.android.statementservice.retriever.Relation: boolean matches(com.android.statementservice.retriever.Relation)>
<android.hardware.usb.UsbConfiguration: boolean isSelfPowered()>
<android.content.Intent: java.lang.Object clone()>
<android.content.res.TypedArray: void recycle()>
<com.android.server.am.ActivityManagerService: void enterPictureInPictureMode(android.os.IBinder)>
<android.inputmethodservice.ExtractEditText: boolean hasFocus()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: boolean equals(java.lang.Object)>
<android.os.UserManager: boolean isUserRunningAndLocked()>
<android.nfc.tech.NfcA: int getMaxTransceiveLength()>
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()>
<android.widget.ZoomButtonsController: void setVisible(boolean)>
<android.widget.TimePicker: void setMinute(int)>
<android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>
<android.util.LongSparseArray: java.lang.Object get(long)>
<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.InputMethodService: void onDestroy()>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOver()>
<com.android.systemui.Prefs: void remove(android.content.Context,java.lang.String)>
<android.service.quicksettings.TileService: void startActivityAndCollapse(android.content.Intent)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<com.android.systemui.recents.Recents: android.os.IBinder getSystemUserCallbacks()>
<android.content.ClipboardManager: boolean hasPrimaryClip()>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>
<android.service.voice.VoiceInteractionService: void onLaunchVoiceAssistFromKeyguard()>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.os.IBinder asBinder()>
<android.telecom.Connection.VideoProvider: void changePeerDimensions(int,int)>
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>
<com.android.server.LockGuard: java.lang.Object guard(java.lang.Object)>
<com.android.uiautomator.core.UiDevice: boolean click(int,int)>
<android.net.RouteInfo: java.lang.String toString()>
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>
<android.media.MediaRecorder: void setCaptureRate(double)>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.Throwable)>
<android.content.BroadcastReceiver: void clearAbortBroadcast()>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
<com.android.systemui.volume.VolumeDialogComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.AutomaticZenRule: android.net.Uri getConditionId()>
<com.android.server.policy.PhoneWindowManager: boolean rotationHasCompatibleMetricsLw(int,int)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context)>
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()>
<android.content.ContentValues: int hashCode()>
<android.gesture.GestureLibrary: int getOrientationStyle()>
<android.graphics.Point: void readFromParcel(android.os.Parcel)>
<android.app.UiAutomation.AccessibilityEventFilter: boolean accept(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.tv.pip.PipOnboardingActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.TimePicker: int getMinute()>
<com.android.preload.DeviceUtils: void doShell(com.android.ddmlib.IDevice,java.lang.String,com.android.ddmlib.IShellOutputReceiver,long,java.util.concurrent.TimeUnit)>
<android.app.Application: void <init>()>
<android.widget.SimpleCursorAdapter.CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>
<com.android.smspush.WapPushManager: boolean verifyData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>
<android.telecom.CallAudioState: void writeToParcel(android.os.Parcel,int)>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>
<android.text.method.TextKeyListener: void release()>
<android.media.SyncParams: int getAudioAdjustMode()>
<android.widget.VideoView: int getBufferPercentage()>
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>
<android.telecom.ConnectionService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.tuner.TunerService: com.android.systemui.tuner.TunerService get(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isScreenBrightnessBoosted()>
<com.android.server.AppOpsService: void setUserRestriction(int,boolean,android.os.IBinder,int,java.lang.String[])>
<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.ViewTransformationHelper: void setVisible(boolean)>
<android.app.AppOpsManager: void finishOp(java.lang.String,int,java.lang.String)>
<android.widget.Chronometer: java.lang.CharSequence getAccessibilityClassName()>
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>
<com.android.systemui.qs.tiles.CellularTile: java.lang.String removeTrailingPeriod(java.lang.String)>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.widget.Editor.EditOperation: void commit()>
<android.widget.OverScroller: void startScroll(int,int,int,int)>
<android.net.MailTo: java.util.Map getHeaders()>
<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>
<com.android.settingslib.AppItem: int describeContents()>
<android.util.Pools.SynchronizedPool: java.lang.Object acquire()>
<android.preference.Preference: void onClick()>
<android.view.ActionMode: void setSubtitle(int)>
<com.android.anqp.eap.EAPMethod: java.util.Map getAuthParams()>
<android.content.ClipDescription: int getMimeTypeCount()>
<android.widget.AbsListView: void smoothScrollBy(int,int)>
<android.hardware.camera2.params.RggbChannelVector: boolean equals(java.lang.Object)>
<com.android.printspooler.widget.PageContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.photos.DumbBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.graphics.pdf.PdfDocument: android.graphics.pdf.PdfDocument.Page startPage(android.graphics.pdf.PdfDocument.PageInfo)>
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>
<android.animation.AnimatorSet: void start()>
<android.content.res.TypedArray: java.lang.String toString()>
<android.util.Spline.MonotoneCubicSpline: void <init>(float[],float[])>
<android.media.AudioDeviceInfo: int getId()>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins)>
<android.nfc.NdefRecord: byte[] getType()>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<com.android.mtp.MtpDocumentsService: void onCreate()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onViewRemoved(android.view.View)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.telecom.Call.Details: boolean can(int)>
<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void considerSignature(java.lang.String)>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(float[],int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onPress(int)>
<com.android.systemui.qs.tiles.UserDetailItemView: boolean hasOverlappingRendering()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.google.android.maps.MapView: void setTraffic(boolean)>
<android.graphics.Outline: boolean getRect(android.graphics.Rect)>
<com.android.hotspot2.asn1.Asn1String: java.lang.String toString()>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(java.lang.CharSequence,boolean)>
<com.android.location.provider.ProviderRequestUnbundled: void <init>(com.android.internal.location.ProviderRequest)>
<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>
<android.widget.Switch: android.graphics.PorterDuff.Mode getTrackTintMode()>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>
<com.android.server.policy.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.phone.StatusBarIconController getIconController()>
<android.text.Spannable.Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>
<android.media.soundtrigger.SoundTriggerDetector.EventPayload: byte[] getTriggerAudio()>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsKeypadSupported()>
<com.android.server.notification.RankingConfig: int getImportance(java.lang.String,int)>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: void <init>(android.hardware.radio.RadioManager.FmBandDescriptor)>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>
<com.android.hotspot2.asn1.OidMappings.SigEntry: com.android.hotspot2.asn1.Asn1Oid getKeyAlgo()>
<android.telecom.Conference: void onDisconnect()>
<com.android.systemui.statusbar.notification.NotificationTemplateViewWrapper: void setPictureGrayscale(boolean,boolean,long)>
<android.view.View: boolean canResolveLayoutDirection()>
<android.location.Criteria: void <init>(android.location.Criteria)>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<com.android.server.am.BatteryStatsService: void noteStopVideo(int)>
<android.widget.Editor.SuggestionsPopupWindow: void measureContent()>
<com.android.systemui.recents.tv.animations.RecentsRowFocusAnimationHolder: void reset()>
<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>
<android.hardware.camera2.utils.ArrayUtils: boolean contains(int[],int)>
<android.net.TrafficStats: void untagSocket(java.net.Socket)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void computeCurrentVelocity(int)>
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()>
<com.android.egg.neko.Food: android.graphics.drawable.Icon getIcon(android.content.Context)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>
<com.android.systemui.statusbar.notification.ImageTransformState: android.graphics.drawable.Icon getIcon()>
<android.content.SyncAdapterType: boolean isUserVisible()>
<android.view.ScaleGestureDetector: float getScaleFactor()>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker getStrongAuthTracker()>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFinished(android.print.PageRange[])>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>
<android.media.MediaRouter.RouteInfo: int getSupportedTypes()>
<android.graphics.Canvas_Delegate: void nativeDrawBitmapMatrix(long,android.graphics.Bitmap,long,long)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<android.animation.Animator: void addPauseListener(android.animation.Animator.AnimatorPauseListener)>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>
<android.util.JsonWriter: android.util.JsonWriter beginObject()>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<android.telecom.ParcelableCallAnalytics.AnalyticsEvent: int getEventName()>
<android.app.job.JobInfo.TriggerContentUri: android.net.Uri getUri()>
<com.android.tools.layoutlib.java.Charsets: byte[] toUtf8Bytes(char[],int,int)>
<android.widget.MediaController: void hide()>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.animation.Animator,float,float,float,float)>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: java.lang.String toString()>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.settingslib.widget.AnimatedImageView: void <init>(android.content.Context)>
<android.telecom.RemoteConference.Callback: void onDisconnected(android.telecom.RemoteConference,android.telecom.DisconnectCause)>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onDraggingInRecentsEnded(float)>
<android.webkit.WebViewProvider.ViewDelegate: void onScrollChanged(int,int,int,int)>
<com.android.gallery3d.exif.ExifTag: short getDataType()>
<android.content.ContentValues: void remove(java.lang.String)>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>
<android.telecom.Connection: void onPostDialContinue(boolean)>
<android.media.ImageWriter: int getMaxImages()>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>
<android.text.DynamicLayout: int getBottomPadding()>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>
<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
<android.preference.Preference: boolean shouldPersist()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerUp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<com.android.server.midi.MidiService.Lifecycle: void <init>(android.content.Context)>
<android.widget.RemoteViews: void setIcon(int,java.lang.String,android.graphics.drawable.Icon)>
<com.android.server.am.ActivityManagerService: int getAppStartMode(int,java.lang.String)>
<android.text.method.ArrowKeyMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<com.android.commands.svc.PowerCommand: java.lang.String longHelp()>
<com.android.systemui.statusbar.NotificationBackgroundView: void onDraw(android.graphics.Canvas)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClosingFinished()>
<android.service.dreams.DreamService: boolean onSearchRequested(android.view.SearchEvent)>
<com.android.shell.BugreportReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>
<com.android.keyguard.KeyguardSimPinView: void onPause()>
<com.android.server.NativeDaemonEvent: int getCode()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getUserBadgeForDensityNoBackground(android.os.UserHandle,int)>
<com.android.systemui.tv.pip.PipControlButtonView: void reset()>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStatsHistory getHistory(android.net.NetworkTemplate,int,int,int,int,long,long,int)>
<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>
<android.view.animation.Animation: void setFillBefore(boolean)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCreate(android.os.Bundle)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>
<com.android.settingslib.drawer.TileUtils: void getTilesForIntent(android.content.Context,android.os.UserHandle,android.content.Intent,java.util.Map,java.lang.String,java.util.List,boolean,boolean)>
<android.webkit.WebMessage: android.webkit.WebMessagePort[] getPorts()>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getAchievableFrameRatesFor(int,int)>
<android.net.wifi.WifiEnterpriseConfig: void setPlmn(java.lang.String)>
<android.media.SyncParams: android.media.SyncParams setSyncSource(int)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTint(int)>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String shortHelp()>
<android.service.dreams.DreamService: void onDetachedFromWindow()>
<com.android.hotspot2.omadm.OMAConstructed: com.android.hotspot2.omadm.OMANode addChild(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.animation.Keyframe: void setValue(java.lang.Object)>
<android.widget.ExpandableListView.OnGroupCollapseListener: void onGroupCollapse(int)>
<com.android.systemui.analytics.DataCollector: void onNotificationDoubleTap()>
<android.os.health.TimerStat: int describeContents()>
<android.renderscript.Script.FieldBase: android.renderscript.Allocation getAllocation()>
<android.graphics.drawable.Drawable: void setAlpha(int)>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain(android.view.accessibility.AccessibilityRecord)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setCurrentUserSetup(boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void setNoUserInteractionState()>
<com.android.server.wallpaper.WallpaperManagerService: void <init>(android.content.Context)>
<android.os.Debug: int getThreadExternalAllocSize()>
<android.view.WindowManagerPolicy.WindowState: boolean isDrawnLw()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>
<com.android.server.policy.GlobalActions.Action: void onPress()>
<android.telecom.Call.Callback: void onConnectionEvent(android.telecom.Call,java.lang.String,android.os.Bundle)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void onMeasure(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int[] getPackageGids(java.lang.String)>
<android.view.ViewDebug.ViewOperation: void post(java.lang.Object[])>
<com.android.systemui.ViewInvertHelper: void addTarget(android.view.View)>
<android.speech.tts.SynthesisRequest: java.lang.String getVariant()>
<com.android.systemui.statusbar.CommandQueue: void notificationLightOff()>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>
<com.android.MainActivity.OSUService: void selectOsu(int)>
<com.android.layoutlib.bridge.android.BridgeContext: int getFrameworkResourceValue(com.android.resources.ResourceType,java.lang.String,int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGoToKeyguard()>
<android.app.FragmentHostCallback: void onAttachFragment(android.app.Fragment)>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>
<com.android.documentsui.dirlist.AnimationView: float getPosition()>
<com.android.hotspot2.omadm.OMAConstructed: java.util.Collection getChildren()>
<android.webkit.ServiceWorkerClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setProtocol(java.lang.String)>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
<android.transition.Transition: java.lang.String getName()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationGuts getGuts()>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>
<android.os.Messenger: int describeContents()>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>
<com.android.hotspot2.pps.HomeSP: java.util.Collection getOtherHomePartners()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.util.List getInfo()>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnected()>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>
<android.telecom.TelecomManager: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<com.android.systemui.statusbar.phone.PanelBar: void collapsePanel(boolean,boolean,float)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isInVisibleLocation(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>
<com.android.systemui.qs.tiles.WifiTile: int getMetricsCategory()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserSetsURL(java.lang.String,java.lang.String)>
<com.android.systemui.stackdivider.WindowManagerProxy: void maximizeDockedStack()>
<com.android.systemui.qs.QSTile.AirplaneBooleanState: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<android.view.View: boolean isSelected()>
<android.view.View: void layout(int,int,int,int)>
<com.android.printspooler.util.ApprovedPrintServices: boolean isApprovedService(android.content.ComponentName)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOn()>
<android.app.Notification.Action.WearableExtender: boolean getHintDisplayActionInline()>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,int[],int)>
<android.print.PageRange: int describeContents()>
<android.app.Notification.Builder: android.app.Notification.Builder setContent(android.widget.RemoteViews)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>
<android.media.MediaRouter.Callback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<com.android.keyguard.PasswordTextView: boolean hasOverlappingRendering()>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getColumnNumber()>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<android.graphics.Paint_Delegate: android.graphics.Rasterizer_Delegate getRasterizer()>
<android.text.style.LocaleSpan: void <init>(android.os.Parcel)>
<com.android.server.firewall.IntentFirewall: java.io.File getRulesDir()>
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>
<android.widget.ScrollView: void requestLayout()>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent)>
<android.view.TextureView: void setOpaque(boolean)>
<android.content.ClipboardManager: java.lang.CharSequence getText()>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>
<com.android.settingslib.accessibility.AccessibilityUtils: void setAccessibilityServiceState(android.content.Context,android.content.ComponentName,boolean,int)>
<com.android.settingslib.graph.UsageGraph: void onSizeChanged(int,int,int,int)>
<com.android.commands.requestsync.RequestSync: void main(java.lang.String[])>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMANode addChild(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<android.security.KeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()>
<android.app.FragmentManager: boolean isDestroyed()>
<com.android.server.am.ActivityManagerService: void setInstaller(com.android.server.pm.Installer)>
<android.graphics.drawable.AnimatedStateListDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.print.PrintAttributes.Resolution: int getHorizontalDpi()>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>
<android.graphics.Paint: android.graphics.Shader getShader()>
<com.android.settingslib.drawer.SettingsDrawerActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.hardware.usb.UsbDevice: int getInterfaceCount()>
<android.app.ActivityManagerProxy: int getFocusedStackId()>
<android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
<android.media.MediaPlayer: int getCurrentPosition()>
<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.widget.TextView: int getTotalPaddingTop()>
<android.print.PrintAttributes.Resolution: boolean equals(java.lang.Object)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo build()>
<com.android.server.am.CompatModePackages: void setFrontActivityScreenCompatModeLocked(int)>
<com.android.printspooler.model.CustomPrinterIconCache: void removeOldFiles(int)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: com.android.systemui.statusbar.notification.NotificationViewWrapper wrap(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayChanged(android.hardware.display.WifiDisplay)>
<com.android.server.DeviceIdleController: int[] getAppIdTempWhitelistInternal()>
<android.media.MediaSync: void setOnErrorListener(android.media.MediaSync.OnErrorListener,android.os.Handler)>
<com.android.preload.actions.ShowDataAction: void <init>(com.android.preload.DumpTableModel)>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>
<android.service.quicksettings.TileService: void onStopListening()>
<android.view.View: boolean hasNestedScrollingParent()>
<android.location.GnssNavigationMessageEvent: int describeContents()>
<android.graphics.ColorMatrix: void setRGB2YUV()>
<android.os.health.HealthStats: int getStatsKeyAt(int)>
<android.widget.TableRow: int getVirtualChildCount()>
<com.android.systemui.statusbar.stack.AmbientState: void setSpeedBumpIndex(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: boolean disallowSingleClick(android.view.MotionEvent)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: int generateTexture()>
<com.android.server.notification.CountdownConditionProvider: void <init>()>
<android.app.admin.DevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>
<android.widget.TextView: void setInputExtras(int)>
<android.view.textservice.SuggestionsInfo: void <init>(android.os.Parcel)>
<android.location.GnssMeasurement: long getReceivedSvTimeNanos()>
<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdEntry()>
<android.media.AudioAttributes.Builder: void <init>(android.media.AudioAttributes)>
<android.speech.tts.SynthesisCallback: void error(int)>
<com.android.documentsui.model.Durable: void reset()>
<com.android.systemui.qs.QSDetailItems: com.android.systemui.qs.QSDetailItems convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>
<android.view.MenuItem: java.lang.CharSequence getTitle()>
<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>
<android.graphics.drawable.GradientDrawable: boolean onStateChange(int[])>
<android.text.LineWidth: float getLineWidth(int)>
<android.content.pm.ResolveInfo: void <init>(android.content.pm.ResolveInfo)>
<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)>
<com.android.documentsui.DocumentsActivity: void onDocumentPicked(com.android.documentsui.model.DocumentInfo,com.android.documentsui.dirlist.Model)>
<com.android.layoutlib.bridge.android.BridgeContext: int getWallpaperDesiredMinimumWidth()>
<android.text.style.QuoteSpan: void <init>(int)>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFeedbackReporterPackage(android.content.Context)>
<android.widget.TextView: boolean hasSelection()>
<android.app.FragmentController: java.util.List retainNonConfig()>
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.phone.ScrimController: float getDozeBehindAlpha()>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: android.util.Pair getCount()>
<android.view.WindowManager.InvalidDisplayException: void <init>(java.lang.String)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean hasPendingClick()>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>
<com.android.systemui.statusbar.NotificationHeaderUtil.ViewComparator: boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitLdcInsn(java.lang.Object)>
<com.android.settingslib.net.UidDetailProvider: boolean isKeyForUser(int)>
<com.android.gallery3d.exif.ExifInterface: void removeTagDefinition(int)>
<com.android.documentsui.DocumentsApplication: com.android.documentsui.RootsCache getRootsCache(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.media.AudioRecord: int getBufferSizeInFrames()>
<com.android.systemui.classifier.HumanInteractionClassifier: boolean isEnabled()>
<com.android.systemui.qs.tiles.BluetoothTile: boolean isAvailable()>
<android.os.Debug: java.lang.String getRuntimeStat(java.lang.String)>
<android.service.voice.VoiceInteractionSession: void onDestroy()>
<com.android.server.usb.UsbPortManager: void resetSimulation(com.android.internal.util.IndentingPrintWriter)>
<com.android.server.pm.PackageManagerService: byte[] getIntentFilterVerificationBackup(int)>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuid()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<android.net.wifi.RttManager.ParcelableRttResults: void <init>(android.net.wifi.RttManager.RttResult[])>
<android.text.StaticLayout.Builder: android.text.StaticLayout build()>
<com.android.systemui.statusbar.ActivatableNotificationView: void updateBackgroundTint()>
<com.android.server.pm.PackageInstallerService: java.lang.String allocateExternalStageCidLegacy()>
<com.android.server.LocationManagerService: boolean addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>
<android.widget.PopupWindow: android.transition.Transition getEnterTransition()>
<android.os.StatFs: long getTotalBytes()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void setCurrentUser(int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageWidth()>
<com.android.systemui.statusbar.GestureRecorder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.bluetooth.BluetoothGattService: int getInstanceId()>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.media.MediaRouterService: void <init>(android.content.Context)>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.systemui.tv.pip.PipMenuActivity: void onShowPipMenu()>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
<com.android.uiautomator.core.Configurator: long getScrollAcknowledgmentTimeout()>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onChanged()>
<android.preference.ListPreference: void setValueIndex(int)>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.tv.TvView: void onMeasure(int,int)>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int unloadKeyphraseModel(int)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>
<com.android.hotspot2.omadm.MOTree: boolean hasMgmtTreeTag(java.lang.String)>
<android.content.ComponentCallbacks2: void onTrimMemory(int)>
<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>
<android.app.assist.AssistStructure.WindowNode: int getWidth()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,android.net.NetworkInfo.DetailedState,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String toString()>
<android.view.View: boolean isInTouchMode()>
<android.view.View: boolean isOpaque()>
<android.text.LineBreaker: void computeBreaks(android.text.StaticLayout.LineBreaks)>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
<android.service.dreams.DreamService: void onContentChanged()>
<android.database.Cursor: android.net.Uri getNotificationUri()>
<android.app.Notification.Action.WearableExtender: boolean getHintLaunchesActivity()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setContentView(int)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>
<android.content.ActivityNotFoundException: void <init>()>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File)>
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)>
<com.android.settingslib.graph.UsageGraph: void onDraw(android.graphics.Canvas)>
<android.hardware.camera2.CameraDevice.StateCallback: void onClosed(android.hardware.camera2.CameraDevice)>
<android.widget.CursorAdapter: void onContentChanged()>
<android.content.pm.ShortcutManager: int getIconMaxWidth()>
<com.android.server.am.ActivityManagerService.GrantUri: int hashCode()>
<android.app.VoiceInteractor.PickOptionRequest.Option: void writeToParcel(android.os.Parcel,int)>
<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)>
<android.app.usage.UsageStatsManagerInternal.AppIdleStateChangeListener: void onAppIdleStateChanged(java.lang.String,int,boolean)>
<android.hardware.Camera.Area: boolean equals(java.lang.Object)>
<com.android.tools.layoutlib.create.OverrideMethod: float invokeF(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.CastController getCastController()>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<android.widget.ListPopupWindow: int getVerticalOffset()>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.os.IRecoverySystemProgressListener: void onProgress(int)>
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>
<android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean onSpacePressed()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void install(byte[],int)>
<android.util.Base64InputStream: int read()>
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>
<com.android.systemui.keyguard.KeyguardViewMediator: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean needsReorient(int)>
<android.widget.CursorTreeAdapter: int getChildrenCount(int)>
<android.widget.SearchView: void setIconified(boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void clearUnfocusedTaskOverrides()>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int,int,int)>
<android.widget.TextView: boolean isCursorVisible()>
<com.android.server.policy.PhoneWindowManager: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<android.app.assist.AssistContent: android.net.Uri getWebUri()>
<android.location.Location: long getTime()>
<android.util.ArraySet: boolean isEmpty()>
<com.android.tools.layoutlib.create.AsmAnalyzer: void analyze()>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>
<android.util.JsonReader: android.util.JsonToken peek()>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,boolean,boolean,boolean)>
<android.net.ip.IpManager.WaitForProvisioningCallback: void onProvisioningFailure(android.net.LinkProperties)>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>
<android.os.BatteryStats.Uid: long getSystemCpuTimeUs(int)>
<com.android.server.usage.UsageStatsDatabase.CheckinAction: boolean checkin(com.android.server.usage.IntervalStats)>
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<com.android.printspooler.renderer.IPdfEditor: void removePages(android.print.PageRange[])>
<com.android.commands.hid.Event: java.lang.String getCommand()>
<android.media.MediaScannerConnection: void connect()>
<android.media.Rating: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,int)>
<com.android.printspooler.ui.PrinterRegistry: void setTrackedPrinter(android.print.PrinterId)>
<com.android.systemui.qs.QSTile: void destroy()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void ensurePopped()>
<android.widget.AbsListView: android.view.View getSelectedView()>
<com.android.server.LocationManagerService: void systemRunning()>
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>
<android.nfc.NdefMessage: boolean equals(java.lang.Object)>
<com.android.systemui.qs.QSFooter.VpnSpan: void onClick(android.view.View)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>
<com.android.systemui.statusbar.notification.HybridNotificationView: void setVisible(boolean)>
<android.app.AlarmManager: void cancel(android.app.AlarmManager.OnAlarmListener)>
<com.android.systemui.settings.BrightnessDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.am.ActivityManagerService: void activityResumed(android.os.IBinder)>
<android.hardware.Camera: android.hardware.Camera.Parameters getParameters()>
<android.widget.Switch: void setThumbTintMode(android.graphics.PorterDuff.Mode)>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<com.android.systemui.statusbar.NotificationData.Entry: void reset()>
<android.app.Fragment: void onStop()>
<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<com.google.android.util.AbstractMessageParser.Part: void add(com.google.android.util.AbstractMessageParser.Token)>
<android.view.MotionEvent: float getXPrecision()>
<android.service.textservice.SpellCheckerService.Session: void onClose()>
<com.example.android.networkusage.NetworkActivity.NetworkReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.ListPopupWindow: void setSelection(int)>
<com.android.printspooler.ui.PageAdapter: void startPreloadContent(android.print.PageRange)>
<com.android.settingslib.RestrictedSwitchPreference: void setEnabled(boolean)>
<android.content.pm.ActivityInfo: int getThemeResource()>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>
<android.text.util.Rfc822Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.telecom.CallScreeningService.CallResponse.Builder: android.telecom.CallScreeningService.CallResponse build()>
<android.view.View: boolean onCheckIsTextEditor()>
<com.android.hotspot2.osu.SOAPBuilder: java.lang.String buildPostDevDataResponse(com.android.hotspot2.osu.RequestReason,java.lang.String,java.lang.String,com.android.hotspot2.omadm.MOTree[])>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(android.graphics.drawable.Icon)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.graphics.Rect: void union(int,int)>
<com.android.systemui.Gefingerpoken: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.keyguard.KeyguardPasswordView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationColorForUser(int,int)>
<android.telecom.InCallService: void onCallAudioStateChanged(android.telecom.CallAudioState)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.IconGroup getIcons()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>
<android.opengl.GLES32: void glTexParameterIiv(int,int,int[],int)>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.BaseStatusBar: void animateCollapsePanels(int,boolean,boolean)>
<android.hardware.camera2.legacy.RequestQueue: void <init>(java.util.List)>
<com.android.systemui.usb.UsbPermissionActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.lang.String,boolean)>
<android.os.BatteryStats.Uid: android.util.ArrayMap getJobStats()>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: int hashCode()>
<com.android.server.AppOpsService: int noteOperation(int,int,java.lang.String)>
<android.renderscript.Byte2: void <init>(byte,byte)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEncryptionRequired()>
<android.media.AudioAttributes: int getFlags()>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>
<android.net.wifi.nan.TlvBufferUtils.TlvElement: byte getByte()>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getAllSessions(int)>
<android.app.ActivityGroup: void <init>()>
<android.app.assist.AssistStructure: android.app.assist.AssistStructure.WindowNode getWindowNodeAt(int)>
<com.android.settingslib.Utils: int getColorAccent(android.content.Context)>
<android.hardware.camera2.CaptureFailure: long getFrameNumber()>
<com.android.systemui.qs.tiles.LocationTile: void handleClick()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setCurrentUserId(int)>
<android.app.Activity: void onPostCreate(android.os.Bundle,android.os.PersistableBundle)>
<com.android.location.provider.ActivityRecognitionProvider: void <init>(android.hardware.location.IActivityRecognitionHardware)>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>()>
<com.android.location.provider.ActivityRecognitionProvider: boolean disableActivityEvent(java.lang.String,int)>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>
<com.android.systemui.qs.tiles.CastTile: void handleUserSwitch(int)>
<android.widget.Spinner: int getDropDownHorizontalOffset()>
<android.os.ConditionVariable: void <init>()>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>
<android.content.pm.PermissionInfo: java.lang.String toString()>
<android.view.inputmethod.InputConnectionWrapper: android.os.Handler getHandler()>
<android.drm.DrmRights: void <init>(android.drm.ProcessedData,java.lang.String)>
<android.net.ip.IpManager.WaitForProvisioningCallback: void onProvisioningSuccess(android.net.LinkProperties)>
<android.transition.Slide: void setSlideEdge(int)>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>
<android.renderscript.Element: android.renderscript.Element I64_2(android.renderscript.RenderScript)>
<android.renderscript.Allocation: void copyFromUnchecked(float[])>
<android.database.CursorWrapper: boolean moveToFirst()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getMaxExpandHeight(com.android.systemui.statusbar.ExpandableView)>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,java.nio.FloatBuffer)>
<android.inputmethodservice.KeyboardView: void swipeRight()>
<com.android.gallery3d.common.Utils: void fail(java.lang.String,java.lang.Object[])>
<com.android.server.policy.PhoneWindowManager: void setCurrentUserLw(int)>
<android.service.voice.VoiceInteractionSession: void show(android.os.Bundle,int)>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context)>
<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.os.IBinder,android.net.Uri,java.lang.String)>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)>
<com.android.server.storage.FileCollector: long getSystemSize(android.content.Context)>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<android.app.ApplicationErrorReport.CrashInfo: void dump(android.util.Printer,java.lang.String)>
<android.graphics.RectF: boolean intersects(float,float,float,float)>
<android.graphics.drawable.Icon: void loadDrawableAsync(android.content.Context,android.graphics.drawable.Icon.OnDrawableLoadedListener,android.os.Handler)>
<android.content.pm.PackageParser.ActivityIntentInfo: void <init>(android.content.pm.PackageParser.Activity)>
<android.graphics.Bitmap: void prepareToDraw()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentAction(int)>
<android.net.ConnectivityManager: void releaseNetworkRequest(android.app.PendingIntent)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionFinished()>
<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.recents.RecentsImplProxy: void onDraggingInRecentsEnded(float)>
<android.app.Activity: boolean releaseInstance()>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.text.style.QuoteSpan: int describeContents()>
<com.android.server.pm.PackageInstallerService: void systemReady()>
<android.text.Layout: int getLineBaseline(int)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>
<android.transition.Scene: android.view.ViewGroup getSceneRoot()>
<com.android.systemui.statusbar.NotificationContentView: int getMinHeight()>
<android.ddm.DdmHandleAppName: void connected()>
<android.graphics.Matrix: float mapRadius(float)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.Activity: void onStateNotSaved()>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnSpan()>
<android.service.voice.VoiceInteractionSession: android.content.Context getContext()>
<android.location.Address: java.lang.String getCountryName()>
<android.security.net.config.RootTrustManagerFactorySpi.ApplicationConfigParameters: void <init>(android.security.net.config.ApplicationConfig)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Resources getResources()>
<android.media.tv.TvInputService.Session: void notifyTrackSelected(int,java.lang.String)>
<com.android.uiautomator.core.UiScrollable: boolean exists(com.android.uiautomator.core.UiSelector)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: void <init>(java.util.UUID,java.util.UUID,byte[],android.hardware.soundtrigger.SoundTrigger.Keyphrase[])>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.KernelID)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int,boolean)>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.media.tv.TvContract: boolean isChannelUriForTunerInput(android.net.Uri)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task getLaunchTarget()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onStartListening()>
<android.content.pm.ApplicationInfo: java.lang.String toString()>
<android.media.audiofx.AudioEffect: boolean getEnabled()>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder setTextDirectionHeuristic(android.text.TextDirectionHeuristic)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getAlpha()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onExpansionStarted()>
<android.graphics.Matrix: boolean preRotate(float,float,float)>
<android.widget.NumberPicker: void scrollBy(int,int)>
<com.android.server.hdmi.HdmiCecStandbyModeHandler.CecMessageHandler: boolean handle(com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.am.UserState: void <init>(android.os.UserHandle)>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>
<android.media.MediaDataSource: long getSize()>
<com.android.systemui.statusbar.ExpandableView: void setMinClipTopAmount(int)>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View: int getDrawingCacheQuality()>
<com.android.preload.actions.ScanPackageAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<android.transition.ArcMotion: float getMaximumAngle()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIconAttribute(int)>
<com.android.server.pm.AbstractStatsBase: void readInternal(java.lang.Object)>
<android.content.Entity: android.content.ContentValues getEntityValues()>
<android.telecom.VideoProfile: java.lang.String videoStateToString(int)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>
<com.android.server.am.ActivityManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.hotspot2.osu.OSUManager: void notifyIconReceived(long,java.lang.String,byte[])>
<android.telephony.ServiceState: void <init>()>
<android.view.View.OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>
<com.android.server.notification.RankingHelper: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>
<com.android.systemui.qs.TileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<android.renderscript.ScriptIntrinsicBLAS: android.renderscript.ScriptIntrinsicBLAS create(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: void addMovement(android.view.MotionEvent)>
<android.app.ActivityManagerProxy: int stopUser(int,boolean,android.app.IStopUserCallback)>
<android.provider.ContactsContract.Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: int defineTag(int,short)>
<android.graphics.Canvas_Delegate: void native_drawNinePatch(android.graphics.Canvas,long,long,long,float,float,float,float,long,int,int)>
<com.android.systemui.volume.VolumeComponent: void register()>
<android.net.Uri: java.lang.String getEncodedFragment()>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getContent()>
<android.content.BroadcastReceiver: void <init>()>
<android.app.admin.DevicePolicyManager: void addUserRestriction(android.content.ComponentName,java.lang.String)>
<com.android.server.am.UserState: void setState(int)>
<com.android.documentsui.BaseActivity: void onRestoreInstanceState(android.os.Bundle)>
<com.android.systemui.Prefs: void putBoolean(android.content.Context,java.lang.String,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void onLockedWorkRemoteInput(int,com.android.systemui.statusbar.ExpandableNotificationRow,android.view.View)>
<com.android.preload.ui.NullProgressMonitor: void stop()>
<android.media.audiofx.BassBoost: boolean getStrengthSupported()>
<com.android.gallery3d.exif.ExifTag: short getTagId()>
<com.android.systemui.qs.SecureSetting: void onChange(boolean)>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
<android.view.ViewStructure: void setText(java.lang.CharSequence,int,int)>
<android.app.MediaRouteButton: int getRouteTypes()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onEmptySpaceClicked(float,float)>
<android.app.Notification.Style: void internalSetBigContentTitle(java.lang.CharSequence)>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>
<android.widget.Space: void onMeasure(int,int)>
<com.android.systemui.recents.views.TaskViewHeader: void onTaskDataLoaded()>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>
<com.android.server.am.ActivityManagerService: boolean isBackgroundVisibleBehind(android.os.IBinder)>
<android.media.AudioManager: boolean shouldVibrate(int)>
<android.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>
<com.android.hotspot2.asn1.Asn1Octets: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer,int)>
<android.net.wifi.RttManager.RttListener: void onFailure(int,java.lang.String)>
<com.android.settingslib.bluetooth.PbapServerProfile: void finalize()>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>
<com.android.hotspot2.pps.Credential: com.android.hotspot2.pps.Credential.CertType getCertType()>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: long getCompletedFrameNumber()>
<android.service.voice.VoiceInteractionSession: void setTheme(int)>
<com.android.hotspot2.pps.Credential: byte[] getFingerPrint()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void increment()>
<android.app.ActionBar.LayoutParams: void <init>(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void goToLockedShade(android.view.View)>
<android.media.session.MediaSession.Callback: void onSetRating(android.media.Rating)>
<android.location.GnssMeasurement: boolean hasCarrierPhaseUncertainty()>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.Script.KernelID getKernelID()>
<android.print.PrintAttributes.MediaSize: boolean equals(java.lang.Object)>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsLocked()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>
<android.graphics.Outline: void set(android.graphics.Outline)>
<com.android.settingslib.bluetooth.HidProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.impl.SetCommand: void setValue(android.hardware.camera2.impl.CameraMetadataNative,java.lang.Object)>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],int)>
<android.service.voice.VoiceInteractionSession: void onLowMemory()>
<android.app.FragmentTransaction: android.app.FragmentTransaction attach(android.app.Fragment)>
<android.widget.AbsListView: void fling(int)>
<android.util.JsonWriter: android.util.JsonWriter endArray()>
<com.android.hotspot2.omadm.MOTree: void <init>(java.lang.String,java.lang.String,com.android.hotspot2.omadm.OMAConstructed)>
<android.widget.AbsoluteLayout: boolean shouldDelayChildPressedState()>
<com.android.settingslib.bluetooth.PanProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.documentsui.model.RootInfo: boolean isDownloads()>
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<android.view.View: void setNextFocusRightId(int)>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getDigests()>
<com.android.systemui.statusbar.tv.TvStatusBar: void start()>
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>
<android.content.ComponentName: int describeContents()>
<com.android.systemui.keyguard.KeyguardViewMediator: void startKeyguardExitAnimation(long,long)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<android.telecom.Conference: void <init>(android.telecom.PhoneAccountHandle)>
<android.view.Window: void setTitle(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.ManagedProfileController: void removeCallback(com.android.systemui.statusbar.phone.ManagedProfileController.Callback)>
<com.android.settingslib.net.ChartDataLoader: void onReset()>
<com.android.gallery3d.exif.Rational: void <init>(com.android.gallery3d.exif.Rational)>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>
<android.media.MediaRouter.RouteInfo: boolean isEnabled()>
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.wifi.AccessPointPreference: void notifyChanged()>
<android.graphics.DiscretePathEffect_Delegate: java.lang.String getSupportMessage()>
<com.android.documentsui.BaseActivity: void onStackPicked(com.android.documentsui.model.DocumentStack)>
<android.content.res.TypedArray: android.content.res.Resources getResources()>
<android.media.audiofx.BassBoost.Settings: void <init>()>
<android.widget.RemoteViewsService.RemoteViewsFactory: long getItemId(int)>
<com.android.gallery3d.exif.Rational: void <init>(long,long)>
<com.android.server.policy.PhoneWindowManager: int finishPostLayoutPolicyLw()>
<com.android.systemui.ImageWallpaper: void onTrimMemory(int)>
<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.location.LocationProvider: java.lang.String getName()>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.Bitmap,int)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Activity: void setRequestedOrientation(int)>
<android.drm.DrmStore.Action: void <init>()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void visitEnd()>
<android.util.PathParser_Delegate: android.util.PathParser_Delegate getDelegate(long)>
<com.android.uiautomator.core.UiObject: java.lang.String getText()>
<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
<com.android.tools.layoutlib.java.UnsafeByteSequence: void <init>(int)>
<com.android.server.pm.ShortcutService: boolean addDynamicShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
<android.provider.MediaStore.Audio.Playlists.Members: boolean moveItem(android.content.ContentResolver,long,int,int)>
<com.android.server.policy.PhoneWindowManager: void adjustConfigurationLw(android.content.res.Configuration,int,int)>
<com.android.commands.sm.Sm: void runForget()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>
<android.bluetooth.le.AdvertiseData: java.util.List getServiceUuids()>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.media.RemoteDisplayProviderProxy.Callback: void onDisplayStateChanged(com.android.server.media.RemoteDisplayProviderProxy,android.media.RemoteDisplayState)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.EncoderCapabilities getEncoderCapabilities()>
<com.android.systemui.classifier.SpeedAnglesClassifier: java.lang.String getTag()>
<android.location.GnssNavigationMessageEvent: void <init>(android.location.GnssNavigationMessage)>
<com.android.systemui.tv.pip.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.KeyguardHostView: boolean dismiss()>
<com.android.server.pm.PackageManagerService: void grantRuntimePermission(java.lang.String,java.lang.String,int)>
<android.widget.PopupMenu: android.view.Menu getMenu()>
<android.media.tv.TvRecordingClient: void tune(java.lang.String,android.net.Uri)>
<android.mtp.MtpDevice: void <init>(android.hardware.usb.UsbDevice)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: boolean isPowerSave()>
<android.hardware.usb.UsbEndpoint: int getType()>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager.CacheResult)>
<com.android.documentsui.services.FileOperations: java.lang.String start(android.app.Activity,java.util.List,com.android.documentsui.model.DocumentInfo,com.android.documentsui.model.DocumentStack,int)>
<com.android.server.notification.PriorityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<android.widget.SearchView: void setOnSearchClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onActivityDrawn()>
<android.location.Criteria: int describeContents()>
<com.android.layoutlib.bridge.android.BridgePackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>
<com.android.documentsui.RootsLoader: void onStartLoading()>
<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: void <init>(int,int,int,android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel[])>
<android.net.wifi.p2p.WifiP2pConfig: void <init>()>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.ZenModeFiltering: void dump(java.io.PrintWriter,java.lang.String)>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)>
<android.preference.RingtonePreference: void onClick()>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingPermission(java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void getLayoutTaskTransforms(float,int,java.util.ArrayList,boolean,java.util.ArrayList)>
<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.android.settingslib.net.SummaryForAllUidLoader: void onReset()>
<android.os.BaseBundle: boolean isEmpty()>
<android.view.View: void draw(android.graphics.Canvas)>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.app.ActionBar: void setTitle(int)>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback)>
<android.graphics.Canvas_Delegate: void native_skew(long,float,float)>
<android.text.method.ScrollingMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>
<android.media.MediaDrm: void restoreKeys(byte[],byte[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getNotGoneChildCount()>
<android.view.View: void dispatchWindowVisibilityChanged(int)>
<com.android.systemui.volume.ZenModePanel.Callback: void onExpanded(boolean)>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
<com.android.systemui.recents.tv.views.RecentsTvView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.text.style.URLSpan: void <init>(android.os.Parcel)>
<android.speech.tts.UtteranceProgressListener: void onBeginSynthesis(java.lang.String,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glTranslatef(float,float,float)>
<android.net.wifi.WifiEnterpriseConfig: void setRealm(java.lang.String)>
<com.android.printspooler.model.PrintSpoolerService: void setStatus(android.print.PrintJobId,int,java.lang.CharSequence)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void <init>()>
<android.util.AndroidException: void <init>(java.lang.String,java.lang.Throwable)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>
<android.widget.TextView: int getMarqueeRepeatLimit()>
<android.content.pm.PackageParser.Provider: java.lang.String toString()>
<com.android.systemui.statusbar.phone.TrustDrawable: int getAlpha()>
<android.media.audiofx.Virtualizer.Settings: void <init>()>
<android.service.chooser.ChooserTarget: android.graphics.drawable.Icon getIcon()>
<com.android.systemui.recents.views.TaskStackViewScroller: float setDeltaStackScroll(float,float)>
<android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()>
<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String)>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>
<android.bluetooth.le.AdvertiseSettings: int getTimeout()>
<android.location.Criteria: boolean isAltitudeRequired()>
<android.widget.RemoteViews: void showPrevious(int)>
<android.view.WindowCallback: void onActionModeStarted(android.view.ActionMode)>
<com.android.hotspot2.osu.HTTPHandler: com.android.hotspot2.utils.HTTPResponse doGetHTTP(java.net.URL)>
<android.view.WindowInsets: int getSystemWindowInsetRight()>
<com.android.systemui.recents.model.RecentsTaskLoader: void <init>(android.content.Context)>
<android.media.tv.TvInputService.Session: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.View: boolean onDragEvent(android.view.DragEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onScreenTurnedOn()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postAnimateCollapsePanels()>
<com.android.server.am.BatteryStatsService: void noteFullWifiLockAcquired(int)>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.print.PrinterCapabilitiesInfo: int getDuplexModes()>
<android.widget.RemoteViews: void setEmptyView(int,int)>
<android.hardware.Sensor: float getMaximumRange()>
<com.google.android.util.AbstractMessageParser.Link: void <init>(java.lang.String,java.lang.String)>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>
<com.android.layoutlib.bridge.Bridge: void prepareThread()>
<com.android.systemui.RecentsComponent: void onDraggingInRecents(float)>
<com.android.photos.SimpleBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.location.provider.GmsFusedBatchOptions: void setMaxPowerAllocationInMW(double)>
<android.filterpacks.imageproc.SharpenFilter: void <init>(java.lang.String)>
<android.filterpacks.imageproc.AutoFixFilter: void process(android.filterfw.core.FilterContext)>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>
<android.widget.CursorAdapter: long getItemId(int)>
<com.android.documentsui.model.RootInfo: boolean supportsRecents()>
<com.android.settingslib.drawer.Tile: void <init>()>
<android.graphics.BlendComposite: android.graphics.BlendComposite getInstance(android.graphics.BlendComposite.BlendingMode)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.YuvImage: int getWidth()>
<com.android.keyguard.PasswordTextView: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.drawer.UserAdapter: boolean isEmpty()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyInterruptionFilterChanged(int)>
<android.renderscript.Matrix4f: void rotate(float,float,float,float)>
<android.database.sqlite.SQLiteCursor: boolean requery()>
<android.view.ViewStub: void <init>(android.content.Context,int)>
<android.view.ViewParent: void onStopNestedScroll(android.view.View)>
<com.android.systemui.volume.VolumeDialogController: void setStreamVolume(int,int)>
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>
<android.app.ActivityManagerProxy: void releaseSomeActivities(android.app.IApplicationThread)>
<com.android.gallery3d.common.Utils: float interpolateAngle(float,float,float)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context)>
<android.webkit.WebView: boolean canGoBackOrForward(int)>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<android.widget.TabHost: void setup()>
<com.android.nfc_extras.EeIOException: void <init>(java.lang.String)>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.QuickContactBadge: void onClick(android.view.View)>
<com.android.systemui.statusbar.phone.BarTransitions: void applyModeBackground(int,int,boolean)>
<android.gesture.Prediction: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOff()>
<android.graphics.ComposeShader_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: java.lang.String getCurrentMediaNotificationKey()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isRecentsActivityVisible(android.util.MutableBoolean)>
<android.media.audiofx.Equalizer: void usePreset(short)>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(int[],int)>
<android.media.tv.TvInputService.Session: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>
<com.android.server.am.ActivityManagerService: boolean isInHomeStack(int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>
<android.media.tv.TvInputService.RecordingSession: void onTune(android.net.Uri,android.os.Bundle)>
<android.graphics.drawable.RippleDrawable: int getOpacity()>
<android.hardware.camera2.CameraDevice: void createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<com.android.nfc_extras.NfcAdapterExtras: void setCardEmulationRoute(com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute)>
<android.widget.DatePicker: long getMaxDate()>
<android.media.MediaRouter.RouteInfo: android.view.Display getPresentationDisplay()>
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)>
<android.view.ViewGroup: void debug(int)>
<android.util.PathParser.PathData: void <init>()>
<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>
<android.widget.ScrollView: boolean fullScroll(int)>
<android.content.IntentSender: boolean equals(java.lang.Object)>
<android.renderscript.Matrix4f: boolean inverse()>
<com.android.tools.layoutlib.create.AbstractClassAdapter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<android.view.animation.DecelerateInterpolator: void <init>()>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>
<com.android.systemui.keyguard.KeyguardViewMediator: void doKeyguardTimeout(android.os.Bundle)>
<android.printservice.PrintDocument: android.os.ParcelFileDescriptor getData()>
<android.app.ActivityManager.MemoryInfo: void <init>()>
<com.android.documentsui.Events.InputEvent: boolean isOverItem()>
<android.content.res.AssetManager.AssetInputStream: long skip(long)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onClick(android.content.DialogInterface,int)>
<android.view.View: boolean isScrollContainer()>
<com.android.systemui.volume.SafetyWarningDialog: void <init>(android.content.Context,android.media.AudioManager)>
<android.hardware.radio.RadioManager.ModuleProperties: int getClassId()>
<android.media.session.MediaController.TransportControls: void prepare()>
<android.widget.TextView: int getTotalPaddingLeft()>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.telephony.PhoneStateListener: void onCellInfoChanged(java.util.List)>
<android.net.wifi.WifiEnterpriseConfig: void setSubjectMatch(java.lang.String)>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>()>
<com.android.gallery3d.exif.ExifInterface: void closeSilently(java.io.Closeable)>
<android.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setBackdropShowing(boolean)>
<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>
<android.net.TrafficStats: long getUidRxPackets(int)>
<android.os.UserHandle: java.lang.String toString()>
<com.android.systemui.statusbar.NotificationData: int getVisibilityOverride(java.lang.String)>
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>
<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence,int,int)>
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)>
<android.app.AlarmManager.AlarmClockInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<android.text.InputFilter.AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onEmergencyButtonClickedWhenInCall()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>
<android.app.ActivityManagerProxy: void swapDockedAndFullscreenStack()>
<android.graphics.Typeface_Delegate: void resetDefaults()>
<com.android.settingslib.users.AppRestrictionsHelper: boolean isPackageSelected(java.lang.String)>
<android.graphics.PorterDuffColorFilter_Delegate: void applyFilter(java.awt.Graphics2D,int,int)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
<android.widget.Switch: void setThumbTintList(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void closeRemoteInput()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<com.android.settingslib.drawer.UserAdapter: boolean areAllItemsEnabled()>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toString()>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction create()>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebView: void enableSlowWholeDocumentDraw()>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onActivityPinned()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setColorFilter(android.graphics.ColorFilter)>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>
<android.graphics.drawable.NinePatchDrawable: boolean onStateChange(int[])>
<android.view.View: int computeVerticalScrollRange()>
<android.view.InputDevice: int getControllerNumber()>
<android.media.SubtitleTrack.RenderingWidget: void draw(android.graphics.Canvas)>
<com.android.commands.svc.WifiCommand: java.lang.String longHelp()>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>
<android.content.pm.PackageStats: void <init>(android.os.Parcel)>
<android.animation.IntArrayEvaluator: void <init>(int[])>
<com.android.keyguard.KeyguardUpdateMonitor: boolean needsSlowUnlockTransition()>
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()>
<android.graphics.ColorFilter_Delegate: void applyFilter(java.awt.Graphics2D,int,int)>
<android.location.LocationListener: void onProviderEnabled(java.lang.String)>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(java.lang.Throwable)>
<android.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<android.graphics.drawable.VectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.location.LocationManager: void unregisterGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback)>
<android.widget.TabWidget: void setStripEnabled(boolean)>
<android.view.BridgeInflater: void <init>(android.content.Context,com.android.ide.common.rendering.api.LayoutlibCallback)>
<com.android.preload.actions.RunMonkeyAction: void setDevice(com.android.ddmlib.IDevice)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void fireBatteryLevelChanged()>
<android.telecom.Connection: void onAnswer(int)>
<com.android.server.accessibility.AccessibilityManagerService: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>
<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: int getVisibleChildCount()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getProfileConnectionState(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<android.app.backup.BackupAgent: void onDestroy()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
<android.gesture.GestureStore: void <init>()>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>
<com.android.hotspot2.osu.OSUInfo: java.lang.String toString()>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<com.android.server.am.BatteryStatsService: void noteFlashlightOff(int)>
<android.provider.DocumentsProvider: java.lang.String getDocumentType(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void destroy()>
<com.android.gallery3d.exif.ExifInterface: int getAllowedIfdFlagsFromInfo(int)>
<android.telecom.RemoteConnection: void stopDtmfTone()>
<com.android.systemui.statusbar.policy.DeadZone: void setFlash(float)>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>
<android.filterpacks.imageproc.ImageStitcher: void <init>(java.lang.String)>
<android.view.IWindowManagerImpl: void resumeKeyDispatching(android.os.IBinder)>
<android.app.VoiceInteractor.Prompt: int countVoicePrompts()>
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int,int)>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
<com.android.hotspot2.osu.commands.MOURN: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.app.FragmentManagerState: int describeContents()>
<com.android.systemui.statusbar.policy.SecurityController: boolean isDeviceManaged()>
<android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.FloatBuffer)>
<android.graphics.Rasterizer_Delegate: boolean isSupported()>
<com.android.printspooler.ui.PrintErrorFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.hardware.radio.RadioManager.ModuleProperties: java.lang.String getImplementor()>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect mapRect(android.graphics.Matrix,android.graphics.Rect)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onDraggingInRecents(float)>
<android.widget.TextView: void setPaintFlags(int)>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setEncryptionPaddings(java.lang.String[])>
<android.location.Location: long getElapsedRealtimeNanos()>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithFilePath(java.lang.String)>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)>
<android.bluetooth.le.ScanRecord: byte[] getManufacturerSpecificData(int)>
<com.android.systemui.recents.misc.Utilities: float clamp01(float)>
<android.telecom.VideoProfile: void <init>(int)>
<android.graphics.Camera: float getLocationX()>
<android.animation.AnimatorSet: void <init>()>
<android.webkit.WebView: void freeMemory()>
<com.android.server.am.ActivityManagerService: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>
<android.graphics.Paint: int getHinting()>
<android.transition.Slide.CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View,float)>
<android.preference.ListPreference: void setEntryValues(int)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.AppEntry getEntry(java.lang.String,int)>
<com.android.server.net.NetworkStatsService: android.net.DataUsageRequest registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>
<com.android.photos.views.BlockingGLTextureView: void finalize()>
<com.android.captiveportallogin.CaptivePortalLoginActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.policy.EnableAccessibilityController: boolean canEnableAccessibilityViaGesture(android.content.Context)>
<com.android.tools.layoutlib.create.AbstractClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<android.content.res.Resources: int[] getIntArray(int)>
<com.android.hotspot2.osu.PostDevDataResponse: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.telecom.Call: void stopDtmfTone()>
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>
<com.android.providers.settings.SettingsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.view.ActionMode: void hide(long)>
<com.android.server.am.ActivityManagerService: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.widget.Editor.HandleView: float getIdealVerticalOffset()>
<com.android.systemui.statusbar.notification.ActionListTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.server.backup.AccountManagerBackupHelper: void <init>()>
<android.telecom.Connection.VideoProvider: void handleCallSessionEvent(int)>
<android.widget.VideoView: void stopPlayback()>
<com.android.settingslib.AppItem: int compareTo(com.android.settingslib.AppItem)>
<android.widget.EditText: android.text.Editable getText()>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.NotificationData.Environment: boolean onSecureLockScreen()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onClosingFinished()>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void <init>(android.content.Context,android.view.View,android.view.View,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onError(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: android.view.NotificationHeaderView getHeaderView()>
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>
<com.android.location.fused.FusedLocationProvider: void onEnable()>
<android.content.IntentFilter: boolean hasDataSchemeSpecificPart(java.lang.String)>
<com.android.systemui.recents.misc.Utilities: android.content.res.Configuration getAppConfiguration(android.content.Context)>
<android.graphics.Outline: void <init>()>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getUidTagPersistBytes(long)>
<android.media.AudioPortConfig: android.media.AudioGainConfig gain()>
<android.nfc.tech.IsoDep: int getTimeout()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,float)>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawOval(float,float,float,float,android.graphics.Paint)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void dispose()>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras get(android.nfc.NfcAdapter)>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateNotifications()>
<com.android.server.net.NetworkStatsService: com.android.server.net.NetworkStatsService create(android.content.Context,android.os.INetworkManagementService)>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<com.android.systemui.classifier.Classifier: java.lang.String getTag()>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative.Key)>
<android.widget.PopupWindow: void <init>(android.content.Context)>
<android.os.BatteryStats.HistoryStepDetails: void readFromParcel(android.os.Parcel)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.widget.Toolbar: void setTitleMarginBottom(int)>
<android.media.AudioTrack: void addOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener,android.os.Handler)>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.io.File)>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.graphics.drawable.Drawable getDrawable(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.awt.image.BufferedImage getImage()>
<android.location.GpsSatellite: float getAzimuth()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void attachToken(android.os.IBinder)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,float[],int)>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>
<com.android.systemui.volume.SegmentedButtons: java.lang.Object getSelectedValue()>
<com.android.documentsui.dirlist.DirectoryFragment: boolean isSelected(java.lang.String)>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.telecom.Connection: android.telecom.StatusHints getStatusHints()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.ZenModeController getZenModeController()>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getExtraBottomPadding()>
<android.telephony.SubscriptionInfo: java.lang.String getNumber()>
<android.media.AudioRouting: boolean setPreferredDevice(android.media.AudioDeviceInfo)>
<android.widget.TextView: void setText(char[],int,int)>
<android.app.SearchableInfo: int getInputType()>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.PackageParser.ActivityIntentInfo: java.lang.String toString()>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setColorModes(int,int)>
<android.service.textservice.SpellCheckerService.Session: void onCreate()>
<android.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.view.BridgeInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<com.android.photos.BitmapRegionTileSource: int getRotation()>
<com.android.printspooler.model.PageContentRepository: void releasePageContentProvider(com.android.printspooler.model.PageContentRepository.PageContentProvider)>
<android.telephony.SignalStrength: int describeContents()>
<android.app.ActivityManagerProxy: void registerTaskStackListener(android.app.ITaskStackListener)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>
<android.view.View: boolean awakenScrollBars()>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.view.textservice.SuggestionsInfo[],int[],int[])>
<android.util.LongSparseArray: void clear()>
<com.android.gallery3d.glrenderer.RawTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>
<com.android.documentsui.State: void onRootChanged(com.android.documentsui.model.RootInfo)>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.view.ViewGroup: boolean addStatesFromChildren()>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void seek(int)>
<com.android.systemui.qs.tiles.WifiTile: java.lang.CharSequence getTileLabel()>
<android.app.ActivityManagerProxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>
<android.database.CursorWrapper: boolean isNull(int)>
<com.android.documentsui.FilesActivity: java.lang.String getDrawerTitle()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<android.service.carrier.CarrierIdentifier: java.lang.String getMcc()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>
<com.android.systemui.statusbar.SignalClusterView: boolean hasOverlappingRendering()>
<android.app.FragmentTransaction: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String)>
<android.database.Cursor: void setExtras(android.os.Bundle)>
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<com.android.systemui.statusbar.notification.VisibilityLocationProvider: boolean isInVisibleLocation(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>
<com.android.server.usb.UsbService: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageName(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivities(android.content.Intent[])>
<android.app.Notification.MessagingStyle.Message: java.lang.CharSequence getSender()>
<com.android.systemui.statusbar.NotificationContentView: void setHeights(int,int,int)>
<com.android.server.trust.TrustArchive: void logTrustTimeout(int,android.content.ComponentName)>
<com.android.settingslib.RestrictedPreferenceHelper: boolean setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<android.transition.PathMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.hotspot2.omadm.OMAConstructed: java.lang.String getValue()>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationUpdate(android.animation.ValueAnimator)>
<com.android.server.job.controllers.ConnectivityController: com.android.server.job.controllers.ConnectivityController get(com.android.server.job.JobSchedulerService)>
<com.android.commands.sm.Sm: void runUnmount()>
<com.android.server.policy.PhoneWindowManager: void beginPostLayoutPolicyLw(int,int)>
<android.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>
<android.os.BinderProxy: boolean transactNative(int,android.os.Parcel,android.os.Parcel,int)>
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type.CubemapFace)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,int)>
<android.widget.AbsListView: boolean hasTextFilter()>
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: void setFilterText(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: java.lang.String toString()>
<android.media.Ringtone: void stop()>
<com.android.systemui.statusbar.phone.ScrimController: void setBouncerShowing(boolean)>
<com.android.documentsui.FilesActivity: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.media.midi.MidiOutputPort: void close()>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>
<com.android.keyguard.KeyguardPasswordView: void onFinishInflate()>
<android.service.textservice.SpellCheckerService: android.service.textservice.SpellCheckerService.Session createSession()>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.firewall.SenderPackageFilter: void <init>(java.lang.String)>
<android.media.midi.MidiDevice: void close()>
<com.android.hotspot2.osu.OSUManager: void networkConnectEvent(android.net.wifi.WifiInfo)>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>
<android.renderscript.Allocation: android.renderscript.Element getElement()>
<com.android.systemui.classifier.FalsingManager: void onScreenOff()>
<android.renderscript.ScriptIntrinsicBLAS: void CTRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>
<android.net.NetworkStats.Entry: void <init>(java.lang.String,int,int,int,int,long,long,long,long,long)>
<android.app.Instrumentation: void stopProfiling()>
<android.location.GnssClock: boolean hasLeapSecond()>
<android.os.BatteryStats.Uid: void noteWifiMulticastDisabledLocked(long)>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>
<android.os.Parcel: void writeLong(long)>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<com.android.systemui.statusbar.tv.TvStatusBar: void createAndAddWindows()>
<com.android.server.job.JobPackageTracker: boolean dumpHistory(java.io.PrintWriter,java.lang.String,int)>
<android.app.assist.AssistStructure.ViewNode: int getVisibility()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>
<android.util.SparseArray: void clear()>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>
<com.android.mtp.MtpDocumentsProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glTexGenx(int,int,int)>
<com.android.systemui.ExpandHelper: void setGravity(int)>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>
<com.android.systemui.volume.VolumeDialogMotion: void startDismiss(java.lang.Runnable)>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>
<android.provider.ContactsContract.Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,android.graphics.Bitmap)>
<android.view.OrientationListener: void onOrientationChanged(int)>
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>
<android.media.tv.TvView: void onAttachedToWindow()>
<android.view.GestureDetector: boolean isLongpressEnabled()>
<android.app.NotificationManager.Policy: java.lang.String prioritySendersToString(int)>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>
<com.android.gallery3d.exif.ExifInterface: boolean isIfdAllowed(int,int)>
<android.media.PlaybackParams: android.media.PlaybackParams allowDefaults()>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.server.LocationManagerService: boolean geocoderIsPresent()>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setThumbFormat(int)>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>
<android.util.JsonWriter: void <init>(java.io.Writer)>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>
<com.android.settingslib.users.AppRestrictionsHelper: void applyUserAppsStates(com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener)>
<com.android.systemui.qs.tiles.LocationTile: android.content.Intent getLongClickIntent()>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.location.GpsStatus: int getMaxSatellites()>
<android.media.AudioTrack: void setState(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>
<com.android.systemui.recents.model.TaskFilter: boolean acceptTask(android.util.SparseArray,com.android.systemui.recents.model.Task,int)>
<android.view.View: int getBottom()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void onBindViewHolder(com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter.ViewHolder,int)>
<com.android.hotspot2.pps.HomeSP: int hashCode()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getNamespaceCount(int)>
<com.android.systemui.egg.MLand: void addPlayer()>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onActive(android.hardware.camera2.CameraDevice)>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<com.android.systemui.recents.Recents: void onBootCompleted()>
<com.android.systemui.DemoMode: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.policy.PhoneWindowManager: boolean inKeyguardRestrictedKeyInputMode()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHEMM(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>
<android.preference.MultiSelectListPreference: void setEntries(int)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void run()>
<android.util.PathParser.PathData: void <init>(android.util.PathParser.PathData)>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.mtp.MtpObjectInfo: long getThumbPixWidthLong()>
<android.widget.AdapterView: void removeAllViews()>
<android.hardware.camera2.CaptureResult.Key: int hashCode()>
<com.android.hotspot2.omadm.MOManager: java.lang.Object getSelection(java.lang.String,java.lang.String)>
<android.renderscript.Allocation: void copyTo(byte[])>
<com.android.systemui.recents.events.ui.dragndrop.DragStartEvent: void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,android.graphics.Point)>
<android.renderscript.ScriptIntrinsicBLAS: void DTRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(int,java.io.InputStream)>
<android.view.DragEvent: float getY()>
<com.android.server.notification.ZenLog: void traceSetRingerModeExternal(int,int,java.lang.String,int,int)>
<com.android.settingslib.TetherUtil: boolean isProvisioningNeeded(android.content.Context)>
<com.android.systemui.qs.tiles.WorkModeTile: void onManagedProfileRemoved()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: int getMaxKeyguardNotifications(boolean)>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.animation.AnimatorSet: android.animation.AnimatorSet.Builder play(android.animation.Animator)>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskWrites()>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.ByteBuffer)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.content.res.ColorStateList getColorStateList(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.server.pm.Installer: void destroyUserData(java.lang.String,int,int)>
<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowId: boolean isFocused()>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
<android.app.FragmentManagerState: void <init>()>
<com.android.server.display.DisplayTransformManager: int getDaltonizerMode()>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>
<android.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)>
<android.widget.SearchView: java.lang.CharSequence getQuery()>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setReplyAction(android.app.PendingIntent,android.app.RemoteInput)>
<android.content.Context: java.io.File getObbDir()>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isRevoked()>
<com.android.hotspot2.pps.HomeSP: boolean equals(java.lang.Object)>
<com.android.server.pm.Policy.PolicyBuilder: void <init>()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onScanningStateChanged(boolean)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.ScriptIntrinsicConvolve5x5 create(android.renderscript.RenderScript,android.renderscript.Element)>
<com.android.server.input.InputManagerService: void setWindowManagerCallbacks(com.android.server.input.InputManagerService.WindowManagerCallbacks)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setDateCreated(long)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.BluetoothGattCharacteristic: void <init>(java.util.UUID,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void dispatchStartTemporaryDetach()>
<com.android.uiautomator.core.UiObject: boolean setText(java.lang.String)>
<android.media.tv.TvContract.Channels: java.lang.String getVideoResolution(java.lang.String)>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startDeleteAllTasksAnimation(java.util.List,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.view.View: boolean isScrollbarFadingEnabled()>
<android.animation.Animator: void addListener(android.animation.Animator.AnimatorListener)>
<android.widget.TextView: int getSelectionStart()>
<com.android.layoutlib.bridge.android.BridgeContext: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.os.ParcelFileDescriptor: int describeContents()>
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera.ErrorCallback)>
<android.graphics.Paint: void <init>(int)>
<android.util.TypedValue: float complexToFraction(int,float,float)>
<android.opengl.GLES10: void glEnableClientState(int)>
<android.widget.TextView: void setHeight(int)>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>
<com.android.documentsui.model.Durable: void write(java.io.DataOutputStream)>
<com.android.server.connectivity.KeepaliveTracker: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.util.ArraySet: int hashCode()>
<android.app.ActivityManagerProxy: int getProcessLimit()>
<com.android.systemui.statusbar.stack.AmbientState: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.util.apk.ApkSignatureSchemeV2Verifier.DataSource: long size()>
<android.widget.TextView: int getTotalPaddingEnd()>
<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>
<android.hardware.camera2.impl.CameraMetadataNative: void writeToParcel(android.os.Parcel,int)>
<android.hardware.usb.UsbAccessory: boolean equals(java.lang.Object)>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.telecom.Call: void swapConference()>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>
<android.os.BatteryStats.LevelStepTracker: int getModModeAt(int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.KeyguardIndicationTextView,com.android.systemui.statusbar.phone.LockIcon)>
<android.graphics.Outline: void <init>(android.graphics.Outline)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>
<com.android.server.emergency.EmergencyAffordanceService: void onStart()>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String getUsername()>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<android.media.ImageWriter.OnImageReleasedListener: void onImageReleased(android.media.ImageWriter)>
<android.content.pm.PackageParser.Permission: java.lang.String toString()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMinHeight()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setDisplayIntent(android.app.PendingIntent)>
<com.android.gallery3d.exif.ExifInterface: int getActualTagCount(int,int)>
<android.text.style.IconMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>
<android.location.GnssClock: boolean hasDriftUncertaintyNanosPerSecond()>
<android.telecom.Call.Callback: void onDetailsChanged(android.telecom.Call,android.telecom.Call.Details)>
<android.util.PathParser_Delegate: android.util.PathParser_Delegate.PathDataNode[] deepCopyNodes(android.util.PathParser_Delegate.PathDataNode[])>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void notificationLightPulse(int,int,int)>
<android.graphics.PorterDuffXfermode_Delegate: java.awt.Composite getComposite(int)>
<com.android.systemui.recents.RecentsActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>
<android.widget.ZoomControls: void hide()>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.os.IBinder getBinder()>
<android.util.Range: boolean equals(java.lang.Object)>
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>
<com.android.systemui.statusbar.tv.TvStatusBar: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<android.app.ActivityManagerProxy: void bootAnimationComplete()>
<android.view.accessibility.AccessibilityWindowInfo: int getId()>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceChanged(int)>
<android.renderscript.Matrix4f: void transpose()>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.omadm.MOTree getMOTree(com.android.hotspot2.pps.HomeSP)>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
<com.android.layoutlib.bridge.android.BridgePackageManager: void verifyPendingInstall(int,int)>
<android.os.LocaleList: int hashCode()>
<android.graphics.PorterDuffXfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onDensityOrFontScaleChanged()>
<android.telecom.CallScreeningService.CallResponse: boolean getSkipNotification()>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>
<com.android.systemui.stackdivider.DividerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>
<android.service.carrier.CarrierService: void <init>()>
<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.Watchdog: void addThread(android.os.Handler,long)>
<android.ddm.DdmHandleProfiling: void register()>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.CellSignalStrengthGsm: int hashCode()>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void setElapsedFrameTimeNanos(long)>
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<android.webkit.WebView: void onAttachedToWindow()>
<android.location.SettingInjectorService: java.lang.String onGetSummary()>
<com.android.server.am.ActivityManagerService: void finishHeavyWeightApp()>
<android.filterpacks.imageproc.AutoFixFilter: void prepare(android.filterfw.core.FilterContext)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,int[],int)>
<android.content.pm.ShortcutInfo: boolean hasKeyFieldsOnly()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean hasSystemFeature(java.lang.String)>
<android.drm.DrmRights: void <init>(java.io.File,java.lang.String)>
<android.mtp.MtpDevice: byte[] getThumbnail(int)>
<com.android.printspooler.ui.FusedPrintersProvider: void setTrackedPrinter(android.print.PrinterId)>
<android.graphics.CornerPathEffect_Delegate: boolean isSupported()>
<android.app.usage.UsageEvents.Event: java.lang.String getPackageName()>
<com.android.systemui.recents.views.FixedSizeImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>
<android.os.PowerManager: boolean isDeviceIdleMode()>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>
<android.renderscript.Sampler: float getAnisotropy()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskReads()>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.documentsui.model.DocumentInfo: java.io.FileNotFoundException asFileNotFoundException(java.lang.Throwable)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.ScriptIntrinsicBLAS: void DTRSM(int,int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String)>
<android.app.admin.DevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<android.app.LoaderManager.LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.server.wm.TaskStack: void onAnimationStart()>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureCompleted(int)>
<com.android.settingslib.widget.AnimatedImageView: void onAttachedToWindow()>
<com.android.systemui.analytics.DataCollector: boolean isEnabled()>
<android.app.admin.DevicePolicyManager: boolean isSecurityLoggingEnabled(android.content.ComponentName)>
<android.media.midi.MidiDeviceServer.Callback: void onClose()>
<com.android.server.DeviceIdleController: void onStart()>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>
<com.android.commands.uiautomator.EventsCommand: void run(java.lang.String[])>
<android.media.AudioTrack: float getMaxVolume()>
<android.animation.IntArrayEvaluator: void <init>()>
<com.android.systemui.statusbar.tv.TvStatusBar: void remQsTile(android.content.ComponentName)>
<android.view.ViewGroup.MarginLayoutParams: int getLayoutDirection()>
<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>
<android.telecom.Conference: void setConnectionTime(long)>
<android.app.ActivityManagerProxy: void setHasTopUi(boolean)>
<com.android.statementservice.retriever.AbstractAssetMatcher: boolean matches(com.android.statementservice.retriever.AbstractAsset)>
<android.hardware.camera2.utils.CloseableLock: void <init>(java.lang.String)>
<android.media.session.MediaSession.Callback: void onSkipToPrevious()>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>
<android.widget.GridView: int computeVerticalScrollExtent()>
<android.view.TextureView: void <init>(android.content.Context)>
<android.transition.ChangeBounds: void setReparent(boolean)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void notifyDockedStackExistsChanged(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean disallowSingleClick(android.view.MotionEvent)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>
<android.accessibilityservice.AccessibilityService: void disableSelf()>
<android.app.NativeActivity: void onResume()>
<android.app.Notification.BigTextStyle: void <init>()>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>
<com.android.systemui.statusbar.ExpandableView: float getOutlineAlpha()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void notifyDeviceWakeUpRequested()>
<android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>
<android.graphics.drawable.AnimatedVectorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.media.session.MediaSession.QueueItem: java.lang.String toString()>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setLatestTimestamp(long)>
<com.android.systemui.statusbar.phone.PanelView: void startUnlockHintAnimation()>
<android.app.admin.DevicePolicyManager: boolean isPackageSuspended(android.content.ComponentName,java.lang.String)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForDelete(java.lang.String,int,int,java.lang.String)>
<android.app.AutomaticZenRule: android.content.ComponentName getOwner()>
<com.android.settingslib.net.DataUsageController: void setCallback(com.android.settingslib.net.DataUsageController.Callback)>
<android.text.Html.TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()>
<com.android.documentsui.MessageBar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl: void flush()>
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void init()>
<com.android.systemui.statusbar.NotificationContentView: void setContentHeight(int)>
<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getPackageUidAsUser(java.lang.String,int)>
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>
<com.android.systemui.qs.tiles.BatteryTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.view.View: java.lang.Object getTag(int)>
<android.content.pm.PackageParser.PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser.ApkLite,java.lang.String[],java.lang.String[],int[])>
<android.widget.ImageView: void setVisibility(int)>
<android.app.Dialog: void setDismissMessage(android.os.Message)>
<android.hardware.camera2.params.LensShadingMap: android.hardware.camera2.params.RggbChannelVector getGainFactorVector(int,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int,java.lang.String)>
<android.media.MediaPlayer.TrackInfo: java.lang.String getLanguage()>
<android.graphics.Paint_Delegate: android.graphics.Xfermode_Delegate getXfermode()>
<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.bluetooth.Utils: int getConnectionStateSummary(int)>
<android.media.SyncParams: float getFrameRate()>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,android.view.animation.Interpolator)>
<android.opengl.GLES20: void glStencilOp(int,int,int)>
<android.filterpacks.imageproc.BlackWhiteFilter: void process(android.filterfw.core.FilterContext)>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.server.notification.ManagedServices: void registerSystemService(android.content.ComponentName,int)>
<android.webkit.CacheManager.CacheResult: int getHttpStatusCode()>
<android.view.animation.LayoutAnimationController: int getOrder()>
<android.location.Location: android.os.Bundle getExtras()>
<android.net.TrafficStats: long getTotalRxBytes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>
<android.widget.ExpandableListView.OnGroupClickListener: boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long)>
<android.widget.AbsListView: void onMeasure(int,int)>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: void sendIntermediatePickOptionResult(android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>
<android.view.ViewGroup: void drawableStateChanged()>
<android.ext.services.notification.Ranker: void onNotificationRemoved(android.service.notification.StatusBarNotification)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: boolean dismiss(boolean)>
<com.android.systemui.recents.events.activity.ShowStackActionButtonEvent: void <init>(boolean)>
<android.graphics.Canvas_Delegate: void native_scale(long,float,float)>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: float getXVelocity()>
<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>
<com.android.printspooler.model.RemotePrintDocument: void <init>(android.content.Context,android.print.IPrintDocumentAdapter,com.android.printspooler.model.MutexFileProvider,com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver,com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues)>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>
<com.android.systemui.tuner.DemoModeFragment: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)>
<com.android.keyguard.EmergencyButton: void onAttachedToWindow()>
<android.widget.AbsListView: void handleDataChanged()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<android.content.IntentFilter.AuthorityEntry: int getPort()>
<android.renderscript.FieldPacker: void <init>(int)>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context)>
<com.android.preload.DumpDataIO: java.lang.String serialize(java.util.Collection)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setKeyguardFadingAway(long,long,long)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float,boolean)>
<com.android.server.pm.Policy: boolean hasInnerPackages()>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)>
<com.android.documentsui.services.FileOperationService: android.os.IBinder onBind(android.content.Intent)>
<android.database.CursorWindow: short getShort(int,int)>
<android.os.DeadSystemException: void <init>()>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setColorMaskEnabled(boolean,boolean,boolean,boolean)>
<android.net.wifi.WifiScanner.ScanListener: void onPeriodChanged(int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onText(java.lang.CharSequence)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(java.lang.Object[],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<android.webkit.WebView: void clearSslPreferences()>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>
<com.android.systemui.statusbar.policy.LocationController: void removeSettingsChangedCallback(com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback)>
<com.android.server.connectivity.KeepaliveTracker: void handleStartKeepalive(android.os.Message)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>
<android.opengl.GLSurfaceView: void requestRender()>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasBackgroundColor()>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.Canvas_Delegate: int native_getSaveCount(long)>
<android.graphics.drawable.GradientDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.graphics.Matrix: void setScale(float,float,float,float)>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext.DebugProcKHR)>
<android.os.BatteryStats.Uid: long getCpuPowerMaUs(int)>
<android.graphics.Camera: void setLocation(float,float,float)>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.qs.PagedTileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.settingslib.AppItem: void addUid(int)>
<com.android.server.NativeDaemonEvent: java.io.FileDescriptor[] getFileDescriptors()>
<com.android.server.wm.TaskStack: void getBounds(android.graphics.Rect)>
<android.renderscript.Matrix3f: void loadIdentity()>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setBadge(android.graphics.drawable.Drawable)>
<android.hardware.camera2.impl.CameraDeviceImpl: void createCaptureSessionByOutputConfigurations(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)>
<android.os.BatteryStats.Uid: void noteUserActivityLocked(int)>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo sendObjectInfo(android.mtp.MtpObjectInfo)>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],android.print.PageRange[],int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.bluetooth.BluetoothGatt: java.util.List getServices()>
<android.media.MediaPlayer: void setPlaybackParams(android.media.PlaybackParams)>
<com.android.server.wm.PointerEventDispatcher: void unregisterInputEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<com.android.server.job.controllers.ContentObserverController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<com.android.systemui.statusbar.ExpandableView: boolean hasOverlappingRendering()>
<android.webkit.WebViewProvider.ViewDelegate: android.view.View findFocus(android.view.View)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.DismissTaskViewEvent)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onAppearAnimationFinished(boolean)>
<android.preference.Preference: boolean isEnabled()>
<com.google.android.maps.MapView: boolean isTraffic()>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<android.animation.TimeAnimator: void setTimeListener(android.animation.TimeAnimator.TimeListener)>
<com.android.systemui.qs.QSTile.Host: void addCallback(com.android.systemui.qs.QSTile.Host.Callback)>
<android.app.ListActivity: void onContentChanged()>
<com.android.location.provider.GmsFusedBatchOptions: int getSourcesToUse()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<android.filterpacks.imageproc.VignetteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.speech.tts.TextToSpeech.Action: java.lang.Object run(android.speech.tts.ITextToSpeechService)>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.os.health.HealthStats: boolean hasMeasurements(int)>
<com.android.gallery3d.common.BitmapUtils: boolean isRotationSupported(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,int[],int)>
<com.android.settingslib.wifi.AccessPoint: boolean equals(java.lang.Object)>
<com.android.commands.telecom.Telecom: void onRun()>
<android.telecom.Call.Details: boolean hasProperty(int)>
<com.android.systemui.tv.pip.PipManager: boolean isPipShown()>
<android.graphics.Matrix: void setRotate(float)>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>
<android.graphics.SurfaceTexture: long getTimestamp()>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>
<com.android.documentsui.UriDerivativeLoader: void deliverResult(java.lang.Object)>
<android.content.SearchRecentSuggestionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>
<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreviewSize()>
<android.bluetooth.le.ScanFilter: byte[] getServiceDataMask()>
<com.android.server.usage.AppIdleHistory: long getScreenOnTimeLocked(long)>
<android.app.ActionBar.Tab: android.view.View getCustomView()>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeCapability(int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ComponentName startService(android.content.Intent)>
<com.android.gallery3d.common.Utils: java.lang.String[] copyOf(java.lang.String[],int)>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>
<android.text.Annotation: java.lang.String getKey()>
<android.text.StaticLayout: int getEllipsisStart(int)>
<com.android.systemui.volume.VolumeDialogMotion: void startShow()>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean)>
<com.android.server.media.MediaSessionRecord: boolean isSystemPriority()>
<android.location.GnssStatus: boolean hasAlmanacData(int)>
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<com.android.systemui.tuner.StatusBarSwitch: boolean persistBoolean(boolean)>
<com.android.settingslib.bluetooth.PanProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<android.widget.TextView: int getBreakStrategy()>
<android.telecom.Connection.VideoProvider: void changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities)>
<android.widget.TextView: boolean hasOverlappingRendering()>
<com.android.server.connectivity.NetworkAgentInfo: void linger()>
<com.android.hotspot2.IMSIParameter: boolean equals(java.lang.Object)>
<com.android.server.LockSettingsStrongAuth: void removeUser(int)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.content.res.Configuration: boolean isScreenRound()>
<android.graphics.drawable.DrawableWrapper: int getOpacity()>
<com.android.hotspot2.omadm.OMAScalar: java.util.Collection getChildren()>
<android.hardware.camera2.impl.CameraMetadataNative: int describeContents()>
<android.os.Debug: void resetGlobalAllocCount()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)>
<android.transition.Transition: void setPathMotion(android.transition.PathMotion)>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte[])>
<android.view.inputmethod.InputBinding: int getUid()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void dragRecipientEntered(android.view.IWindow)>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.renderscript.FieldPacker: android.renderscript.Short3 subShort3()>
<android.net.ip.RouterAdvertisementDaemon.RaParams: android.net.ip.RouterAdvertisementDaemon.RaParams getDeprecatedRaParams(android.net.ip.RouterAdvertisementDaemon.RaParams,android.net.ip.RouterAdvertisementDaemon.RaParams)>
<com.android.systemui.ViewInvertHelper: void clearTargets()>
<android.service.notification.Condition: java.lang.String stateToString(int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void reset(boolean)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder setGlobalSeinfoOrThrow(java.lang.String)>
<android.bluetooth.BluetoothAdapter: int getState()>
<android.nfc.NfcAdapter.OnTagRemovedListener: void onTagRemoved()>
<android.graphics.RoundRectangle: double getX()>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String byteToHexString(byte,boolean)>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>
<com.android.systemui.SwipeHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.hotspot2.OMADMAdapter: java.lang.String getMAC()>
<com.android.egg.neko.Cat: long getSeed()>
<com.android.uiautomator.core.UiObject: boolean isFocusable()>
<com.android.settingslib.bluetooth.PanProfile: boolean isConnectable()>
<android.telecom.Conference: void putExtras(android.os.Bundle)>
<android.view.Window: void setSharedElementExitTransition(android.transition.Transition)>
<android.telecom.Conference: android.os.Bundle getExtras()>
<android.hardware.camera2.legacy.LegacyCameraDevice: android.hardware.camera2.utils.SubmitInfo submitRequest(android.hardware.camera2.CaptureRequest,boolean)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: java.lang.String toString()>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>
<android.text.method.ScrollingMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<com.google.android.gles_jni.GLImpl: void glViewport(int,int,int,int)>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode.VmPolicy)>
<android.telecom.Phone.Listener: void onCallAdded(android.telecom.Phone,android.telecom.Call)>
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void fling(int)>
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>
<android.media.Rating: boolean isThumbUp()>
<android.media.session.MediaController.TransportControls: void skipToPrevious()>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.tiles.AirplaneModeTile: int getMetricsCategory()>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
<com.android.systemui.statusbar.phone.PanelView: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>
<android.widget.ListView: void setItemsCanFocus(boolean)>
<android.database.sqlite.SQLiteDiskIOException: void <init>()>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>
<com.android.tools.layoutlib.java.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.qs.customize.TileAdapter: android.support.v7.widget.RecyclerView.ItemDecoration getItemDecoration()>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: int hashCode()>
<com.android.server.fingerprint.EnumerateClient: boolean onEnumerationResult(int,int)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnailBytes()>
<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>
<com.android.hotspot2.Utils: java.lang.String roamingConsortiumsToString(java.util.Collection)>
<com.android.server.media.MediaSessionRecord: boolean hasFlag(int)>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int,int)>
<android.widget.Scroller: int timePassed()>
<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>
<android.view.KeyEvent: int getFlags()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setCurrentUser(int)>
<android.app.Dialog: void takeKeyEvents(boolean)>
<android.graphics.RectF: float centerY()>
<android.text.format.Time: void <init>()>
<android.graphics.pdf.PdfDocument: void finishPage(android.graphics.pdf.PdfDocument.Page)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.notification.TransformState: android.view.View getTransformedView()>
<com.android.systemui.tv.pip.PipRecentsControlsView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExtras(android.os.Bundle)>
<android.content.pm.ComponentInfo: void <init>()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void onCreate(android.os.Bundle)>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>
<com.android.systemui.tuner.TunerSwitch: void onDetached()>
<android.hardware.camera2.legacy.CaptureCollector: void failNextJpeg()>
<android.graphics.drawable.GradientDrawable: boolean isStateful()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.graphics.Bitmap: boolean isMutable()>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
<android.graphics.drawable.Drawable: boolean isAutoMirrored()>
<android.app.LauncherActivity: void onSetContentView()>
<android.app.Application: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getRightPreview()>
<android.bluetooth.BluetoothGattService: boolean addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onActivityDismissingDockedStack()>
<android.net.NetworkCapabilities: java.lang.String toString()>
<android.content.pm.LabeledIntent: int getLabelResource()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void removeAsSoonAsPossible()>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>
<com.android.server.am.BatteryStatsService: void notePackageInstalled(java.lang.String,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>
<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>
<android.renderscript.Matrix3f: void scale(float,float)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustManagedChanged(int)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection.Builder setSignaturePaddings(java.lang.String[])>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.fingerprint.AuthenticationClient: boolean onEnrollResult(int,int,int)>
<android.graphics.BitmapFactory.Options: void <init>()>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionClick(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.documentsui.PickFragment: void setPickTarget(int,int,com.android.documentsui.model.DocumentInfo)>
<android.hardware.hdmi.HdmiTvClient.SelectCallback: void onComplete(int)>
<android.media.tv.TvView.TvInputCallback: void onVideoAvailable(java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>
<android.widget.AbsSeekBar: void drawableHotspotChanged(float,float)>
<com.android.keyguard.KeyguardSimPukView: void showUsabilityHint()>
<android.content.pm.PackageManager.NameNotFoundException: void <init>(java.lang.String)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>
<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>
<android.nfc.tech.Ndef: boolean makeReadOnly()>
<com.android.uiautomator.core.Configurator: long getKeyInjectionDelay()>
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.testrunner.IAutomationSupport getAutomationSupport()>
<android.telecom.Conference: android.telecom.Connection.VideoProvider getVideoProvider()>
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>
<android.util.SparseArray: void <init>(int)>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>
<com.android.documentsui.FilteringCursorWrapper: java.lang.String[] getColumnNames()>
<android.widget.Toolbar: void inflateMenu(int)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.ShowStackActionButtonEvent)>
<com.android.anqp.OSUProvider: java.util.List getOSUMethods()>
<android.net.NetworkInfo: java.lang.String toString()>
<com.google.android.util.AbstractMessageParser.Link: boolean isHtml()>
<android.app.RemoteInput: java.lang.CharSequence getLabel()>
<com.android.documentsui.dirlist.DirectoryFragment: boolean onDoubleTap(android.view.MotionEvent)>
<android.telecom.RemoteConnection: void answer()>
<com.android.server.notification.ZenModeHelper: int getCurrentInstanceCount(android.content.ComponentName)>
<com.android.systemui.statusbar.stack.AmbientState: void setMaxHeadsUpTranslation(float)>
<com.android.printspooler.ui.PrintActivity: void onActionPerformed()>
<android.location.GpsSatellite: float getElevation()>
<com.android.systemui.qs.QSPanel: int getGridHeight()>
<com.android.systemui.statusbar.phone.SettingsButton: void startAccelSpin()>
<android.content.SyncStats: java.lang.String toString()>
<com.android.wallpapercropper.CropView: int getImageRotation()>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityStart()>
<android.app.Notification.CarExtender.UnreadConversation: java.lang.String[] getParticipants()>
<android.content.AsyncQueryHandler: void startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)>
<android.graphics.Bitmap: void setDensity(int)>
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenx(int,int,int)>
<com.android.hotspot2.osu.commands.GetCertData: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.webkit.WebView: void setInitialScale(int)>
<com.android.systemui.statusbar.GestureRecorder: void <init>(java.lang.String)>
<android.util.SparseIntArray: java.lang.String toString()>
<android.media.tv.TvView: void requestUnblockContent(android.media.tv.TvContentRating)>
<com.android.server.IoThread: com.android.server.IoThread get()>
<android.app.Application.OnProvideAssistDataListener: void onProvideAssistData(android.app.Activity,android.os.Bundle)>
<com.android.systemui.recents.RecentsConfiguration: void <init>(android.content.Context)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.systemui.DessertCaseView: void place(android.view.View,boolean)>
<com.android.server.display.DisplayAdapter.Listener: void onDisplayDeviceEvent(com.android.server.display.DisplayDevice,int)>
<android.widget.Switch: void onMeasure(int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>
<com.android.server.input.InputManagerService: void systemRunning()>
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setKeyguardEnabled(boolean)>
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>
<com.android.server.am.ActivityManagerService: int getProcessLimit()>
<android.media.AudioTrack: int getUnderrunCount()>
<android.graphics.Color: int blue(int)>
<com.android.server.input.InputManagerService: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.systemui.qs.QSIconView: void onLayout(boolean,int,int,int,int)>
<android.hardware.radio.RadioManager.ProgramInfo: int hashCode()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributeType(int)>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setGender(java.lang.String)>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: android.os.Bundle getAssistContextExtras(int)>
<com.android.systemui.recents.misc.FreePathInterpolator: float getX(float)>
<android.print.PrinterInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>
<android.app.ActionBar: void setHideOnContentScrollEnabled(boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isEnabled()>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()>
<com.android.settingslib.BatteryInfo.BatteryDataParser: void onDataGap()>
<android.provider.MediaStore.Video.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.pps.HomeSP addSP(java.lang.String,com.android.hotspot2.osu.OSUManager)>
<com.android.systemui.classifier.ProximityEvaluator: float evaluate(float,int)>
<android.text.method.ArrowKeyMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<com.android.hotspot2.pps.HomeSP: java.lang.String getFriendlyName()>
<com.android.server.am.BatteryStatsService: byte[] getStatistics()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setSignalCluster(com.android.systemui.statusbar.SignalClusterView)>
<android.gesture.Gesture: android.graphics.Path toPath()>
<android.graphics.Paint_Delegate: int getTextAlign()>
<android.filterpacks.imageproc.DocumentaryFilter: void <init>(java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>
<android.util.SparseArray: void put(int,java.lang.Object)>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.app.ActionBar: int getHeight()>
<com.android.server.IoThread: android.os.Handler getHandler()>
<android.media.session.MediaSession.QueueItem: android.media.MediaDescription getDescription()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<com.android.settingslib.applications.ApplicationsState.Session: void release()>
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.systemui.qs.tiles.FlashlightTile: void setListening(boolean)>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,int[],int)>
<android.bluetooth.BluetoothProfile: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>
<android.database.AbstractCursor: boolean moveToLast()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothProfileManager getProfileManager()>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>
<com.android.server.policy.PhoneWindowManager: int subWindowTypeToLayerLw(int)>
<android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)>
<com.android.server.am.ActivityManagerService: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.media.Image: void setCropRect(android.graphics.Rect)>
<android.app.backup.FullBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.gallery3d.glrenderer.GLPaint: float getLineWidth()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<android.view.ViewStructure: void setActivated(boolean)>
<android.widget.SlidingDrawer: void toggle()>
<android.view.IWindowManagerImpl: boolean isSafeModeEnabled()>
<android.content.res.BridgeAssetManager: android.content.res.AssetManager initSystem()>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>
<com.android.systemui.qs.QSDetailItems: void setEmptyState(int,int)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void removeHandler(com.android.ddmlib.ClientData.IHprofDumpHandler)>
<android.text.style.DynamicDrawableSpan: void <init>()>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>
<android.view.View: void forceHasOverlappingRendering(boolean)>
<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getRecentTasks(int,int,int)>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagCount(int)>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>
<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: boolean isInfinite()>
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<com.android.server.am.ActivityManagerService: void clearPendingBackup()>
<android.provider.CalendarContract.CalendarEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean hasLockscreenWallpaper()>
<android.view.View: void onStartTemporaryDetach()>
<com.android.layoutlib.bridge.impl.DelegateManager: long addNewDelegate(java.lang.Object)>
<com.android.keyguard.KeyguardPinBasedInputView: void resetState()>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer.Settings)>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>
<android.preference.PreferenceActivity: void finishPreferencePanel(android.app.Fragment,int,android.content.Intent)>
<com.android.systemui.SwipeHelper: float getEscapeVelocity()>
<android.database.CursorWrapper: long getLong(int)>
<android.telecom.InCallService.VideoCall: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.view.ViewGroup: void startLayoutAnimation()>
<com.android.server.am.ActivityManagerService: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getLeftPreview()>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: int getCustomBackgroundColor()>
<com.android.layoutlib.bridge.android.BridgeContext: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.media.AudioManager: int getRouting(int)>
<android.telecom.Conference: void setVideoState(android.telecom.Connection,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfKeyguardFeaturesDisabled(android.content.Context,int,int)>
<android.app.VoiceInteractor.PickOptionRequest.Option: int describeContents()>
<com.android.settingslib.RestrictedSwitchPreference: void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager)>
<com.android.gallery3d.glrenderer.UploadedTexture: void <init>()>
<android.hardware.camera2.CaptureRequest: java.util.List getKeys()>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView)>
<android.util.FloatMath: float pow(float,float)>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.app.assist.AssistStructure.ViewNode: boolean isLongClickable()>
<android.webkit.ClientCertRequest: void ignore()>
<android.graphics.Bitmap_Delegate: java.awt.image.BufferedImage getImage()>
<com.google.android.util.AbstractMessageParser: java.util.List getParts()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String,java.util.Collection)>
<com.android.settingslib.graph.UsageView: void setBottomLabels(java.lang.CharSequence[])>
<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)>
<android.view.ViewStub: void setVisibility(int)>
<com.android.server.am.ActivityManagerService.GrantUri: java.lang.String toSafeString()>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.camera2.legacy.ParameterUtils: float getMaxZoomRatio(android.hardware.Camera.Parameters)>
<com.android.systemui.statusbar.ExpandableView: void setFakeShadowIntensity(float,float,int,int)>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost.Settings)>
<com.android.server.pm.Installer: void createUserData(java.lang.String,int,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: void preloadRecents()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>
<com.android.systemui.SwipeHelper: void onDownUpdate(android.view.View)>
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isMultiLine()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeUp()>
<com.android.server.pm.UserManagerService: boolean someUserHasSeedAccount(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isInContentBounds(float)>
<android.telecom.VideoProfile: int getVideoState()>
<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean)>
<android.graphics.Shader: void finalize()>
<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>
<android.preference.SwitchPreference: void setSwitchTextOn(int)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalCacheDirs()>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(android.content.res.Resources,int)>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
<android.net.ip.IpManager.Callback: void onProvisioningSuccess(android.net.LinkProperties)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRemovedLocked(android.service.notification.StatusBarNotification)>
<android.location.GnssMeasurement: java.lang.String toString()>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>
<android.text.LoginFilter.UsernameFilterGMail: void <init>(boolean)>
<android.content.Loader: void commitContentChanged()>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.phone.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.statusbar.phone.ActivityStarter.Callback)>
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startStackAnimations(com.android.systemui.statusbar.ExpandableView,com.android.systemui.statusbar.stack.StackViewState,com.android.systemui.statusbar.stack.StackScrollState,int,long)>
<android.media.MediaPlayer: void setSurface(android.view.Surface)>
<com.android.systemui.recents.events.ui.DeleteTaskDataEvent: void <init>(com.android.systemui.recents.model.Task)>
<android.app.DialogFragment: int getTheme()>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>
<android.animation.ValueAnimator: void setRepeatCount(int)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.graphics.Outline: void setOval(int,int,int,int)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldDisableNavbarGestures()>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setQsPanel(com.android.systemui.qs.QSPanel)>
<android.widget.HorizontalScrollView: void requestLayout()>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitNative(int,java.lang.Object)>
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioSampleRate(int)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRectangleOnScreenRequested(int,int,int,int)>
<android.os.Process: int myUid()>
<com.android.documentsui.services.FileOperationService: void onFinished(com.android.documentsui.services.Job)>
<android.media.tv.TvTrackInfo: int getAudioChannelCount()>
<com.android.systemui.statusbar.car.CarStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>
<com.android.egg.neko.NekoTile: void onCreate()>
<com.android.settingslib.accounts.AuthenticatorHelper.OnAccountsUpdateListener: void onAccountsUpdate(android.os.UserHandle)>
<android.widget.MediaController: java.lang.CharSequence getAccessibilityClassName()>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<com.android.server.backup.FullBackupJob: boolean onStopJob(android.app.job.JobParameters)>
<com.android.server.pm.UserManagerService: void onUserLoggedIn(int)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.TrafficStats: long getUidRxBytes(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)>
<com.android.server.MmsServiceBroker: void onStart()>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: float getSpaceForGear()>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)>
<android.content.res.AssetFileDescriptor: java.lang.String toString()>
<android.app.Dialog: void hide()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
<android.media.ImageReader: int getHeight()>
<android.media.MediaCodec: android.media.MediaCodec createEncoderByType(java.lang.String)>
<android.view.animation.Animation: void ensureInterpolator()>
<android.content.pm.PermissionGroupInfo: java.lang.String toString()>
<android.content.Context: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>
<android.os.Parcel: void writeSizeF(android.util.SizeF)>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>
<com.android.anqp.eap.Credential: boolean equals(java.lang.Object)>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: com.android.systemui.recents.misc.ReferenceCountedTrigger getAnimationTrigger()>
<android.view.ViewGroup: void setClipChildren(boolean)>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setAlpha(float)>
<com.android.systemui.qs.TileLayout: void setListening(boolean)>
<android.hardware.camera2.params.LensShadingMap: java.lang.String toString()>
<android.view.KeyEvent: int getDeadChar(int,int)>
<android.graphics.Color: int parseColor(java.lang.String)>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.Face toFace(int,android.graphics.Point,android.graphics.Point,android.graphics.Point)>
<com.android.server.media.MediaSessionRecord: void adjustVolume(int,int,java.lang.String,int,boolean)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
<android.media.AudioManagerInternal.RingerModeDelegate: int getRingerModeAffectedStreams(int)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent.PointerCoords)>
<android.media.AudioRouting: android.media.AudioDeviceInfo getRoutedDevice()>
<android.webkit.WebViewProvider.ViewDelegate: void onProvideVirtualStructure(android.view.ViewStructure)>
<com.android.server.backup.Trampoline: void agentConnected(java.lang.String,android.os.IBinder)>
<com.android.printspooler.model.PrintSpoolerService: void onDestroy()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void clearAllNotifications()>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,float[],int)>
<android.renderscript.Type: int getX()>
<android.media.audiofx.Virtualizer: boolean canVirtualize(int,int)>
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.app.FragmentController: android.app.Fragment findFragmentByWho(java.lang.String)>
<android.app.ActivityManagerProxy: void activityRelaunched(android.os.IBinder)>
<com.android.systemui.qs.tiles.CellularTile: void handleUpdateState(com.android.systemui.qs.QSTile.SignalState,java.lang.Object)>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>
<android.media.MediaRouter.RouteGroup: void removeRoute(android.media.MediaRouter.RouteInfo)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<android.graphics.Typeface_Delegate: void <init>(android.graphics.FontFamily_Delegate[],int,int)>
<com.android.systemui.tuner.TunerSwitch: void onTuningChanged(java.lang.String,java.lang.String)>
<android.widget.NumberPicker: boolean performClick()>
<com.android.systemui.tv.pip.PipControlsView: void reset()>
<android.app.Notification.Builder: android.app.Notification.Builder setContentIntent(android.app.PendingIntent)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardSecurityCallback: void dismiss(boolean)>
<android.util.JsonReader: long nextLong()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>
<com.android.systemui.recents.views.TaskViewThumbnail: void updateThumbnailScale()>
<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: char[] getTextCharacters(int[])>
<android.telecom.Conference: void setExtras(android.os.Bundle)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandNotificationsPanel()>
<android.os.Debug: void resetAllCounts()>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>
<android.content.ContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
<android.content.pm.FeatureInfo: void <init>()>
<android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
<android.app.FragmentManagerImpl: void execSingleAction(java.lang.Runnable,boolean)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void releaseSuspendBlocker()>
<android.content.res.Resources: float getDimension(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>
<com.android.server.media.MediaSessionRecord: void setVolumeTo(int,int,java.lang.String,int)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo build()>
<com.android.systemui.assist.AssistManager: boolean shouldShowOrb()>
<android.graphics.drawable.Animatable: boolean isRunning()>
<android.graphics.drawable.RotateDrawable: float getPivotY()>
<com.android.printspooler.util.BitmapSerializeUtils: void readBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<android.content.ContentResolver: void takePersistableUriPermission(android.net.Uri,int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void shutdown(boolean)>
<android.preference.PreferenceGroup: void notifyDependencyChange(boolean)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setThumbCompressedSize(long)>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>
<android.app.ListFragment: android.widget.ListView getListView()>
<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>
<com.android.location.provider.FusedLocationHardware: boolean supportsDeviceContextInjection()>
<android.print.PrintAttributes: int getColorMode()>
<android.view.IWindowManagerImpl: int[] setNewConfiguration(android.content.res.Configuration)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void setBitmap(android.graphics.Bitmap_Delegate)>
<android.widget.ViewAnimator: void removeView(android.view.View)>
<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>
<android.provider.Contacts.People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
<com.android.systemui.stackdivider.DividerView: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getRssUrl(java.lang.String)>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistInternal()>
<android.content.ContentProviderProxy: void <init>(android.os.IBinder)>
<com.android.systemui.qs.QSContainer: void setKeyguardShowing(boolean)>
<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionPending()>
<android.view.View.AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.database.sqlite.SQLiteMisuseException: void <init>()>
<com.android.systemui.statusbar.NotificationGuts: void setExposed(boolean,boolean)>
<com.android.tools.layoutlib.java.IntegralToString: void appendInt(java.lang.StringBuilder,int)>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>
<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>
<com.android.server.twilight.TwilightService: void onProviderDisabled(java.lang.String)>
<android.util.Pools.SimplePool: boolean release(java.lang.Object)>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative.Key,java.lang.Object)>
<android.graphics.ColorMatrix: void setRotate(int,float)>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>
<android.media.tv.TvView: boolean onUnhandledInputEvent(android.view.InputEvent)>
<com.android.server.am.ActivityManagerService: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.util.SparseLongArray: long get(int,long)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void preloadRecents()>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[],byte[])>
<android.view.MotionEvent: float getRawY()>
<android.app.ActivityManager: void restartPackage(java.lang.String)>
<android.view.View: void requestUnbufferedDispatch(android.view.MotionEvent)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int save(int)>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.graphics.Rect: java.lang.String toShortString()>
<android.app.usage.NetworkStats.Bucket: long getRxPackets()>
<android.app.Activity: void finishAndRemoveTask()>
<android.util.LongSparseArray: java.lang.Object valueAt(int)>
<com.android.settingslib.Utils: int getTetheringLabel(android.net.ConnectivityManager)>
<com.android.server.notification.ConditionProviders: void ensureRecordExists(android.content.ComponentName,android.net.Uri,android.service.notification.IConditionProvider)>
<com.android.server.connectivity.NetworkAgentInfo: void clearLingerState()>
<android.os.health.HealthStats: android.os.health.TimerStat getTimer(int)>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.graphics.Typeface getTypeface()>
<com.android.server.net.NetworkStatsService: void forceUpdate()>
<android.opengl.GLES32: void glBlendEquationSeparatei(int,int,int)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setInput(android.renderscript.Allocation)>
<com.android.systemui.qs.QSTileBaseView: com.android.systemui.qs.QSIconView getIcon()>
<com.android.server.pm.ShortcutService.Lifecycle: void onUnlockUser(int)>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.content.pm.LauncherApps.Callback: void onPackageAdded(java.lang.String,android.os.UserHandle)>
<com.android.server.job.controllers.AppIdleController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
<com.android.settingslib.drawer.SettingsDrawerActivity: boolean openTile(com.android.settingslib.drawer.Tile)>
<android.mtp.MtpObjectInfo: int getImagePixWidth()>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>
<android.util.SparseLongArray: void put(int,long)>
<android.view.View: void onScrollChanged(int,int,int,int)>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasProfileOwner()>
<android.print.PrinterInfo: int describeContents()>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<com.android.gallery3d.exif.ExifTag: boolean hasDefinedCount()>
<com.android.documentsui.LocalPreferences: int getViewMode(android.content.Context,com.android.documentsui.model.RootInfo,int)>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setYUVtoRGB()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>
<android.view.ViewDebug.ViewOperation: void run(java.lang.Object[])>
<android.media.midi.MidiDeviceInfo: int getOutputPortCount()>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: int getCount()>
<android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>
<android.telephony.CellInfoLte: java.lang.String toString()>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>
<com.android.systemui.recents.views.TaskStackView: void setSystemInsets(android.graphics.Rect)>
<android.renderscript.Float4: void <init>(float,float,float,float)>
<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>
<com.android.gallery3d.exif.ExifTag: int getDataSize()>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
<com.android.systemui.volume.VolumeDialogController: void dismiss()>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<android.media.MediaRouter.UserRouteInfo: void requestUpdateVolume(int)>
<android.telecom.RemoteConnection.Callback: void onRingbackRequested(android.telecom.RemoteConnection,boolean)>
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: void <init>()>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>
<com.android.settingslib.drawable.CircleFramedDrawable: void <init>(android.graphics.Bitmap,int)>
<android.preference.SeekBarVolumizer.Callback: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.util.JsonReader: java.lang.String nextString()>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
<android.graphics.drawable.RippleDrawable: void jumpToCurrentState()>
<android.renderscript.ScriptGroup.Builder2: void <init>(android.renderscript.RenderScript)>
<com.android.server.pm.KeySetManagerService: void dumpLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.PackageManagerService.DumpState)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void finishInput(com.android.internal.view.IInputMethodClient)>
<android.app.FragmentHostCallback: java.lang.Object onGetHost()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.view.ViewGroup getBouncerContainer()>
<com.android.systemui.usb.UsbDebuggingActivity: void onCreate(android.os.Bundle)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStarted()>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.res.Resources.Theme getTheme()>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>
<android.webkit.WebView: void setNetworkAvailable(boolean)>
<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.android.hotspot2.osu.OSUCache: void <init>()>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>
<android.widget.Switch: int getSwitchMinWidth()>
<com.android.systemui.statusbar.ExpandableView: void onLayout(boolean,int,int,int,int)>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setDescription(java.lang.String)>
<android.content.Intent: short getShortExtra(java.lang.String,short)>
<android.os.storage.StorageVolume: java.lang.String getState()>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseDuration(boolean)>
<com.android.server.midi.MidiService: void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchSetBackground(android.graphics.Bitmap)>
<com.android.preload.Main: com.android.preload.ui.UI getUI()>
<android.media.AudioFormat: void <init>()>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getPackageName()>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>
<com.android.server.twilight.TwilightService: boolean handleMessage(android.os.Message)>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>
<android.media.tv.TvView.TvInputCallback: void onChannelRetuned(java.lang.String,android.net.Uri)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isBackupServiceEnabled(android.content.ComponentName)>
<com.android.server.LocationManagerService: java.util.List getAllProviders()>
<android.webkit.WebChromeClient: void onHideCustomView()>
<com.android.server.lights.Light: void setColor(int)>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setScanMode(int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform)>
<com.android.systemui.tv.pip.PipMenuActivity: void onPipResizeAboutToStart()>
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.io.OutputStream)>
<android.speech.tts.Voice: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.customize.QSCustomizer: boolean isCustomizing()>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>
<com.android.hotspot2.osu.SOAPParser: void <init>(java.io.InputStream)>
<com.android.gallery3d.glrenderer.BasicTexture: int getWidth()>
<android.graphics.RectF: void set(float,float,float,float)>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getDescription()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setQSPanel(com.android.systemui.qs.QSPanel)>
<android.media.session.MediaController.PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>
<com.android.server.wm.TaskStack: boolean setSize(android.graphics.Rect)>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>
<com.android.server.usage.UsageStatsService: void onStatsReloaded()>
<android.opengl.GLES10: void glLineWidth(float)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telecom.Call: java.lang.String toString()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setAlpha(int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addSignalCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<android.telephony.CellSignalStrength: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: void setOrganizationColor(android.content.ComponentName,int)>
<com.android.systemui.tuner.TunerService: java.lang.String getValue(java.lang.String)>
<android.media.MediaFormat: boolean getFeatureEnabled(java.lang.String)>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>
<android.app.FragmentController: void dispatchDestroyView()>
<android.app.Activity: int getTaskId()>
<com.android.server.job.controllers.AppIdleController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script.KernelID getKernelID()>
<android.graphics.Paint: void setStrikeThruText(boolean)>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>
<com.android.server.fingerprint.ClientMonitor: boolean onRemoved(int,int)>
<android.view.Window: void closeAllPanels()>
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)>
<com.android.location.provider.ProviderRequestUnbundled: boolean getReportLocation()>
<android.net.Network: java.net.InetAddress getByName(java.lang.String)>
<android.os.storage.IObbActionListener.Stub: android.os.storage.IObbActionListener asInterface(android.os.IBinder)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onDiscoveryStopped(java.lang.String)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomSizePreset(int)>
<android.app.Notification: android.app.Notification clone()>
<android.telecom.DisconnectCause: int describeContents()>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getPinnedShortcuts(java.lang.String,int)>
<com.android.systemui.statusbar.stack.StackStateAnimator: void startAnimationForEvents(java.util.ArrayList,com.android.systemui.statusbar.stack.StackScrollState,long)>
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>
<android.view.MotionEvent: float getTouchMinor()>
<android.widget.CalendarView: void setWeekDayTextAppearance(int)>
<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setLaunchingAffordance(boolean)>
<android.security.keystore.KeyGenParameterSpec: int getPurposes()>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayRemoved(int)>
<android.content.AsyncQueryHandler.WorkerHandler: void <init>(android.os.Looper)>
<com.android.commands.settings.SettingsCmd: void main(java.lang.String[])>
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.graphics.PathDashPathEffect_Delegate: java.lang.String getSupportMessage()>
<android.widget.Switch: void setThumbTextPadding(int)>
<android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.widget.Editor.SuggestionsPopupWindow: void setUp()>
<com.android.server.pm.ShortcutService: void cleanupBitmapsForPackage(int,java.lang.String)>
<android.app.FragmentManagerImpl: int reverseTransit(int)>
<com.android.systemui.statusbar.car.CarNavigationButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ScrollView: void smoothScrollBy(int,int)>
<android.content.Context: int checkPermission(java.lang.String,int,int)>
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>
<android.content.pm.FeatureGroupInfo: int describeContents()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeightInternal(float)>
<android.service.notification.ZenModeConfig.ZenRule: void <init>()>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>
<android.app.AlarmManager.AlarmClockInfo: android.app.PendingIntent getShowIntent()>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>
<com.android.gallery3d.glrenderer.Texture: boolean isOpaque()>
<android.service.quicksettings.Tile: void updateTile()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.trust.TrustArchive: void dump(java.io.PrintWriter,int,int,java.lang.String,boolean)>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>
<android.media.MediaMetadata.Builder: void <init>(android.media.MediaMetadata)>
<android.app.ActivityView.ActivityViewCallback: void onSurfaceDestroyed(android.app.ActivityView)>
<com.android.documentsui.UriDerivativeLoader: void <init>(android.content.Context,java.lang.Object)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(android.view.View)>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>
<android.os.MemoryFile: boolean allowPurging(boolean)>
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)>
<com.android.systemui.recents.model.TaskKeyLruCache: void <init>(int,com.android.systemui.recents.model.TaskKeyLruCache.EvictionCallback)>
<com.android.providers.settings.SettingsBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<android.provider.BlockedNumberContract.SystemContract.BlockSuppressionStatus: void <init>(boolean,long)>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>
<com.android.documentsui.ThumbnailCache: void <init>(int)>
<android.renderscript.FieldPacker: void addF64(double)>
<android.content.res.AssetManager: int addOverlayPath(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onActivationReset(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,short[])>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context)>
<android.graphics.Region: boolean quickReject(int,int,int,int)>
<android.view.View: android.view.ViewParent getParent()>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context)>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withProvisioningTimeoutMs(int)>
<android.renderscript.ScriptGroup.Closure: android.renderscript.ScriptGroup.Future getReturn()>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>
<android.view.ViewStructure: android.os.Bundle getExtras()>
<com.android.hotspot2.osu.OSUResponse: com.android.hotspot2.osu.OSUMessageType getMessageType()>
<android.database.DatabaseUtils.InsertHelper: long execute()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.server.notification.ZenModeHelper: boolean shouldSuppressWhenScreenOff()>
<android.telecom.Conference: int getState()>
<android.text.style.EasyEditSpan: int getSpanTypeId()>
<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>
<android.hardware.usb.UsbConfiguration: java.lang.String getName()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void showScreenPinningRequest(int,boolean)>
<android.app.MediaRouteButton: void onDraw(android.graphics.Canvas)>
<android.telecom.PhoneAccountHandle: boolean equals(java.lang.Object)>
<com.android.systemui.volume.VolumeDialogController: void showDndTile(boolean)>
<com.android.uiautomator.core.UiScrollable: boolean scrollDescriptionIntoView(java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: int glCheckFramebufferStatusOES(int)>
<com.android.systemui.statusbar.phone.PlatformVelocityTracker: void setTracker(android.view.VelocityTracker)>
<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String,int)>
<com.android.systemui.recents.Recents: void onDraggingInRecents(float)>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>
<com.android.systemui.statusbar.car.CarNavigationButton: void onFinishInflate()>
<android.widget.ImageView: void setImageIcon(android.graphics.drawable.Icon)>
<android.content.Intent: android.content.ClipData getClipData()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: java.lang.String getMobileDataNetworkName()>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.widget.TextView: void setText(int)>
<android.view.ViewStructure: void setTextStyle(float,int,int,int)>
<android.animation.Animator: void setTarget(java.lang.Object)>
<android.transition.ChangeBounds: void captureStartValues(android.transition.TransitionValues)>
<android.util.TypedValue: java.lang.String toString()>
<android.app.Presentation: void onDisplayRemoved()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelPeeked()>
<com.android.server.policy.GlobalActions.Action: boolean showDuringKeyguard()>
<android.content.res.AssetManager.AssetInputStream: void reset()>
<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellIdentityWcdma: java.lang.String toString()>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
<com.android.server.audio.RecordingActivityMonitor: void onRecordingConfigurationChanged(int,int,int,int[])>
<com.google.android.util.AbstractMessageParser.Acronym: java.util.List getInfo()>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>
<android.telecom.RemoteConnection: void setCallAudioState(android.telecom.CallAudioState)>
<com.android.gallery3d.util.IntArray: int removeLast()>
<com.android.server.pm.IntentFilterVerificationState: java.util.ArrayList getFilters()>
<android.app.Notification.Builder: android.app.Notification.Builder setWhen(long)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<com.android.systemui.classifier.HumanInteractionClassifier: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLocked()>
<com.android.systemui.statusbar.policy.PreviewInflater: void <init>(android.content.Context,com.android.internal.widget.LockPatternUtils)>
<android.printservice.PrinterDiscoverySession: void onStopPrinterDiscovery()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onClick(android.view.View)>
<com.android.server.notification.ZenModeHelper: void removeCallback(com.android.server.notification.ZenModeHelper.Callback)>
<android.widget.SeekBar: java.lang.CharSequence getAccessibilityClassName()>
<android.bluetooth.BluetoothGatt: boolean beginReliableWrite()>
<android.widget.TextView: int getBaseline()>
<com.android.server.wm.TaskStack: android.view.DisplayInfo getDisplayInfo()>
<com.android.server.AppOpsService: int checkOperation(int,int,java.lang.String)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.KeyguardBouncer createKeyguardBouncer(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,com.android.systemui.statusbar.phone.StatusBarWindowManager,android.view.ViewGroup)>
<android.graphics.Typeface_Delegate: java.util.List getFonts(android.graphics.FontFamily_Delegate.FontVariant)>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSMessageHandler getMessageHandler()>
<com.android.anqp.eap.EAP: java.lang.Integer mapEAPMethod(com.android.anqp.eap.EAP.EAPMethodID)>
<android.service.chooser.ChooserTargetService: android.os.IBinder onBind(android.content.Intent)>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>
<com.android.keyguard.KeyguardPatternView: boolean needsInput()>
<android.os.Environment: boolean isExternalStorageRemovable()>
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating(int)>
<android.location.LocationProvider: int getPowerRequirement()>
<android.os.Handler: void <init>(android.os.Handler.Callback)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.systemui.statusbar.BaseStatusBar: void visibilityChanged(boolean)>
<android.widget.TabWidget: android.graphics.drawable.Drawable getRightStripDrawable()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: int getFirstItemMinHeight()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.graphics.Path)>
<android.widget.Toolbar: void setContentInsetsRelative(int,int)>
<com.android.systemui.statusbar.BaseStatusBar: void cancelPreloadingRecents()>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacSHA384: void <init>()>
<android.os.health.TimerStat: int getCount()>
<android.telecom.Conference: void onMerge()>
<android.widget.SearchView: void onActionViewCollapsed()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.preference.EditTextPreference: void setText(java.lang.String)>
<android.media.projection.MediaProjection: void registerCallback(android.media.projection.MediaProjection.Callback,android.os.Handler)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.impl.CameraMetadataNative createRequestTemplate(android.hardware.camera2.CameraCharacteristics,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>
<javax.microedition.khronos.opengles.GL10: void glViewport(int,int,int,int)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(int)>
<android.view.View: void onCancelPendingInputEvents()>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>
<android.os.PersistableBundle: void <init>()>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>
<android.view.ViewGroup: void clearDisappearingChildren()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.os.BatteryStats.Timer: long getCurrentDurationMsLocked(long)>
<android.graphics.Paint_Delegate: void setAlpha(int)>
<android.gesture.GestureStore: void save(java.io.OutputStream)>
<com.android.systemui.statusbar.DragDownHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender)>
<com.android.systemui.qs.external.QSTileServiceWrapper: void <init>(android.service.quicksettings.IQSTileService)>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<com.android.server.am.ActivityManagerService: void setLockScreenShown(boolean,boolean)>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.filterpacks.imageproc.SharpenFilter: void setupPorts()>
<android.printservice.PrintJob: boolean isBlocked()>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBarIconList: int getSlotIndex(java.lang.String)>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>
<android.telecom.Call: void unhold()>
<android.graphics.Rect: int centerY()>
<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler takeUidSnapshot(int)>
<android.app.PendingIntent: int hashCode()>
<android.view.IWindowManagerImpl: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean,android.graphics.Rect,android.content.res.Configuration,int,boolean,boolean,int,int)>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>
<android.widget.TextView: java.lang.String getFontFeatureSettings()>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setAnimacy(java.lang.String)>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void tearDown(int)>
<android.renderscript.Short2: void <init>(short,short)>
<android.renderscript.Script: double getVarD(int)>
<android.app.AlertDialog.Builder: void <init>(android.content.Context,int)>
<com.android.systemui.classifier.HumanInteractionClassifier: com.android.systemui.classifier.HumanInteractionClassifier getInstance(android.content.Context)>
<com.android.server.backup.AccountManagerBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<android.os.Parcel: byte[] marshall()>
<android.widget.CalendarView.CalendarViewDelegate: void setDateTextAppearance(int)>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(long)>
<android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm.TaskStackLayoutAlgorithmCallbacks: void onFocusStateChanged(int,int)>
<android.widget.VideoView: void <init>(android.content.Context)>
<android.text.style.SuggestionSpan: int hashCode()>
<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>
<com.android.anqp.HSOsuProvidersElement: java.util.List getProviders()>
<android.widget.StackView: void onMeasure(int,int)>
<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onWindowFocusChanged(boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void hideRecentApps(boolean,boolean)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder type(int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.hardware.radio.RadioManager.ModuleProperties: int hashCode()>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<com.android.server.AppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>
<com.android.systemui.statusbar.NotificationContentView: void updateExpandButtons(boolean)>
<com.android.documentsui.LocalPreferences: boolean getDisplayFileSize(android.content.Context)>
<android.app.UiAutomation.OnAccessibilityEventListener: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isPinned()>
<android.transition.ChangeTransform: boolean getReparent()>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>
<android.accessibilityservice.AccessibilityService.GestureResultCallback: void onCompleted(android.accessibilityservice.GestureDescription)>
<android.widget.CheckedTextView: void setCheckMarkTintList(android.content.res.ColorStateList)>
<android.app.Presentation: android.content.res.Resources getResources()>
<com.android.server.wm.animation.ClipRectTBAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTrackingStopped(boolean)>
<android.printservice.PrintService: android.print.PrinterId generatePrinterId(java.lang.String)>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.view.ViewTreeObserver: void removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void animateCollapseQuickSettings()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(long)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.settingslib.net.DataUsageController getMobileDataController()>
<com.android.systemui.statusbar.car.CarStatusBar: void start()>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int)>
<android.nfc.FormatException: void <init>()>
<com.android.hotspot2.pps.HomeSP: com.android.hotspot2.pps.UpdateInfo getSubscriptionUpdate()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: boolean isActive()>
<android.service.notification.NotificationListenerService: void requestListenerHints(int)>
<android.widget.TabWidget: void focusCurrentTab(int)>
<android.database.AbstractCursor: short getShort(int)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.transition.Transition: android.transition.Transition addTarget(int)>
<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendKeyDown(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<android.util.ArraySet: void ensureCapacity(int)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.location.Location: float bearingTo(android.location.Location)>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.app.Fragment: void setReenterTransition(android.transition.Transition)>
<android.view.View: int[] onCreateDrawableState(int)>
<android.os.Binder: void <init>()>
<android.telecom.InCallService: void onBringToForeground(boolean)>
<com.android.settingslib.bluetooth.PanProfile: boolean isProfileReady()>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>
<android.provider.DocumentsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isProfileReady()>
<android.bluetooth.le.AdvertiseData: java.lang.String toString()>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>
<android.graphics.Region: int describeContents()>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setLongArgument(java.lang.String,long)>
<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.graphics.Canvas: void drawRGB(int,int,int)>
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)>
<android.text.HtmlToSpannedConverter: void setDocumentLocator(org.xml.sax.Locator)>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>
<android.widget.TabWidget: void setRightStripDrawable(int)>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistExceptIdleInternal()>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy: void notifyShortcutKeyPressed(long)>
<android.hardware.camera2.legacy.ParameterUtils: boolean containsSize(java.util.List,int,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStarted()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void onFinishInflate()>
<android.webkit.WebChromeClient.FileChooserParams: android.content.Intent createIntent()>
<android.os.LocaleList: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.Events: boolean isNavigationKeyCode(int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterf(int,float)>
<android.media.midi.MidiReceiver: void flush()>
<com.android.server.fingerprint.ClientMonitor: void <init>(android.content.Context,long,android.os.IBinder,android.hardware.fingerprint.IFingerprintServiceReceiver,int,int,boolean,java.lang.String)>
<android.widget.Editor.SuggestionsPopupWindow: void show()>
<android.app.Activity: void onUserLeaveHint()>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context)>
<com.android.server.am.ActivityManagerService: void sendIdleJobTrigger()>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>
<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>
<com.android.server.am.ActivityManagerService: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.text.Spannable.Factory: android.text.Spannable.Factory getInstance()>
<com.android.systemui.qs.QSDetailItems: void setCallback(com.android.systemui.qs.QSDetailItems.Callback)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,float[],int)>
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)>
<com.android.server.twilight.TwilightService: void onProviderEnabled(java.lang.String)>
<android.app.WallpaperManager: int setStream(java.io.InputStream,android.graphics.Rect,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateMediaMetaData(boolean,boolean)>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>
<com.android.layoutlib.bridge.android.BridgeContext: int getUserId()>
<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.app.UiAutomation: boolean clearWindowContentFrameStats(int)>
<android.printservice.PrintJob: boolean cancel()>
<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>
<com.android.server.am.ActivityManagerService: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.provider.Settings.Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.nfc.tech.MifareClassic: void setTimeout(int)>
<android.provider.Settings.Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDisableWindowAnimationsForUnlock()>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putBitmap(java.lang.String,android.graphics.Bitmap)>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.MenuItem,java.lang.String,java.lang.String)>
<android.os.IPowerManager: void crash(java.lang.String)>
<com.android.server.LocationManagerService: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>
<com.android.server.policy.EnableAccessibilityController: android.content.ComponentName getInstalledSpeakingAccessibilityServiceComponent(android.content.Context)>
<com.android.server.Watchdog.HandlerChecker: void run()>
<android.graphics.Paint: void setTextSkewX(float)>
<com.android.server.notification.SystemConditionProviderService: boolean isValidConditionId(android.net.Uri)>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.services.FileOperations: void cancel(android.app.Activity,java.lang.String)>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.Spec,android.widget.GridLayout.Spec)>
<android.app.VoiceInteractor.AbortVoiceRequest: void <init>(android.app.VoiceInteractor.Prompt,android.os.Bundle)>
<com.android.keyguard.KeyguardHostView: void startDisappearAnimation(java.lang.Runnable)>
<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int)>
<android.app.admin.DevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>
<android.renderscript.BaseObj: void destroy()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void startFocusGainAnimation()>
<android.view.ViewGroup: void endViewTransition(android.view.View)>
<com.android.systemui.assist.AssistManager: boolean canVoiceAssistBeLaunchedFromKeyguard()>
<android.net.VpnService.Builder: void <init>()>
<android.net.wifi.RttManager.ResponderConfig: java.lang.String toString()>
<android.hardware.Camera.Parameters: void setPreviewFpsRange(int,int)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getVideoTurnedOnTimer()>
<android.renderscript.Element: int getVectorSize()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>
<android.app.FragmentManagerImpl: void attachController(android.app.FragmentHostCallback,android.app.FragmentContainer,android.app.Fragment)>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>
<android.os.TokenWatcher: void release(android.os.IBinder)>
<android.view.ViewStructure: void setSelected(boolean)>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>
<android.view.View.OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>
<android.webkit.WebView: float getScale()>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<com.android.server.policy.GlobalActions.Action: java.lang.CharSequence getLabelForAccessibility(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelFullyOpened()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setStartDelay(float)>
<android.app.IntentService: void onCreate()>
<com.google.android.gles_jni.GLImpl: void glScissor(int,int,int,int)>
<android.app.Notification.Action.WearableExtender: java.lang.CharSequence getConfirmLabel()>
<com.android.server.am.ActivityManagerService: void unregisterUidObserver(android.app.IUidObserver)>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintList(android.content.res.ColorStateList)>
<android.view.View: boolean isPressed()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean interceptTouchEvent(android.view.MotionEvent)>
<android.app.Activity: void onPause()>
<com.android.systemui.classifier.EndPointRatioClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>
<android.content.pm.PackageManager: void verifyPendingInstall(int,int)>
<com.android.server.connectivity.NetworkAgentInfo: int numRequestNetworkRequests()>
<android.widget.ImageView: void setImageState(int[],boolean)>
<com.android.documentsui.IconUtils: android.graphics.drawable.Drawable loadMimeIcon(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int)>
<android.widget.CompoundButton: void <init>(android.content.Context)>
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>
<android.text.method.ScrollingMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<android.net.wifi.WifiManager: boolean isDeviceToApRttSupported()>
<com.android.server.notification.EventConditionProvider: android.service.notification.IConditionProvider asInterface()>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onResume()>
<android.os.CancellationSignal: void cancel()>
<android.util.Range: android.util.Range extend(java.lang.Comparable)>
<com.android.tools.idea.editors.theme.widgets.ErrorCatcher: void <init>(android.content.Context)>
<android.media.AudioDevicePort: int type()>
<android.net.wifi.WifiScanner.ParcelableScanResults: android.net.wifi.ScanResult[] getResults()>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.Animator.AnimatorPauseListener: void onAnimationPause(android.animation.Animator)>
<com.android.systemui.tv.pip.PipMenuActivity: void onDestroy()>
<android.graphics.ColorMatrix: void set(float[])>
<android.opengl.GLSurfaceView: void finalize()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean flingExpands(float,float,float,float)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getAttributeType(int)>
<com.android.location.provider.GmsFusedBatchOptions: boolean isSourceToUseSet(int)>
<android.accounts.AccountsException: void <init>()>
<android.media.ImageWriter: void setOnImageReleasedListener(android.media.ImageWriter.OnImageReleasedListener,android.os.Handler)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void setRecentsVisibility(boolean)>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.server.policy.BarController: int applyTranslucentFlagLw(android.view.WindowManagerPolicy.WindowState,int,int)>
<android.app.Fragment: void setExitTransition(android.transition.Transition)>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>
<android.widget.AbsListView: void onCancelPendingInputEvents()>
<android.net.LocalSocket: void close()>
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.server.am.ActivityManagerService: void setUserIsMonkey(boolean)>
<com.android.settingslib.drawable.CircleFramedDrawable: void setScale(float)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.android.server.pm.ShortcutService: void removeAllDynamicShortcuts(java.lang.String,int)>
<android.inputmethodservice.Keyboard.Key: void onPressed()>
<android.text.Layout: boolean getLineContainsTab(int)>
<android.transition.TransitionSet: void <init>()>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>
<android.location.Address: java.lang.String getCountryCode()>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: boolean isComplete()>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>
<android.os.IPowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>
<com.android.server.notification.NotificationDelegate: void onPanelHidden()>
<android.util.StringBuilderPrinter: void println(java.lang.String)>
<android.widget.AbsSeekBar: void jumpDrawablesToCurrentState()>
<android.app.Activity: void onDetachedFromWindow()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore,java.lang.String,java.security.KeyStore)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
<android.os.CancellationSignal.OnCancelListener: void onCancel()>
<android.view.KeyEvent: int getDeviceId()>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float,float)>
<android.webkit.WebView: void saveWebArchive(java.lang.String)>
<android.widget.AbsListView: void setItemChecked(int,boolean)>
<com.android.server.am.ActivityManagerService: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void <init>(com.android.systemui.statusbar.phone.NavigationBarView)>
<com.android.systemui.qs.QSPanel: void showDetailAdapter(boolean,com.android.systemui.qs.QSTile.DetailAdapter,int[])>
<com.android.systemui.recents.views.TaskViewTransform: void reset(com.android.systemui.recents.views.TaskView)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeEntering(android.content.Context,android.content.Intent,java.lang.String)>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onRestoreFinished()>
<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.graphics.RoundRectangle: double getHeight()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeDown()>
<com.android.hotspot2.WifiNetworkAdapter: void setHoldoffTime(long,boolean)>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onClick(android.view.View)>
<android.graphics.drawable.VectorDrawable: boolean isAutoMirrored()>
<com.android.keyguard.KeyguardSecurityContainer: void dismiss(boolean)>
<android.text.format.Time: void set(int,int,int)>
<android.app.ActivityManager.TaskDescription: void readFromParcel(android.os.Parcel)>
<com.android.layoutlib.bridge.android.BridgeContext: void setTheme(int)>
<com.android.systemui.settings.CurrentUserTracker: void onUserSwitched(int)>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>
<com.android.server.am.ActivityManagerService: boolean isUserAMonkey()>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.media.tv.TvInputInfo: java.lang.String getId()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void onTrustChanged(int)>
<android.location.Address: java.lang.String toString()>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void <init>(com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver,int)>
<com.android.server.TextServicesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(long)>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>
<android.media.tv.TvInputService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void updateExpandability(boolean,android.view.View.OnClickListener)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void setUserSetupComplete(boolean)>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
<com.android.systemui.volume.SegmentedButtons: void addButton(int,int,java.lang.Object)>
<com.android.systemui.recents.RecentsActivity: void onUserInteraction()>
<android.app.ActivityManagerProxy: void unregisterUidObserver(android.app.IUidObserver)>
<com.android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.renderscript.ScriptIntrinsicBLAS: void DSPR2(int,double,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAffordanceHelper(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper)>
<com.android.systemui.recents.views.TaskView: float getDimAlpha()>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>
<android.app.Dialog: boolean onSearchRequested(android.view.SearchEvent)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(android.renderscript.RenderScriptGL.SurfaceConfig)>
<android.util.SparseIntArray: int indexOfKey(int)>
<com.android.server.policy.ImmersiveModeConfirmation: void immersiveModeChangedLw(java.lang.String,boolean,boolean,boolean)>
<android.database.CursorWrapper: int getType(int)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getNamespace()>
<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>
<com.android.systemui.statusbar.ActivatableNotificationView: void setDark(boolean,boolean,long)>
<android.provider.DocumentsProvider: java.lang.String copyDocument(java.lang.String,java.lang.String)>
<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>
<android.drm.DrmRights: byte[] getData()>
<android.app.admin.DevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.security.PrivateKey,java.security.cert.Certificate,java.lang.String)>
<android.renderscript.FieldPacker: android.renderscript.Long3 subLong3()>
<com.google.android.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void addCallback(android.os.Handler.Callback)>
<android.util.BridgeXmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<com.android.server.display.NightDisplayService: void onStartUser(int)>
<android.text.Editable: void clear()>
<android.media.midi.MidiSender: void onConnect(android.media.midi.MidiReceiver)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSupportedUriSchemes(java.util.List)>
<com.android.server.pm.ShortcutService: void onApplicationActive(java.lang.String,int)>
<android.media.MediaPlayer: int getAudioSessionId()>
<android.database.AbstractWindowedCursor: float getFloat(int)>
<com.android.server.notification.PropConfig: java.lang.String[] getStringArray(android.content.Context,java.lang.String,int)>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,int[])>
<com.android.systemui.statusbar.ExpandableNotificationRow.ExpansionLogger: void logNotificationExpansion(java.lang.String,boolean,boolean)>
<android.graphics.Picture: void <init>(android.graphics.Picture)>
<android.media.SoundPool: void setVolume(int,float,float)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void getStackBounds(int,android.graphics.Rect)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textContains(java.lang.String)>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>
<android.hardware.usb.UsbEndpoint: int getDirection()>
<com.android.systemui.qs.external.CustomTile: android.content.Intent getLongClickIntent()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitReturnType()>
<com.android.layoutlib.bridge.android.BridgeContext: void removeStickyBroadcast(android.content.Intent)>
<android.telecom.Conference: void setStatusHints(android.telecom.StatusHints)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.QSContainer: boolean isCustomizing()>
<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>
<android.content.SearchRecentSuggestionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.telecom.ConnectionRequest: void writeToParcel(android.os.Parcel,int)>
<com.android.server.fingerprint.FingerprintUtils: void vibrateFingerprintError(android.content.Context)>
<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void hideMirror()>
<android.app.job.JobInfo.TriggerContentUri: int getFlags()>
<android.service.carrier.CarrierMessagingService: void onReceiveTextSms(android.service.carrier.MessagePdu,java.lang.String,int,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.hardware.camera2.impl.CameraDeviceImpl: void createReprocessableCaptureSession(android.hardware.camera2.params.InputConfiguration,java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<com.android.server.am.BatteryStatsService: void noteLongPartialWakelockFinish(java.lang.String,java.lang.String,int)>
<com.android.server.statusbar.StatusBarManagerService: void collapsePanels()>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<android.media.MediaRouter.RouteGroup: void requestSetVolume(int)>
<android.os.HandlerThread: void <init>(java.lang.String,int)>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>
<com.android.systemui.qs.QSContainer: void animateHeaderSlidingIn(long)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setSnapping(boolean)>
<com.android.hotspot2.osu.PostDevDataResponse: com.android.hotspot2.osu.commands.OSUCommandData getCommandData()>
<android.telephony.gsm.GsmCellLocation: void <init>()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintAmbientBigPicture(boolean)>
<android.content.pm.PackageParser.Package: void setApplicationVolumeUuid(java.lang.String)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setSourcePackage(java.lang.String)>
<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.graphics.Path: void finalize()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setReportDelay(long)>
<android.location.Location: int describeContents()>
<android.view.Surface: void finalize()>
<android.graphics.Shader_Delegate: java.lang.String getSupportMessage()>
<com.android.server.connectivity.NetworkNotificationManager: void clearNotification(int)>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>
<com.android.documentsui.DocumentClipper: void clipDocuments(java.util.List)>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
<android.widget.DigitalClock: java.lang.CharSequence getAccessibilityClassName()>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: void setTvPipVisibility(boolean)>
<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.widget.Scroller: int getStartX()>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.server.policy.EnableAccessibilityController: void onDestroy()>
<android.webkit.WebView: float getScale()>
<com.android.server.tv.UinputBridge: void sendKeyDown(android.os.IBinder,int)>
<android.mtp.MtpObjectInfo: int getObjectHandle()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.android.systemui.BatteryMeterDrawable: int getIntrinsicHeight()>
<android.os.BaseBundle: void clear()>
<android.renderscript.Allocation: void copy3DRangeTo(int,int,int,int,int,int,java.lang.Object)>
<android.media.MediaDescription: java.lang.String toString()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: int getTag()>
<com.android.systemui.qs.QSPanel: boolean shouldShowDetail()>
<android.graphics.Bitmap: int getByteCount()>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>
<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.widget.Switch: void setTextOff(java.lang.CharSequence)>
<com.android.systemui.statusbar.ActivatableNotificationView: void dispatchDraw(android.graphics.Canvas)>
<com.android.location.fused.FusedLocationService: boolean onUnbind(android.content.Intent)>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotifications()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onLayout(boolean,int,int,int,int)>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: boolean equals(java.lang.Object)>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<com.android.hotspot2.osu.PostDevDataResponse: java.util.Collection getCommands()>
<com.android.layoutlib.bridge.impl.ParserFactory: void setParserFactory(com.android.ide.common.rendering.api.ParserFactory)>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProvider getActivityRecognitionProvider()>
<android.os.IBinder: boolean pingBinder()>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>
<android.media.tv.TvView.TvInputCallback: void onConnectionFailed(java.lang.String)>
<android.media.session.MediaController.TransportControls: void pause()>
<android.view.animation.Animation: void restrictDuration(long)>
<android.webkit.WebStorage.Origin: java.lang.String getOrigin()>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>
<android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
<android.telecom.CallAudioState: boolean equals(java.lang.Object)>
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>
<com.android.providers.settings.SettingsProvider: int getUserIdFromKey(int)>
<android.widget.ResourceCursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.net.wifi.WifiScanner.ScanData: android.net.wifi.ScanResult[] getResults()>
<android.webkit.WebViewProvider.ViewDelegate: boolean onHoverEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.NotificationCustomViewWrapper: void <init>(android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.telephony.SignalStrength: int getEvdoSnr()>
<android.content.Intent.ShortcutIconResource: int describeContents()>
<android.graphics.DrawFilter_Delegate: boolean isSupported()>
<com.android.systemui.classifier.FalsingManager: void onTrackingStarted()>
<android.text.Selection: void extendSelection(android.text.Spannable,int)>
<com.android.anqp.eap.ExpandedEAPMethod: java.lang.String toString()>
<android.media.MediaMetadata: android.media.MediaDescription getDescription()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(int)>
<android.renderscript.Float3: void <init>()>
<com.android.sharedstoragebackup.SharedStorageAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showUsabilityHint()>
<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>
<android.text.Layout: int getLineTop(int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRemoved()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean mustStayOnScreen()>
<com.android.server.notification.ConditionProviders: void unsubscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<android.graphics.Canvas_Delegate: void native_drawCircle(long,float,float,float,long)>
<android.media.tv.TvInputInfo: int getType()>
<com.android.systemui.qs.tiles.BluetoothTile: void handleClick()>
<com.android.server.tv.UinputBridge: void sendPointerDown(android.os.IBinder,int,int,int)>
<android.renderscript.RSDriverException: void <init>(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardReset()>
<android.bluetooth.le.ScanResult: void <init>(android.bluetooth.BluetoothDevice,android.bluetooth.le.ScanRecord,int,long)>
<android.location.LocationListener: void onLocationChanged(android.location.Location)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.SystemClock: long elapsedRealtime()>
<android.os.Message: android.os.Message obtain(android.os.Handler)>
<android.view.MotionEvent: float getHistoricalPressure(int)>
<android.text.method.DialerKeyListener: int getInputType()>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>
<android.print.PageRange: java.lang.String toString()>
<android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
<android.view.Window: void setSustainedPerformanceMode(boolean)>
<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.graphics.Region_Delegate: android.graphics.Region_Delegate getDelegate(long)>
<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: boolean isManagerReady()>
<android.net.IpPrefix: boolean equals(java.lang.Object)>
<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>
<com.android.systemui.tuner.BatteryPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: boolean getFitsSystemWindows()>
<android.widget.Editor.HandleView: void onMeasure(int,int)>
<com.android.systemui.analytics.DataCollector: void onSucccessfulUnlock()>
<android.net.wifi.nan.PublishData.Builder: android.net.wifi.nan.PublishData.Builder setRxFilter(byte[],int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addQsTile(android.content.ComponentName)>
<android.view.NotificationHeaderView.HeaderTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.server.notification.NotificationManagerService.NotificationRankers: com.android.server.notification.ManagedServices.Config getConfig()>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>
<android.transition.AutoTransition: void <init>()>
<android.view.MotionEvent: float getToolMajor(int)>
<com.android.server.backup.Trampoline: boolean isAppEligibleForBackup(java.lang.String)>
<android.text.DynamicLayout: int getLineStart(int)>
<com.google.android.gles_jni.GLImpl: void glTranslatex(int,int,int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.util.SparseBooleanArray: int hashCode()>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.ddm.DdmHandleAppName: void disconnected()>
<android.text.style.TtsSpan.DateBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>
<android.opengl.GLES20: void glLinkProgram(int)>
<android.media.RemoteController: boolean seekTo(long)>
<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.Gallery: void setGravity(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.drawable.Drawable getBadgedTaskDescriptionIcon(android.app.ActivityManager.TaskDescription,int,android.content.res.Resources)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: java.util.List getShortcutInputMethodsAndSubtypes()>
<com.android.photos.SimpleBitmapRegionDecoder: int getHeight()>
<android.media.AudioManager: void loadSoundEffects()>
<android.telephony.TelephonyManager: boolean isTtyModeSupported()>
<com.android.server.backup.PreferredActivityBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<com.android.systemui.recents.model.RecentsPackageMonitor: boolean onPackageChanged(java.lang.String,int,java.lang.String[])>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onBeginDrag(android.view.View)>
<android.telecom.Phone.Listener: void onCanAddCallChanged(android.telecom.Phone,boolean)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>
<com.android.systemui.egg.MLand: void reset()>
<com.android.systemui.statusbar.tv.TvStatusBar: void onCameraLaunchGestureDetected(int)>
<android.os.BatteryStats.Uid: long getWifiScanTime(long,int)>
<android.content.IntentSender.SendIntentException: void <init>()>
<android.os.StatFs: long getBlockSizeLong()>
<android.app.Notification.WearableExtender: boolean getHintAvoidBackgroundClipping()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward()>
<com.android.commands.uiautomator.Launcher.Command: void run(java.lang.String[])>
<com.android.server.location.LocationProviderProxy: void enable()>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>
<android.location.Criteria: boolean isCostAllowed()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void removeViewStateForView(android.view.View)>
<com.android.settingslib.display.DisplayDensityUtils: java.lang.String[] getEntries()>
<com.android.hotspot2.omadm.MOManager: long getLong(com.android.hotspot2.omadm.OMANode,java.lang.String,java.lang.Long)>
<android.widget.FrameLayout: void setForegroundGravity(int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>
<android.app.Service: void onTaskRemoved(android.content.Intent)>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.gallery3d.exif.ExifTag: void forceSetComponentCount(int)>
<com.android.systemui.statusbar.car.CarBatteryController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.settingslib.drawable.UserIconDrawable: int getIntrinsicWidth()>
<android.media.tv.TvContract: android.net.Uri buildChannelUri(long)>
<android.app.assist.AssistContent: void setIntent(android.content.Intent)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
<android.view.ActionMode: void setTag(java.lang.Object)>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>
<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>
<android.renderscript.Allocation: void copyTo(java.lang.Object)>
<android.net.wifi.nan.TlvBufferUtils.TlvIterable: void <init>(int,int,byte[],int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isOccluded()>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: java.util.Collection getAllConfigs(android.content.Context)>
<com.android.documentsui.dirlist.MultiSelectManager: void addCallback(com.android.documentsui.dirlist.MultiSelectManager.Callback)>
<com.android.settingslib.users.AppRestrictionsHelper: void setLeanback(boolean)>
<com.android.systemui.recents.views.RecentsTransitionHelper: java.util.List composeDockAnimationSpec(com.android.systemui.recents.views.TaskView,android.graphics.Rect)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<android.telephony.CellIdentityCdma: int hashCode()>
<android.preference.TwoStatePreference: void <init>(android.content.Context)>
<com.android.systemui.statusbar.StackScrollerDecorView: android.view.View findContentView()>
<android.content.Context: boolean isRestricted()>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>
<android.widget.TimePicker.TimePickerDelegate: int getBaseline()>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void <init>(com.android.ide.common.rendering.api.SessionParams)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>
<com.android.server.am.HealthStatsBatteryStatsWriter: void <init>()>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>
<android.widget.CursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onRtlPropertiesChanged(int)>
<com.google.android.util.AbstractMessageParser.Link: java.lang.String getURL()>
<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getExitFadeDuration()>
<com.android.uiautomator.core.UiObject: boolean isClickable()>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.documentsui.RecentsLoader: void cancelLoadInBackground()>
<android.app.ActivityManager.RunningServiceInfo: void <init>()>
<android.view.Choreographer: void postFrameCallbackDelayed(android.view.Choreographer.FrameCallback,long)>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>
<com.android.systemui.statusbar.phone.ScrimController: void onTrackingStarted()>
<android.hardware.camera2.CameraAccessException: void <init>(int)>
<com.android.server.audio.AudioService.VolumeController: void postDisplaySafeVolumeWarning(int)>
<android.util.LruCache: int createCount()>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>
<android.app.backup.IFullBackupRestoreObserver: void onEndRestore()>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.hardware.SensorManager: void registerDynamicSensorCallback(android.hardware.SensorManager.DynamicSensorCallback)>
<android.view.accessibility.AccessibilityManager: void interrupt()>
<android.content.pm.PackageStats: void <init>(java.lang.String)>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.keyguard.KeyguardStatusView: void onDetachedFromWindow()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: com.android.ide.common.rendering.api.ResourceValue getLayoutResource(com.android.layoutlib.bridge.android.BridgeContext)>
<com.android.settingslib.applications.ApplicationsState: void ensureIcon(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setRemoved()>
<android.app.SearchableInfo: int getSettingsDescriptionId()>
<com.android.systemui.egg.MLand: int getGameWidth()>
<android.media.MediaDrm.KeyRequest: byte[] getData()>
<com.android.systemui.volume.VolumeDialog: void dump(java.io.PrintWriter)>
<com.android.server.am.ActivityManagerService: void activityPaused(android.os.IBinder)>
<android.hardware.usb.UsbConfiguration: int describeContents()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void setEnabled(boolean)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getRawText()>
<com.android.systemui.qs.external.TileServiceManager: boolean hasPendingBind()>
<com.android.systemui.qs.QSPanel: void setExpanded(boolean)>
<com.android.systemui.statusbar.stack.AnimationFilter: com.android.systemui.statusbar.stack.AnimationFilter animateTopInset()>
<android.graphics.drawable.ColorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<android.renderscript.Script.FieldBase: void updateAllocation()>
<com.android.systemui.recents.views.AnimationProps: android.view.animation.Interpolator getInterpolator(int)>
<android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<android.bluetooth.le.ScanFilter: int describeContents()>
<android.media.midi.MidiDeviceInfo: boolean isPrivate()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothDevicesChanged()>
<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getIntrinsicHeight()>
<com.android.settingslib.bluetooth.MapProfile: java.util.List getConnectedDevices()>
<com.android.hotspot2.osu.IconCache: void notifyIconReceived(long,java.lang.String,byte[])>
<android.telecom.PhoneAccount: java.lang.CharSequence getLabel()>
<com.android.server.am.ActivityManagerService: void setFrontActivityScreenCompatMode(int)>
<com.android.documentsui.dirlist.DirectoryFragment: void onSaveInstanceState(android.os.Bundle)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.app.Activity: boolean isFinishing()>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.telephony.SubscriptionManager: int getDefaultSubscriptionId()>
<com.android.gallery3d.glrenderer.GLCanvas: void endRenderTarget()>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.PopupWindow: int getInputMethodMode()>
<android.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<com.android.systemui.qs.tiles.HotspotTile: void handleUpdateState(com.android.systemui.qs.QSTile.AirplaneBooleanState,java.lang.Object)>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
<android.renderscript.FieldPacker: android.renderscript.Double2 subDouble2()>
<android.content.SearchRecentSuggestionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.nfc.tech.MifareClassic: void restore(int)>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getStatus()>
<com.android.documentsui.model.RootInfo: boolean supportsChildren()>
<com.android.systemui.recents.events.EventBus: void postInterprocess(android.content.Context,com.android.systemui.recents.events.EventBus.InterprocessEvent)>
<com.android.anqp.Constants: com.android.anqp.Constants.ANQPElementType mapANQPElement(int)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)>
<android.widget.Editor.UndoInputFilter: void saveInstanceState(android.os.Parcel)>
<com.android.systemui.recents.misc.DozeTrigger: void stopDozing()>
<android.widget.SlidingDrawer: void unlock()>
<android.animation.ObjectAnimator: void start()>
<com.android.photos.views.TiledImageRenderer: void setModel(com.android.photos.views.TiledImageRenderer.TileSource,int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void handleBroadcast(android.content.Intent)>
<com.android.hotspot2.osu.OSUInfo: java.util.List getIconInfo(java.util.Locale,java.util.Set,int,int)>
<android.preference.TwoStatePreference: void setChecked(boolean)>
<com.android.server.location.LocationProviderProxy: boolean sendExtraCommand(java.lang.String,android.os.Bundle)>
<android.os.health.HealthStats: int getTimersKeyAt(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context)>
<com.android.anqp.I18Name: java.lang.String getLanguage()>
<com.android.server.pm.PackageManagerService: boolean hasSystemFeature(java.lang.String,int)>
<android.app.Dialog: void onCreate(android.os.Bundle)>
<android.app.RemoteInput.Builder: void <init>(java.lang.String)>
<android.widget.ActivityChooserModel.HistoricalRecord: java.lang.String toString()>
<android.hardware.camera2.utils.CloseableLock: void <init>()>
<android.media.SubtitleTrack.RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>
<com.android.hotspot2.utils.HTTPResponse: java.lang.String toString()>
<com.android.server.notification.VisibilityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.PanelView: float getContentHeight()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.BitmapRegionDecoder: void recycle()>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.impl.Stack: java.lang.Object peek()>
<android.media.session.MediaController.Callback: void onExtrasChanged(android.os.Bundle)>
<android.view.IWindowManagerImpl: android.os.IBinder asBinder()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.android.documentsui.RecentsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics.Key)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.media.MediaRouter.RouteGroup: void setIconDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.settings.BrightnessDialog: void onCreate(android.os.Bundle)>
<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>
<com.android.server.am.ContentProviderConnection: java.lang.String toShortString()>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glActiveTexture(int)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionClipReveal(int,int,int,int)>
<android.view.View: boolean performLongClick(float,float)>
<com.android.systemui.statusbar.notification.TextViewTransformState: void reset()>
<android.widget.PopupWindow: void update(int,int,int,int)>
<android.renderscript.ScriptIntrinsicBLAS: void STRMV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: java.lang.CharSequence getPackageName()>
<android.text.Layout: int getOffsetToRightOf(int)>
<com.android.systemui.statusbar.RemoteInputController: void removeSpinning(java.lang.String,java.lang.Object)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<android.location.Address: void clearLatitude()>
<android.util.Size: android.util.Size parseSize(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean deleteFile(java.lang.String)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitEnd()>
<com.android.systemui.recents.model.TaskGrouping: boolean containsTask(com.android.systemui.recents.model.Task)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context)>
<android.graphics.BitmapShader_Delegate: java.lang.String getSupportMessage()>
<com.android.hotspot2.asn1.Asn1Object: java.util.Collection getChildren()>
<android.view.View: void onMeasure(int,int)>
<com.android.server.notification.ConditionProviders: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.display.DisplayAdapter.Listener: void onTraversalRequested()>
<android.view.animation.Animation: void cancel()>
<android.renderscript.ScriptIntrinsicBLAS: void DSYMM(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>
<com.android.keyguard.KeyguardHostView: void setOnDismissAction(com.android.keyguard.KeyguardHostView.OnDismissAction,java.lang.Runnable)>
<android.preference.Preference: int getOrder()>
<com.android.systemui.assist.AssistDisclosure: void <init>(android.content.Context,android.os.Handler)>
<android.renderscript.Script.LaunchOptions: int getYStart()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onFinishInflate()>
<android.webkit.WebView: void onProvideVirtualStructure(android.view.ViewStructure)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void notifyKeyguardAuthenticated(boolean)>
<com.android.printservice.recommendation.PrintServicePlugin: int getName()>
<com.android.hotspot2.osu.PostDevDataResponse: java.lang.String toString()>
<android.app.admin.DeviceAdminReceiver: void onBugreportSharingDeclined(android.content.Context,android.content.Intent)>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List convertSizeList(java.util.List)>
<android.app.Fragment: boolean isAdded()>
<com.android.systemui.qs.tiles.RotationLockTile: int getMetricsCategory()>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged()>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void onBusEvent(com.android.systemui.stackdivider.events.StoppedDragingEvent)>
<android.accounts.AccountAuthenticatorActivity: void finish()>
<android.content.Intent: int fillIn(android.content.Intent,int)>
<android.media.session.MediaSession.Callback: void onSkipToNext()>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.service.dreams.DreamService: void onWakeUp()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.view.BridgeInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean)>
<android.net.Uri: boolean isRelative()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.net.InetAddress)>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList()>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>
<android.nfc.cardemulation.HostNfcFService: byte[] processNfcFPacket(byte[],android.os.Bundle)>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,android.net.Uri,android.net.Uri)>
<com.android.systemui.statusbar.BaseStatusBar: void refreshLayout(int)>
<com.android.printspooler.widget.PrintContentView: void onFinishInflate()>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.android.systemui.statusbar.ExpandableView: int getOutlineTranslation()>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.view.NotificationHeaderView.HeaderTouchListener: void <init>()>
<android.webkit.WebView: void disablePlatformNotifications()>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.io.InputStream)>
<com.android.server.notification.CountdownConditionProvider: java.lang.String tryParseDescription(android.net.Uri)>
<android.net.VpnService: android.content.Intent prepare(android.content.Context)>
<com.android.systemui.statusbar.notification.HeaderTransformState: com.android.systemui.statusbar.notification.HeaderTransformState obtain()>
<android.view.textservice.TextInfo: void <init>(java.lang.String,int,int)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context)>
<com.android.server.AppOpsService: int checkPackage(int,java.lang.String)>
<android.text.Layout: android.text.Layout.Directions getLineDirections(int)>
<android.widget.AnalogClock: void onDetachedFromWindow()>
<android.app.Service: void stopForeground(boolean)>
<android.widget.Switch: void setThumbResource(int)>
<com.android.systemui.statusbar.phone.BarTransitions: void <init>(android.view.View,int)>
<android.view.MenuItem: boolean isActionViewExpanded()>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<com.android.hotspot2.omadm.OMAConstants: java.lang.String mapError(com.android.hotspot2.osu.OSUError)>
<android.view.DragEvent: int describeContents()>
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)>
<android.service.voice.VoiceInteractionSession: void onHandleAssistSecondary(android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,int,int)>
<com.android.systemui.statusbar.AnimatedImageView: void onDetachedFromWindow()>
<android.database.AbstractCursor: int getType(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean updateSwipeProgress(android.view.View,boolean,float)>
<com.android.systemui.qs.customize.QSCustomizer: void onConfigurationChanged(android.content.res.Configuration)>
<android.webkit.ClientCertRequest: java.lang.String[] getKeyTypes()>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionAmount()>
<android.opengl.GLES32: void glObjectLabel(int,int,int,java.lang.String)>
<android.media.audiofx.AcousticEchoCanceler: android.media.audiofx.AcousticEchoCanceler create(int)>
<android.app.admin.DevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<android.widget.RatingBar: void <init>(android.content.Context)>
<com.android.server.TextServicesManagerService: boolean isSpellCheckerEnabled()>
<com.android.systemui.tuner.KeycodeSelectionHelper: void showKeycodeSelect(android.content.Context,com.android.systemui.tuner.KeycodeSelectionHelper.OnSelectionComplete)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(long)>
<com.android.server.AppOpsService.Callback: void binderDied()>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onLocaleChanged(java.util.Locale)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.google.android.gles_jni.GLImpl: void glDepthRangex(int,int)>
<android.media.tv.TvView: void dispatchDraw(android.graphics.Canvas)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnAudioAvailable(byte[])>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>
<android.print.PrintJob: boolean isCancelled()>
<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.commands.hid.Event: java.lang.String getName()>
<com.android.egg.neko.NekoTile: void onClick()>
<android.hardware.camera2.impl.CameraMetadataNative: void finalize()>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean needsAntiFalsing()>
<android.view.WindowCallback: void onPanelClosed(int,android.view.Menu)>
<android.content.pm.PackageParser.Package: void setApplicationInfoBaseResourcePath(java.lang.String)>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator,com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler)>
<android.appwidget.AppWidgetHost: void clearViews()>
<android.net.wifi.WifiScanner.ParcelableScanData: android.net.wifi.WifiScanner.ScanData[] getResults()>
<android.preference.Preference: boolean persistStringSet(java.util.Set)>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>
<android.content.ContextWrapper: boolean moveDatabaseFrom(android.content.Context,java.lang.String)>
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.webkit.WebSettings: void setSaveFormData(boolean)>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>
<android.widget.AbsSeekBar: void setThumbOffset(int)>
<android.telecom.Call.Details: int getCallerDisplayNamePresentation()>
<com.android.documentsui.BaseActivity: com.android.documentsui.model.RootInfo getCurrentRoot()>
<android.net.Uri: boolean isHierarchical()>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>
<android.graphics.DiscretePathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<android.app.RemoteInput: android.os.Bundle getExtras()>
<android.net.wifi.nan.TlvBufferUtils.TlvIterable: java.lang.String toString()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeRight()>
<android.webkit.WebSettings: int getCacheMode()>
<android.graphics.DrawFilter_Delegate: java.lang.String getSupportMessage()>
<android.content.IntentFilter.AuthorityEntry: void <init>(java.lang.String,java.lang.String)>
<com.android.egg.neko.NekoTile: void onTileAdded()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.speech.RecognitionService: void onCancel(android.speech.RecognitionService.Callback)>
<android.os.Parcel: int[] createIntArray()>
<android.webkit.WebView: void onResume()>
<android.service.voice.VoiceInteractionSessionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.RestrictedPreferenceHelper: void useAdminDisabledSummary(boolean)>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getConnectionState()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getMsvSuffix()>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<android.util.Pools.SynchronizedPool: boolean release(java.lang.Object)>
<android.media.midi.MidiManager.OnDeviceOpenedListener: void onDeviceOpened(android.media.midi.MidiDevice)>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>
<android.view.MotionEvent: float getX()>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>
<android.database.AbstractWindowedCursor: boolean isNull(int)>
<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasVoiceCallingFeature()>
<android.view.IWindowManagerImpl: int getDockedStackSide()>
<android.os.Process: void setThreadPriority(int,int)>
<com.android.systemui.analytics.DataCollector: void onNotificatonStopDismissing()>
<com.android.settingslib.drawer.SettingsDrawerAdapter: com.android.settingslib.drawer.Tile getTile(int)>
<android.widget.CompoundButton: boolean performClick()>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>
<android.hardware.Camera: void startSmoothZoom(int)>
<android.view.textservice.SpellCheckerSession: void close()>
<android.graphics.Matrix_Delegate: void set(android.graphics.Matrix_Delegate)>
<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributeNamespace(int)>
<android.telecom.RemoteConnection.Callback: void onStatusHintsChanged(android.telecom.RemoteConnection,android.telecom.StatusHints)>
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)>
<com.android.server.pm.PackageManagerService: void verifyIntentFilter(int,int,java.util.List)>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>
<com.android.settingslib.net.DataUsageController: long getDefaultWarningLevel()>
<com.android.systemui.statusbar.phone.PanelBar: void onFinishInflate()>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>
<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putString(int,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: boolean onTouchEvent(android.view.MotionEvent)>
<android.animation.PointFEvaluator: void <init>()>
<android.widget.TextView: int getMinWidth()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.RecentsActivity: void onEnterAnimationComplete()>
<com.android.systemui.statusbar.NotificationOverflowContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: com.android.systemui.statusbar.phone.BarTransitions getBarTransitions()>
<com.android.systemui.tuner.KeycodeSelectionHelper.OnSelectionComplete: void onSelectionComplete(int)>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailablePreviewZoomCropRectangles(android.hardware.Camera.Parameters,android.graphics.Rect,android.util.Size)>
<com.android.hotspot2.asn1.Asn1Constructed: java.nio.ByteBuffer getEncoding()>
<android.graphics.Outline: float getAlpha()>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.media.MediaSync: android.media.SyncParams getSyncParams()>
<com.android.server.pm.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.BasePermission,int,int,int)>
<com.android.server.wm.AppWindowAnimator: boolean isAnimating()>
<android.util.PathParser.PathData: void finalize()>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String,java.lang.String)>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>
<com.android.providers.settings.SettingsHelper: void restoreValue(android.content.Context,android.content.ContentResolver,android.content.ContentValues,android.net.Uri,java.lang.String,java.lang.String)>
<android.provider.SyncStateContract.Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<com.android.server.policy.PhoneWindowManager: int getUserRotationMode()>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int,boolean)>
<android.location.GnssClock: boolean hasDriftNanosPerSecond()>
<android.view.View: void setPadding(int,int,int,int)>
<android.app.ActivityManager.TaskDescription: java.lang.String getLabel()>
<android.os.CpuUsageInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void dump(java.lang.String,java.io.PrintWriter)>
<android.content.ContextWrapper: java.lang.String[] databaseList()>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>
<com.android.systemui.recents.events.EventBus: void register(java.lang.Object,int)>
<android.text.Annotation: int getSpanTypeId()>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>
<com.android.systemui.recents.views.TaskStackView: void setRelativeFocusedTask(boolean,boolean,boolean)>
<android.net.LocalSocket: java.lang.String toString()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>
<android.service.textservice.SpellCheckerService.Session: void onCancel()>
<com.android.externalstorage.TestDocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.view.MotionEvent: float getTouchMajor(int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasMobileDataFeature()>
<com.google.android.util.AbstractMessageParser.Token: com.google.android.util.AbstractMessageParser.Token.Type getType()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkCallingPermission(java.lang.String)>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>
<com.android.systemui.statusbar.car.UserGridView: void onUserSwitched(int)>
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>
<com.android.settingslib.wifi.WifiTracker: java.util.List getCurrentAccessPoints(android.content.Context,boolean,boolean,boolean)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: com.android.internal.inputmethod.IInputContentUriToken createInputContentUriToken(android.os.IBinder,android.net.Uri,java.lang.String)>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect getContentRect()>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: void <init>(int)>
<com.android.systemui.statusbar.phone.ManagedProfileController: void addCallback(com.android.systemui.statusbar.phone.ManagedProfileController.Callback)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
<android.view.ViewStub: android.view.View inflate()>
<com.android.systemui.qs.QSDetail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startLaunchTransitionTimeout()>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setZenMode(int)>
<android.telecom.Conference: void setVideoProvider(android.telecom.Connection,android.telecom.Connection.VideoProvider)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void <init>(android.content.Context,android.view.View)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setMipmaps(boolean)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(java.nio.IntBuffer)>
<android.media.soundtrigger.SoundTriggerDetector.Callback: void onRecognitionPaused()>
<android.service.dreams.DreamService: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.net.wifi.nan.PublishSettings.Builder: android.net.wifi.nan.PublishSettings.Builder setTtlSec(int)>
<com.android.preload.DumpData: void countBootClassPath()>
<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>
<android.animation.PropertyValuesHolder: java.lang.String toString()>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>
<android.util.SizeF: float getHeight()>
<android.media.SyncParams: android.media.SyncParams allowDefaults()>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>
<android.view.IWindowManagerImpl: boolean clearWindowContentFrameStats(android.os.IBinder)>
<android.content.SyncRequest.Builder: android.content.SyncRequest build()>
<com.android.server.policy.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<android.app.Activity: void setContentView(int)>
<com.android.systemui.statusbar.NotificationOverflowContainer: void onFinishInflate()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void <init>(android.content.Context,int)>
<android.hardware.Camera.Parameters: void setMeteringAreas(java.util.List)>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>
<android.renderscript.Allocation: android.renderscript.Allocation[] createAllocations(android.renderscript.RenderScript,android.renderscript.Type,int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setRemoteInputActive(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>
<com.android.systemui.recents.events.EventBus: void onReceive(android.content.Context,android.content.Intent)>
<android.view.SurfaceHolder: void setType(int)>
<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<com.android.systemui.recents.views.TaskView: void onConfigurationChanged()>
<android.os.CpuUsageInfo: long getActive()>
<android.text.util.Rfc822Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.text.Layout: android.text.TextPaint getPaint()>
<com.android.systemui.BatteryMeterDrawable: void startListening()>
<android.graphics.ComposePathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>
<android.webkit.WebView: void setOverScrollMode(int)>
<android.service.notification.NotificationListenerService.Ranking: boolean matchesInterruptionFilter()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void onBoundsChange(android.graphics.Rect)>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>
<android.hardware.camera2.legacy.RequestHandlerThread: void <init>(java.lang.String,android.os.Handler.Callback)>
<android.provider.MediaStore.Images.Media: android.net.Uri getContentUri(java.lang.String)>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>
<com.android.layoutlib.bridge.Bridge: boolean supports(int)>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>
<android.widget.ListView: int getHeaderViewsCount()>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void onPackagesChanged(boolean,java.lang.String[])>
<android.graphics.ColorMatrix: void reset()>
<android.content.IntentFilter: int countCategories()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawColor(int)>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<android.view.MotionEvent: boolean isButtonPressed(int)>
<android.content.pm.PathPermission: void <init>(android.os.Parcel)>
<com.android.systemui.recents.events.activity.LaunchTvTaskStartedEvent: void <init>(com.android.systemui.recents.tv.views.TaskCardView)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHideSensitive(boolean,boolean,long,long)>
<android.view.Menu: void removeItem(int)>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.internal.location.ProviderProperties getProviderProperties()>
<android.accessibilityservice.AccessibilityService.MagnificationController: boolean reset(boolean)>
<android.media.tv.TvInputService.Session: boolean onSetSurface(android.view.Surface)>
<com.android.systemui.statusbar.phone.VelocityTrackerInterface: float getYVelocity()>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.android.documentsui.services.ResourceException: void <init>(java.lang.String,android.net.Uri,java.lang.Exception)>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>
<android.hardware.camera2.dispatch.DuckTypingDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.fakeoemfeatures.FakeCoreService: android.os.IBinder onBind(android.content.Intent)>
<com.android.layoutlib.bridge.BridgeRenderSession: java.util.List getSystemRootViews()>
<com.android.server.backup.PackageManagerBackupAgent: com.android.server.backup.PackageManagerBackupAgent.Metadata getRestoredMetadata(java.lang.String)>
<android.content.Context: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.widget.NumberPicker: float getTopFadingEdgeStrength()>
<android.content.res.Resources_Delegate: void disposeSystem()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getOrdinal()>
<android.widget.ExpandableListView: int getFlatListPosition(long)>
<com.android.server.am.ActivityManagerService: void hang(android.os.IBinder,boolean)>
<android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)>
<android.webkit.WebView: android.view.View getZoomControls()>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>
<android.text.BoringLayout: float getLineMax(int)>
<android.os.BaseBundle: boolean containsKey(java.lang.String)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPickupSubtypePerformsProxCheck(int)>
<android.appwidget.AppWidgetHostView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.NotificationGuts: void setClosedListener(com.android.systemui.statusbar.NotificationGuts.OnGutsClosedListener)>
<android.os.storage.StorageVolume: java.lang.String toString()>
<android.renderscript.Long2: void <init>(long,long)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.ShowIncompatibleAppOverlayEvent)>
<android.text.LoginFilter: boolean isAllowed(char)>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>
<com.android.server.policy.ImmersiveModeConfirmation: void <init>(android.content.Context)>
<android.opengl.GLES32: void glDrawElementsBaseVertex(int,int,int,java.nio.Buffer,int)>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>
<com.android.hotspot2.omadm.MOManager: void removeSP(java.lang.String,com.android.hotspot2.osu.OSUManager)>
<com.android.documentsui.RootsCache: java.util.Collection getRootsBlocking()>
<android.renderscript.Matrix2f: void <init>(float[])>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>
<com.android.server.connectivity.LingerMonitor: void noteDisconnect(com.android.server.connectivity.NetworkAgentInfo)>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>
<android.widget.PopupWindow: boolean isFocusable()>
<android.media.MediaScannerConnection: boolean isConnected()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setEmptyDragAmount(float)>
<com.android.tools.idea.editors.theme.widgets.ThemePreviewLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.AlphaOptimizedImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isBouncerShowing()>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
<android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>
<android.view.ShadowPainter: java.awt.image.BufferedImage createRectangularDropShadow(java.awt.image.BufferedImage)>
<com.android.server.am.ActivityManagerService: int getMemoryTrimLevel()>
<android.telephony.CellInfoWcdma: int describeContents()>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<android.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>
<android.media.session.MediaSession.Callback: void onPrepare()>
<com.android.anqp.HSIconFileElement: java.lang.String getType()>
<com.android.photos.views.TiledImageView: void invalidate()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void inflateLayout(java.lang.String)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasWindowColor()>
<android.graphics.PointF: void set(android.graphics.PointF)>
<android.app.Dialog: android.view.SearchEvent getSearchEvent()>
<com.android.server.storage.DeviceStorageMonitorInternal: void checkMemory()>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
<android.os.FileBridge.FileBridgeOutputStream: void write(int)>
<com.android.server.am.ActivityManagerService: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<android.widget.OverScroller: void setFriction(float)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.provider.BlockedNumberContract: int unblock(android.content.Context,java.lang.String)>
<com.android.printspooler.model.RemotePrintDocument: boolean isUpdating()>
<android.renderscript.Allocation: void ioSend()>
<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsUid(int)>
<android.filterpacks.imageproc.VignetteFilter: void setupPorts()>
<android.telecom.Call: void registerCallback(android.telecom.Call.Callback)>
<android.os.MessageQueue.IdleHandler: boolean queueIdle()>
<android.media.session.MediaController: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void addCallback(android.media.MediaRouter.Callback)>
<android.opengl.GLES20: void glDeleteProgram(int)>
<android.media.midi.MidiDeviceStatus: int getOutputPortOpenCount(int)>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>
<com.android.settingslib.accounts.AuthenticatorHelper: void stopListeningToAccountUpdates()>
<com.android.hotspot2.omadm.OMANode: java.lang.String getScalarValue(java.util.Iterator)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<com.android.documentsui.dirlist.FragmentTuner: boolean canSelectType(java.lang.String,int)>
<android.media.session.MediaController.Callback: void onSessionDestroyed()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void userActivity()>
<android.telecom.RemoteConference: void unregisterCallback(android.telecom.RemoteConference.Callback)>
<android.net.MailTo: java.lang.String getBody()>
<android.media.AudioTrack: boolean setPreferredDevice(android.media.AudioDeviceInfo)>
<android.widget.ActionMenuView: void <init>(android.content.Context)>
<android.util.TimingLogger: void reset()>
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnEnabled()>
<android.transition.TransitionPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onEffectsSupressorChanged()>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>
<android.net.IpPrefix: boolean contains(java.net.InetAddress)>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getMaxContentHeight()>
<com.android.systemui.statusbar.phone.TrustDrawable: void <init>(android.content.Context)>
<android.view.MotionEvent: float getHistoricalSize(int)>
<com.android.location.provider.GmsFusedBatchOptions: long getPeriodInNS()>
<android.media.midi.MidiDeviceInfo.PortInfo: java.lang.String getName()>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>
<android.content.ContentProvider.PipeDataWriter: void writeDataToPipe(android.os.ParcelFileDescriptor,android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performVisibilityAnimation(boolean,java.lang.Runnable)>
<android.print.PrintJobInfo: int getCopies()>
<com.android.systemui.recents.views.AnimationProps: android.animation.Animator.AnimatorListener getListener()>
<android.view.ActionMode: android.view.MenuInflater getMenuInflater()>
<android.os.BatteryStats.Uid: int getWifiScanCount(int)>
<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<com.android.hotspot2.omadm.OMAConstructed: void fillPayload(java.lang.StringBuilder)>
<com.android.egg.neko.NekoActivationActivity: void onStart()>
<android.widget.TextView: float getShadowDx()>
<com.android.systemui.statusbar.phone.PanelView: boolean hasConflictingGestures()>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: long getLong(java.lang.String,long)>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setSelectionRange(int,int)>
<com.android.tools.layoutlib.create.DelegateClassAdapter: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<android.media.session.MediaSession.Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>
<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()>
<javax.microedition.khronos.opengles.GL10: void glFogf(int,float)>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)>
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>
<android.view.View: int getNextFocusUpId()>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>
<android.graphics.Bitmap: int getGenerationId()>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedDateVerticalBar(int)>
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>
<com.android.server.wm.TaskStack: void onAnimationEnd()>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter()>
<android.service.voice.VoiceInteractionSession.Request: void cancel()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightAvailabilityChanged(boolean)>
<android.view.accessibility.AccessibilityRecord: boolean isFullScreen()>
<com.android.server.usb.UsbService: void systemReady()>
<android.app.usage.UsageStats: long getLastTimeStamp()>
<android.view.View: boolean isSaveFromParentEnabled()>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Process: int getGidForName(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>
<com.android.server.clipboard.ClipboardService: boolean hasPrimaryClip(java.lang.String)>
<android.app.AutomaticZenRule: int describeContents()>
<com.android.hotspot2.osu.OSUManager: void iconResults(java.util.List)>
<android.widget.ViewFlipper: void startFlipping()>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void setButtonDispatchers(android.util.SparseArray)>
<com.android.server.power.ShutdownThread: void run()>
<android.os.AsyncTask: boolean isCancelled()>
<android.telecom.RemoteConnection.VideoProvider: void setPreviewSurface(android.view.Surface)>
<com.android.server.DisplayThread: com.android.server.DisplayThread get()>
<android.hardware.radio.RadioManager.ModuleProperties: int getId()>
<android.os.Message: long getWhen()>
<android.view.MenuItem: boolean isCheckable()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onFontScaleChanged(float)>
<android.media.MediaRouter: void removeCallback(android.media.MediaRouter.Callback)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>
<android.os.IRecoverySystem: void rebootRecoveryWithCommand(java.lang.String)>
<com.android.systemui.qs.external.TileLifecycleManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.server.am.ActivityManagerService: java.util.List getAppTasks(java.lang.String)>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationFailed()>
<android.telephony.SubscriptionInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.UserManagerService: boolean isUserUnlockingOrUnlocked(int)>
<android.opengl.GLES10: void glEnable(int)>
<com.android.server.TextServicesManagerService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.statusbar.notification.ProgressTransformState: com.android.systemui.statusbar.notification.ProgressTransformState obtain()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean canSkipBouncer()>
<com.android.anqp.eap.NonEAPInnerAuth: boolean equals(java.lang.Object)>
<com.android.server.backup.BackupManagerService: void agentDisconnected(java.lang.String)>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HidProfile: java.lang.String toString()>
<com.android.keyguard.ViewMediatorCallback: void readyForKeyguardDone()>
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>
<android.view.PixelCopy.OnPixelCopyFinishedListener: void onPixelCopyFinished(int)>
<android.webkit.WebSettings: void setTextZoom(int)>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: void sendAbortResult(android.os.Bundle)>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>
<android.net.Uri: java.lang.String getHost()>
<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>
<android.location.Address: void setThoroughfare(java.lang.String)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getUserComment()>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>
<android.graphics.drawable.Animatable: void stop()>
<android.webkit.WebView: boolean onHoverEvent(android.view.MotionEvent)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIntentAvailableOffline(boolean)>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>
<android.os.UserManagerInternal.UserRestrictionsListener: void onUserRestrictionsChanged(int,android.os.Bundle,android.os.Bundle)>
<android.media.MediaCodec.CryptoInfo: void setPattern(android.media.MediaCodec.CryptoInfo.Pattern)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setInput(java.io.Reader)>
<com.google.android.util.SmileyResources: int getSmileyRes(java.lang.String)>
<android.os.SystemClock: long elapsedRealtimeNanos()>
<android.hardware.camera2.utils.SurfaceUtils: boolean isFlexibleConsumer(android.view.Surface)>
<android.app.ActionBar: int getNavigationMode()>
<android.view.InputDevice: boolean[] hasKeys(int[])>
<com.android.systemui.statusbar.StackScrollerDecorView: void cancelAnimation()>
<android.widget.ImageView: void setCropToPadding(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
<android.view.ViewGroup: boolean hasTransientState()>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void performDeferredDestroy(android.view.IWindow)>
<android.transition.ChangeImageTransform: void captureEndValues(android.transition.TransitionValues)>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification)>
<android.animation.ValueAnimator: long getCurrentPlayTime()>
<android.content.pm.PackageManager: void addPackageToPreferred(java.lang.String)>
<android.media.session.MediaSession.QueueItem: int describeContents()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.media.effect.Effect: void setParameter(java.lang.String,java.lang.Object)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayRemoved(int)>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int,int)>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>
<android.graphics.drawable.NinePatchDrawable: boolean isStateful()>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>
<android.telecom.RemoteConference.Callback: void onDestroyed(android.telecom.RemoteConference)>
<com.android.commands.hid.Event: int getId()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.anqp.IconInfo: boolean equals(java.lang.Object)>
<android.printservice.PrintJob: int hashCode()>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(android.view.View)>
<com.android.systemui.classifier.HumanInteractionClassifier: void onTouchEvent(android.view.MotionEvent)>
<android.widget.ZoomControls: void setZoomSpeed(long)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSecurityString(boolean)>
<com.android.commands.pm.Pm: int runSetUserRestriction()>
<android.media.AudioTrack: android.media.PlaybackParams getPlaybackParams()>
<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>
<android.database.Cursor: short getShort(int)>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.policy.BurnInProtectionHelper: void dump(java.lang.String,java.io.PrintWriter)>
<android.app.usage.UsageStatsManager: boolean isAppInactive(java.lang.String)>
<com.android.nfc_extras.EeInitializationException: void <init>()>
<android.graphics.Rect: void sort()>
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: android.os.IBinder getBinder()>
<com.android.systemui.statusbar.NotificationData: com.android.systemui.statusbar.NotificationData.Entry get(java.lang.String)>
<android.widget.AutoCompleteTextView: void setListSelection(int)>
<android.view.ViewGroup: void onNestedPreScroll(android.view.View,int,int,int[])>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setNotificationRowParent(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getMaxPanelHeight()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<com.android.server.am.ActivityManagerService: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<android.app.FragmentManager: boolean popBackStackImmediate(int,int)>
<android.content.Intent: android.net.Uri getData()>
<android.app.ActivityManagerProxy: void dumpHeapFinished(java.lang.String)>
<android.os.Debug: void resetThreadGcInvocationCount()>
<android.os.BatteryStats.HistoryTag: void setTo(java.lang.String,int)>
<com.android.server.power.PowerManagerService: void onBootPhase(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void updateOverflowContainerVisibility(boolean)>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>
<com.android.server.am.ActivityManagerService: void moveTaskBackwards(int)>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>
<android.content.IntentSender.OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory: void <init>(java.awt.geom.PathIterator)>
<android.os.BatteryStats.HistoryTag: int hashCode()>
<com.android.systemui.egg.MLand: int pick(int[])>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean isAfSupported()>
<com.android.keyguard.KeyguardAbsKeyInputView: void doHapticKeyClick()>
<android.nfc.cardemulation.CardEmulation: boolean removeAidsForService(android.content.ComponentName,java.lang.String)>
<android.hardware.Camera.Parameters: void setAntibanding(java.lang.String)>
<android.media.tv.TvInputService.RecordingSession: void onTune(android.net.Uri)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo getRangeInfo()>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice,int,long)>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>
<android.content.pm.ShortcutInfo: java.util.Set getCategories()>
<com.android.documentsui.LocalPreferences: void setViewMode(android.content.Context,com.android.documentsui.model.RootInfo,int)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void onServiceLost(android.net.nsd.NsdServiceInfo)>
<android.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackLayoutAlgorithm.TaskStackLayoutAlgorithmCallbacks)>
<android.telecom.Conference: void onStopDtmfTone()>
<com.android.server.am.CompatModePackages: java.util.HashMap getPackages()>
<android.graphics.drawable.RotateDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.location.GnssStatus: boolean hasEphemeris(int)>
<com.android.settingslib.graph.UsageView: void configureGraph(int,int,boolean,boolean)>
<com.android.systemui.SystemUIService: void onCreate()>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>
<com.android.server.print.PrintManagerService: void onUnlockUser(int)>
<android.telecom.Connection: void sendConnectionEvent(java.lang.String,android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glPointSizex(int)>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>
<com.android.server.pm.PermissionsState: boolean hasInstallPermission(java.lang.String)>
<com.android.systemui.statusbar.ExpandableOutlineView: void updateOutline()>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>
<android.database.AbstractCursor: boolean moveToNext()>
<android.hardware.fingerprint.IFingerprintDaemon: void init(android.hardware.fingerprint.IFingerprintDaemonCallback)>
<android.graphics.drawable.VectorDrawable: boolean onStateChange(int[])>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>
<android.widget.ExpandableListView: boolean expandGroup(int,boolean)>
<com.android.server.SensorNotificationService: void <init>(android.content.Context)>
<android.media.MediaPlayer: boolean isLooping()>
<android.media.AudioTrack: void finalize()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>
<com.android.server.trust.TrustManagerService: void onSwitchUser(int)>
<com.android.preload.DeviceUtils: void doAMStart(com.android.ddmlib.IDevice,java.lang.String,java.lang.String)>
<android.telecom.VideoProfile.CameraCapabilities: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Short2: void <init>()>
<com.google.android.gles_jni.EGLImpl: int eglGetError()>
<android.widget.AbsListView: void dispatchDrawableHotspotChanged(float,float)>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData build()>
<com.android.printspooler.model.PrintSpoolerService: void clearCustomPrinterIconCache()>
<android.media.ImageWriter: android.media.Image dequeueInputImage()>
<android.app.FragmentController: android.os.Parcelable saveAllState()>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
<android.bluetooth.le.ScanRecord: byte[] getBytes()>
<android.app.FragmentManagerImpl: void noteStateNotSaved()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setPulsing(boolean)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToString(int)>
<android.filterpacks.imageproc.AutoFixFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.content.IntentFilter: int getPriority()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void cancelOverScrollAnimators(boolean)>
<com.android.documentsui.dirlist.MultiSelectManager.GridModel: void onScrolled(android.support.v7.widget.RecyclerView,int,int)>
<android.graphics.Rect: void set(int,int,int,int)>
<android.filterpacks.imageproc.ColorTemperatureFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.app.ActivityManagerProxy: void resizeStack(int,android.graphics.Rect,boolean,boolean,boolean,int)>
<android.hardware.radio.RadioManager.FmBandConfig: int describeContents()>
<com.android.server.notification.ZenLog: void traceUnsubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<com.android.server.lights.Light: void setBrightness(int)>
<android.view.Window.Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getProcessStateTimer(int)>
<android.view.View: boolean canResolveTextAlignment()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>
<android.telecom.RemoteConnection: void postDialContinue(boolean)>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.layoutlib.bridge.bars.FrameworkActionBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.SessionParams)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getTimeSinceFirstRequestMs()>
<android.media.midi.MidiDeviceInfo: android.media.midi.MidiDeviceInfo.PortInfo[] getPorts()>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<com.android.server.net.NetworkStatsService: android.net.INetworkStatsSession openSessionForUsageStats(java.lang.String)>
<android.app.Notification.Builder: android.os.Bundle getExtras()>
<com.android.systemui.recents.model.Task.TaskKey: android.content.ComponentName getComponent()>
<android.filterpacks.imageproc.PosterizeFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.CheckedTextView: void onRtlPropertiesChanged(int)>
<android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
<com.android.server.search.SearchManagerService: boolean launchLegacyAssist(java.lang.String,int,android.os.Bundle)>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPR2(int,android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.widget.AbsListView: boolean showContextMenu(float,float)>
<android.view.Display: android.view.Display.HdrCapabilities getHdrCapabilities()>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)>
<com.android.settingslib.bluetooth.HidProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.events.EventBus: void unregisterInterprocess(android.content.Context,java.lang.Object)>
<android.app.ActionBar.Tab: java.lang.CharSequence getText()>
<android.app.ActivityManagerProxy: void deleteActivityContainer(android.app.IActivityContainer)>
<android.app.UiModeManager: int getNightMode()>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: int getColumnCount()>
<com.android.systemui.volume.VolumeComponent: void onConfigurationChanged(android.content.res.Configuration)>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>
<android.animation.AnimatorSet: void setupStartValues()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitAttribute(org.objectweb.asm.Attribute)>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>
<com.android.server.pm.PackageManagerService: byte[] getEphemeralApplicationCookie(java.lang.String,int)>
<com.android.systemui.ResizingSpace: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.net.NetworkStatsRecorder: void <init>(com.android.internal.util.FileRotator,android.net.NetworkStats.NonMonotonicObserver,android.os.DropBoxManager,java.lang.String,long,boolean)>
<android.webkit.WebIconDatabase: void open(java.lang.String)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int,int)>
<com.android.layoutlib.bridge.impl.GcSnapshot: java.awt.Shape getClip()>
<android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.String)>
<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>
<com.android.settingslib.applications.ApplicationsState: void invalidatePackage(java.lang.String,int)>
<android.opengl.GLException: void <init>(int)>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getRotation()>
<com.android.systemui.qs.QSTile.DrawableIconWithRes: void <init>(android.graphics.drawable.Drawable,int)>
<com.android.gallery3d.exif.ExifInterface: int getTrueIfd(int)>
<android.media.tv.TvView: void setStreamVolume(float)>
<android.view.View: int getMeasuredWidth()>
<android.filterpacks.imageproc.NegativeFilter: void <init>(java.lang.String)>
<android.os.Message: void setData(android.os.Bundle)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
<com.android.systemui.statusbar.NotificationGuts: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Rect: int height()>
<com.google.android.util.AbstractMessageParser.Photo: com.google.android.util.AbstractMessageParser.Photo matchURL(java.lang.String,java.lang.String)>
<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.media.MediaSync: android.view.Surface createInputSurface()>
<com.android.gallery3d.glrenderer.GLCanvas: void save()>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>
<android.content.pm.PackageParser.Package: void setCodePath(java.lang.String)>
<com.android.systemui.statusbar.policy.HotspotController: void removeCallback(com.android.systemui.statusbar.policy.HotspotController.Callback)>
<android.telecom.ConnectionRequest: int getVideoState()>
<android.view.IWindowManagerImpl: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
<android.app.admin.DevicePolicyManager: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureStarted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,long,long)>
<com.android.systemui.statusbar.NotificationGuts: void setActualHeight(int)>
<android.widget.QuickContactBadge: void setPrioritizedMimeType(java.lang.String)>
<android.view.MenuItem: void setShowAsAction(int)>
<android.os.ParcelUuid: java.lang.String toString()>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>
<android.text.Layout: void increaseWidthTo(int)>
<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>
<android.widget.CursorFilter.CursorFilterClient: void changeCursor(android.database.Cursor)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: android.graphics.Bitmap getBitmap()>
<android.telephony.SubscriptionManager.OnSubscriptionsChangedListener: void onSubscriptionsChanged()>
<com.android.preload.actions.RunMonkeyAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>
<android.app.job.JobInfo: boolean isPersisted()>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isGroupExpansionChanging()>
<android.content.pm.LauncherApps: android.graphics.drawable.Drawable getShortcutBadgedIconDrawable(android.content.pm.ShortcutInfo,int)>
<android.telecom.Call: void answer(int)>
<com.android.documentsui.OpenExternalDirectoryActivity.OpenExternalDirectoryDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.telephony.CellInfoWcdma: boolean equals(java.lang.Object)>
<android.app.VoiceInteractor.Request: java.lang.String getName()>
<com.android.server.policy.BarController: boolean skipAnimation()>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompletedInternal()>
<android.view.WindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.security.keystore.KeyGenParameterSpec: int getKeySize()>
<com.android.systemui.SwipeHelper: void onTranslationUpdate(android.view.View,float,boolean)>
<android.view.MotionEvent: int getButtonState()>
<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.server.net.DnsServerEntry: int compareTo(com.android.server.net.DnsServerEntry)>
<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>
<android.util.PathParser_Delegate: void updateNodes(android.util.PathParser_Delegate.PathDataNode[],android.util.PathParser_Delegate.PathDataNode[])>
<android.media.MediaMetadata: boolean containsKey(java.lang.String)>
<com.android.systemui.qs.QSTile.SignalState: boolean copyTo(com.android.systemui.qs.QSTile.State)>
<android.widget.CalendarView.CalendarViewDelegate: long getMinDate()>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: float getCurrentSegmentLength()>
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>
<com.android.systemui.classifier.FalsingManager: void onAffordanceSwipingAborted()>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.FrameStats: long getRefreshPeriodNano()>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>
<android.os.LocaleList: int size()>
<android.media.tv.TvInputService.Session: void notifyTracksChanged(java.util.List)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.documentsui.BaseActivity: void setPending(boolean)>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>
<android.view.ViewGroup: boolean hasFocus()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.util.PathParser.PathData: void setPathData(android.util.PathParser.PathData)>
<android.media.SoundPool: void autoResume()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getOverscanFrameLw()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.android.server.backup.SystemBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<android.graphics.NinePatch: android.graphics.Paint getPaint()>
<android.os.Parcel: void writeCharArray(char[])>
<com.android.systemui.statusbar.BaseStatusBar: void maybeEscalateHeadsUp()>
<android.view.View: void addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>
<android.database.AbstractWindowedCursor: void checkPosition()>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>
<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: void <init>()>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>
<android.media.MediaPlayer.OnTimedTextListener: void onTimedText(android.media.MediaPlayer,android.media.TimedText)>
<com.android.systemui.power.PowerUI.WarningsUI: void userSwitched()>
<com.android.systemui.recents.model.TaskStack: int indexOfStackTask(com.android.systemui.recents.model.Task)>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void rotate(double)>
<android.telecom.RemoteConnection: void reject()>
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>
<com.android.server.pm.PackageInstallerSession: void abandon()>
<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>
<com.android.systemui.classifier.Point: float dist(com.android.systemui.classifier.Point)>
<com.android.anqp.eap.Credential: com.android.anqp.eap.Credential.CredType getCredType()>
<android.app.FragmentManager: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<com.android.systemui.power.PowerUI.WarningsUI: void showTemperatureWarning()>
<android.media.AudioTrack: int getBufferSizeInFrames()>
<android.view.IWindowManagerImpl: int getInitialDisplayDensity(int)>
<com.android.systemui.stackdivider.WindowManagerProxy: void dismissDockedStack()>
<android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
<com.android.server.MountServiceIdler: boolean onStopJob(android.app.job.JobParameters)>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>
<com.android.keyguard.KeyguardSimPukView: void onFinishInflate()>
<android.graphics.Interpolator: void finalize()>
<com.android.server.pm.PackageManagerService: boolean performDexOptMode(java.lang.String,boolean,java.lang.String,boolean)>
<com.android.hotspot2.omadm.OMAConstructed: void <init>(com.android.hotspot2.omadm.OMAConstructed,java.lang.String,java.lang.String,com.android.hotspot2.omadm.MultiValueMap,java.util.Map)>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>
<com.android.systemui.ImageWallpaper: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<android.view.Window: boolean getSharedElementsUseOverlay()>
<android.media.AudioTrack: int setPlaybackRate(int)>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>
<com.android.systemui.statusbar.NotificationData.Entry: android.view.View getExpandedContentView()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService,com.android.server.policy.keyguard.KeyguardStateMonitor.OnShowingStateChangedCallback)>
<com.android.commands.sm.Sm: void run(java.lang.String[])>
<android.os.UserManager: boolean supportsMultipleUsers()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void reset()>
<android.media.tv.TvInputHardwareInfo.Builder: void <init>()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient.CustomViewCallback)>
<com.android.settingslib.bluetooth.HidProfile: boolean isAutoConnectable()>
<android.text.style.EasyEditSpan: void <init>(android.os.Parcel)>
<com.android.server.am.BatteryStatsService: void noteWifiOff()>
<android.appwidget.AppWidgetHost: void stopListening()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,int,java.lang.Object)>
<com.android.systemui.statusbar.BaseStatusBar: void clearNotificationEffects()>
<android.hardware.radio.RadioManager.ProgramInfo: int describeContents()>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>
<javax.microedition.khronos.opengles.GL10: void glEnable(int)>
<com.android.hotspot2.IMSIParameter: java.lang.String toString()>
<android.widget.ScrollView: void setFillViewport(boolean)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)>
<com.android.systemui.recents.views.AnimateableViewBounds: float getAlpha()>
<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>
<com.android.systemui.SystemUI: void putComponent(java.lang.Class,com.android.server.ResettableTimeout.T)>
<com.android.systemui.recents.RecentsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getNamespaceUri(int)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setHintDisplayActionInline(boolean)>
<android.text.style.TtsSpan: void <init>(android.os.Parcel)>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
<com.android.systemui.statusbar.StatusBarIconView: boolean set(com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isClearAllVisible()>
<com.android.documentsui.dirlist.DirectoryFragment: void onViewModeChanged()>
<com.android.systemui.qs.QSDetail: void setFullyExpanded(boolean)>
<android.media.session.MediaController: void setVolumeTo(int,int)>
<android.media.JetPlayer: boolean triggerClip(int)>
<android.widget.DialerFilter: void clearText()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<com.android.systemui.statusbar.policy.SignalController: void resetLastState()>
<android.app.Activity: void showDialog(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>
<android.widget.QuickContactBadge: void setMode(int)>
<com.android.server.wm.DockedStackDividerController: java.lang.String toShortString()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateQsExpansion()>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthMaskEnabled(boolean)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void onStartedGoingToSleep(int)>
<android.media.AudioDeviceInfo: boolean isSink()>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.io.File)>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>
<android.text.BoringLayout: float getLineWidth(int)>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(java.lang.String)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setY(int)>
<android.speech.tts.SynthesisRequest: java.lang.CharSequence getCharSequenceText()>
<com.android.systemui.BatteryMeterView: void setDarkIntensity(float)>
<com.android.systemui.recents.views.TaskView: boolean hasOverlappingRendering()>
<com.android.tools.layoutlib.create.Log: void debugNoln(java.lang.String,java.lang.Object[])>
<com.android.systemui.statusbar.ServiceMonitor.Callbacks: long onServiceStartAttempt()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean)>
<android.mtp.MtpDevice: long getPartialObject(int,long,long,byte[])>
<android.app.ExpandableListActivity: void onGroupExpand(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isQsExpanded()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(int)>
<android.security.keystore.KeyProtection: java.lang.String[] getSignaturePaddings()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean equals(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<android.os.BatteryStats.Uid: void noteWifiScanStoppedLocked(long)>
<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>
<android.view.ViewParent: void requestLayout()>
<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<android.opengl.GLES10: void glStencilOp(int,int,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelPeeked()>
<com.android.server.am.HealthStatsBatteryStatsWriter: void writeUid(android.os.health.HealthStatsWriter,android.os.BatteryStats,android.os.BatteryStats.Uid)>
<com.android.systemui.recents.views.RecentsTransitionHelper: android.view.IAppTransitionAnimationSpecsFuture getAppTransitionFuture(com.android.systemui.recents.views.RecentsTransitionHelper.AnimationSpecComposer)>
<android.net.LocalSocket: int getSendBufferSize()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void crash(java.lang.String)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.animation.Animation: long getStartTime()>
<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>
<android.graphics.pdf.PdfRenderer.Page: int getHeight()>
<android.widget.AbsListView.LayoutParams: void <init>(int,int)>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>
<android.app.IntentService: void <init>(java.lang.String)>
<com.android.server.am.BatteryStatsService: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.hotspot2.asn1.Asn1Object: int getEndOfData()>
<android.widget.AbsListView: void invalidateViews()>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>
<android.util.SparseBooleanArray: int size()>
<com.android.server.notification.SystemConditionProviderService: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>
<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter: com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter getFilter(int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: void visitInnerClassType(java.lang.String)>
<android.app.Dialog: void <init>(android.content.Context,int)>
<android.telecom.VideoProfile: boolean isBidirectional(int)>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>
<android.app.admin.DeviceAdminReceiver: void onBugreportFailed(android.content.Context,android.content.Intent,int)>
<android.telecom.Call.Details: int getHandlePresentation()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedRegistrationObjects()>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitGL()>
<android.view.ActionProvider.VisibilityListener: void onActionProviderVisibilityChanged(boolean)>
<android.media.Tokenizer.TokenizerPhase: void tokenize()>
<android.app.MediaRouteButton: void setVisibility(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void flingTopOverscroll(float,boolean)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.systemui.analytics.DataCollector: void onBouncerShown()>
<android.os.Parcel: void setDataCapacity(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setOnGroupChangeListener(com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener)>
<android.graphics.Picture: void endRecording()>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>
<android.widget.TextView: int getLineCount()>
<android.preference.PreferenceActivity: boolean hasHeaders()>
<android.widget.FrameLayout: boolean getMeasureAllChildren()>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>
<android.view.Display: long getPresentationDeadlineNanos()>
<android.app.ActivityManagerProxy: void stopLocalVoiceInteraction(android.os.IBinder)>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.ActivatableNotificationView: void cancelAppearDrawing()>
<android.util.ArraySet: java.lang.String toString()>
<com.android.settingslib.drawer.DashboardCategory: void <init>()>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<com.android.keyguard.KeyguardHostView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchDreamingStopped()>
<android.opengl.GLES30: void glUniform1ui(int,int)>
<android.view.SurfaceHolder: void setFixedSize(int,int)>
<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>
<com.android.systemui.analytics.DataCollector: void onTouchEvent(android.view.MotionEvent,int,int)>
<android.app.RemoteInput: java.lang.String getResultKey()>
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>
<com.android.systemui.qs.tiles.WorkModeTile: boolean isAvailable()>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationAtStart()>
<com.android.documentsui.dirlist.AnimationView: void <init>(android.content.Context)>
<com.android.server.usb.UsbPortManager: void connectSimulatedPort(java.lang.String,int,boolean,int,boolean,int,boolean,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateHeadsUp(java.lang.String,com.android.systemui.statusbar.NotificationData.Entry,boolean,boolean)>
<com.android.server.notification.ManagedServices: java.util.Set queryPackageForServices(java.lang.String,int)>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
<android.content.Intent: java.lang.String getPackage()>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeHandling()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setActualHeight(int)>
<com.android.systemui.qs.tiles.HotspotTile: void handleClick()>
<com.android.documentsui.dirlist.RenameDocumentFragment: void onActivityCreated(android.os.Bundle)>
<com.google.android.gles_jni.GLImpl: void glClearColorx(int,int,int,int)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,int[],int)>
<com.android.hotspot2.osu.OSUManager: void wnmRemediate(long,java.lang.String,com.android.hotspot2.PasspointMatch)>
<android.webkit.WebViewProvider.ViewDelegate: void onWindowVisibilityChanged(int)>
<android.widget.StackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.os.Parcel: void writeNoException()>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void remove(android.view.IWindow)>
<com.android.systemui.statusbar.ExpandableView: void setTransientContainer(android.view.ViewGroup)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: void <init>(java.lang.String,java.lang.String)>
<android.media.AudioTrack: int getBufferCapacityInFrames()>
<android.view.animation.Animation: boolean getFillBefore()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSeparateProfileChallengeAllowed(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.widget.ProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)>
<android.media.MediaCodec: java.lang.String getName()>
<android.os.StrictMode.ThreadPolicy: java.lang.String toString()>
<com.android.documentsui.FilteringCursorWrapper: void close()>
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>
<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>
<android.preference.PreferenceManager: void setStorageDeviceEncrypted()>
<android.content.pm.PackageParser.Package: java.util.List getAllCodePaths()>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,int[],int)>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>
<android.webkit.ServiceWorkerWebSettings: void setAllowFileAccess(boolean)>
<android.telephony.ServiceState: int getState()>
<com.android.documentsui.services.FileOperations: java.lang.String start(android.app.Activity,java.util.List,com.android.documentsui.model.DocumentStack,int)>
<com.android.anqp.OSUProvider: boolean equals(java.lang.Object)>
<android.content.pm.PackageInstaller.SessionParams: void setAppLabel(java.lang.CharSequence)>
<com.android.photos.views.BlockingGLTextureView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<com.android.documentsui.Events.InputEvent: int getItemPosition()>
<com.android.keyguard.ViewMediatorCallback: void playTrustedSound()>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,java.lang.Object)>
<com.android.egg.neko.Cat: void setAlpha(int)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void setReceiverHandler(android.os.Handler)>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>
<android.media.tv.TvTrackInfo: java.lang.String getId()>
<android.hardware.radio.RadioManager.AmBandConfig.Builder: void <init>(android.hardware.radio.RadioManager.AmBandConfig)>
<android.preference.Preference: android.content.Context getContext()>
<android.media.audiofx.AudioEffect: void release()>
<javax.microedition.khronos.opengles.GL11Ext: void glEnableClientState(int)>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>
<com.android.server.notification.ManagedServices: void <init>(android.content.Context,android.os.Handler,java.lang.Object,com.android.server.notification.ManagedServices.UserProfiles)>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>
<com.android.printspooler.util.ApprovedPrintServices: void <init>(android.content.Context)>
<android.security.keystore.KeyInfo: boolean isInvalidatedByBiometricEnrollment()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void startScanning(boolean)>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>
<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>
<com.android.statementservice.DirectStatementService: void onCreate(com.android.statementservice.retriever.AbstractStatementRetriever,android.os.Looper,java.io.File)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.qs.QSTile.SignalState newTileState()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(int)>
<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>
<com.android.server.pm.LauncherAppsService: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void resetFocusedTask(com.android.systemui.recents.model.Task)>
<com.android.layoutlib.bridge.Bridge: void clearCaches(java.lang.Object)>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onBootPhase(int)>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>
<com.android.server.LocationManagerService: void reportLocation(android.location.Location,boolean)>
<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<android.graphics.RoundRectangle: void <init>(float,float,float,float,float[])>
<android.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStartedLw()>
<android.app.ActionBar: java.lang.CharSequence getTitle()>
<com.android.printspooler.util.PageRangeUtils: void offset(android.print.PageRange[],int)>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDelegateClassNatives()>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekSeparatorLineColor()>
<android.view.Surface: int describeContents()>
<com.google.android.gles_jni.EGLImpl: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.View: void addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>
<android.app.Activity: void requestShowKeyboardShortcuts()>
<android.content.res.ResourcesImpl.ThemeImpl: void dump(int,java.lang.String,java.lang.String)>
<android.view.SurfaceHolder: void setFormat(int)>
<android.content.res.AssetManager.AssetInputStream: int available()>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int)>
<android.content.IntentFilter.AuthorityEntry: java.lang.String getHost()>
<com.android.systemui.recents.RecentsImpl: void showNextAffiliatedTask()>
<android.opengl.EGL14: boolean eglWaitGL()>
<com.google.android.gles_jni.GLImpl: void glGetPointerv(int,java.nio.Buffer[])>
<com.android.server.job.controllers.TimeController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)>
<android.view.IWindowManagerImpl: int getBaseDisplayDensity(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getDisplayRect()>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save(int)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>
<android.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)>
<com.android.wallpapercropper.CropView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.DisplayClientState getCachedDisplayClientState()>
<com.android.server.notification.NotificationSignalExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustChanged(int)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendKeyUp(android.os.IBinder,int)>
<com.android.printspooler.widget.CustomErrorEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>
<android.net.http.SslCertificate: java.lang.String toString()>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.PanelBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.QSDetailClipper: void <init>(android.view.View)>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>
<com.android.server.AppOpsService: java.util.List getPackagesForOps(int[])>
<android.media.MediaCodecList: java.lang.String findEncoderForFormat(android.media.MediaFormat)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
<android.telephony.CellSignalStrengthCdma: int describeContents()>
<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int)>
<com.android.server.trust.TrustManagerService: void onCleanupUser(int)>
<com.android.systemui.statusbar.ActivatableNotificationView: int calculateBgColor()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int)>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.service.dreams.DreamService: boolean onSearchRequested()>
<android.content.Context: void revokeUriPermission(android.net.Uri,int)>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,int)>
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<com.android.systemui.statusbar.phone.ScrimController: void setDozeInFrontAlpha(float)>
<android.telephony.CarrierConfigManager: void notifyConfigChangedForSubId(int)>
<android.widget.TextView: void setError(java.lang.CharSequence)>
<android.animation.ValueAnimator: float getAnimatedFraction()>
<com.android.server.notification.ManagedServices: void setComponentState(android.content.ComponentName,boolean)>
<android.content.RestrictionEntry: void setChoiceEntries(java.lang.String[])>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setExitFadeDuration(int)>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>
<android.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.NotificationManager: int getCurrentInterruptionFilter()>
<android.telecom.GatewayInfo: boolean isEmpty()>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.String getBasePackageName()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<android.preference.PreferenceActivity: void onStop()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>
<android.view.Window: void setLayout(int,int)>
<com.android.systemui.statusbar.ExpandableView: void setDark(boolean,boolean,long)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[],int,int)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListenersIfNecessary()>
<android.view.Display: int getFlags()>
<com.android.settingslib.RestrictedPreference: void useAdminDisabledSummary(boolean)>
<com.android.server.firewall.IntentFirewall.AMSInterface: java.lang.Object getAMSLock()>
<android.os.Parcel: void writeDoubleArray(double[])>
<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void updateHeaderForExpansion(boolean)>
<com.android.tools.layoutlib.create.CreateInfo: java.lang.String[] getDelegateMethods()>
<android.content.IntentFilter: void addDataType(java.lang.String)>
<android.os.Debug: void stopAllocCounting()>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<com.android.systemui.statusbar.phone.ManagedProfileController: void <init>(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.location.provider.ActivityRecognitionProviderClient: android.os.IBinder getBinder()>
<android.widget.HeaderViewListAdapter: long getItemId(int)>
<com.android.server.pm.IntentFilterVerificationState: void addFilter(android.content.pm.PackageParser.ActivityIntentInfo)>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter build()>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUpdateState(com.android.systemui.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.am.ActivityManagerService: void showLockTaskEscapeMessage(android.os.IBinder)>
<android.renderscript.Matrix4f: float get(int,int)>
<android.app.WallpaperManager: int getWallpaperId(int)>
<android.view.Display: java.lang.String getName()>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.mtp.MtpDocumentsProvider: java.lang.String getDeviceDocumentId(int)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void setGearAlpha(float)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,float[],int)>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>
<com.android.systemui.recents.views.TaskStackView: void setTasks(com.android.systemui.recents.model.TaskStack,boolean)>
<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>
<android.media.AudioTrack: int getChannelCount()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.media.MediaDescription: int describeContents()>
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>
<android.renderscript.Element: android.renderscript.Element U32_4(android.renderscript.RenderScript)>
<android.hardware.Camera.ErrorCallback: void onError(int,android.hardware.Camera)>
<android.hardware.radio.RadioManager.ProgramInfo: boolean equals(java.lang.Object)>
<android.widget.CalendarView.CalendarViewDelegate: long getMaxDate()>
<android.webkit.WebView: void flingScroll(int,int)>
<android.os.FileObserver: void finalize()>
<android.bluetooth.BluetoothGatt: boolean readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)>
<android.content.Context: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent)>
<android.renderscript.Allocation: void copyFromUnchecked(java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glDrawTexiOES(int,int,int,int,int)>
<com.android.server.pm.UserManagerService: int getUserHandle(int)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getAudioTurnedOnTimer()>
<com.android.systemui.recents.tv.views.TaskCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.location.GnssMeasurementsEvent: android.location.GnssClock getClock()>
<android.renderscript.Allocation: void setSurface(android.view.Surface)>
<com.android.server.trust.TrustManagerService: void resetAgent(android.content.ComponentName,int)>
<android.mtp.MtpEvent: int getObjectFormatCode()>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>
<android.webkit.WebView: void clearHistory()>
<com.android.systemui.statusbar.phone.ScrimController: void setScrimBehindValues(float,float)>
<android.webkit.WebView: java.lang.String getOriginalUrl()>
<com.android.server.notification.NotificationManagerService.DumpFilter: com.android.server.notification.NotificationManagerService.DumpFilter parseFromArguments(java.lang.String[])>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int)>
<android.opengl.GLES10: void glClearStencil(int)>
<android.view.IWindowManagerImpl: void setForcedDisplaySize(int,int,int)>
<android.view.WindowInsets: boolean hasStableInsets()>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.view.ActionMode: void setType(int)>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>
<com.android.server.notification.ZenLog: void traceExitCondition(android.service.notification.Condition,android.content.ComponentName,java.lang.String)>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>
<android.media.RemoteControlClient.MetadataEditor: void clear()>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void addHandler(com.android.ddmlib.ClientData.IHprofDumpHandler)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.lang.String)>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.os.BatteryStats.Uid: long getUserCpuTimeUs(int)>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.net.NetworkStatsHistory.DataStreamUtils: long readVarLong(java.io.DataInputStream)>
<android.media.midi.MidiDeviceService: void onCreate()>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>
<android.service.quicksettings.TileService: void onTileAdded()>
<com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent: void <init>(int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.AnimateableViewBounds: void getOutline(android.view.View,android.graphics.Outline)>
<android.webkit.WebView: int getProgress()>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onReady(android.hardware.camera2.CameraCaptureSession)>
<com.android.systemui.statusbar.BaseStatusBar: void updateVisibleToUser()>
<android.content.Loader: void <init>(android.content.Context)>
<android.transition.TransitionValues: int hashCode()>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setInsertionMarkerLocation(float,float,float,float,int)>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>
<android.print.PrintJob: boolean isStarted()>
<android.widget.Chronometer: void start()>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(long)>
<com.android.systemui.recents.views.TaskView: void onStartLaunchTargetEnterAnimation(com.android.systemui.recents.views.TaskViewTransform,int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.widget.TextView: int getMaxHeight()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setFadingOut(boolean)>
<com.android.hotspot2.osu.SPVerifier: void <init>(com.android.hotspot2.osu.OSUInfo)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>
<com.android.server.net.NetworkPolicyManagerService: void snoozeLimit(android.net.NetworkTemplate)>
<android.opengl.GLES10: void glClearDepthx(int)>
<android.printservice.PrintJob: boolean equals(java.lang.Object)>
<com.android.server.utils.ManagedApplicationService.PendingEvent: void runEvent(android.os.IInterface)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.systemui.settings.BrightnessController: void addStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<android.filterpacks.imageproc.DuotoneFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.hotspot2.omadm.OMAParser: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.graphics.drawable.AnimationDrawable: void <init>()>
<com.android.server.pm.ProtectedPackages: boolean isPackageDataProtected(int,java.lang.String)>
<android.widget.EditText: void <init>(android.content.Context)>
<android.preference.MultiSelectListPreference: void onDialogClosed(boolean)>
<android.service.chooser.ChooserTarget: android.os.Bundle getIntentExtras()>
<android.view.MotionEvent.PointerProperties: void <init>(android.view.MotionEvent.PointerProperties)>
<com.android.settingslib.drawer.UserAdapter: long getItemId(int)>
<android.renderscript.Matrix2f: void loadRotate(float)>
<android.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(android.net.wifi.p2p.WifiP2pDeviceList)>
<com.android.keyguard.KeyguardDisplayManager: void hide()>
<android.view.WindowManagerPolicy.WindowState: boolean getGivenInsetsPendingLw()>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.statementservice.DirectStatementService: void onDestroy()>
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>
<android.renderscript.Script: float getVarF(int)>
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder,boolean)>
<android.view.TextureView: void setForeground(android.graphics.drawable.Drawable)>
<android.media.Rating: android.media.Rating newStarRating(int,float)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onPowerSaveChanged(boolean)>
<com.android.server.BatteryService: void <init>(android.content.Context)>
<android.database.Cursor: boolean move(int)>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)>
<android.util.Spline.LinearSpline: void <init>(float[],float[])>
<android.os.BaseBundle: int getInt(java.lang.String,int)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onTrimMemory(int)>
<com.android.keyguard.KeyguardSecurityCallback: boolean isVerifyUnlockOnly()>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>
<com.android.hotspot2.Utils: java.lang.String toHMS(long)>
<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener: void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>
<android.content.Context: android.content.Context createDeviceEncryptedStorageContext()>
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()>
<android.widget.ViewFlipper: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: void writeToParcel(android.os.Parcel,int)>
<android.widget.TableLayout: void <init>(android.content.Context)>
<android.print.PrintAttributes: android.print.PrintAttributes.Margins getMinMargins()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributePrefix(int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onDisconnected(android.hardware.camera2.CameraDevice)>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startNewStackScrollAnimation(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.preference.RingtonePreference: void setRingtoneType(int)>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onShowPipMenu()>
<android.telecom.Call.Callback: void onVideoCallChanged(android.telecom.Call,android.telecom.InCallService.VideoCall)>
<android.bluetooth.BluetoothGattCharacteristic: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartScaleY()>
<android.ddm.DdmHandleThread: void register()>
<android.filterpacks.imageproc.CrossProcessFilter: void <init>(java.lang.String)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addSignature(java.lang.String)>
<android.widget.GridView: void onMeasure(int,int)>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>
<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<com.google.android.gles_jni.GLImpl: void glTexParameteri(int,int,int)>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()>
<android.widget.TextClock: void onVisibilityAggregated(boolean)>
<android.media.soundtrigger.SoundTriggerDetector.EventPayload: android.media.AudioFormat getCaptureAudioFormat()>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>
<com.android.documentsui.RootsFragment: void onActivityCreated(android.os.Bundle)>
<com.android.documentsui.dirlist.DocumentsAdapter.Environment: boolean isDocumentEnabled(java.lang.String,int)>
<com.android.gallery3d.util.IntArray: int[] toArray(int[])>
<android.hardware.usb.UsbRequest: void close()>
<android.os.MessageQueue.OnFileDescriptorEventListener: int onFileDescriptorEvents(java.io.FileDescriptor,int)>
<com.android.documentsui.ListItem: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getHostsString()>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>
<android.service.media.MediaBrowserService: void onCreate()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.Record: java.lang.String toJson()>
<android.net.wifi.WifiScanner.ScanData: void <init>(int,int,android.net.wifi.ScanResult[])>
<com.google.android.gles_jni.GLImpl: void glPolygonOffsetx(int,int)>
<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isDiscovering()>
<android.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)>
<android.hardware.Camera.Parameters: void setPreviewSize(int,int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: void reportDropResult(android.view.IWindow,boolean)>
<android.view.Display.Mode: int getModeId()>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>
<android.view.textservice.SpellCheckerSubtype: boolean equals(java.lang.Object)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<android.print.PrintJobInfo: java.lang.String toString()>
<com.android.layoutlib.bridge.android.AndroidLocale: java.lang.String getScript(java.util.Locale)>
<com.android.server.am.ActivityManagerService: void moveTaskToFront(int,int,android.os.Bundle)>
<android.media.RemoteController: android.media.RemoteController.MetadataEditor editMetadata()>
<android.util.NoSuchPropertyException: void <init>(java.lang.String)>
<android.util.SparseIntArray: void delete(int)>
<android.app.FragmentManagerImpl: void dispatchResume()>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(int[],int)>
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
<android.transition.ChangeClipBounds: void <init>()>
<android.telecom.Connection: void setConferenceableConnections(java.util.List)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setDiscovering(boolean)>
<android.hardware.hdmi.HdmiControlManager.VendorCommandListener: void onReceived(int,int,byte[],boolean)>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersRemoved(java.util.List)>
<com.android.server.notification.ManagedServices: boolean checkType(android.os.IInterface)>
<android.os.Debug: void resetThreadExternalAllocCount()>
<com.android.systemui.qs.tiles.AirplaneModeTile: void setListening(boolean)>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>
<com.android.systemui.qs.QSPanel: void showDetail(boolean,com.android.systemui.qs.QSPanel.Record)>
<com.android.systemui.statusbar.phone.QSTileHost: void removeTile(android.content.ComponentName)>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>
<android.net.NetworkInfo: int getType()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void tearDown(android.view.Surface)>
<android.provider.ContactsContract.RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void verifyUnlock(android.view.WindowManagerPolicy.OnKeyguardExitResult)>
<android.net.ip.IpManager.Callback: void onQuit()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.DoubleDigitManager.CallBack: boolean twoDigitsFinal(int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName)>
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>
<com.android.server.statusbar.StatusBarManagerInternal: void notificationLightOff()>
<com.android.systemui.recents.events.activity.DockedTopTaskEvent: void <init>(int,android.graphics.Rect)>
<android.service.notification.NotificationListenerService.RankingMap: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.bluetooth.HidProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.util.Rational: int getDenominator()>
<com.android.systemui.statusbar.SignalClusterView: void setNoSims(boolean)>
<com.android.server.wm.TaskStack: boolean hasMovementAnimations()>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnBitmapCropped(com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler)>
<android.os.health.HealthStats: long getMeasurement(int)>
<com.android.systemui.qs.QSTileView: void <init>(android.content.Context,com.android.systemui.qs.QSIconView)>
<android.app.assist.AssistStructure: int getWindowNodeCount()>
<android.view.Window: int getFeatures()>
<android.widget.PopupWindow: void dismiss()>
<com.android.server.am.ActivityManagerService: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>
<com.android.systemui.statusbar.policy.RemoteInputView: com.android.systemui.statusbar.policy.RemoteInputView inflate(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.NotificationData.Entry,com.android.systemui.statusbar.RemoteInputController)>
<com.android.systemui.statusbar.DismissView: boolean isButtonVisible()>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>
<android.app.admin.DevicePolicyManager: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>
<com.android.anqp.eap.AuthParam: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<android.animation.Keyframe: java.lang.Object getValue()>
<android.graphics.Matrix_Delegate: java.awt.geom.AffineTransform getAffineTransform(android.graphics.Matrix)>
<android.media.ExifInterface: void <init>(java.lang.String)>
<android.media.AudioRecordingConfiguration: int getClientAudioSessionId()>
<com.google.android.gles_jni.GLImpl: void glClearDepthx(int)>
<android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>
<com.android.server.search.SearchManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onUnlockHintStarted()>
<com.android.server.pm.UserManagerService: void onBeforeStartUser(int)>
<com.android.systemui.tv.pip.PipManager: com.android.systemui.tv.pip.PipManager getInstance()>
<android.view.animation.RotateAnimation: void <init>(float,float)>
<com.android.systemui.qs.external.TileLifecycleManager: android.os.IBinder asBinder()>
<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>
<com.android.systemui.AutoReinflateContainer: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.graphics.Paint: float getTextSize()>
<com.android.systemui.statusbar.ExpandableOutlineView: void setActualHeight(int,boolean)>
<com.android.settingslib.accounts.AuthenticatorHelper: boolean hasAccountPreferences(java.lang.String)>
<android.util.FloatMath: float floor(float)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: boolean equals(java.lang.Object)>
<com.android.settingslib.drawer.UserAdapter: int getItemViewType(int)>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<com.android.documentsui.DocumentsActivity: void onPickRequested(com.android.documentsui.model.DocumentInfo)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferTexture2DOES(int,int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,int[],int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.ExpandableView getViewBeforeView(com.android.systemui.statusbar.ExpandableView)>
<android.view.TextureView: void setLayerPaint(android.graphics.Paint)>
<android.service.notification.StatusBarNotification: void setOverrideGroupKey(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isExpanded(boolean)>
<android.print.PrintJobInfo.Builder: void setPages(android.print.PageRange[])>
<com.android.server.audio.AudioService.VolumeStreamState: java.lang.String getSettingNameForDevice(int)>
<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<android.app.Fragment: void startActivity(android.content.Intent)>
<javax.microedition.khronos.opengles.GL10: void glColorMask(boolean,boolean,boolean,boolean)>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>()>
<android.telecom.Connection: android.telecom.DisconnectCause getDisconnectCause()>
<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>
<com.android.server.net.NetworkStatsRecorder: void <init>()>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.animation.AnimationHandler.AnimationFrameCallback: void commitAnimationFrame(long)>
<com.android.systemui.statusbar.phone.ManagedProfileController.Callback: void onManagedProfileRemoved()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: void <init>(long,java.lang.String,java.lang.String)>
<android.provider.Settings.Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.view.animation.Animation: void initialize(int,int,int,int)>
<com.android.systemui.recents.views.TaskStackViewScroller: float getStackScroll()>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<android.hardware.camera2.params.RggbChannelVector: int hashCode()>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder stereoReset(boolean)>
<android.os.BatteryStats.Uid.Pkg.Serv: long getStartTime(long,int)>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>
<android.media.tv.TvView: void reset()>
<android.app.WallpaperInfo: java.lang.CharSequence loadContextDescription(android.content.pm.PackageManager)>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onDestroy()>
<com.android.systemui.qs.tiles.CellularTile: android.content.Intent getLongClickIntent()>
<android.util.ArrayMap: boolean containsAll(java.util.Collection)>
<android.ext.services.notification.Ranker: void onListenerConnected()>
<android.security.keystore.KeyInfo: java.util.Date getKeyValidityForOriginationEnd()>
<android.hardware.ConsumerIrManager: void transmit(int,int[])>
<android.content.Intent: int filterHashCode()>
<android.hardware.Camera.Parameters: void setAutoExposureLock(boolean)>
<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(java.lang.String)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context)>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>
<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>
<com.android.systemui.qs.QSTile: boolean isAvailable()>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>
<android.gesture.GestureOverlayView: void setOrientation(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.StatusBarWindowView getStatusBarWindow()>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<android.view.Window: void setResizingCaptionDrawable(android.graphics.drawable.Drawable)>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>
<android.text.Layout: int getParagraphLeft(int)>
<android.telecom.Connection: void onAbort()>
<com.android.server.am.BatteryStatsService: android.os.ParcelFileDescriptor getStatisticsStream()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void decrement()>
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.text.method.DigitsKeyListener: void <init>()>
<com.android.settingslib.bluetooth.A2dpProfile: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicBLAS: void DSYR2K(int,int,double,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.app.FragmentHostCallback: boolean onHasWindowAnimations()>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.android.server.pm.PackageManagerService: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>
<com.android.hotspot2.asn1.Asn1Octets: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PanelView: float getCannedFlingDurationFactor()>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceConnected()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor clear()>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>
<com.android.layoutlib.bridge.android.BridgeContext: int checkUriPermission(android.net.Uri,int,int,int)>
<com.android.hotspot2.asn1.Asn1Object: boolean isConstructed()>
<com.android.server.net.NetworkPolicyManagerService: int[] getUidsWithPolicy(int)>
<com.android.systemui.qs.QSPanel.QSTileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>
<com.android.documentsui.CreateDirectoryFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.widget.TimePicker.TimePickerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.hardware.camera2.legacy.GLThreadManager: void ignoreNewFrames()>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)>
<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)>
<android.drm.DrmManagerClient.OnInfoListener: void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent)>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap)>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>
<com.android.systemui.tuner.NavBarTuner: void onTuningChanged(java.lang.String,java.lang.String)>
<android.view.WindowCallback: void onContentChanged()>
<android.graphics.Matrix: boolean postRotate(float)>
<com.android.server.LockGuard: void installLock(java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.policy.SignalController: void recordLastState()>
<android.location.Location: double getLongitude()>
<android.graphics.drawable.GradientDrawable: float[] getCornerRadii()>
<android.service.voice.VoiceInteractionSessionService: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>
<android.widget.RatingBar: void setIsIndicator(boolean)>
<com.android.server.fingerprint.ClientMonitor: int getTargetUserId()>
<android.app.admin.DevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.qs.PagedTileLayout: void setCurrentItem(int,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm.StackState: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.StackState getStackStateForStack(com.android.systemui.recents.model.TaskStack)>
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>
<com.android.hotspot2.osu.commands.ClientCertInfo: boolean doesAcceptProviderCerts()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getTarget()>
<android.app.FragmentManagerState: void <init>(android.os.Parcel)>
<com.android.server.InputMethodManagerService: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<android.speech.tts.SynthesisCallback: int start(int,int,int)>
<android.print.PrintJobInfo.Builder: void setAttributes(android.print.PrintAttributes)>
<android.animation.ObjectAnimator: void setFloatValues(float[])>
<android.widget.CursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<com.android.server.usage.AppIdleHistory: void dumpHistory(com.android.internal.util.IndentingPrintWriter,int)>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.FlashlightController getFlashlightController()>
<android.hardware.camera2.params.StreamConfigurationMap: boolean equals(java.lang.Object)>
<android.view.AttachInfo_Accessor: void setAttachInfo(android.view.View)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.opengl.GLES32: void glDebugMessageControl(int,int,int,int,int[],int,boolean)>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.opengl.GLES20: void glClear(int)>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.policy.NextAlarmController: void addStateChangedCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.Result removeChild(android.view.View,com.android.ide.common.rendering.api.IAnimationListener)>
<android.net.Uri: java.lang.String getPath()>
<android.content.RestrictionEntry: void setDescription(java.lang.String)>
<com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener: void onUnlockMethodStateChanged()>
<android.renderscript.Allocation: void copyTo(short[])>
<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.hardware.Camera.Parameters: java.util.List getSupportedColorEffects()>
<com.android.systemui.qs.QSPanel.Callback: void onScanStateChanged(boolean)>
<com.android.server.usb.UsbDeviceManager: void allowUsbDebugging(boolean,java.lang.String)>
<android.net.wifi.RttManager.RttListener: void onAborted()>
<com.android.location.provider.FusedProvider: android.os.IBinder getBinder()>
<com.android.server.pm.AbstractStatsBase: void writeInternal(java.lang.Object)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>
<android.app.VoiceInteractor.PickOptionRequest.Option: int countSynonyms()>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onHeightChanged(com.android.systemui.statusbar.ExpandableView,boolean)>
<com.android.server.media.MediaRouterService: void monitor()>
<android.media.MediaMetadata: long getLong(java.lang.String)>
<com.android.server.InputMethodManagerService.Lifecycle: void <init>(android.content.Context)>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult.Key)>
<android.hardware.radio.RadioManager.ProgramInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.server.print.RemotePrintServiceRecommendationService.RemotePrintServiceRecommendationServiceCallbacks: void onPrintServiceRecommendationsUpdated(java.util.List)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBadgeDiameter(float)>
<com.android.layoutlib.bridge.bars.ThemePreviewNavigationBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.hotspot2.Utils: int fromHex(char,boolean)>
<android.view.WindowManagerInternal.AppTransitionListener: void onAppTransitionCancelledLocked()>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>
<com.android.systemui.statusbar.notification.FakeShadowView: void setFakeShadowTranslationZ(float,float,int,int)>
<android.hardware.Camera.Parameters: java.lang.String flatten()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getStorageVolume(java.io.File)>
<android.widget.CalendarView.CalendarViewDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.app.Instrumentation: boolean isProfiling()>
<android.widget.CalendarView.CalendarViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>
<android.database.AbstractCursor: boolean requery()>
<android.print.PrintDocumentInfo: void writeToParcel(android.os.Parcel,int)>
<android.util.Pools.Pool: boolean release(java.lang.Object)>
<android.widget.Toast: void setDuration(int)>
<android.media.MediaDescription: android.net.Uri getIconUri()>
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)>
<android.graphics.Matrix: boolean postRotate(float,float,float)>
<android.app.RemoteInput: int describeContents()>
<android.hardware.radio.RadioManager.BandConfig: int getUpperLimit()>
<com.android.systemui.volume.ZenModePanel: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<android.media.Rating: android.media.Rating newPercentageRating(float)>
<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.documentsui.FilteringCursorWrapper: android.os.Bundle getExtras()>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.app.Activity: void postponeEnterTransition()>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>
<com.android.systemui.doze.DozeService: void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.am.AppTimeTracker: void dumpWithHeader(java.io.PrintWriter,java.lang.String,boolean)>
<com.android.server.am.BatteryStatsService: void noteWifiMulticastDisabled(int)>
<android.os.health.HealthStats: int getMeasurementKeyCount()>
<com.android.commands.dpm.Dpm: void onShowUsage(java.io.PrintStream)>
<com.android.systemui.statusbar.car.CarBatteryController: void addBatteryViewHandler(com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler)>
<android.telephony.IccOpenLogicalChannelResponse: byte[] getSelectResponse()>
<android.app.backup.RestoreObserver: void restoreFinished(int)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setDrawable(android.graphics.drawable.Drawable)>
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<com.android.server.notification.ManagedServices.UserProfiles: boolean isCurrentProfile(int)>
<android.location.LocationManager: void unregisterGnssNavigationMessageCallback(android.location.GnssNavigationMessageEvent.Callback)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.VolumeProvider: int getCurrentVolume()>
<android.graphics.PointF: int hashCode()>
<com.android.systemui.statusbar.StackScrollerDecorView: void performVisibilityAnimation(boolean)>
<android.view.ActionMode.Callback: void onDestroyActionMode(android.view.ActionMode)>
<android.view.Window: void setCallback(android.view.Window.Callback)>
<com.android.systemui.statusbar.BaseStatusBar.H: void handleMessage(android.os.Message)>
<android.view.View.OnClickListener: void onClick(android.view.View)>
<android.view.accessibility.AccessibilityRecord: boolean isPassword()>
<android.widget.TimePicker.TimePickerDelegate: void setEnabled(boolean)>
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()>
<com.android.server.am.BatteryStatsService: void noteSyncStart(java.lang.String,int)>
<android.service.notification.ZenModeConfig.XmlV1: android.service.notification.ZenModeConfig.XmlV1 readXml(org.xmlpull.v1.XmlPullParser)>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>
<android.content.pm.PackageParser.Provider: void setPackageName(java.lang.String)>
<com.android.settingslib.Utils: java.lang.String getBatteryStatus(android.content.res.Resources,android.content.Intent)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setHighlightColor(int)>
<android.text.DynamicLayout: int getLineTop(int)>
<com.android.documentsui.FilesActivityPerfTest: void testFilesListedPerformance()>
<android.telecom.DisconnectCause: boolean equals(java.lang.Object)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>
<android.view.View: boolean isDrawingCacheEnabled()>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>(java.lang.String)>
<com.android.location.provider.GmsFusedBatchOptions: void setFlag(int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void setTaskOverridesForInitialState(com.android.systemui.recents.model.TaskStack,boolean)>
<android.hardware.camera2.legacy.LegacyResultMapper: android.hardware.camera2.impl.CameraMetadataNative cachedConvertResultMetadata(android.hardware.camera2.legacy.LegacyRequest,long)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void setPowerSaveMode(boolean)>
<android.app.ActivityManagerProxy: void takePersistableUriPermission(android.net.Uri,int,int)>
<com.android.wallpapercropper.WallpaperCropActivity: void setWallpaper(java.lang.String,boolean)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
<com.android.settingslib.drawable.UserIconDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
<com.android.server.am.ActivityManagerService: boolean removeTask(int)>
<android.text.Layout: android.text.Layout.Alignment getParagraphAlignment(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,float[],int)>
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal.OnCancelListener)>
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(long)>
<com.android.hotspot2.omadm.MultiValueMap: java.lang.Object remove(java.lang.Object)>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingAborted()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfInputMethodDisallowed(android.content.Context,java.lang.String,int)>
<android.content.pm.PackageStats: java.lang.String toString()>
<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>
<android.service.dreams.DreamService: void setContentView(int)>
<android.service.notification.NotificationListenerService.Ranking: java.lang.CharSequence getImportanceExplanation()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.server.audio.AudioService.VolumeStreamState: int getMaxIndex()>
<android.inputmethodservice.InputMethodService: void onFinishInput()>
<android.media.audiofx.Visualizer: int setEnabled(boolean)>
<android.renderscript.Allocation: void resize(int)>
<com.android.systemui.recents.ScreenPinningRequest: void showPrompt(int,boolean)>
<android.print.PageRange: void <init>(int,int)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetRight(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getDeviceSmallestWidth()>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void considerName(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.settingslib.RestrictedPreference: void onAttachedToHierarchy(android.support.v7.preference.PreferenceManager)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onAttachedToWindow()>
<com.android.server.InputMethodManagerService: int getInputMethodWindowVisibleHeight()>
<android.graphics.drawable.RotateDrawable: void setFromDegrees(float)>
<com.android.systemui.recents.model.TaskGrouping: com.android.systemui.recents.model.Task.TaskKey getNextTaskInGroup(com.android.systemui.recents.model.Task)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<android.widget.TextView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getAffordanceFalsingFactor()>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>
<android.view.Window: android.transition.Transition getReturnTransition()>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAffordanceLaunchEnded()>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityForOriginationEnd(java.util.Date)>
<android.app.admin.DevicePolicyManager: int getPermissionPolicy(android.content.ComponentName)>
<android.content.Intent: void readFromParcel(android.os.Parcel)>
<android.view.ShadowPainter: java.awt.image.BufferedImage createDropShadow(java.awt.image.BufferedImage,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setLaunchTransitionEndRunnable(java.lang.Runnable)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int hashCode()>
<com.android.server.notification.NotificationManagerInternal: void enqueueNotification(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[],int)>
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)>
<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>
<com.android.providers.settings.SettingsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.IWindowManagerImpl: void closeSystemDialogs(java.lang.String)>
<com.android.systemui.statusbar.StackScrollerDecorView: void performAddAnimation(long,long)>
<com.android.server.connectivity.NetworkAgentInfo.LingerTimer: int compareTo(com.android.server.connectivity.NetworkAgentInfo.LingerTimer)>
<com.android.systemui.classifier.FalsingLog: void i(java.lang.String,java.lang.String)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupType(int)>
<android.app.admin.DevicePolicyManager: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>
<com.android.server.accessibility.EventStreamTransformation: void clearEvents(int)>
<com.android.systemui.tuner.ClockPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>
<android.widget.RemoteViewsService.RemoteViewsFactory: boolean hasStableIds()>
<com.android.documentsui.RootsCache: boolean isIconUniqueBlocking(com.android.documentsui.model.RootInfo)>
<android.app.VoiceInteractor.Request: java.lang.String toString()>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: boolean onBeforeItemStateChange(java.lang.String,boolean)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void setNewStackTasks(java.util.List)>
<com.android.systemui.qs.tiles.CellularTile: boolean isAvailable()>
<android.widget.CheckedTextView: android.graphics.PorterDuff.Mode getCheckMarkTintMode()>
<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>
<com.android.smspush.WapPushManager: boolean isDataExist(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.statusbar.StatusBarManagerInternal: void cancelPreloadRecentApps()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.am.BatteryStatsService: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>
<com.android.hotspot2.omadm.NodeAttribute: java.lang.String getType()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.impl.CameraMetadataNative getCameraInfo()>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.car.UserGridView: void init(com.android.systemui.statusbar.phone.PhoneStatusBar,com.android.systemui.statusbar.policy.UserSwitcherController)>
<android.media.AudioRouting: android.media.AudioDeviceInfo getPreferredDevice()>
<android.app.Notification.DecoratedMediaCustomViewStyle: void <init>()>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID,java.lang.String)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getZen()>
<android.printservice.PrintJob: boolean hasAdvancedOption(java.lang.String)>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>
<com.android.hotspot2.pps.DomainMatcher: boolean arg2SubdomainOfArg1(java.util.List,java.util.List)>
<com.android.documentsui.dirlist.DirectoryFragment: void onLoaderReset(android.content.Loader)>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)>
<android.os.Parcel: void readException()>
<android.view.View: float getRotationY()>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingTextInCodePoints(int,int)>
<android.service.notification.Condition: android.net.Uri.Builder newId(android.content.Context)>
<android.os.Message: android.os.Message obtain()>
<com.android.server.pm.UserManagerService: boolean trySetQuietModeDisabled(int,android.content.IntentSender)>
<com.android.systemui.keyguard.KeyguardService: void onCreate()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.hardware.Camera.ShutterCallback: void onShutter()>
<android.graphics.CornerPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)>
<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>
<com.android.systemui.qs.QSPanel: void onTilesChanged()>
<com.android.server.am.ActivityManagerService: void setVoiceKeepAwake(android.service.voice.IVoiceInteractionSession,boolean)>
<com.android.hotspot2.osu.SOAPParser: com.android.hotspot2.omadm.XMLNode getResponseNode()>
<com.android.systemui.recents.model.Task: boolean equals(java.lang.Object)>
<android.service.quicksettings.TileService: void requestListeningState(android.content.Context,android.content.ComponentName)>
<com.android.gallery3d.glrenderer.UploadedTexture: void resetUploadLimit()>
<android.widget.TimePicker.TimePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.IWindowManagerImpl: void setForcedDisplayDensityForUser(int,int,int)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<com.android.systemui.settings.CurrentUserTracker: int getCurrentUserId()>
<android.telecom.ParcelableCallAnalytics.AnalyticsEvent: long getTimeSinceLastEvent()>
<android.text.style.AbsoluteSizeSpan: int describeContents()>
<com.android.settingslib.animation.AppearAnimationUtils: android.view.animation.Interpolator getInterpolator()>
<com.android.printspooler.widget.PrintContentView: void requestDisallowInterceptTouchEvent(boolean)>
<android.widget.TabHost.OnTabChangeListener: void onTabChanged(java.lang.String)>
<android.content.ClipData: void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData.Item)>
<android.widget.RadioGroup: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.statusbar.phone.DozeParameters.IntInOutMatcher: void <init>(java.lang.String)>
<android.graphics.Paint_Delegate: android.graphics.MaskFilter_Delegate getMaskFilter()>
<com.android.gallery3d.common.Utils: int clamp(int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>
<com.android.server.notification.ConditionProviders.Callback: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void clearProfileConnectionState()>
<android.media.MediaPlayer: void stop()>
<android.animation.Animator: boolean isPaused()>
<com.android.documentsui.model.RootInfo: void reset()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.graphics.Canvas: int save()>
<com.android.commands.uiautomator.DumpCommand: void <init>()>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: java.lang.String toString()>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<android.service.carrier.CarrierMessagingService: void onDownloadMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.content.ContentProvider: boolean isTemporary()>
<android.app.SearchableInfo: int getSuggestThreshold()>
<android.app.WallpaperManager: boolean isSetWallpaperAllowed()>
<android.app.admin.SystemUpdatePolicy: int getPolicyType()>
<android.content.IntentFilter: java.util.Iterator schemeSpecificPartsIterator()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<android.view.View: void setAccessibilityTraversalBefore(int)>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>
<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfig()>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>
<android.net.wifi.WifiScanner.ScanListener: void onFullResult(android.net.wifi.ScanResult)>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<com.android.server.am.BatteryStatsService: void notePhoneSignalStrength(android.telephony.SignalStrength)>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.transition.TransitionPropagation: void captureValues(android.transition.TransitionValues)>
<com.google.android.gles_jni.GLImpl: void glLoadPaletteFromModelViewMatrixOES()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isNetworkLoggingEnabled(android.content.ComponentName)>
<android.view.ViewGroup: void onAttachedToWindow()>
<com.android.systemui.statusbar.BaseStatusBar: void userSwitched(int)>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
<android.graphics.drawable.PictureDrawable: int getOpacity()>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightChanged(boolean)>
<com.android.location.provider.FusedLocationHardware: void requestBatchOfLocations(int)>
<com.android.systemui.assist.AssistOrbView: void animateCircleSize(float,long,long,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isMaxExpandHeightInitialized()>
<android.app.AlarmManager: void setWindow(int,long,long,java.lang.String,android.app.AlarmManager.OnAlarmListener,android.os.Handler)>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<android.bluetooth.le.AdvertiseData: boolean getIncludeDeviceName()>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLES30: void glDeleteSync(long)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.Switch: int getThumbTextPadding()>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.widget.Toolbar: boolean hasExpandedActionView()>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean requestBugreport(android.content.ComponentName)>
<android.os.Looper: void prepareMainLooper()>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: void setPeekSize(int)>
<android.telephony.SubscriptionManager: int getDefaultSmsSubscriptionId()>
<com.android.server.statusbar.StatusBarManagerService: void disable2ForUser(int,android.os.IBinder,java.lang.String,int)>
<android.bluetooth.BluetoothGatt: boolean requestMtu(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<com.android.systemui.statusbar.phone.DozeParameters: void dump(java.io.PrintWriter)>
<android.renderscript.ScriptGroup.Builder: void <init>(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setClickable(boolean)>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>
<com.android.hotspot2.osu.commands.ClientCertInfo: void <init>(com.android.hotspot2.omadm.XMLNode)>
<android.webkit.WebView: void resumeTimers()>
<android.widget.GridView: int getStretchMode()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String getDefaultLayout()>
<android.view.View: void getLocationInWindow(int[])>
<android.view.View.MeasureSpec: java.lang.String toString(int)>
<com.android.fakeoemfeatures.FakeApp: void onCreate()>
<android.text.method.MovementMethod: boolean canSelectArbitrarily()>
<android.renderscript.Matrix4f: void loadIdentity()>
<android.app.FragmentHostCallback: int onGetWindowAnimations()>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isRecentsActivityVisible()>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>
<android.graphics.Typeface: void finalize()>
<android.widget.AbsListView: void setSelectionFromTop(int,int)>
<android.graphics.Canvas: void restore()>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>
<com.android.systemui.recents.tv.views.RecentsTvTransitionHelper: void <init>(android.content.Context,android.os.Handler)>
<com.android.hotspot2.asn1.Asn1Oid: void <init>(java.lang.Long[])>
<com.android.systemui.egg.MLand: boolean isGamePad(android.view.InputDevice)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<android.hardware.Camera.Parameters: java.util.List getSupportedWhiteBalance()>
<android.app.UiAutomation: java.util.List getWindows()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void showNotificationIconArea(boolean)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setHours(int)>
<android.location.SettingInjectorService: android.os.IBinder onBind(android.content.Intent)>
<android.preference.PreferenceActivity.Header: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: int getCheckedItemPosition()>
<android.media.RemoteDisplayState.RemoteDisplayInfo: java.lang.String toString()>
<com.android.systemui.qs.QSTile: void removeCallback(com.android.systemui.qs.QSTile.Callback)>
<android.database.CursorJoiner: void remove()>
<com.android.systemui.qs.tiles.IntentTile: void handleLongClick()>
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>
<android.telephony.TelephonyManager: int getPhoneCount()>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.Image: int getWidth()>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>
<android.util.ArrayMap: boolean equals(java.lang.Object)>
<android.content.pm.InstrumentationInfo: java.lang.String toString()>
<com.android.server.AppOpsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setHideSensitiveForIntrinsicHeight(boolean)>
<android.webkit.CookieManager: boolean hasCookies()>
<com.android.settingslib.drawable.UserIconDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.usage.AppIdleHistory: void dump(com.android.internal.util.IndentingPrintWriter,int)>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>
<com.android.settingslib.bluetooth.MapProfile: void finalize()>
<android.os.storage.IMountServiceListener.Stub: android.os.storage.IMountServiceListener asInterface(android.os.IBinder)>
<android.text.Layout: int getLineAscent(int)>
<com.android.systemui.tuner.ClipboardView: void startPocketDrag()>
<android.filterfw.core.StopWatchMap: void stop(java.lang.String)>
<android.view.Display: int getOrientation()>
<com.android.systemui.volume.VolumeDialog: void setStreamImportant(int,boolean)>
<com.android.server.tv.TvRemoteService: void <init>(android.content.Context)>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean isStereoSupported()>
<com.android.server.SensorNotificationService: void onStart()>
<android.graphics.Matrix: boolean postScale(float,float)>
<android.graphics.Path: void transform(android.graphics.Matrix)>
<com.android.systemui.statusbar.notification.ImageTransformState: com.android.systemui.statusbar.notification.ImageTransformState obtain()>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>
<com.android.systemui.recents.model.TaskStack: void removeAllTasks()>
<android.content.pm.PackageParser.Activity: java.lang.String toString()>
<android.media.midi.MidiDevice: java.lang.String toString()>
<com.android.server.am.CompatModeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>
<com.android.server.am.CompatModePackages: void setFrontActivityAskCompatModeLocked(boolean)>
<com.android.systemui.recents.views.TaskStackView: void getCurrentTaskTransforms(java.util.ArrayList,java.util.ArrayList)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getDataUsageInfo()>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void removePendingHideExpandedRunnables()>
<com.android.hotspot2.asn1.Asn1String: java.lang.String getString()>
<android.content.ClipDescription: java.lang.CharSequence getLabel()>
<android.content.ContentProvider: void setReadPermission(java.lang.String)>
<android.media.PlaybackParams: android.media.PlaybackParams setSpeed(float)>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getModuleProperties()>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.app.PendingIntent: java.lang.String toString()>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getIdAttribute()>
<android.webkit.WebViewProvider.ViewDelegate: boolean onDragEvent(android.view.DragEvent)>
<android.widget.AdapterView.OnItemSelectedListener: void onNothingSelected(android.widget.AdapterView)>
<com.android.server.notification.ScheduleConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>
<android.animation.LayoutTransition: void setStartDelay(int,long)>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String toString()>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsRenderbufferOES(int)>
<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>
<android.hardware.radio.RadioManager.BandDescriptor: int getUpperLimit()>
<android.media.tv.TvInputService.RecordingSession: void onRelease()>
<android.widget.LinearLayout: void setOrientation(int)>
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>
<android.graphics.Matrix_Delegate: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)>
<com.android.future.usb.UsbAccessory: java.lang.String toString()>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.content.pm.PackageParser.Package: boolean isMatch(int)>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation)>
<android.renderscript.Element: android.renderscript.Element F16(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void setExpanded(boolean)>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.server.am.ActivityManagerService: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void addProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<com.android.systemui.qs.QSTile: void setTileSpec(java.lang.String)>
<android.widget.Spinner: int getBaseline()>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.ListPopupWindow: void setVerticalOffset(int)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.os.BatteryStats.Timer: void logState(android.util.Printer,java.lang.String)>
<com.android.commands.uiautomator.DumpCommand: java.lang.String detailedOptions()>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)>
<android.content.ContentProviderProxy: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<com.android.server.lights.LightsService: void <init>(android.content.Context)>
<com.android.server.policy.EnableAccessibilityController: boolean isAccessibilityEnabled(android.content.Context)>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)>
<com.android.server.location.GeofenceManager: void onProviderDisabled(java.lang.String)>
<android.view.View: void onDrawForeground(android.graphics.Canvas)>
<com.android.systemui.statusbar.stack.AmbientState: boolean isDark()>
<android.util.Size: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate[] getCaCertificates()>
<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>
<android.widget.VideoView: void pause()>
<com.android.systemui.qs.external.CustomTile: android.content.ComponentName getComponentFromSpec(java.lang.String)>
<android.media.Image: void setTimestamp(long)>
<com.android.systemui.doze.DozeService: void onDreamingStarted()>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setRequiresCharging(boolean)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDisconnect(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent: void <init>(boolean,boolean,com.android.systemui.recents.model.TaskStack)>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)>
<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<android.widget.TextView: float getShadowRadius()>
<com.android.keyguard.PasswordTextView: void deleteLastChar()>
<android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener: void onCrossProfileWidgetProvidersChanged(int,java.util.List)>
<android.telecom.RemoteConnection.Callback: void onAddressChanged(android.telecom.RemoteConnection,android.net.Uri,int)>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,java.lang.CharSequence,int)>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>
<com.android.server.am.ActivityManagerService: void swapDockedAndFullscreenStack()>
<android.widget.ShareActionProvider.OnShareTargetSelectedListener: boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>
<android.transition.ChangeTransform: void setReparentWithOverlay(boolean)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setExtras(android.os.Bundle)>
<android.util.LruCache: int evictionCount()>
<android.media.session.MediaSession.Token: int hashCode()>
<android.text.method.NumberKeyListener: boolean ok(char[],char)>
<android.app.ActivityManagerProxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>
<com.android.systemui.doze.DozeHost: boolean isPowerSaveActive()>
<android.hardware.camera2.impl.CameraDeviceImpl: void createConstrainedHighSpeedCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<com.android.settingslib.datetime.ZoneGetter: java.util.List getZonesList(android.content.Context)>
<android.content.pm.PackageParser.Package: void setApplicationInfoCodePath(java.lang.String)>
<com.android.systemui.qs.QSDetail: boolean isShowingDetail()>
<android.telecom.RemoteConnection: void playDtmfTone(char)>
<android.widget.ViewAnimator: java.lang.CharSequence getAccessibilityClassName()>
<android.content.RestrictionsManager: void requestPermission(java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.tools.layoutlib.java.System_Delegate: long bootTimeMillis()>
<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>
<com.android.settingslib.bluetooth.HidProfile: void finalize()>
<com.android.systemui.statusbar.NotificationContentView: boolean isContentExpandable()>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>
<android.net.ConnectivityManager: void addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>
<com.android.documentsui.model.DocumentInfo: boolean isGridPreferred()>
<com.android.server.policy.PhoneWindowManager: void showGlobalActions()>
<com.android.documentsui.dirlist.DirectoryFragment: com.android.documentsui.dirlist.Model getModel()>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
<com.android.systemui.statusbar.SignalClusterView: void setIconTint(int,float,android.graphics.Rect)>
<android.text.style.ForegroundColorSpan: int describeContents()>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>
<android.net.VpnService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.am.BatteryStatsService: void noteStopGps(int)>
<android.service.voice.VoiceInteractionService: void showSession(android.os.Bundle,int)>
<android.content.pm.LauncherApps.ShortcutQuery: android.content.pm.LauncherApps.ShortcutQuery setActivity(android.content.ComponentName)>
<android.graphics.PorterDuffColorFilter: boolean equals(java.lang.Object)>
<android.view.WindowCallback: boolean onSearchRequested(android.view.SearchEvent)>
<android.renderscript.Byte4: void <init>()>
<android.hardware.usb.UsbDevice: int describeContents()>
<com.android.hotspot2.osu.OSUSocketFactory: java.security.cert.X509Certificate getOSUCertificate(java.net.URL)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter.ViewHolder: void <init>(android.view.View)>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<com.android.server.wallpaper.WallpaperManagerService: void setDimensionHints(int,int,java.lang.String)>
<android.net.wifi.RttManager.RttListener: void onSuccess(android.net.wifi.RttManager.RttResult[])>
<android.content.Context: java.io.File getCacheDir()>
<android.location.Criteria: void setCostAllowed(boolean)>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<android.telecom.RemoteConnection: boolean isVoipAudioMode()>
<com.android.server.pm.Installer: boolean mergeProfiles(int,java.lang.String)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onProximityPositive()>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer.Settings)>
<android.app.assist.AssistContent: void setClipData(android.content.ClipData)>
<android.media.Image: long getTimestamp()>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: void onRemoteAdapterDisconnected()>
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void appTransitionStarting(long,long)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setAttestationChallenge(byte[])>
<com.google.android.gles_jni.GLImpl: void glDrawTexfOES(float,float,float,float,float)>
<com.android.settingslib.bluetooth.HidProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void refreshLayout(int)>
<com.android.hotspot2.Utils: java.lang.String bytesToBingoCard(java.nio.ByteBuffer)>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.media.midi.MidiManager.DeviceCallback: void onDeviceAdded(android.media.midi.MidiDeviceInfo)>
<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.TextView: void setLinksClickable(boolean)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isFaceUnlockRunning()>
<com.android.systemui.statusbar.FlingAnimationUtils: float getMinVelocityPxPerSecond()>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>
<com.android.server.pm.ProcessLoggingHandler: void handleMessage(android.os.Message)>
<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>
<com.android.documentsui.SaveFragment: void setPending(boolean)>
<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>
<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>
<android.telecom.CallAudioState: int getSupportedRouteMask()>
<android.app.Notification.Style: android.app.Notification build()>
<com.android.hotspot2.osu.HTTPHandler: void <init>(java.nio.charset.Charset,com.android.hotspot2.osu.OSUSocketFactory)>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.renderscript.Script: void reduce(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.telecom.Conference: android.telecom.CallAudioState getCallAudioState()>
<android.media.session.PlaybackState: long getPosition()>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>
<android.graphics.Matrix_Delegate: android.graphics.Matrix_Delegate make(java.awt.geom.AffineTransform)>
<android.widget.RatingBar: float getStepSize()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<com.android.server.retaildemo.RetailDemoModeService: void onStart()>
<com.android.tools.layoutlib.create.MethodAdapter: java.lang.Object onInvokeA(java.lang.String,boolean,java.lang.Object)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.widget.Toolbar: void setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)>
<com.android.systemui.analytics.DataCollector: void onScreenOff()>
<android.os.Bundle: void <init>(android.os.Bundle)>
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>
<com.android.systemui.qs.QSTile.Host: com.android.systemui.statusbar.policy.RotationLockController getRotationLockController()>
<android.view.View: void setVerticalScrollbarPosition(int)>
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()>
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>
<com.android.systemui.statusbar.policy.DeadZone: void setDisplayRotation(int)>
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context)>
<android.util.AndroidException: void <init>(java.lang.Exception)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolume()>
<com.android.server.job.controllers.ConnectivityController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<android.content.res.BridgeAssetManager: void setAssetRepository(com.android.ide.common.rendering.api.AssetRepository)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.printspooler.model.RemotePrintDocument: void destroy()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>
<android.content.pm.LauncherApps: java.util.List getActivityList(java.lang.String,android.os.UserHandle)>
<com.android.server.twilight.TwilightState: boolean isNight()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setTrackingHeadsUp(boolean)>
<com.android.printspooler.model.PrintSpoolerService: void updatePrintJobUserConfigurableOptionsNoPersistence(android.print.PrintJobInfo)>
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>
<com.android.preload.actions.DeviceSpecific: void setDevice(com.android.ddmlib.IDevice)>
<android.telecom.ParcelableCallAnalytics.EventTiming: int describeContents()>
<android.database.AbstractCursor: int getPosition()>
<android.animation.PropertyValuesHolder: void setFloatValues(float[])>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onPause()>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>
<android.transition.TransitionSet: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<com.android.server.pm.PackageManagerService: void setHomeActivity(android.content.ComponentName,int)>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean)>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>
<com.android.server.hdmi.HdmiControlService.DevicePollingCallback: void onPollingFinished(java.util.List)>
<android.renderscript.RenderScript.RSMessageHandler: void run()>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>
<android.security.keystore.KeyInfo: boolean isUserAuthenticationRequired()>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.documentsui.RootsCache: void updatePackageAsync(java.lang.String)>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: boolean isHeld()>
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>
<android.graphics.drawable.RotateDrawable: void setPivotY(float)>
<android.util.JsonWriter: void close()>
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>
<android.util.Base64InputStream: void reset()>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,java.nio.IntBuffer)>
<com.android.printspooler.widget.PrintOptionsLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.media.MediaRouter.RouteInfo: int getVolumeMax()>
<android.database.AbstractWindowedCursor: boolean isString(int)>
<android.os.Vibrator: void vibrate(long)>
<com.android.hotspot2.WifiNetworkAdapter: com.android.hotspot2.pps.HomeSP addSP(com.android.hotspot2.omadm.MOTree)>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.os.storage.StorageVolume: boolean isPrimary()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setClient(android.print.IPrintSpoolerClient)>
<android.telecom.InCallService.VideoCall: void setDeviceOrientation(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy.Builder addMix(android.media.audiopolicy.AudioMix)>
<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>
<com.android.layoutlib.bridge.bars.TitleBar: void <init>(com.android.layoutlib.bridge.android.BridgeContext,java.lang.String,int)>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()>
<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>
<com.android.systemui.qs.tiles.DataSaverTile: int getMetricsCategory()>
<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>
<android.filterpacks.imageproc.DocumentaryFilter: void setupPorts()>
<com.android.systemui.statusbar.phone.ScrimController: void <init>(com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,android.view.View)>
<android.opengl.EGL14: boolean eglReleaseThread()>
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>
<android.widget.AbsListView: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.media.AudioTrack: void stop()>
<com.android.location.fused.FusionEngine: void disable()>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>
<com.android.keyguard.KeyguardHostView: void startAppearAnimation()>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.webkit.WebIconDatabase: void close()>
<com.android.systemui.qs.QSTile.Host: android.content.Context getContext()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void createPrintJob(android.print.PrintJobInfo)>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.util.MonthDisplayHelper: int getOffset()>
<android.os.LocaleList: void setDefault(android.os.LocaleList)>
<android.renderscript.ScriptIntrinsicBLAS: void STRSV(int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>
<android.content.pm.PackageParser.Package: void setApplicationInfoSplitResourcePaths(java.lang.String[])>
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onActive(android.hardware.camera2.CameraCaptureSession)>
<com.android.layoutlib.bridge.android.view.WindowManagerImpl: void removeViewImmediate(android.view.View)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: int getIntrinsicWidth()>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>
<android.content.Context: boolean deleteFile(java.lang.String)>
<com.android.server.MountServiceIdler: boolean onStartJob(android.app.job.JobParameters)>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>
<android.app.ActivityManager.TaskDescription: int getPrimaryColor()>
<android.hardware.camera2.marshal.MarshalHelpers: boolean isPrimitiveClass(java.lang.Class)>
<com.android.server.usb.UsbPortManager: void disconnectSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<com.android.hotspot2.AuthMatch: java.lang.String toString(int)>
<com.android.settingslib.WirelessUtils: boolean isAirplaneModeOn(android.content.Context)>
<com.android.systemui.analytics.DataCollector: android.net.Uri reportRejectedTouch()>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean moveDatabaseFrom(android.content.Context,java.lang.String)>
<android.renderscript.ScriptGroup.Builder2: android.renderscript.ScriptGroup.Input addInput()>
<android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>
<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<android.app.NotificationManager.Policy: boolean equals(java.lang.Object)>
<android.telecom.PhoneAccountHandle: java.lang.String getId()>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>
<android.database.sqlite.SQLiteStatement: void execute()>
<android.widget.StackView: void onLayout(boolean,int,int,int,int)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquation(int)>
<com.android.systemui.statusbar.CommandQueue: void removeIcon(java.lang.String)>
<android.media.MediaMuxer: void stop()>
<android.view.View: void setTranslationZ(float)>
<com.android.server.wm.animation.CurvedTranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)>
<android.renderscript.FileA3D.IndexEntry: java.lang.String getName()>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnStart()>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount build()>
<com.android.documentsui.ProviderExecutor: void execute(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<com.android.server.policy.PhoneWindowManager: void enableScreenAfterBoot()>
<com.android.printspooler.model.PrintSpoolerService: void checkAllPrintJobsHandled()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setEmergencyCallsOnly(boolean)>
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getChildrenCount(int)>
<com.android.systemui.recents.Recents: void onBusEvent(com.android.systemui.recents.events.ui.RecentsDrawnEvent)>
<android.webkit.WebView: void goBackOrForward(int)>
<android.mtp.MtpObjectInfo: int getCompressedSize()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceId(java.lang.String)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task)>
<com.android.server.media.MediaRouterService: void unregisterClient(android.media.IMediaRouterClient)>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGrouping()>
<com.android.server.NetworkTimeUpdateService: void <init>(android.content.Context)>
<android.view.Window: void setRestrictedCaptionAreaListener(android.view.Window.OnRestrictedCaptionAreaChangedListener)>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void unbindInput()>
<android.webkit.CacheManager.CacheResult: java.io.InputStream getInputStream()>
<android.content.Context: boolean deleteSharedPreferences(java.lang.String)>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.gles_jni.GLImpl: void glLightf(int,int,float)>
<android.os.Parcel: void writeStringArray(java.lang.String[])>
<android.hardware.camera2.params.RggbChannelVector: float getComponent(int)>
<android.animation.RectEvaluator: void <init>()>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.os.Message: void recycle()>
<android.graphics.drawable.Icon: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardSimPukView: int getPromtReasonStringRes(int)>
<android.app.Notification.CarExtender.UnreadConversation: android.app.RemoteInput getRemoteInput()>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setKeyguardShowing(boolean)>
<android.text.style.TtsSpan.DigitsBuilder: void <init>()>
<android.view.ViewParent: void childHasTransientStateChanged(android.view.View,boolean)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<com.android.tools.layoutlib.java.System_Delegate: void setBootTimeNanos(long)>
<android.text.style.TtsSpan.DecimalBuilder: void <init>()>
<com.android.documentsui.model.DocumentStack: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellIdentityCdma: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setShadeExpanded(boolean)>
<com.android.systemui.classifier.AccelerationClassifier: void onTouchEvent(android.view.MotionEvent)>
<android.print.PrintDocumentAdapter: void onFinish()>
<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>
<android.content.UriPermission: android.net.Uri getUri()>
<com.android.uiautomator.core.UiObject: java.lang.String getPackageName()>
<com.android.server.pm.PackageInstallerSession: void addClientProgress(float)>
<android.content.res.Configuration: void <init>()>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>
<com.android.systemui.statusbar.policy.NextAlarmController: void <init>(android.content.Context)>
<android.opengl.ETC1Util: boolean isETC1Supported()>
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOver()>
<android.view.View: void setSaveEnabled(boolean)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>
<android.content.pm.LauncherActivityInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.os.Debug: void stopMethodTracing()>
<com.android.tools.layoutlib.create.AsmGenerator: void setKeep(java.util.Map)>
<android.transition.ChangeTransform: void captureStartValues(android.transition.TransitionValues)>
<com.android.keyguard.KeyguardPatternView: void onResume(int)>
<com.android.documentsui.dirlist.FragmentTuner.SelectionDetails: boolean canRename()>
<com.android.server.pm.PackageManagerService: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment,float)>
<com.android.systemui.statusbar.phone.IconMerger: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setPhonebookPermissionChoice(int)>
<android.widget.TimePicker.TimePickerDelegate: void setIs24Hour(boolean)>
<android.service.voice.VoiceInteractionSession.ConfirmationRequest: java.lang.CharSequence getPrompt()>
<android.util.AttributeSet: java.lang.String getClassAttribute()>
<com.android.systemui.qs.tiles.DataSaverTile: android.content.Intent getLongClickIntent()>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)>
<android.renderscript.Script: void setVar(int,double)>
<android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>
<android.graphics.Matrix: void <init>()>
<android.view.accessibility.AccessibilityManager: void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int)>
<com.android.systemui.recents.views.TaskStackView: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.Context: java.io.File[] getExternalMediaDirs()>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.graphics.FontFamily_Delegate: boolean isValid()>
<android.app.AutomaticZenRule: void <init>(java.lang.String,android.content.ComponentName,android.net.Uri,int,boolean)>
<android.view.inputmethod.InputContentInfo: void requestPermission()>
<android.app.admin.DevicePolicyManager: void setPermissionPolicy(android.content.ComponentName,int)>
<android.widget.Filterable: android.widget.Filter getFilter()>
<android.hardware.Camera.Parameters: int getPreviewFormat()>
<com.android.keyguard.KeyguardHostView: void cancelDismissAction()>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.speech.tts.TextToSpeech: int setPitch(float)>
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>
<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>
<com.android.settingslib.AppItem: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
<com.android.layoutlib.bridge.BridgeRenderSession: void setSystemTimeNanos(long)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismiss()>
<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>
<com.android.location.provider.GmsFusedBatchOptions: void setPeriodInNS(long)>
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)>
<android.media.audiofx.LoudnessEnhancer: void <init>(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean isEphemeralApplication()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: void copyFrom(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<com.android.uiautomator.core.UiDevice: void freezeRotation()>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>
<com.android.layoutlib.bridge.impl.SystemViewInfo: void <init>(java.lang.String,java.lang.Object,int,int,int,int)>
<com.android.systemui.statusbar.phone.PanelView: int getClearAllHeight()>
<com.android.systemui.statusbar.phone.PanelView: java.lang.String getName()>
<android.view.ShadowPainter: java.awt.image.BufferedImage createSmallRectangularDropShadow(java.awt.image.BufferedImage)>
<android.app.Notification.InboxStyle: void <init>()>
<com.android.layoutlib.bridge.impl.ResourceHelper: android.graphics.drawable.Drawable getDrawable(com.android.ide.common.rendering.api.ResourceValue,com.android.layoutlib.bridge.android.BridgeContext,android.content.res.Resources.Theme)>
<android.widget.DatePicker: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.tools.layoutlib.java.Objects: int compare(java.lang.Object,java.lang.Object,java.util.Comparator)>
<com.android.server.audio.AudioService.AudioPolicyProxy: void binderDied()>
<com.android.systemui.stackdivider.DividerView: void onLayout(boolean,int,int,int,int)>
<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.view.View: java.lang.CharSequence getAccessibilityClassName()>
<android.hardware.camera2.params.OutputConfiguration: boolean equals(java.lang.Object)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void registerPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<android.view.View: boolean isLayoutDirectionResolved()>
<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>
<android.animation.ValueAnimator: boolean isStarted()>
<com.android.systemui.statusbar.NotificationData.Entry: void <init>(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.StatusBarIconView)>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>
<android.telephony.CellSignalStrengthLte: int getAsuLevel()>
<android.graphics.Bitmap: int getScaledWidth(int)>
<com.android.systemui.statusbar.policy.RotationLockController: void setRotationLocked(boolean)>
<android.animation.ObjectAnimator: void setIntValues(int[])>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>
<android.util.SparseBooleanArray: void delete(int)>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)>
<android.widget.AbsListView: void onTouchModeChanged(boolean)>
<com.android.mtp.MtpDocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.animation.ObjectAnimator: java.lang.String toString()>
<android.opengl.GLES20: void glPixelStorei(int,int)>
<com.android.server.pm.UserManagerService: boolean isRestricted()>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>
<android.media.Rating: float getPercentRating()>
<android.filterpacks.imageproc.BlackWhiteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.app.ActivityManagerProxy: boolean switchUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void lockNow(boolean)>
<android.location.Location: boolean hasBearing()>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.lang.String getTrack()>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: boolean contains(java.lang.String)>
<com.android.tools.layoutlib.create.MethodAdapter: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<android.text.style.ForegroundColorSpan: void <init>(int)>
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>
<android.util.LongSparseArray: int size()>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.security.keystore.KeyInfo: java.lang.String[] getDigests()>
<com.android.systemui.statusbar.ExpandableNotificationRow: int getPositionOfChild(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.graphics.drawable.AnimatedVectorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.util.MonthDisplayHelper: int getWeekStartDay()>
<android.printservice.PrintJob: boolean isFailed()>
<android.media.SubtitleTrack.RenderingWidget: void setVisible(boolean)>
<android.util.TypedValue: int getComplexUnit()>
<android.view.InputDevice: int describeContents()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<android.media.CamcorderProfile: boolean hasProfile(int,int)>
<android.app.admin.DevicePolicyManager: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<android.view.WindowManagerPolicy.WindowState: int getRotationAnimationHint()>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onGearTouched(com.android.systemui.statusbar.ExpandableNotificationRow,int,int)>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeIntValue(int,int)>
<com.android.providers.settings.SettingsProvider: int makeKey(int,int)>
<android.os.Parcel: void writeByteArray(byte[])>
<com.android.server.policy.WakeGestureListener: boolean isSupported()>
<com.android.documentsui.model.DocumentStack: boolean isRecents()>
<com.android.server.notification.CountdownConditionProvider: android.content.ComponentName getComponent()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>
<android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
<com.android.systemui.recents.RecentsImpl: void showNextTask()>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>
<android.transition.Transition: android.transition.Transition.EpicenterCallback getEpicenterCallback()>
<android.hardware.Camera: boolean enableShutterSound(boolean)>
<android.app.Fragment: boolean isResumed()>
<android.webkit.WebSettings: void setSupportZoom(boolean)>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.net.ChartDataLoader: void onStartLoading()>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.String toStringNativeType(int)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncOnce()>
<android.bluetooth.le.ScanResult: int describeContents()>
<android.transition.TransitionSet: int getOrdering()>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBusEvent(com.android.systemui.recents.events.ui.DeleteTaskDataEvent)>
<android.app.WallpaperManager: boolean hasResourceWallpaper(int)>
<com.android.hotspot2.asn1.Asn1Decoder: java.util.Collection decode(java.nio.ByteBuffer)>
<android.media.MediaDrm.KeyRequest: int getRequestType()>
<android.service.notification.ConditionProviderService: void onRequestConditions(int)>
<com.android.server.am.ActivityManagerService: void batterySendBroadcast(android.content.Intent)>
<android.graphics.drawable.VectorDrawable: void setAutoMirrored(boolean)>
<android.app.usage.NetworkStats.Bucket: int getUid()>
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.opengl.GLES10: void glDepthFunc(int)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onCreate()>
<com.android.hotspot2.omadm.XMLNode: java.lang.String getStrippedTag()>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<android.service.quicksettings.Tile: java.lang.CharSequence getLabel()>
<android.media.RemoteControlClient.MetadataEditor: void apply()>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>
<android.media.MediaExtractor: long getSampleTime()>
<com.android.documentsui.model.RootInfo: void read(java.io.DataInputStream)>
<android.print.PrintJobInfo.Builder: void setCopies(int)>
<android.database.AbstractCursor: boolean moveToFirst()>
<android.app.Activity: void setVisible(boolean)>
<android.widget.ExpandableListView: void onRtlPropertiesChanged(int)>
<android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
<com.android.server.pm.PackageManagerService: void shutdown()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo[] getDevices()>
<android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>
<android.provider.CalendarContract.Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>
<android.telecom.Connection: android.net.Uri getAddress()>
<android.graphics.Matrix: void setRotate(float,float,float)>
<android.media.MediaRouterClientState.RouteInfo: java.lang.String toString()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getRssUrl(java.lang.String)>
<com.android.systemui.statusbar.ExpandableView: void setShadowAlpha(float)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.webkit.WebView: int getProgress()>
<android.nfc.tech.MifareClassic: int getTimeout()>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AdapterView: void setFocusable(boolean)>
<android.mtp.MtpDevice: java.lang.String getDeviceName()>
<android.view.TextureView: void setLayerType(int,android.graphics.Paint)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.text.Editable.Factory: android.text.Editable.Factory getInstance()>
<android.media.AudioRecordingConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void notifyCleartextNetwork(int,byte[])>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.content.pm.PackageInstaller.Session: void setStagingProgress(float)>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void setDevice(com.android.ddmlib.IDevice)>
<com.android.keyguard.KeyguardSecurityView: void reset()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onFinishedGoingToSleep(int,boolean)>
<android.media.AudioAttributes: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.documentsui.model.DocumentStack: void updateDocuments(android.content.ContentResolver)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)>
<com.android.systemui.qs.tiles.DndTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.effect.Effect: java.lang.String getName()>
<android.view.View: boolean post(java.lang.Runnable)>
<com.android.location.provider.LocationProviderBase: android.os.IBinder getBinder()>
<android.webkit.CacheManager.CacheResult: long getContentLength()>
<android.app.Dialog: void setVolumeControlStream(int)>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void notifyWiredAccessoryChanged(long,int,int)>
<android.media.MediaRouter: void removeUserRoute(android.media.MediaRouter.UserRouteInfo)>
<android.nfc.tech.TagTechnology: boolean isConnected()>
<android.view.Window: boolean getAllowReturnTransitionOverlap()>
<android.net.wifi.nan.ConfigRequest.Builder: android.net.wifi.nan.ConfigRequest.Builder setClusterLow(int)>
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>
<com.android.systemui.qs.QSPanel: void openDetails(java.lang.String)>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.content.Intent.ShortcutIconResource: android.content.Intent.ShortcutIconResource fromContext(android.content.Context,int)>
<android.app.AutomaticZenRule: boolean isEnabled()>
<android.view.WindowManagerPolicy.WindowState: int getSurfaceLayer()>
<android.text.method.QwertyKeyListener: int getInputType()>
<android.widget.TextView: int getPaintFlags()>
<com.android.documentsui.RootsFragment.RootComparator: int compare(com.android.documentsui.RootsFragment.RootItem,com.android.documentsui.RootsFragment.RootItem)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.location.GnssMeasurement: int getAccumulatedDeltaRangeState()>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo build()>
<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>
<android.net.wifi.WifiManager: boolean disconnect()>
<com.android.gallery3d.glrenderer.UploadedTexture: void invalidateContent()>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void onPickUpViewFromPool(java.lang.Object,java.lang.Object,boolean)>
<com.android.commands.svc.NfcCommand: java.lang.String shortHelp()>
<com.android.server.wallpaper.WallpaperManagerService: void setDisplayPadding(android.graphics.Rect,java.lang.String)>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>
<com.google.android.util.AbstractMessageParser.Html: boolean isHtml()>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setIcon(android.graphics.Bitmap)>
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager.DiscoveryListener)>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setBackoffCriteria(long,int)>
<android.location.Location: void setProvider(java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setCompressedSize(long)>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()>
<android.nfc.tech.NfcF: byte[] getManufacturer()>
<com.android.keyguard.KeyguardPatternView: void onFinishInflate()>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureWidth()>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setDismissed(boolean,boolean)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: int getGroupCount()>
<android.graphics.RectF: java.lang.String toString()>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>
<com.android.settingslib.RestrictedSwitchPreference: void checkRestrictionAndSetDisabled(java.lang.String)>
<android.net.IpPrefix: byte[] getRawAddress()>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void <init>(android.content.Context)>
<android.media.MediaMetadataEditor: int[] getEditableKeys()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildUninitializedTag(int)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glLogicOp(int)>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>
<android.hardware.camera2.CaptureFailure: android.hardware.camera2.CaptureRequest getRequest()>
<android.view.View: void onHoverChanged(boolean)>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.view.MotionEvent.PointerProperties: void clear()>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>
<com.android.systemui.volume.VolumeDialogMotion: void <init>(android.app.Dialog,android.view.View,android.view.ViewGroup,android.view.View,com.android.systemui.volume.VolumeDialogMotion.Callback)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void start()>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>
<android.opengl.GLES20: void glEnable(int)>
<com.android.systemui.statusbar.policy.RotationLockController: void removeRotationLockControllerCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissLowBatteryWarning()>
<com.android.systemui.qs.QSContainer: void setQsExpansion(float,float)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportEmergencyCallAction(boolean)>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffsetx(int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onLayout(boolean,int,int,int,int)>
<android.os.BaseBundle: boolean[] getBooleanArray(java.lang.String)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.BatteryController getBatteryController()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.view.ViewStructure: void setChecked(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: java.lang.ClassLoader getClassLoader()>
<android.view.VelocityTracker: void recycle()>
<android.gesture.GestureStore: int getSequenceType()>
<com.android.server.notification.ConditionProviders.Callback: void onBootComplete()>
<android.media.MediaActionSound: void <init>()>
<android.renderscript.ScriptC: void <init>(long,android.renderscript.RenderScript)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(android.graphics.Path)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothClass getBtClass()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showRecentApps(boolean,boolean)>
<com.android.hotspot2.pps.Policy: java.util.List getPreferredRoamingPartners()>
<android.net.SSLSessionCache: void <init>(java.io.File)>
<com.android.server.notification.ZenLog: void traceSetRingerModeInternal(int,int,java.lang.String,int,int)>
<android.media.tv.TvRecordingClient: void release()>
<com.android.commands.hid.Event: int getDuration()>
<android.text.style.SuggestionSpan: java.util.Locale getLocaleObject()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setParentFadingOut(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void updateStates()>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord copyWithIsCurrent(boolean)>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(int[],int)>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>
<com.android.settingslib.wifi.AccessPoint: int getLevel()>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.Editor.SuggestionsPopupWindow: void createPopupWindow()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void <init>(int,android.hardware.camera2.legacy.LegacyCameraDevice,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.legacy.CameraDeviceUserShim.CameraLooper,android.hardware.camera2.legacy.CameraDeviceUserShim.CameraCallbackThread)>
<com.android.documentsui.dirlist.MultiSelectManager: void clearSelection()>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(short[],int)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>
<android.widget.TimePicker: int getBaseline()>
<com.android.settingslib.dream.DreamBackend: boolean isEnabled()>
<com.android.server.notification.RankingHelper: int getVisibilityOverride(java.lang.String,int)>
<org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
<android.content.res.TypedArray: float getDimension(int,float)>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()>
<android.content.res.BridgeTypedArray: boolean getBoolean(int,boolean)>
<android.hardware.usb.UsbEndpoint: int describeContents()>
<android.location.Location: void setTime(long)>
<com.android.printspooler.widget.PrintContentView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.qs.QSFooter: void refreshState()>
<android.renderscript.FieldPacker: void addU64(long)>
<com.android.systemui.tv.pip.PipRecentsControlsView.Listener: void onBackPressed()>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>
<com.android.server.net.NetworkStatsCollection: long getStartMillis()>
<android.telecom.RemoteConnection: android.telecom.DisconnectCause getDisconnectCause()>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: com.android.internal.view.menu.MenuItemImpl getItem(int)>
<com.android.server.am.ActivityStackSupervisor: void dump(java.io.PrintWriter,java.lang.String)>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setListener(com.android.systemui.statusbar.phone.ObservableScrollView.Listener)>
<javax.microedition.khronos.opengles.GL11Ext: void glTexParameterfv(int,int,float[],int)>
<android.view.ViewParent: boolean canResolveTextDirection()>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>
<android.media.MediaExtractor: void finalize()>
<android.app.trust.TrustManager.TrustListener: void onTrustManagedChanged(boolean,int)>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>
<android.net.ConnectivityManager.NetworkCallback: void onLost(android.net.Network)>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>
<com.android.server.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems.Item)>
<android.location.GnssMeasurement: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>
<android.content.Context: android.content.Context getApplicationContext()>
<android.util.BridgeXmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser,com.android.layoutlib.bridge.android.BridgeContext,boolean)>
<com.android.server.retaildemo.UserInactivityCountdownDialog: void setNegativeButtonClickListener(android.view.View.OnClickListener)>
<android.hardware.usb.UsbDeviceConnection: boolean releaseInterface(android.hardware.usb.UsbInterface)>
<android.net.Uri: java.lang.String getScheme()>
<android.graphics.BlurMaskFilter_Delegate: boolean isSupported()>
<android.net.Network: int describeContents()>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>
<android.view.InflateException: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void cancelSync(android.net.Uri)>
<android.text.Spanned: int getSpanStart(java.lang.Object)>
<android.preference.Preference: void onPrepareForRemoval()>
<android.app.ApplicationErrorReport.AnrInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaPlayer.TrackInfo: int describeContents()>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.renderscript.FieldPacker: int subI32()>
<android.text.Annotation: int describeContents()>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>
<android.renderscript.Allocation.OnBufferAvailableListener: void onBufferAvailable(android.renderscript.Allocation)>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayAdded(int)>
<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>
<android.os.Debug: boolean isDebuggerConnected()>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>
<android.view.View: void setScrollbarFadingEnabled(boolean)>
<com.android.layoutlib.bridge.Bridge: com.android.ninepatch.NinePatchChunk getCached9Patch(java.lang.String,java.lang.Object)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionCancelled()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onAccessPointsChanged()>
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.View: void setTextDirection(int)>
<android.media.AudioFormat: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: void moveTasksToFullscreenStack(int,boolean)>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int)>
<com.android.server.am.DumpHeapProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.app.usage.UsageStats: java.lang.String getPackageName()>
<com.android.documentsui.model.RootInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustManagedChanged(boolean,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelExpansionChanged(float,boolean)>
<com.android.vpndialogs.ManageDialog: boolean handleMessage(android.os.Message)>
<android.app.assist.AssistStructure.ViewNode: boolean isFocused()>
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getGroupId(int)>
<android.media.MediaCodec: void setParameters(android.os.Bundle)>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void finish()>
<com.android.server.notification.ZenModeHelper: void onUserRemoved(int)>
<android.filterpacks.imageproc.SaturateFilter: void setupPorts()>
<android.app.ActivityManager.RunningTaskInfo: void <init>()>
<android.content.pm.PackageManager: void extendVerificationTimeout(int,int,long)>
<android.preference.Preference: java.lang.CharSequence getSummary()>
<com.android.server.fingerprint.AuthenticationClient: boolean handleFailedAttempt()>
<android.net.wifi.nan.ConfigRequest.Builder: android.net.wifi.nan.ConfigRequest build()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>
<com.android.server.AppOpsService.ClientState: java.lang.String toString()>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>
<android.util.LogPrinter: void <init>(int,java.lang.String)>
<com.android.hotspot2.pps.Policy: java.util.Map getRequiredProtos()>
<android.media.JetPlayer: void finalize()>
<android.transition.Transition: void setPropagation(android.transition.TransitionPropagation)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryAdded(com.android.systemui.statusbar.NotificationData.Entry)>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle)>
<android.widget.Gallery: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.ZenModeController: void setZen(int,android.net.Uri,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>
<org.apache.http.conn.ssl.SSLSocketFactory: boolean isSecure(java.net.Socket)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest build()>
<android.preference.Preference: void onAttachedToActivity()>
<com.android.systemui.egg.MLand: float frand()>
<android.view.ViewStructure: boolean hasExtras()>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>
<android.app.ApplicationErrorReport.RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleClick()>
<android.util.Rational: int intValue()>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int,boolean)>
<android.appwidget.AppWidgetProviderInfo: java.lang.String loadLabel(android.content.pm.PackageManager)>
<android.view.inputmethod.BaseInputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
<com.android.server.hdmi.SelectRequestBuffer: com.android.server.hdmi.SelectRequestBuffer.DeviceSelectRequest newDeviceSelect(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<android.graphics.Paint: void setStrokeWidth(float)>
<com.android.server.pm.PackageInstallerService: void uninstall(java.lang.String,java.lang.String,int,android.content.IntentSender,int)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: android.net.wifi.nan.TlvBufferUtils.TlvConstructor putByte(int,byte)>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.AES: void <init>()>
<android.widget.YearPickerView.OnYearSelectedListener: void onYearChanged(android.widget.YearPickerView,int)>
<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>
<android.text.OptimizingLineBreaker: void <init>(java.util.List,android.text.LineWidth,android.text.TabStops)>
<com.android.systemui.tv.pip.PipManager: void showTvPictureInPictureMenu()>
<android.widget.ImageView: int getBaseline()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHPMV(int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,int,android.renderscript.Double2,android.renderscript.Allocation,int)>
<android.hardware.Camera.Parameters: java.util.List getZoomRatios()>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.view.ViewGroup: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>
<com.android.printspooler.model.PageContentRepository: int getFilePageCount()>
<android.os.StrictMode.VmPolicy: java.lang.String toString()>
<com.android.systemui.statusbar.SystemBars: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<com.android.systemui.statusbar.policy.SignalController: int getCurrentIconId()>
<com.android.systemui.screenshot.ScreenshotSelectorView: void <init>(android.content.Context)>
<android.opengl.GLES10: void glFogxv(int,int[],int)>
<android.inputmethodservice.Keyboard: void setKeyWidth(int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void setOverlayHeaderOnThumbnailActionBar(boolean)>
<android.opengl.EGLObjectHandle: void <init>(int)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.display.VirtualDisplay: void setSurface(android.view.Surface)>
<android.app.ActivityManagerProxy: boolean isInLockTaskMode()>
<android.view.ViewStructure: void setEnabled(boolean)>
<android.database.MergeCursor: double getDouble(int)>
<com.android.server.pm.PackageManagerService: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>
<com.android.tools.layoutlib.create.DependencyFinder.DependencyVisitor: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.HeaderTransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.analytics.SensorLoggerSession: void setType(int)>
<android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>
<android.app.PendingIntent: int getCreatorUid()>
<android.os.SystemClock: long currentThreadTimeMillis()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>
<com.android.bluetoothmidiservice.PacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<com.android.systemui.statusbar.policy.HeadsUpManager: int getTopHeadsUpPinnedHeight()>
<android.graphics.PointF: boolean equals(float,float)>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.widget.Switch: void setSplitTrack(boolean)>
<android.renderscript.Byte4: void <init>(byte,byte,byte,byte)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File getDatabasePath(java.lang.String)>
<com.android.systemui.classifier.StrokeClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: int describeContents()>
<android.hardware.camera2.impl.CameraDeviceImpl: void stopRepeating()>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onBootCompleted()>
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>
<com.android.hotspot2.osu.OSUInfo: java.lang.String getSSID()>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>
<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.HybridNotificationView: android.widget.TextView getTextView()>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>
<android.text.method.ScrollingMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>
<com.android.hotspot2.omadm.OMANode: java.util.Map getAttributes()>
<android.media.audiofx.Visualizer: void <init>(int)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.server.net.NetworkStatsCollection: void read(java.io.InputStream)>
<com.android.server.tv.TvRemoteProviderWatcher.ProviderMethods: void removeProvider(com.android.server.tv.TvRemoteProviderProxy)>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>
<android.util.ArrayMap: boolean containsKey(java.lang.Object)>
<android.view.Surface: boolean isValid()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getUntransformedTaskViewBounds()>
<android.content.pm.ShortcutInfo: boolean isImmutable()>
<android.bluetooth.BluetoothGattServerCallback: void onExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean startPairing()>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder toBuilder()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void add(android.view.View,int)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean hasUserAuthenticatedSinceBoot()>
<android.widget.ShareActionProvider: android.view.View onCreateActionView()>
<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)>
<com.google.android.util.AbstractMessageParser.Token: void <init>(com.google.android.util.AbstractMessageParser.Token.Type,java.lang.String)>
<android.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>
<com.android.server.InputMethodManagerService.Lifecycle: void onBootPhase(int)>
<com.android.settingslib.applications.ApplicationsState: void removePackage(java.lang.String,int)>
<com.android.server.am.ActivityManagerService: void addPackageDependency(java.lang.String)>
<android.media.AudioRecord: int getTimestamp(android.media.AudioTimestamp,int)>
<com.android.photos.views.TiledImageView: void setTranslationX(float)>
<com.android.documentsui.services.Job: java.lang.String toString()>
<android.graphics.Rasterizer: void finalize()>
<android.view.WindowCallback: void onWindowFocusChanged(boolean)>
<android.preference.RingtonePreference: void setShowSilent(boolean)>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.util.Map getDefaultProperties()>
<com.android.server.notification.NotificationDelegate: void onSetDisabled(int)>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.content.pm.ApplicationInfo: void <init>()>
<com.android.server.policy.PolicyControl: int getWindowFlags(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<com.android.printspooler.widget.PrintOptionsLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.BatteryMeterView: void onAttachedToWindow()>
<android.hardware.fingerprint.IFingerprintDaemon: int enumerate()>
<com.android.server.notification.RankingHandler: void requestSort()>
<android.text.Editable: void clearSpans()>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void addTaskAt(com.android.systemui.recents.model.Task,int)>
<android.hardware.camera2.legacy.RequestHolder: void setOutputAbandoned()>
<android.view.Window: void setNavigationBarColor(int)>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
<android.media.MediaDrm: void setOnKeyStatusChangeListener(android.media.MediaDrm.OnKeyStatusChangeListener,android.os.Handler)>
<com.android.systemui.doze.DozeHost: void stopDozing()>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>
<com.android.server.lights.Light: void turnOff()>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>
<android.widget.CheckedTextView: void drawableStateChanged()>
<android.telephony.gsm.GsmCellLocation: int hashCode()>
<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>
<android.database.CursorWindow: void finalize()>
<android.renderscript.Double2: void <init>(double,double)>
<com.android.systemui.qs.PagedTileLayout.TilePage: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.LinkAddress: java.net.InetAddress getAddress()>
<android.media.MediaRecorder: void <init>()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)>
<android.media.AudioRecord: int read(byte[],int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glColor4x(int,int,int,int)>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction build()>
<android.widget.CalendarView: void setDate(long)>
<android.view.IWindowManagerImpl: void showStrictModeViolation(boolean)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: void <init>(int,int,boolean,int,int,int,boolean,android.media.AudioFormat,byte[])>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setIsRead(boolean)>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<com.android.server.pm.PackageManagerService: void updateExternalMediaStatus(boolean,boolean)>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindTexture(int,int)>
<android.hardware.camera2.CaptureResult: long getFrameNumber()>
<android.media.AudioTrack: int write(float[],int,int,int)>
<android.renderscript.Element: android.renderscript.Element F16_4(android.renderscript.RenderScript)>
<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>
<android.app.backup.BackupDataInputStream: int read(byte[])>
<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>
<com.android.server.accessibility.KeyEventDispatcher: void <init>(android.os.Handler,int,java.lang.Object,android.os.PowerManager)>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<android.view.KeyEvent: int getSource()>
<android.widget.AbsListView: void onRemoteAdapterDisconnected()>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTasks(android.content.Context,com.android.systemui.recents.model.RecentsTaskLoadPlan,com.android.systemui.recents.model.RecentsTaskLoadPlan.Options)>
<javax.microedition.khronos.opengles.GL10: void glDepthRangef(float,float)>
<android.transition.Transition: java.util.List getTargets()>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPictureSize()>
<android.telecom.InCallService.VideoCall: void setZoom(float)>
<android.content.Context: int checkSelfPermission(java.lang.String)>
<com.android.server.am.ActivityManagerService: void activityRelaunched(android.os.IBinder)>
<android.hardware.radio.RadioTuner.Callback: void onControlChanged(boolean)>
<com.google.android.util.SmileyParser: java.lang.CharSequence getSpannableString(android.content.Context)>
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>
<com.android.systemui.qs.QSTile.Host: void openPanels()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadCenter()>
<android.telephony.TelephonyManager: int getSimState()>
<com.android.settingslib.bluetooth.A2dpProfile: int getOrdinal()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(int)>
<com.android.server.pm.PackageManagerService: byte[] getDefaultAppsBackup(int)>
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.inputmethodservice.ExtractEditText: boolean performClick()>
<android.opengl.GLES32: void glDebugMessageInsert(int,int,int,int,int,java.lang.String)>
<android.widget.Toolbar: void setContentInsetEndWithActions(int)>
<android.widget.TableLayout.LayoutParams: void <init>(int,int)>
<android.app.ActivityManagerProxy: android.os.IBinder getUriPermissionOwnerForActivity(android.os.IBinder)>
<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>
<android.view.IWindowManagerImpl: boolean startViewServer(int)>
<android.net.ProxyInfo: java.lang.String getHost()>
<android.drm.ProcessedData: java.lang.String getAccountId()>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>
<android.view.ViewParent: boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceAdded(android.media.tv.TvInputHardwareInfo)>
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>
<com.android.tools.layoutlib.java.System_Delegate: long nanoTime()>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setTexture(float,float)>
<android.os.AsyncTask: void onPostExecute(java.lang.Object)>
<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>
<android.provider.BlockedNumberContract: boolean canCurrentUserBlockNumbers(android.content.Context)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener: void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup)>
<com.android.server.tv.TvInputHal.Callback: void onDeviceUnavailable(int)>
<android.app.VoiceInteractor.PickOptionRequest.Option: int getIndex()>
<com.android.systemui.tuner.DemoModeFragment: void onPause()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport()>
<com.google.android.gles_jni.GLImpl: void glEnableClientState(int)>
<com.android.printservice.recommendation.plugin.samsung.MDnsUtils: boolean isVendorPrinter(android.net.nsd.NsdServiceInfo,java.lang.String[])>
<android.app.LauncherActivity.ListItem: void <init>()>
<com.android.server.AttributeCache: void <init>(android.content.Context)>
<android.view.IWindowManagerImpl: void setScreenCaptureDisabled(int,boolean)>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfUninstallBlocked(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void sendEvent(int,int)>
<android.content.ClipData.Item: android.content.Intent getIntent()>
<android.app.UiAutomation: android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>
<android.util.ArrayMap: java.util.Collection values()>
<com.android.server.input.InputManagerService: boolean hasKeys(int,int,int[],boolean[])>
<com.android.systemui.tuner.TunerZenModePanel: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableString: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.recents.views.SystemBarScrimViews: void updateNavBarScrim(boolean,boolean,com.android.systemui.recents.views.AnimationProps)>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>
<android.util.ArraySet: boolean equals(java.lang.Object)>
<com.android.settingslib.wifi.WifiStatusTracker: void <init>(android.net.wifi.WifiManager)>
<com.android.server.backup.KeyValueBackupJob: boolean onStartJob(android.app.job.JobParameters)>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,int[],int)>
<android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
<android.app.ActivityManager.AppTask: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<com.android.documentsui.FilesActivity: void onDocumentsPicked(java.util.List)>
<android.telephony.CellInfoLte: int hashCode()>
<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>
<com.android.location.fused.FusionEngine: void onLocationChanged(android.location.Location)>
<android.print.PrinterCapabilitiesInfo: java.lang.String toString()>
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.policy.MobileSignalController: com.android.systemui.statusbar.policy.MobileSignalController.MobileState cleanState()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void clearChildFocus(android.view.View)>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>
<android.graphics.YuvImage: int[] getStrides()>
<com.android.hotspot2.osu.HTTPHandler: java.nio.ByteBuffer exchangeBinary(java.net.URL,java.lang.String,java.lang.String)>
<com.android.server.PersistentDataBlockService: void onStart()>
<android.hardware.Camera.Parameters: java.lang.String getWhiteBalance()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<com.android.uiautomator.core.UiDevice: boolean hasAnyWatcherTriggered()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTimeout(int)>
<com.android.systemui.recents.views.TaskView: void onFinishInflate()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setLongPressListener(com.android.systemui.SwipeHelper.LongPressListener)>
<com.android.server.pm.KeySetManagerService: java.lang.String encodePublicKey(java.security.PublicKey)>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<com.android.server.policy.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<android.view.View: void setFitsSystemWindows(boolean)>
<com.android.server.pm.UserRestrictionsUtils: void merge(android.os.Bundle,android.os.Bundle)>
<android.content.DialogInterface.OnCancelListener: void onCancel(android.content.DialogInterface)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>
<com.android.defcontainer.DefaultContainerService: void onHandleIntent(android.content.Intent)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setListening(boolean)>
<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.media.session.MediaSession.Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void <init>(android.content.Context)>
<android.hardware.camera2.marshal.MarshalHelpers: int getPrimitiveTypeSize(int)>
<android.graphics.ColorMatrix: float[] getArray()>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>
<com.android.server.am.ActivityManagerService: boolean killProcessesBelowForeground(java.lang.String)>
<com.android.systemui.statusbar.notification.NotificationUtils: float interpolate(float,float,float)>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>
<com.android.server.net.NetworkStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.UserManagerService: android.os.Bundle getDefaultGuestRestrictions()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.Object getProperty(java.lang.String)>
<android.os.Binder: void joinThreadPool()>
<android.content.res.AssetManager.AssetInputStream: int read(byte[])>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>
<com.android.systemui.qs.GlobalSetting: void setListening(boolean)>
<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
<com.android.systemui.statusbar.policy.BluetoothController: void setBluetoothEnabled(boolean)>
<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void enterPictureInPictureMode(android.os.IBinder)>
<com.android.systemui.statusbar.BackDropView: boolean hasOverlappingRendering()>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>
<android.app.Activity: void onVisibleBehindCanceled()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.StackViewScrolledEvent)>
<android.graphics.Matrix: boolean isIdentity()>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldHideNotifications(java.lang.String)>
<com.android.server.statusbar.StatusBarManagerInternal: void showAssistDisclosure()>
<android.graphics.Matrix_Delegate: void reset()>
<android.text.method.NumberKeyListener: char[] getAcceptedChars()>
<android.app.LoaderManagerImpl: void destroyLoader(int)>
<android.media.AudioRecord: void finalize()>
<android.webkit.WebResourceResponse: void setResponseHeaders(java.util.Map)>
<com.android.systemui.statusbar.BaseStatusBar: void setAreThereNotifications()>
<com.android.layoutlib.bridge.android.BridgePowerManager: void updateWakeLockUids(android.os.IBinder,int[])>
<android.widget.ZoomButtonsController: boolean isVisible()>
<android.app.Fragment.InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
<android.database.Cursor: java.lang.String[] getColumnNames()>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,int[],int)>
<android.widget.OverScroller: int getStartX()>
<com.android.server.AppOpsService.Callback: void <init>(com.android.internal.app.IAppOpsCallback)>
<android.graphics.Bitmap: int getRowBytes()>
<android.renderscript.Element: android.renderscript.Element I16_4(android.renderscript.RenderScript)>
<com.android.documentsui.SaveFragment: void setReplaceTarget(com.android.documentsui.model.DocumentInfo)>
<com.android.server.am.BatteryStatsService: void noteBluetoothControllerActivity(android.bluetooth.BluetoothActivityEnergyInfo)>
<android.view.accessibility.AccessibilityRecord: boolean isChecked()>
<com.android.server.AppOpsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.view.KeyboardShortcutGroup: int describeContents()>
<android.app.Notification.Builder: android.widget.RemoteViews createContentView()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.os.CountDownTimer: void onFinish()>
<android.content.ContentProvider: void <init>()>
<com.android.systemui.statusbar.phone.BarTransitions: void transitionTo(int,boolean)>
<android.app.ExitTransitionCoordinator.HideSharedElementsCallback: void hideSharedElements()>
<com.android.server.search.SearchManagerService.Lifecycle: void onStart()>
<android.util.JsonWriter: android.util.JsonWriter value(boolean)>
<android.widget.StackView: void <init>(android.content.Context)>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void updateVisibilities()>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLockAffordanceVisible()>
<com.android.server.connectivity.LingerMonitor: void noteLingerDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo,com.android.server.connectivity.NetworkAgentInfo)>
<android.opengl.GLES20: void glFlush()>
<android.hardware.usb.UsbDevice: java.lang.String getProductName()>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onFinishInflate()>
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>
<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>
<com.android.server.wallpaper.WallpaperManagerService: int getWallpaperIdForUser(int,int)>
<android.net.wifi.WifiEnterpriseConfig: void setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)>
<android.content.Context: android.os.Looper getMainLooper()>
<android.service.notification.StatusBarNotification: java.lang.String getKey()>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>
<android.service.notification.NotificationListenerService.Ranking: boolean isAmbient()>
<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>
<com.android.systemui.qs.customize.TileAdapter: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<android.media.MediaPlayer: android.media.PlaybackParams getPlaybackParams()>
<com.android.systemui.qs.SecureSetting: void setListening(boolean)>
<android.view.Choreographer_Delegate: void dispose()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void prepare(android.view.Surface)>
<android.graphics.Bitmap_Delegate: boolean hasAlpha()>
<android.widget.HorizontalScrollView: boolean shouldDelayChildPressedState()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addAction(android.app.Notification.Action)>
<com.android.server.am.BatteryStatsService: void noteScreenState(int)>
<android.preference.Preference_Delegate: android.view.View inflatePreference(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>
<com.android.server.notification.ManagedServices.UserProfiles: int[] getCurrentProfileIds()>
<android.app.Activity: boolean navigateUpTo(android.content.Intent)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setFeature(java.lang.String,boolean)>
<android.graphics.drawable.NinePatchDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.phone.DozeScrimController: void setDozing(boolean,boolean)>
<android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>
<android.telecom.RemoteConference: void merge()>
<com.android.documentsui.RootsFragment: void requestFocus()>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<android.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<com.android.settingslib.bluetooth.A2dpProfile: void finalize()>
<com.android.systemui.qs.PagedTileLayout: boolean hasOverlappingRendering()>
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>
<com.android.printspooler.widget.PrintContentView: void setOpenOptionsController(com.android.printspooler.widget.PrintContentView.OptionsStateController)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String contentDescForNotification(android.content.Context,android.app.Notification)>
<com.android.layoutlib.bridge.android.BridgeContext: java.io.File[] getExternalFilesDirs(java.lang.String)>
<com.android.systemui.recents.events.EventBus: void post(com.android.systemui.recents.events.EventBus.Event)>
<com.android.gallery3d.glrenderer.GLES20Canvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<android.text.style.LocaleSpan: java.util.Locale getLocale()>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>
<com.android.server.AttributeCache: void removePackage(java.lang.String)>
<android.speech.tts.TextToSpeech: java.util.Locale getDefaultLanguage()>
<android.view.WindowCallback: android.view.View onCreatePanelView(int)>
<com.android.documentsui.RecentsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<android.telecom.RemoteConnection.Callback: void onPostDialWait(android.telecom.RemoteConnection,java.lang.String)>
<android.view.MotionEvent: void setAction(int)>
<com.android.uiautomator.core.UiScrollable: void <init>(com.android.uiautomator.core.UiSelector)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>
<com.android.hotspot2.pps.HomeSP: java.lang.String getIconURL()>
<android.speech.RecognitionService.Callback: int getCallingUid()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateCollapsePanels(int)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix3f)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>
<android.mtp.MtpObjectInfo: long getThumbCompressedSizeLong()>
<android.app.VoiceInteractor.PickOptionRequest.Option: android.os.Bundle getExtras()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void showMySoftInput(android.os.IBinder,int)>
<com.android.systemui.qs.customize.TileAdapter: void onBindViewHolder(com.android.systemui.qs.customize.TileAdapter.Holder,int)>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.DessertCaseDream: void onDreamingStopped()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setDuplexModes(int,int)>
<android.widget.ActivityChooserModel.ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<com.android.server.pm.PackageInstallerService: android.util.ArraySet newArraySet(java.lang.Object[])>
<com.android.media.remotedisplay.RemoteDisplay: void setStatus(int)>
<com.android.server.am.ActivityStackSupervisor: void <init>(com.android.server.am.ActivityManagerService)>
<android.graphics.RectF: void round(android.graphics.Rect)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int)>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteBuffer(int)>
<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
<com.android.server.notification.ConditionProviders.Callback: void onServiceAdded(android.content.ComponentName)>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.gesture.GestureOverlayView: void cancelGesture()>
<com.android.systemui.statusbar.RemoteInputController.Callback: void onRemoteInputSent(com.android.systemui.statusbar.NotificationData.Entry)>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
<com.android.systemui.statusbar.tv.TvStatusBar: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,com.android.systemui.statusbar.NotificationData.Entry)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<android.os.health.HealthStats: int getTimerKeyCount()>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<com.example.android.networkusage.NetworkActivity: void onCreate(android.os.Bundle)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>
<com.google.android.util.SmileyResources: java.util.Set getSchemes()>
<android.text.LoginFilter.UsernameFilterGMail: boolean isAllowed(char)>
<android.view.MotionEvent: float getYPrecision()>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onStart()>
<android.media.session.MediaController.TransportControls: void prepareFromUri(android.net.Uri,android.os.Bundle)>
<android.renderscript.Allocation: void copy1DRangeTo(int,int,short[])>
<com.android.systemui.statusbar.phone.TrustDrawable: void draw(android.graphics.Canvas)>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.policy.ImmersiveModeConfirmation: android.widget.FrameLayout.LayoutParams getBubbleLayoutParams()>
<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
<android.location.GnssClock: int getHardwareClockDiscontinuityCount()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.core.UiDevice getUiDevice()>
<com.android.systemui.recents.misc.Utilities: void removeAnimationListenersRecursive(android.animation.Animator)>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: boolean isAttributeDefault(int)>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>
<android.print.PrintAttributes: android.print.PrintAttributes.MediaSize getMediaSize()>
<com.android.documentsui.dirlist.FragmentTuner: boolean isDocumentEnabled(java.lang.String,int)>
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.misc.Utilities: boolean isDescendentAccessibilityFocused(android.view.View)>
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>
<android.printservice.PrinterDiscoverySession: java.util.List getPrinters()>
<android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
<com.android.layoutlib.bridge.bars.Config: java.lang.String getTime(int)>
<android.hardware.radio.RadioManager.AmBandConfig: boolean getStereo()>
<com.android.server.notification.ZenModeHelper: java.util.List getZenRules()>
<com.android.systemui.statusbar.policy.KeyButtonView: void setCode(int)>
<android.view.Choreographer_Delegate: float getRefreshRate()>
<android.view.IWindowManagerImpl: void getBaseDisplaySize(int,android.graphics.Point)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setFaces(boolean)>
<com.android.server.statusbar.StatusBarManagerService: void disable2(int,android.os.IBinder,java.lang.String)>
<android.view.View: int getMeasuredState()>
<android.net.wifi.p2p.WifiP2pGroup: void <init>()>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double2)>
<com.android.server.AttributeCache.Package: void <init>(android.content.Context)>
<android.text.StaticLayout: int getBottomPadding()>
<android.net.TrafficStats: void clearThreadStatsTag()>
<com.android.server.usage.UsageStatsService: void onNewUpdate(int)>
<com.android.uiautomator.core.UiScrollable: boolean flingToBeginning(int)>
<com.android.settingslib.animation.AppearAnimationUtils: float getStartTranslation()>
<android.widget.SearchView: boolean isQueryRefinementEnabled()>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<android.graphics.drawable.DrawableWrapper: void getOutline(android.graphics.Outline)>
<android.media.browse.MediaBrowser: void unsubscribe(java.lang.String)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean initTransformation(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.BatteryMeterDrawable: int getOpacity()>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.service.dreams.DreamService: void onActionModeFinished(android.view.ActionMode)>
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.am.ProcessStatsService: com.android.internal.app.procstats.ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createApplicationRecord(java.lang.String)>
<android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback: void onRotationLockStateChanged(boolean,boolean)>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.renderscript.Element: android.renderscript.Element I8_3(android.renderscript.RenderScript)>
<com.android.documentsui.dirlist.MultiSelectManager.SelectionEnvironment: int getChildCount()>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>
<android.renderscript.FieldPacker: android.renderscript.Short2 subShort2()>
<com.android.systemui.settings.ToggleSlider: boolean isChecked()>
<com.android.server.notification.EventConditionProvider: android.content.ComponentName getComponent()>
<com.android.systemui.recents.views.FreeformWorkspaceLayoutAlgorithm: void update(java.util.List,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<android.widget.ViewFlipper: void setFlipInterval(int)>
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>
<android.widget.ListView: void smoothScrollByOffset(int)>
<com.android.systemui.statusbar.phone.FingerprintUnlockController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarWindowManager,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.keyguard.KeyguardViewMediator,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.PhoneStatusBar)>
<android.location.GnssNavigationMessage: int getStatus()>
<android.app.Notification.WearableExtender: int getContentIconGravity()>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.ActivityManagerService: void closeSystemDialogs(java.lang.String)>
<com.android.server.storage.DiskStatsFileLogger: void dumpToFile(java.io.File)>
<android.media.tv.TvInputInfo: java.lang.String toString()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void ensureView()>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>
<android.content.CursorLoader: void onReset()>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context)>
<com.android.server.tv.UinputBridge: android.os.IBinder getToken()>
<com.android.location.provider.ActivityChangedEvent: void <init>(java.util.List)>
<android.renderscript.Element: android.renderscript.Element.DataKind getDataKind()>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>
<com.android.hotspot2.WifiNetworkAdapter: com.android.hotspot2.pps.HomeSP modifySP(com.android.hotspot2.pps.HomeSP,java.util.Collection)>
<android.view.View.OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isDismissable()>
<android.view.WindowManagerPolicy.WindowState: boolean isAnimatingLw()>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void countFrame()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.model.Task getFocusedTask()>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothStateChange(boolean)>
<com.android.settingslib.RestrictedSwitchPreference: void setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isDozing()>
<android.webkit.SslErrorHandler: void proceed()>
<android.provider.ContactsContract.ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>
<android.text.style.EasyEditSpan: int describeContents()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean isExpandable()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isProfileReady()>
<android.view.View: boolean canResolveTextDirection()>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setupActionBar()>
<com.android.tools.layoutlib.java.Charsets: void asciiBytesToChars(byte[],int,int,char[])>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>
<com.android.systemui.statusbar.BaseStatusBar: void toggleKeyboardShortcuts(int)>
<android.view.View.OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getWifiDataUsageInfo()>
<android.widget.TextView: boolean isTextSelectable()>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>
<com.android.systemui.qs.tiles.RotationLockTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.location.provider.ActivityRecognitionEvent: void <init>(java.lang.String,int,long)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation)>
<com.android.settingslib.bluetooth.A2dpProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<android.renderscript.ScriptIntrinsicBLAS: void ZSYR2K(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Double2,android.renderscript.Allocation)>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStarted()>
<com.android.systemui.recents.events.ui.dragndrop.DragEndEvent: void <init>(com.android.systemui.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.DropTarget)>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>
<android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>
<android.media.AudioTrack: android.media.AudioFormat getFormat()>
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>
<android.view.View: void setKeepScreenOn(boolean)>
<android.util.JsonReader: void endObject()>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView.OnKeyboardActionListener getOnKeyboardActionListener()>
<android.media.RemoteController: boolean sendMediaKeyEvent(android.view.KeyEvent)>
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.ExpandableListView: long getSelectedId()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: java.lang.String getInputEncoding()>
<com.android.server.connectivity.NetworkAgentInfo: int numNetworkRequests()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFingerprintDetectionRunning()>
<com.android.server.backup.Trampoline: void agentDisconnected(java.lang.String)>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.Context,android.net.Uri)>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>
<com.android.server.input.InputManagerService: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.systemui.statusbar.stack.AmbientState: void setDimmed(boolean)>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setSummaryText(java.lang.CharSequence)>
<android.util.BridgeXmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>
<android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowAlpha()>
<android.telecom.RemoteConnection: int getConnectionCapabilities()>
<android.os.health.HealthStats: int getMeasurementsKeyCount()>
<android.provider.ContactsContract.CommonDataKinds.Im: int getTypeLabelResource(int)>
<android.widget.TextView: void setAllCaps(boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setActualHeightAnimating(boolean)>
<android.renderscript.Allocation: long getStride()>
<android.app.Activity: void startPostponedEnterTransition()>
<android.transition.Explode: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>
<android.view.IWindowManagerImpl: void stopFreezingScreen()>
<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.example.android.networkusage.SettingsActivity: void onCreate(android.os.Bundle)>
<android.widget.CursorTreeAdapter: boolean isChildSelectable(int,int)>
<android.os.PowerManager: void goToSleep(long)>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>
<com.android.systemui.Prefs: void putLong(android.content.Context,java.lang.String,long)>
<android.view.View: void setSelected(boolean)>
<android.text.style.LocaleSpan: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvRecordingClient: void <init>(android.content.Context,java.lang.String,android.media.tv.TvRecordingClient.RecordingCallback,android.os.Handler)>
<android.speech.RecognitionService.Callback: void results(android.os.Bundle)>
<com.android.egg.neko.PrefState: void setListener(com.android.egg.neko.PrefState.PrefsListener)>
<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.opengl.GLES20: void glDetachShader(int,int)>
<android.service.voice.VoiceInteractionSession: void setDisabledShowContext(int)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
<com.android.server.am.ActivityManagerService.GrantUri: com.android.server.am.ActivityManagerService.GrantUri resolve(int,android.net.Uri)>
<com.android.systemui.statusbar.NotificationContentView: void setContentHeightAnimating(boolean)>
<com.android.systemui.qs.PagedTileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.UserSwitcherController getUserSwitcherController()>
<android.content.pm.ServiceInfo: void <init>()>
<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController get(com.android.server.job.JobSchedulerService)>
<android.graphics.Path: void <init>()>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryInputEnabled(boolean)>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>
<com.android.systemui.statusbar.policy.FlashlightController: void addListener(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<com.android.systemui.statusbar.NotificationGuts: void setClipTopAmount(int)>
<android.service.notification.NotificationListenerService.Ranking: int getImportance()>
<com.android.documentsui.dirlist.DirectoryFragment: com.android.documentsui.State getDisplayState()>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>
<com.android.server.RecoverySystemService: void onStart()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<android.view.SearchEvent: void <init>(android.view.InputDevice)>
<android.widget.AdapterView: android.view.View getEmptyView()>
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.ButtonDispatcher.ButtonInterface: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.documentsui.dirlist.AnimationView: void onSizeChanged(int,int,int,int)>
<android.view.ViewOverlay: void clear()>
<android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setPhoneAccount(android.telecom.PhoneAccountHandle)>
<com.android.wallpapercropper.CropView: void setScale(float)>
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>
<com.android.MainActivity.OSUService: void <init>()>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.view.animation.Animation: void setStartTime(long)>
<com.android.systemui.tuner.TunerFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.view.ViewParent: boolean canResolveTextAlignment()>
<android.renderscript.Matrix2f: void set(int,int,float)>
<com.android.systemui.statusbar.ExpandableView: void onHeightReset()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void rebootSafeMode(boolean)>
<com.android.server.trust.TrustAgentWrapper: boolean isManagingTrust()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void startKeyguardExitAnimation(long,long)>
<android.text.Layout: boolean isRtlCharAt(int)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>
<android.media.midi.MidiDeviceService: void onDeviceStatusChanged(android.media.midi.MidiDeviceStatus)>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPort[] getPorts()>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setInfoIntent(android.app.PendingIntent)>
<android.app.usage.UsageEvents: boolean hasNextEvent()>
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>
<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>
<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>
<com.android.systemui.egg.MLand: float rlerp(float,float,float)>
<android.database.CursorWrapper: byte[] getBlob(int)>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>
<android.hardware.Camera.Parameters: boolean getAutoWhiteBalanceLock()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setKeepInParent(boolean)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: void <init>(int,int)>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusPreviousTaskViewEvent)>
<com.android.tools.layoutlib.create.MethodAdapter: void onInvokeV(java.lang.String,boolean,java.lang.Object)>
<com.android.systemui.statusbar.NotificationContentView: void setSingleLineWidthIndention(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<com.android.systemui.statusbar.ExpandableView: int getCollapsedHeight()>
<android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer()>
<android.nfc.cardemulation.CardEmulation: boolean unsetPreferredService(android.app.Activity)>
<com.android.systemui.statusbar.policy.RemoteInputView: void afterTextChanged(android.text.Editable)>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void dump(java.io.PrintWriter)>
<com.android.location.provider.ActivityRecognitionProvider: void unregisterSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<android.util.ArraySet: void clear()>
<android.content.SyncAdapterType: boolean allowParallelSyncs()>
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connectProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<android.animation.ValueAnimator: void <init>()>
<com.android.systemui.recents.views.TaskStackView: java.lang.CharSequence getAccessibilityClassName()>
<android.net.Credentials: void <init>(int,int,int)>
<android.text.Layout: int getEllipsizedWidth()>
<com.android.systemui.egg.MLand: int irand(int,int)>
<com.android.server.notification.ZenLog: void traceSubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>
<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: void finishDeferredConfig(java.util.List)>
<android.security.keystore.KeyExpiredException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.commands.hid.Event: byte[] getDescriptor()>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.hardware.camera2.dispatch.BroadcastDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable[])>
<android.text.Layout: int getLineEnd(int)>
<android.telephony.CellIdentityCdma: int describeContents()>
<android.inputmethodservice.KeyboardView: void closing()>
<android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.Loader: void forceLoad()>
<android.provider.DocumentsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>
<android.os.Debug.MemoryInfo: int describeContents()>
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair jpegProduced()>
<android.hardware.radio.RadioManager.ProgramInfo: java.lang.String toString()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getMaxTranslationDistance()>
<android.hardware.camera2.marshal.MarshalRegistry: void registerMarshalQueryable(android.hardware.camera2.marshal.MarshalQueryable)>
<android.content.pm.LauncherApps.Callback: void onPackageChanged(java.lang.String,android.os.UserHandle)>
<android.view.KeyboardShortcutInfo: char getBaseCharacter()>
<android.graphics.drawable.VectorDrawable: int getAlpha()>
<android.os.Bundle: char getChar(java.lang.String)>
<android.view.ViewGroup: void detachViewFromParent(int)>
<android.net.RouteInfo: boolean equals(java.lang.Object)>
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>
<android.media.tv.TvInputService.Session: long onTimeShiftGetCurrentPosition()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStopped(boolean)>
<android.widget.TextView: void setMaxLines(int)>
<android.graphics.Path_Delegate: void setPathIterator(java.awt.geom.PathIterator)>
<android.widget.TextView: boolean setFrame(int,int,int,int)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeMax(int)>
<android.telecom.ParcelableCallAnalytics.EventTiming: long getTime()>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.KernelID getKernelID()>
<com.android.systemui.qs.customize.CustomizeTileView: void <init>(android.content.Context,com.android.systemui.qs.QSIconView)>
<com.android.systemui.volume.ZenFooter: void onConfigurationChanged()>
<android.hardware.camera2.dispatch.HandlerDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,android.os.Handler)>
<android.media.audiofx.EnvironmentalReverb: void <init>(int,int)>
<android.widget.Toolbar_Accessor: android.widget.ActionMenuPresenter getActionMenuPresenter(android.widget.Toolbar)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>
<android.graphics.ColorMatrix: void <init>(float[])>
<com.android.systemui.statusbar.phone.NavigationBarView: void setOnVerticalChangedListener(com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>
<android.net.LinkProperties: java.util.List getRoutes()>
<android.net.wifi.nan.SubscribeSettings.Builder: android.net.wifi.nan.SubscribeSettings.Builder setTtlSec(int)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.server.am.ActivityManagerService: boolean killPids(int[],java.lang.String,boolean)>
<com.android.systemui.statusbar.BaseStatusBar: boolean shouldPeek(com.android.systemui.statusbar.NotificationData.Entry)>
<android.text.style.QuoteSpan: void <init>()>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>
<android.view.Window: void setBackgroundDrawableResource(int)>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>
<com.android.server.pm.ShortcutService: void applyRestore(byte[],int)>
<android.graphics.drawable.Drawable: boolean isStateful()>
<android.media.audiofx.AudioEffect.Descriptor: void <init>()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallCaCerts(android.content.ComponentName,java.lang.String[])>
<android.graphics.drawable.BitmapDrawable: boolean canApplyTheme()>
<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onCheckIsTextEditor()>
<com.android.layoutlib.bridge.android.BridgeContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.media.session.MediaController.TransportControls: void skipToNext()>
<android.telecom.InCallService: boolean onUnbind(android.content.Intent)>
<android.renderscript.Element: android.renderscript.Element I32_3(android.renderscript.RenderScript)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setDimmed(boolean,boolean)>
<android.util.Spline.LinearSpline: float interpolate(float)>
<android.net.wifi.nan.SubscribeData.Builder: android.net.wifi.nan.SubscribeData.Builder setServiceSpecificInfo(java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void bindCameraPrewarmService()>
<com.android.hotspot2.IMSIParameter: void <init>(java.lang.String,boolean)>
<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void showSystemIconArea(boolean)>
<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>
<android.location.Criteria: void <init>()>
<android.drm.DrmInfo: java.lang.String getMimeType()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitCustomSlowCalls()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>
<android.animation.ValueAnimator: void reverse()>
<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.TabStops: float width(float)>
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void update()>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<android.view.View: boolean isFocused()>
<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.app.assist.AssistStructure.ViewNode: boolean isClickable()>
<android.renderscript.Element: android.renderscript.Element U64_2(android.renderscript.RenderScript)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverMetered(boolean)>
<com.android.documentsui.model.DocumentInfo: void <init>()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.qs.customize.TileAdapter.Holder: void startDrag()>
<com.android.systemui.qs.QuickQSPanel: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.hotspot2.asn1.Asn1Constructed: java.util.Collection getChildren()>
<android.renderscript.RenderScript: void finish()>
<com.android.systemui.tuner.DemoModeFragment: void onResume()>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String getRawText()>
<android.telecom.Connection: java.util.List getConferenceables()>
<android.os.Parcel: void writeFloat(float)>
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getProfileVpnName()>
<android.widget.TextView: int getCompoundDrawablePadding()>
<com.android.systemui.volume.ZenModePanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.volume.VolumeDialogController: void getState()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIconGravity(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setInvalidatedByBiometricEnrollment(boolean)>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void onConfigurationChanged(android.content.res.Configuration)>
<android.nfc.Tag: int describeContents()>
<com.android.documentsui.PickFragment: com.android.documentsui.PickFragment get(android.app.FragmentManager)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>
<com.android.systemui.recents.views.TaskViewHeader: void onDrawForeground(android.graphics.Canvas)>
<com.android.systemui.tuner.ClipboardView: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.radio.RadioManager.AmBandConfig: int hashCode()>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.qs.TouchAnimator: void setPosition(float)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.am.ActivityManagerService: int getTaskForActivity(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.car.CarStatusBar: void repositionNavigationBar()>
<android.text.method.ArrowKeyMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.content.IntentFilter: java.util.Iterator categoriesIterator()>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void removeProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<android.renderscript.Double4: void <init>(double,double,double,double)>
<android.widget.TextView: void setTextLocale(java.util.Locale)>
<com.android.settingslib.drawable.UserIconDrawable: void setIntrinsicSize(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener)>
<android.text.style.TypefaceSpan: void <init>(java.lang.String)>
<android.os.BatteryStats.Timer: long getMaxDurationMsLocked(long)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onSurfacePrepared(android.view.Surface)>
<com.android.systemui.qs.QSContainer: void setListening(boolean)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>
<com.android.systemui.statusbar.ServiceMonitor: boolean isPackageAvailable()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.webkit.WebView: void enablePlatformNotifications()>
<android.database.Cursor: boolean isAfterLast()>
<com.android.server.am.ActivityManagerService: void setSystemProcess()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isUnlockWithWallpaper()>
<com.android.systemui.statusbar.BaseStatusBar: boolean isLockscreenPublicMode()>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.android.systemui.qs.tiles.BluetoothTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.systemui.statusbar.BaseStatusBar: void onGutsClosed(com.android.systemui.statusbar.NotificationGuts)>
<android.transition.Fade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.server.net.NetworkStatsService: void forceUpdateIfaces()>
<com.android.preload.actions.ClearTableAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glScissor(int,int,int,int)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>
<android.net.http.X509TrustManagerExtensions: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>
<android.widget.DialerFilter: void append(java.lang.String)>
<android.webkit.WebMessagePort: void setWebMessageCallback(android.webkit.WebMessagePort.WebMessageCallback)>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>
<android.widget.AbsListView: void draw(android.graphics.Canvas)>
<com.android.server.fingerprint.EnrollClient: int stop(boolean)>
<android.hardware.usb.UsbDevice: int getProductId()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<com.android.printspooler.ui.PrintActivity: void onMalformedPdfFile()>
<android.widget.FrameLayout.LayoutParams: void <init>(android.widget.FrameLayout.LayoutParams)>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap createBitmap(java.io.InputStream,boolean,com.android.resources.Density)>
<com.android.server.LockGuard: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.Switch: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.text.style.BulletSpan: void <init>(int,int)>
<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>
<com.android.systemui.recents.tv.views.TaskCardView: void startDismissTaskAnimation(android.animation.Animator.AnimatorListener)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: java.lang.String getClassAttribute()>
<com.android.hotspot2.osu.OSUInfo: void setIconFileElement(com.android.anqp.HSIconFileElement,java.lang.String)>
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()>
<android.telecom.Call.Details: java.lang.String capabilitiesToString(int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(java.nio.IntBuffer)>
<com.android.server.statusbar.StatusBarManagerService: void setSystemUiVisibility(int,int,java.lang.String)>
<android.telecom.Connection: void removeExtras(java.lang.String[])>
<com.android.systemui.qs.QSIconView: void setIcon(com.android.systemui.qs.QSTile.State)>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<android.content.pm.PackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>
<com.android.server.pm.UserManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArray(byte[],com.android.documentsui.model.Durable)>
<android.content.BroadcastReceiver: int getResultCode()>
<android.database.CursorWindow: int getInt(int,int)>
<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.DessertCaseView.RescalingContainer: void setDarkness(float)>
<com.android.uiautomator.core.UiDevice: boolean pressSearch()>
<android.drm.DrmRights: java.lang.String getAccountId()>
<com.android.systemui.statusbar.policy.SplitClockView: void onAttachedToWindow()>
<android.view.MotionEvent: float getHistoricalSize(int,int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.CachedBluetoothDeviceManager getCachedDeviceManager()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onSizeChanged(int,int,int,int)>
<android.content.ComponentName: java.lang.String getClassName()>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onPrepared(int)>
<android.text.BoringLayout: int getBottomPadding()>
<com.android.systemui.settings.CurrentUserTracker: void startTracking()>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>
<com.android.server.job.JobServiceContext: void acknowledgeStopMessage(int,boolean)>
<com.android.documentsui.BaseActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeMax(int)>
<com.android.server.accounts.AccountManagerService.Lifecycle: void <init>(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>
<android.media.Rating: android.media.Rating newThumbRating(boolean)>
<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
<com.android.server.policy.ImmersiveModeConfirmation: android.os.IBinder getWindowToken()>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void <init>(android.content.Context)>
<android.printservice.CustomPrinterIconCallback: boolean onCustomPrinterIconLoaded(android.graphics.drawable.Icon)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>
<android.view.textservice.TextInfo: void <init>(java.lang.CharSequence,int,int,int,int)>
<android.content.ContentProvider: java.lang.String getWritePermission()>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>
<android.view.WindowManagerPolicy.WindowState: boolean isDefaultDisplay()>
<android.preference.RingtonePreference: void setShowDefault(boolean)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void waitUntilIdle()>
<android.hardware.radio.RadioManager.ModuleProperties: int getNumAudioSources()>
<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>
<android.telecom.RemoteConference: void swap()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeathOnNetwork()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void applyTint(android.view.View,int)>
<com.android.server.wm.TaskTapPointerEventListener: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.DisplayContent)>
<android.graphics.drawable.RotateDrawable: void setPivotYRelative(boolean)>
<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>
<com.android.systemui.analytics.SensorLoggerSession: com.android.systemui.statusbar.phone.TouchAnalyticsProto.Session toProto()>
<com.google.android.gles_jni.GLImpl: void glEnable(int)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String,int)>
<android.content.DialogInterface.OnDismissListener: void onDismiss(android.content.DialogInterface)>
<android.sax.Element: java.lang.String toString()>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>
<android.provider.DocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<com.android.printspooler.ui.FusedPrintersProvider: void onAbandon()>
<com.android.server.am.BroadcastQueue: boolean isPendingBroadcastProcessLocked(int)>
<android.media.audiofx.PresetReverb: short getPreset()>
<android.os.PersistableBundle: java.lang.Object clone()>
<com.android.server.LockSettingsService.Lifecycle: void onUnlockUser(int)>
<android.app.assist.AssistStructure.ViewNode: int getTextColor()>
<android.app.Notification.Builder: android.app.Notification build()>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo)>
<com.android.server.audio.AudioService.VolumeController: void loadSettings(android.content.ContentResolver)>
<android.app.Presentation: android.view.Display getDisplay()>
<android.view.View: void measure(int,int)>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>
<com.android.systemui.statusbar.phone.ManagedProfileController.Callback: void onManagedProfileChanged()>
<com.android.gallery3d.glrenderer.GLCanvas: void setAlpha(float)>
<android.view.View: int getLeft()>
<com.android.systemui.qs.tiles.LocationTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: int getId()>
<android.provider.MediaStore.Audio.Playlists: android.net.Uri getContentUri(java.lang.String)>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String)>
<com.android.server.usb.UsbPortManager: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideEnded()>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<com.android.server.media.MediaSessionRecord: void binderDied()>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int)>
<android.hardware.camera2.legacy.LegacyRequest: void <init>(android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.CaptureRequest,android.util.Size,android.hardware.Camera.Parameters)>
<com.android.server.pm.PackageManagerService: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.graphics.drawable.LayerDrawable: void getHotspotBounds(android.graphics.Rect)>
<android.print.PrintDocumentInfo: java.lang.String getName()>
<com.android.systemui.egg.MLand: float getGameTime()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void draw(android.graphics.Canvas)>
<android.view.IWindowManagerImpl: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,float)>
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView.RecyclerListener)>
<com.android.commands.uiautomator.DumpCommand: java.lang.String shortHelp()>
<com.android.layoutlib.bridge.util.ReflectionUtils.ReflectionException: void <init>(java.lang.Throwable)>
<android.location.Criteria: boolean isSpeedRequired()>
<android.hardware.radio.RadioManager.BandConfig: int getType()>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setDescription(java.lang.String)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle bigText(java.lang.CharSequence)>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>
<android.graphics.DiscretePathEffect_Delegate: boolean isSupported()>
<android.text.style.BackgroundColorSpan: void <init>(int)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean startMovingTask(android.view.IWindow,float,float)>
<com.android.server.am.ContentProviderConnection: java.lang.String toString()>
<com.android.settingslib.net.DataUsageController: void setMobileDataEnabled(boolean)>
<com.android.server.UiThread: android.os.Handler getHandler()>
<android.net.wifi.RttManager.RttParams: void <init>()>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.String,android.os.Bundle)>
<android.media.MediaRouter.Callback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.net.Network: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.os.storage.IObbActionListener.Stub: void <init>()>
<android.widget.TextView: void setMinHeight(int)>
<com.android.photos.BitmapRegionTileSource: int getImageHeight()>
<com.android.server.location.GeofenceManager: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.os.BatteryStats.HistoryItem: int describeContents()>
<com.android.gallery3d.common.Utils: int compare(long,long)>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterInfo)>
<android.inputmethodservice.InputMethodService: void onCreate()>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>
<android.view.Window: void setFormat(int)>
<com.android.photos.views.TiledImageRenderer: void setViewSize(int,int)>
<android.view.inputmethod.CompletionInfo: int getPosition()>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>
<android.app.Activity: android.view.SearchEvent getSearchEvent()>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>
<android.telecom.Call: void removeExtras(java.lang.String[])>
<android.service.voice.VoiceInteractionSession: void onCancelRequest(android.service.voice.VoiceInteractionSession.Request)>
<android.os.Handler: java.lang.String getMessageName(android.os.Message)>
<android.bluetooth.BluetoothGattCallback: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)>
<android.service.notification.StatusBarNotification: java.lang.String getOverrideGroupKey()>
<com.android.server.SystemConfig: android.util.ArraySet getDefaultVrComponents()>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>
<com.android.systemui.recents.views.TaskView: void onStartLaunchTargetLaunchAnimation(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
<com.android.systemui.recents.events.EventBus.InterprocessEvent: android.os.Bundle toBundle()>
<com.android.server.pm.PackageManagerService: boolean isStorageLow()>
<android.content.UriPermission: void writeToParcel(android.os.Parcel,int)>
<android.view.MotionEvent: float getY(int)>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>
<com.android.server.updates.IntentFirewallInstallReceiver: void <init>()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothManager getInstance(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback)>
<android.os.Process: void sendSignal(int,int)>
<android.view.IWindowManagerImpl: void pauseKeyDispatching(android.os.IBinder)>
<com.android.systemui.volume.VolumePrefs: boolean get(android.content.Context,java.lang.String,boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void announceCurrentSecurityMethod()>
<android.content.pm.PackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.settingslib.SuggestionParser: boolean isSupported(com.android.settingslib.drawer.Tile)>
<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.os.IBinder asBinder()>
<android.view.MotionEvent.PointerProperties: int hashCode()>
<com.android.systemui.recents.views.RecentsView: boolean isLastTaskLaunchedFreeform()>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(android.graphics.Bitmap)>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,int[],int)>
<com.android.systemui.analytics.DataCollector: void onNotificationActive()>
<android.hardware.radio.RadioManager.FmBandConfig: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: boolean unlockUser(int,byte[],byte[],android.os.IProgressListener)>
<android.media.MediaDrm: void <init>(java.util.UUID)>
<android.app.DatePickerDialog: void setOnDateSetListener(android.app.DatePickerDialog.OnDateSetListener)>
<com.android.server.audio.AudioService.VolumeStreamState: boolean setIndex(int,int,java.lang.String)>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
<com.android.systemui.recents.RecentsImpl: void onShowCurrentUserToast(int,int)>
<android.os.health.HealthStats: boolean hasStats(int)>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>
<android.widget.RatingBar: boolean isIndicator()>
<com.android.server.backup.Trampoline: void fullTransportBackup(java.lang.String[])>
<com.android.server.DeviceIdleController: boolean removePowerSaveWhitelistAppInternal(java.lang.String)>
<android.net.wifi.p2p.WifiP2pConfig: int describeContents()>
<com.android.server.notification.NotificationManagerService.NotificationRankers: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onPanelTrackingStopped()>
<android.text.StaticLayout: int getLineStart(int)>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<com.android.server.input.InputManagerService: int isInTabletMode()>
<com.android.documentsui.RootsCache: com.android.documentsui.model.RootInfo getRootBlocking(java.lang.String,java.lang.String)>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>
<com.android.mtp.AppFuse.Callback: void flushFileHandle(long)>
<android.widget.ScrollView: boolean shouldDelayChildPressedState()>
<android.view.ViewStructure: void setHint(java.lang.CharSequence)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.telecom.Connection: int getState()>
<android.content.SyncAdapterType: int describeContents()>
<android.graphics.Canvas_Delegate: void native_getCTM(long,long)>
<com.android.systemui.statusbar.notification.NotificationBigTextTemplateViewWrapper: void updateTransformedTypes()>
<android.location.GpsStatus: int getTimeToFirstFix()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational[] getValueAsRationals()>
<com.android.systemui.statusbar.AnimatedImageView: void setImageResource(int)>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>
<android.media.MediaMuxer: void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec.BufferInfo)>
<com.android.settingslib.bluetooth.PanProfile: java.lang.String toString()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.notification.RankingHelper: java.util.Map getPackageBans()>
<com.android.wallpapercropper.WallpaperCropActivity: void setCropViewTileSource(com.android.photos.BitmapRegionTileSource.BitmapSource,boolean,boolean,java.lang.Runnable)>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>
<com.google.android.util.Procedure: void apply(java.lang.Object)>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>
<com.android.server.policy.PhoneWindowManager: int focusChangedLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<com.android.server.pm.UserManagerService.LifeCycle: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: android.graphics.Bitmap getEphemeralApplicationIcon(java.lang.String,int)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteri(int,int,int)>
<android.content.ComponentName: java.lang.String getShortClassName()>
<android.view.View.AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.media.tv.TvInputService.Session: void setOverlayViewEnabled(boolean)>
<android.speech.tts.SynthesisCallback: void error()>
<com.android.server.usb.UsbDebuggingManager: void clearUsbDebuggingKeys()>
<com.android.systemui.tv.pip.PipRecentsControlsView: void onFinishInflate()>
<com.android.systemui.statusbar.stack.StackViewState: void copyFrom(com.android.systemui.statusbar.stack.ViewState)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalGridView: com.android.systemui.recents.model.TaskStack getStack()>
<android.bluetooth.BluetoothGattServer: boolean addService(android.bluetooth.BluetoothGattService)>
<android.speech.tts.SynthesisCallback: int getMaxBufferSize()>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<android.text.util.Rfc822Token: java.lang.String getAddress()>
<android.widget.Toolbar: void collapseActionView()>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.hardware.camera2.params.ColorSpaceTransform: android.util.Rational getElement(int,int)>
<android.app.FragmentTransaction: void commitNow()>
<com.android.server.retaildemo.UserInactivityCountdownDialog: void setPositiveButtonClickListener(android.view.View.OnClickListener)>
<android.webkit.WebView: boolean pageDown(boolean)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: long getItemId(int)>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onLayoutDirectionChanged(int)>
<android.app.assist.AssistStructure.WindowNode: int getDisplayId()>
<com.android.systemui.statusbar.CommandQueue: void setWindowState(int,int)>
<javax.microedition.khronos.opengles.GL11: boolean glIsTexture(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardBouncerChanged(boolean)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>
<android.widget.StackView: java.lang.CharSequence getAccessibilityClassName()>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>
<android.view.ScaleGestureDetector: float getPreviousSpanX()>
<android.app.Activity: int getVolumeControlStream()>
<com.android.systemui.recents.tv.views.RecentsTvView: void hideEmptyView()>
<android.graphics.drawable.NinePatchDrawable: void getOutline(android.graphics.Outline)>
<android.content.res.Configuration: void setToDefaults()>
<android.widget.Checkable: void toggle()>
<com.android.server.wm.KeyguardDisableHandler: void handleMessage(android.os.Message)>
<android.media.tv.TvInputService.RecordingSession: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>
<com.android.systemui.volume.VolumeDialogController.Callbacks: void onStateChanged(com.android.systemui.volume.VolumeDialogController.State)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void close()>
<android.location.Location: void removeBearing()>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,java.nio.IntBuffer)>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAccountManagementDisabled(android.content.Context,java.lang.String,int)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void measure()>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<com.android.systemui.qs.tiles.BatteryTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onCameraLaunchGestureDetected(int)>
<android.view.ViewGroup.MarginLayoutParams: int getMarginStart()>
<com.android.server.net.NetworkStatsRecorder: com.android.server.net.NetworkStatsCollection getOrLoadCompleteLocked()>
<android.net.wifi.WifiManager: boolean isTdlsSupported()>
<android.view.WindowCallback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setKeyValidityEnd(java.util.Date)>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)>
<com.android.hotspot2.osu.OSUManager: void pushScanResults(java.util.Collection)>
<com.android.systemui.statusbar.phone.PanelView: void expand(boolean)>
<android.transition.Slide: void <init>()>
<android.database.CursorWrapper: boolean moveToPosition(int)>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>
<com.android.hotspot2.IMSIParameter: int hashCode()>
<com.android.server.tv.TvRemoteService: void monitor()>
<android.os.UserManager: long getUserCreationTime(android.os.UserHandle)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setNoRetry(boolean)>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>
<com.android.systemui.recents.tv.views.TaskStackHorizontalViewAdapter: void <init>(java.util.List)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getFocusState()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onWifiStateChanged(int)>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canCloseOptions()>
<com.android.layoutlib.bridge.impl.DelegateManager: void dump(java.io.PrintStream)>
<com.android.systemui.stackdivider.DividerView: void setAdjustedForIme(boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.gallery3d.common.Utils: int prevPowerOf2(int)>
<android.text.Layout: int getLineForOffset(int)>
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)>
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
<android.app.admin.SecurityLog.SecurityEvent: int getTag()>
<android.view.inputmethod.InputBinding: int describeContents()>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnTouchListener(android.view.View.OnTouchListener)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitSource(java.lang.String,java.lang.String)>
<com.android.server.notification.ScheduleCalendar: boolean shouldExitForAlarm(long)>
<android.media.AudioRecord: int read(short[],int,int)>
<android.os.BatteryStats.Uid: long getWifiRunningTime(long,int)>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>
<android.preference.Preference: boolean isSelectable()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTouchSlopExceeded()>
<com.android.anqp.eap.ExpandedEAPMethod: long getVendorType()>
<com.android.systemui.SwipeHelper.Callback: float getFalsingThresholdFactor()>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionCancelled()>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<android.media.Image: android.graphics.Rect getCropRect()>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>
<android.os.BatteryStats.Uid.Proc: long getSystemTime(int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String toString()>
<com.android.systemui.recents.views.TaskStackView: void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack)>
<android.media.browse.MediaBrowser.ItemCallback: void onItemLoaded(android.media.browse.MediaBrowser.MediaItem)>
<com.android.systemui.tuner.ClipboardView: void stopListening()>
<android.media.RingtoneManager: void <init>(android.content.Context)>
<android.view.WindowCallback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>
<android.hardware.display.VirtualDisplay.Callback: void onStopped()>
<android.hardware.camera2.utils.ParamsUtils: void convertRectF(android.graphics.Rect,android.graphics.RectF)>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.server.am.ActivityManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ResultReceiver)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int)>
<android.view.ViewParent: void clearChildFocus(android.view.View)>
<android.hardware.camera2.legacy.ParameterUtils: int getClosestAvailableZoomCrop(android.hardware.Camera.Parameters,android.graphics.Rect,android.util.Size,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.os.LocaleList: android.os.LocaleList getEmptyLocaleList()>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.microedition.khronos.egl.EGL10: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<com.android.documentsui.dirlist.DocumentHolder: void addOnKeyListener(android.view.View.OnKeyListener)>
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(android.hardware.Camera.Size,android.hardware.Camera.Size)>
<com.android.server.Watchdog.HandlerChecker: java.lang.String getName()>
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setTranslation(float)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void updateBackgroundTint()>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>
<com.android.layoutlib.bridge.android.BridgePowerManager: void shutdown(boolean,java.lang.String,boolean)>
<android.os.IPowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>
<com.google.android.util.AbstractMessageParser: int getPartCount()>
<com.android.gallery3d.exif.ExifTag: int[] getValueAsInts()>
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()>
<android.app.NotificationManager.Policy: void <init>(int,int,int)>
<android.view.animation.PathInterpolator: void <init>(float,float)>
<android.media.MediaRouter.SimpleCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.app.FragmentHostCallback: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<com.android.server.pm.UserManagerService: boolean isQuietModeEnabled(int)>
<android.view.animation.LayoutAnimationController: void start()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>
<com.android.systemui.recents.misc.FreePathInterpolator: float getArcLength()>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>
<android.text.SpannableStringBuilder: char charAt(int)>
<android.view.View: void setScrollBarSize(int)>
<com.android.server.lights.LightsService: void finalize()>
<android.renderscript.ScriptIntrinsicHistogram: void setOutput(android.renderscript.Allocation)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.tools.layoutlib.java.Charsets: void isoLatin1BytesToChars(byte[],int,int,char[])>
<com.android.layoutlib.bridge.android.AndroidLocale: java.util.Locale getDefault()>
<com.android.systemui.qs.QSContainer: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isInputRestricted()>
<android.bluetooth.BluetoothGattServer: java.util.List getServices()>
<com.android.documentsui.model.DurableUtils: java.lang.String readNullableString(java.io.DataInputStream)>
<com.android.documentsui.DocumentsToolbar: android.view.MenuItem getSearchMenu()>
<android.media.SoundPool: void resume(int)>
<android.media.MediaRecorder: void setVideoFrameRate(int)>
<com.android.systemui.statusbar.StackScrollerDecorView: boolean hasOverlappingRendering()>
<android.widget.ListPopupWindow: int getSelectedItemPosition()>
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)>
<android.content.ContentValues: boolean equals(java.lang.Object)>
<android.renderscript.Script: void invoke(int)>
<com.android.systemui.recents.views.TaskView: void onTaskBound(com.android.systemui.recents.model.Task,boolean,int,android.graphics.Rect)>
<android.app.Fragment: void onTrimMemory(int)>
<com.google.android.gles_jni.EGLContextImpl: int hashCode()>
<com.android.server.am.ActivityManagerService: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isInputRestricted()>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>
<android.view.animation.OvershootInterpolator: void <init>()>
<android.widget.TextView: void setInputType(int)>
<com.google.android.gles_jni.GLImpl: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List queryBroadcastReceiversAsUser(android.content.Intent,int,int)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,boolean)>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>
<com.android.server.pm.Policy: java.util.Set getSignatures()>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,int,android.content.ComponentName[],android.content.ComponentName,boolean)>
<android.widget.TextView: boolean getIncludeFontPadding()>
<android.app.ActivityManagerProxy: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<com.android.systemui.statusbar.policy.WifiSignalController: com.android.systemui.statusbar.policy.WifiSignalController.WifiState cleanState()>
<android.util.PrintStreamPrinter: void println(java.lang.String)>
<android.media.ToneGenerator: boolean startTone(int)>
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(android.location.GnssNavigationMessageEvent.Callback)>
<com.android.systemui.qs.tiles.DataSaverTile: java.lang.CharSequence getTileLabel()>
<android.database.MergeCursor: boolean isNull(int)>
<com.android.systemui.statusbar.policy.NetworkController: void setWifiEnabled(boolean)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>
<com.android.systemui.qs.QSTile: int getMetricsCategory()>
<com.android.server.trust.TrustAgentWrapper: boolean isBound()>
<com.android.hotspot2.omadm.MOTree: java.lang.String toXml()>
<android.webkit.WebView: void findNext(boolean)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>
<android.media.AudioManager: void setStreamMute(int,boolean)>
<android.view.KeyboardShortcutInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.recents.model.TaskStack: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.notification.ZenLog: void traceDowntimeAutotrigger(java.lang.String)>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>
<android.widget.PopupWindow: boolean isShowing()>
<android.graphics.BlendComposite: java.awt.CompositeContext createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)>
<com.android.documentsui.RootsList: void <init>(android.content.Context)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context)>
<android.opengl.GLES10: void glPointSize(float)>
<com.android.layoutlib.bridge.libcore.io.BridgeBufferIterator: void skip(int)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int,int)>
<com.android.systemui.classifier.PointerCountEvaluator: float evaluate(int)>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String toString()>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins getMinMargins()>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onRecognition(android.hardware.soundtrigger.SoundTrigger.RecognitionEvent)>
<android.os.Process: void setThreadPriority(int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void updateDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String,java.lang.Exception)>
<android.opengl.GLES10: void glClientActiveTexture(int)>
<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener: void onUtteranceCompleted(java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
<com.android.server.AppOpsService: void publish(android.content.Context)>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<com.android.systemui.ViewInvertHelper: void fade(boolean,long)>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isCountdownConditionSupported()>
<android.service.carrier.CarrierMessagingService.SendSmsResult: int getSendStatus()>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.server.statusbar.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedGoingToSleep(int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(int[],int)>
<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideStarted(boolean,float,float)>
<android.telecom.Call.Details: boolean hasProperty(int,int)>
<com.android.systemui.statusbar.phone.StatusBarIconList: int getViewIndex(int)>
<android.graphics.drawable.LayerDrawable: int getLayerInsetTop(int)>
<android.app.admin.DevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<android.util.TimingLogger: void dumpToLog()>
<com.android.server.net.NetworkPolicyManagerService: void registerListener(android.net.INetworkPolicyListener)>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>
<android.service.quicksettings.TileService: void onStartListening()>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void choosePrivateKeyAlias(int,android.net.Uri,java.lang.String,android.os.IBinder)>
<android.renderscript.Float4: void <init>()>
<android.util.Rational: int getNumerator()>
<android.widget.TextView: void debug(int)>
<com.android.systemui.qs.tiles.DataSaverTile: void setListening(boolean)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void onDestroy()>
<com.android.keyguard.KeyguardPasswordView: int getWrongPasswordStringId()>
<android.opengl.GLES20: void glBindTexture(int,int)>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>
<android.app.usage.NetworkStats.Bucket: void <init>()>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>
<com.google.android.gles_jni.EGLContextImpl: void <init>(long)>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<android.view.animation.Animation: void reset()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.egg.neko.NekoLockedActivity: void onDismiss(android.content.DialogInterface)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getAttributeCount()>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>
<com.android.systemui.volume.MediaSessions.Callbacks: void onRemoteVolumeChanged(android.media.session.MediaSession.Token,int)>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
<android.opengl.GLES10: java.lang.String glGetString(int)>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<android.telecom.Call: android.telecom.Call getParent()>
<android.view.WindowAnimationFrameStats: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<com.android.systemui.recents.views.TaskView: com.android.systemui.recents.model.Task getTask()>
<com.android.tools.layoutlib.java.LinkedHashMap_Delegate: java.util.Map.Entry eldest(java.util.LinkedHashMap)>
<com.android.systemui.statusbar.stack.StackScrollState: void apply()>
<android.net.Uri.Builder: android.net.Uri.Builder clearQuery()>
<android.speech.tts.SynthesisCallback: boolean hasStarted()>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>
<android.telecom.RemoteConnection.Callback: void onDisconnected(android.telecom.RemoteConnection,android.telecom.DisconnectCause)>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>
<com.android.server.wm.TaskGroup: java.lang.String toString()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityService.MagnificationController getMagnificationController()>
<android.os.BaseBundle: boolean getBoolean(java.lang.String)>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>
<com.android.server.am.ActivityManagerService: boolean unbindService(android.app.IServiceConnection)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.policy.BluetoothController: java.util.Collection getDevices()>
<android.webkit.WebView: android.os.Handler getHandler()>
<android.widget.ZoomButton: void setZoomSpeed(long)>
<android.view.inputmethod.InputBinding: java.lang.String toString()>
<com.android.systemui.statusbar.NotificationContentView: void reInflateViews()>
<com.android.server.am.ActivityManagerService: void appNotRespondingViaProvider(android.os.IBinder)>
<android.renderscript.Mesh.Builder: void <init>(android.renderscript.RenderScript,int)>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setSystemUiVisibility(int,int,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.util.LruCache: int putCount()>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.Exception)>
<android.app.usage.NetworkStatsManager: android.app.usage.NetworkStats.Bucket querySummaryForUser(int,java.lang.String,long,long)>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceDisconnected(int)>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>
<android.app.FragmentManagerImpl: void popBackStack()>
<android.webkit.WebView: android.view.View findFocus()>
<android.app.ActivityManagerProxy: void setRenderThread(int)>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,int[],int)>
<android.app.ActivityManagerProxy: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>
<android.text.method.ReplacementTransformationMethod: char[] getReplacement()>
<android.graphics.Canvas: boolean isHardwareAccelerated()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)>
<com.android.hotspot2.pps.Credential: java.lang.String getUserName()>
<com.android.systemui.recents.events.EventBus.InterprocessEvent: void <init>(android.os.Bundle)>
<android.speech.tts.SynthesisRequest: int getCallerUid()>
<com.android.systemui.recents.views.TaskStackView: void onFocusStateChanged(int,int)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setTexture(android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode,android.renderscript.ProgramFragmentFixedFunction.Builder.Format,int)>
<com.android.layoutlib.bridge.Bridge: java.util.EnumSet getCapabilities()>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(java.lang.String)>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
<android.widget.PopupWindow: void update(int,int,int,int,boolean)>
<android.service.voice.VoiceInteractionSession: void onRequestPickOption(android.service.voice.VoiceInteractionSession.PickOptionRequest)>
<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,java.nio.IntBuffer)>
<android.widget.Editor.HandleView: void invalidate()>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.KernelID getKernelID()>
<android.renderscript.ScriptIntrinsicBLAS: void ZHER2K(int,int,android.renderscript.Double2,android.renderscript.Allocation,android.renderscript.Allocation,double,android.renderscript.Allocation)>
<android.renderscript.Double3: void <init>()>
<com.android.keyguard.KeyguardSecurityView: boolean needsInput()>
<android.os.ParcelFileDescriptor.FileDescriptorDetachedException: void <init>()>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>
<com.android.systemui.qs.QuickQSPanel: void onAttachedToWindow()>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void restore()>
<com.android.layoutlib.bridge.bars.OverflowMenuAdapter: int getCount()>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>
<android.widget.RadioButton: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.volume.SegmentedButtons: void setCallback(com.android.systemui.volume.SegmentedButtons.Callback)>
<com.android.systemui.statusbar.phone.ActivityStarter: void startActivity(android.content.Intent,boolean)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.legacy.RequestHolder: int numPreviewTargets()>
<com.android.gallery3d.exif.ExifTag: boolean hasValue()>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>
<android.content.pm.PackageParser.ProviderIntentInfo: void <init>(android.content.pm.PackageParser.Provider)>
<com.android.fakeoemfeatures.FakeView: void <init>(android.content.Context)>
<android.os.storage.MountServiceInternal.ExternalStorageMountPolicy: int getMountMode(int,java.lang.String)>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<com.android.documentsui.dirlist.DocumentHolder: void addEventListener(com.android.documentsui.dirlist.DocumentHolder.EventListener)>
<com.android.server.pm.PackageManagerService: void resetRuntimePermissions()>
<com.android.server.am.DumpHeapProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.systemui.ResizingSpace: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.Notification.WearableExtender: android.app.PendingIntent getDisplayIntent()>
<android.media.MediaCodec.Callback: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<android.text.SpannableStringBuilder: void clear()>
<android.telephony.SubscriptionInfo: android.graphics.Bitmap createIconBitmap(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int movePackage(java.lang.String,android.os.storage.VolumeInfo)>
<com.android.systemui.recents.tv.views.RecentsTvView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTvTaskEvent)>
<android.widget.SlidingDrawer: android.view.View getContent()>
<com.android.systemui.qs.QSTile: void userSwitch(int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void finalize()>
<android.opengl.GLES20: void glDisable(int)>
<android.view.animation.Transformation: void setTransformationType(int)>
<android.view.ActionMode.Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.content.DialogInterface.OnShowListener: void onShow(android.content.DialogInterface)>
<android.renderscript.Matrix3f: void loadScale(float,float)>
<com.android.systemui.classifier.FalsingManager: void onSensorChanged(android.hardware.SensorEvent)>
<android.widget.PopupWindow: void setAttachedInDecor(boolean)>
<com.android.server.am.ActivityManagerService: boolean isVrModePackageEnabled(android.content.ComponentName)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAuxiliary(boolean)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getProxCheckBeforePulse()>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.hardware.Sensor: float getPower()>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>
<android.view.IWindowManagerImpl: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>
<com.android.layoutlib.bridge.bars.BridgeActionBar: android.view.LayoutInflater getInflater(com.android.layoutlib.bridge.android.BridgeContext)>
<android.telephony.ServiceState: void setStateOff()>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.pps.HomeSP modifySP(com.android.hotspot2.pps.HomeSP,java.util.Collection,com.android.hotspot2.osu.OSUManager)>
<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>
<com.android.server.am.ActivityManagerService: void notifyLockedProfile(int)>
<android.opengl.EGL14: int eglGetError()>
<android.renderscript.BaseObj: void finalize()>
<com.android.systemui.recents.model.TaskStack.DockState: android.graphics.Rect getPreDockedBounds(int,int,android.graphics.Rect)>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setExpanded(boolean)>
<com.android.documentsui.model.RootInfo: boolean isImages()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISession getSessionBinder()>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void startFinishDozeAnimation()>
<com.android.layoutlib.bridge.android.BridgeContext: int checkPermission(java.lang.String,int,int)>
<android.view.View: void announceForAccessibility(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void requestDisallowDismiss()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: void <init>(long,android.view.MotionEvent)>
<android.view.KeyEvent: int getScanCode()>
<com.android.server.net.NetworkStatsCollection: android.net.NetworkStats getSummary(android.net.NetworkTemplate,long,long,int,int)>
<com.android.hotspot2.omadm.OMANode: com.android.hotspot2.omadm.OMAConstructed unmarshal(java.io.InputStream)>
<android.text.style.TtsSpan.TimeBuilder: void <init>()>
<android.animation.PropertyValuesHolder: void setIntValues(int[])>
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<com.android.server.statusbar.StatusBarManagerService: void registerStatusBar(com.android.internal.statusbar.IStatusBar,java.util.List,java.util.List,int[],java.util.List,android.graphics.Rect,android.graphics.Rect)>
<android.view.View: void setSystemUiVisibility(int)>
<android.filterpacks.imageproc.FillLightFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.systemui.stackdivider.DividerView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionPixels()>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<com.android.hotspot2.asn1.Asn1Oid: void <init>(int,com.android.hotspot2.asn1.Asn1Class,int,java.nio.ByteBuffer)>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.android.server.pm.PermissionsState: boolean hasRuntimePermission(java.lang.String,int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.HideIncompatibleAppOverlayEvent)>
<android.text.TextUtils.SimpleStringSplitter: void remove()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: int describeContents()>
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus.NmeaListener)>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>
<com.android.server.usb.MtpNotificationManager.OnOpenInAppListener: void onOpenInApp(android.hardware.usb.UsbDevice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getMaximumTimeToLockForUserAndProfiles(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void prepareForEnterAnimation()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<android.text.SpannableStringBuilder: void <init>()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setQSPanel(com.android.systemui.qs.QSPanel)>
<android.view.View: boolean isLayoutRequested()>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.text.BidiFormatter.Builder: void <init>()>
<com.android.hotspot2.omadm.MultiValueMap: java.lang.Object getSingletonValue()>
<com.android.documentsui.model.DocumentStack: void write(java.io.DataOutputStream)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setAddress(android.net.Uri)>
<android.app.IntentService: void onDestroy()>
<com.android.server.pm.PermissionsState.PermissionState: void <init>(java.lang.String)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getPrefixedURL(boolean,java.lang.String,java.lang.String,java.lang.String)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setIcon(android.graphics.drawable.Icon)>
<android.app.IActivityManager.ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>
<android.security.keystore.KeyInfo: java.lang.String getKeystoreAlias()>
<com.android.tools.layoutlib.create.FieldInjectorAdapter: void visitEnd()>
<com.android.tools.layoutlib.create.AsmGenerator: void setDeps(java.util.Map)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleRingerModeChange(int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.phone.PhoneStatusBar getBar()>
<android.widget.Switch: java.lang.CharSequence getTextOff()>
<com.android.server.LocationManagerService: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>
<com.android.systemui.tuner.TunerActivity: boolean onPreferenceStartScreen(android.support.v14.preference.PreferenceFragment,android.support.v7.preference.PreferenceScreen)>
<android.hardware.SensorEventCallback: void onSensorChanged(android.hardware.SensorEvent)>
<android.view.ViewGroup: void onViewAdded(android.view.View)>
<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.graphics.drawable.LayerDrawable: int getLayerInsetLeft(int)>
<com.android.server.HardwarePropertiesManagerService: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: boolean performDexOptIfNeeded(java.lang.String)>
<android.content.Context: java.io.File getSharedPreferencesPath(java.lang.String)>
<com.android.systemui.qs.external.TileServices: void updateStatusIcon(android.os.IBinder,android.graphics.drawable.Icon,java.lang.String)>
<android.media.tv.TvInputService.Session: void onTimeShiftPlay(android.net.Uri)>
<com.android.systemui.qs.customize.TileQueryHelper.TileStateListener: void onTilesChanged(java.util.List)>
<android.util.PathParser_Delegate.PathDataNode: char getType()>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.qs.PagedTileLayout: void setListening(boolean)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeIconResId(int)>
<android.renderscript.FieldPacker: android.renderscript.Matrix2f subMatrix2f()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFramePadding(float)>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>
<com.android.server.fingerprint.ClientMonitor: int start()>
<android.widget.Toast: void cancel()>
<android.text.util.Rfc822Token: java.lang.String getName()>
<com.android.systemui.tuner.BatteryPreference: boolean persistString(java.lang.String)>
<com.android.future.usb.UsbManager: void requestPermission(com.android.future.usb.UsbAccessory,android.app.PendingIntent)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGroupingId()>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float)>
<android.media.AudioFormat: int getSampleRate()>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>
<com.android.systemui.statusbar.BaseStatusBar: void applyColorsAndBackgrounds(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.NotificationData.Entry)>
<android.media.MediaCodec.Callback: void onError(android.media.MediaCodec,android.media.MediaCodec.CodecException)>
<com.android.externalstorage.TestDocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.widget.ToggleButton: void <init>(android.content.Context)>
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.volume.ZenFooter: void onFinishInflate()>
<android.telecom.TelecomAnalytics.SessionTiming: int describeContents()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: boolean isChildSelectable(int,int)>
<android.app.Notification.MessagingStyle: java.lang.CharSequence getConversationTitle()>
<android.media.MediaPlayer: android.media.SyncParams getSyncParams()>
<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>
<com.android.systemui.egg.MLand: void start(boolean)>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.content.Context getContext()>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>
<android.location.Address: java.lang.String getAdminArea()>
<android.view.InputDevice: int[] getDeviceIds()>
<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<android.webkit.WebMessage: java.lang.String getData()>
<com.android.hotspot2.Utils: java.lang.String toHexString(byte[])>
<android.security.keystore.KeyGenParameterSpec.Builder: android.security.keystore.KeyGenParameterSpec.Builder setUserAuthenticationValidityDurationSeconds(int)>
<android.app.admin.DeviceAdminInfo: int describeContents()>
<android.view.DragEvent: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicBLAS: void DTBSV(int,int,int,int,android.renderscript.Allocation,android.renderscript.Allocation,int)>
<com.android.tools.layoutlib.java.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>
<android.widget.ActionMenuView: android.view.Menu getMenu()>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>
<android.graphics.Rect: int hashCode()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)>
<com.android.server.soundtrigger.SoundTriggerInternal: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getModuleProperties()>
<android.media.tv.TvView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.tv.views.RecentsTvTransitionHelper: void launchTaskFromRecents(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.model.Task,com.android.systemui.recents.tv.views.TaskStackHorizontalGridView,com.android.systemui.recents.tv.views.TaskCardView,android.graphics.Rect,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRuntimePermission(java.lang.String)>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>
<com.android.settingslib.drawable.UserIconDrawable: void setBadgeMargin(float)>
<android.graphics.drawable.VectorDrawable_Delegate.VPath_Delegate: boolean isClipPath()>
<android.view.IWindowManagerImpl: void createWallpaperInputConsumer(android.view.InputChannel)>
<com.google.android.gles_jni.GLImpl: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.webkit.WebSettings: boolean enableSmoothTransition()>
<android.gesture.GesturePoint: void <init>(float,float,long)>
<com.android.systemui.stackdivider.DividerView: void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent)>
<android.net.VpnService: void onRevoke()>
<android.hardware.Camera.Parameters: boolean isAutoExposureLockSupported()>
<android.media.Cea708CCParser.DisplayListener: void emitEvent(android.media.Cea708CCParser.CaptionEvent)>
<com.android.systemui.DessertCase: void onStart()>
<android.service.notification.ZenModeConfig.Diff: android.service.notification.ZenModeConfig.Diff addLine(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)>
<com.android.systemui.tv.pip.PipControlButtonView: void startFocusLossAnimation()>
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.notification.NotificationMessagingTemplateViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<android.content.Loader: void registerListener(int,android.content.Loader.OnLoadCompleteListener)>
<android.telephony.ServiceState: void setRoaming(boolean)>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>
<android.animation.LayoutTransition: boolean isChangingLayout()>
<android.location.GnssNavigationMessage: int getSvid()>
<android.opengl.GLES32: boolean glIsEnabledi(int,int)>
<android.media.MediaCodec.CryptoInfo.Pattern: void <init>(int,int)>
<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()>
<android.content.ContentProvider: java.lang.String getReadPermission()>
<com.android.server.AnyMotionDetector.DeviceIdleCallback: void onAnyMotionResult(int)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>
<android.view.View: java.lang.String getTransitionName()>
<android.nfc.NfcAdapter.CreateBeamUrisCallback: android.net.Uri[] createBeamUris(android.nfc.NfcEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.StatusBarIconView: void updateDrawable()>
<android.telephony.SubscriptionManager: void removeOnSubscriptionsChangedListener(android.telephony.SubscriptionManager.OnSubscriptionsChangedListener)>
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.server.am.ActivityManagerService: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.view.View: boolean isPaddingOffsetRequired()>
<android.net.ConnectivityManager: boolean setProcessDefaultNetwork(android.net.Network)>
<android.widget.GridView: void setHorizontalSpacing(int)>
<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>
<com.android.systemui.qs.customize.CustomizeTileView: android.widget.TextView getAppLabel()>
<com.android.hotspot2.omadm.MOManager: com.android.hotspot2.omadm.OMANode getChild(com.android.hotspot2.omadm.OMANode,java.lang.String)>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>
<android.widget.AbsListView: int getCacheColorHint()>
<android.graphics.FontFamily_Delegate: android.graphics.FontFamily_Delegate getDelegate(long)>
<com.android.smspush.WapPushManager: android.os.IBinder onBind(android.content.Intent)>
<android.database.Cursor: boolean moveToPosition(int)>
<android.graphics.pdf.PdfRenderer: boolean shouldScaleForPrinting()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>
<com.android.systemui.statusbar.notification.NotificationUtils: int interpolateColors(int,int,float)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isKeyguardShowing()>
<android.telephony.CellSignalStrengthWcdma: int getDbm()>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setCallbackType(int)>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script.KernelID getKernelID()>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.net.http.HttpResponseCache: long maxSize()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.PackagesChangedEvent)>
<com.android.systemui.qs.tiles.RotationLockTile: android.content.Intent getLongClickIntent()>
<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.server.policy.BarController: boolean checkShowTransientBarLw()>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<android.graphics.DashPathEffect_Delegate: java.awt.Stroke getStroke(android.graphics.Paint_Delegate)>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size getLargestSupportedJpegSizeByArea(android.hardware.Camera.Parameters)>
<com.android.systemui.stackdivider.DividerWindowManager: void add(android.view.View,int,int)>
<com.android.keyguard.EmergencyButton: void takeEmergencyCallAction()>
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<com.android.documentsui.model.DocumentInfo: int describeContents()>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>
<android.telecom.AuthenticatorService.Authenticator: void <init>(android.content.Context)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void processRequestTriggers(android.hardware.camera2.CaptureRequest,android.hardware.Camera.Parameters)>
<com.android.server.display.DisplayManagerService: void onStart()>
<android.os.BatteryStats.Uid: void noteWifiStoppedLocked(long)>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>
<android.drm.DrmInfo: void <init>(int,byte[],java.lang.String)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.AudioCapabilities getAudioCapabilities()>
<android.bluetooth.BluetoothA2dp: void finalize()>
<android.util.JsonReader: java.lang.String nextName()>
<com.android.systemui.recents.model.FilteredTaskList: void add(com.android.systemui.recents.model.Task)>
<android.app.Activity: void openContextMenu(android.view.View)>
<android.service.notification.StatusBarNotification: long getPostTime()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>
<android.transition.ChangeBounds: boolean getResizeClip()>
<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>
<com.android.systemui.recents.model.TaskStack: void createAffiliatedGroupings(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int)>
<com.android.server.policy.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy.WindowManagerFuncs)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.hardware.camera2.impl.CameraCaptureSessionCore: android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK getDeviceStateCallback()>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix build()>
<android.telecom.Connection: void onPullExternalCall()>
<com.android.systemui.recents.views.TaskStackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.graphics.drawable.AnimatedVectorDrawable: void <init>()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void hideScrim()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setActivatedChild(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoUnavailable(int)>
<android.filterfw.core.StopWatchMap: void start(java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.widget.Gallery: java.lang.CharSequence getAccessibilityClassName()>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>
<com.android.systemui.tv.pip.PipMenuActivity: void onCreate(android.os.Bundle)>
<android.location.SettingInjectorService: void onStart(android.content.Intent,int)>
<android.service.voice.VoiceInteractionSession: void onBackPressed()>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onResume()>
<com.android.documentsui.model.RootInfo: int compareTo(com.android.documentsui.model.RootInfo)>
<android.text.style.SuggestionSpan: int getSpanTypeId()>
<com.android.settingslib.graph.UsageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshCarrierInfo()>
<com.android.server.pm.UserManagerService: boolean isUserUnlocked(int)>
<com.android.layoutlib.bridge.Bridge: java.util.Map getPlatformProperties()>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>
<com.android.documentsui.RootCursorWrapper: int getInt(int)>
<android.preference.PreferenceActivity.Header: void <init>()>
<android.os.health.HealthStats: int getStatsKeyCount()>
<android.hardware.soundtrigger.SoundTrigger.SoundModel: void <init>(java.util.UUID,java.util.UUID,int,byte[])>
<com.android.systemui.statusbar.ExpandableView: void getBoundsOnScreen(android.graphics.Rect,boolean)>
<android.app.admin.DeviceAdminReceiver: void onSystemUpdatePending(android.content.Context,android.content.Intent,long)>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onDown()>
<com.android.systemui.recents.Recents: void hideRecents(boolean,boolean)>
<android.content.pm.ShortcutInfo: java.lang.String toString()>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>
<android.hardware.Camera.Face: void <init>()>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: void getCurrentSegmentEnd(float[])>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(float[],int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.recents.model.Task: java.lang.String toString()>
<com.android.server.net.IpConfigStore: void <init>()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>
<com.android.commands.sm.Sm: void runMount()>
<android.webkit.WebResourceRequest: boolean isForMainFrame()>
<android.util.LongSparseArray: void <init>(int)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<android.filterpacks.imageproc.SharpenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.server.notification.ZenModeHelper: android.os.Looper getLooper()>
<com.android.server.TextServicesManagerService: void <init>(android.content.Context)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: void <init>(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<android.service.voice.VoiceInteractionSession: void onRequestConfirmation(android.service.voice.VoiceInteractionSession.ConfirmationRequest)>
<android.security.keystore.KeyProtection.Builder: android.security.keystore.KeyProtection build()>
<android.content.pm.PermissionGroupInfo: int describeContents()>
<android.content.res.TypedArray: int getIndexCount()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void <init>(android.widget.LinearLayout,int)>
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>
<android.webkit.WebSettings: int getMinimumFontSize()>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>
<android.os.BatteryStats.Uid: android.util.ArrayMap getSyncStats()>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int)>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>
<android.graphics.Canvas_Delegate: void native_restore(long,boolean)>
<android.widget.TabHost.ContentStrategy: void tabClosed()>
<com.android.printspooler.util.ApprovedPrintServices: void registerChangeListenerLocked(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setClipTopAmount(int)>
<android.content.RestrictionsManager: android.os.Bundle convertRestrictionsToBundle(java.util.List)>
<android.hardware.camera2.dispatch.NullDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.android.gallery3d.glrenderer.GLES20Canvas: void restore()>
<android.inputmethodservice.Keyboard: int getVerticalGap()>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter createTyped(android.renderscript.RenderScript,android.renderscript.Allocation,android.renderscript.Type)>
<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>
<android.telecom.RemoteConnection.Callback: void onVideoProviderChanged(android.telecom.RemoteConnection,android.telecom.RemoteConnection.VideoProvider)>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>
<android.content.ContentValues: void putAll(android.content.ContentValues)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setDrawBackgroundAsSrc(boolean)>
<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>
<com.android.hotspot2.WifiNetworkAdapter: com.android.hotspot2.omadm.MOTree getMOTree(com.android.hotspot2.pps.HomeSP)>
<com.android.systemui.tv.pip.PipMenuActivity: void onPipActivityClosed()>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>
<com.android.systemui.statusbar.policy.SignalController: void saveLastState()>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>
<com.android.server.am.ActivityManagerService: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String,java.lang.String)>
<android.app.ActivityManagerProxy: boolean shutdown(int)>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>
<android.widget.RemoteViews: void setDisplayedChild(int,int)>
<android.graphics.drawable.ShapeDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onReorderingAllowed()>
<com.android.server.pm.PackageManagerService: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<android.content.IntentSender: java.lang.String toString()>
<android.media.AudioDeviceInfo: int[] getChannelCounts()>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.media.MediaRecorder: void setInputSurface(android.view.Surface)>
<com.android.uiautomator.core.UiObject: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.hotspot2.osu.OSUResponse: com.android.hotspot2.osu.OSUStatus getStatus()>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>
<android.os.Debug.MemoryInfo: int getTotalPrivateClean()>
<com.android.server.pm.PackageManagerService: boolean isOrphaned(java.lang.String)>
<android.database.ContentObservable: void notifyChange(boolean)>
<android.service.voice.VoiceInteractionSession: void onTaskFinished(android.content.Intent,int)>
<android.mtp.MtpDeviceInfo: java.lang.String getModel()>
<android.view.KeyEvent: boolean isPrintingKey()>
<android.widget.SearchView: boolean isIconified()>
<android.view.View: void setMeasuredDimension(int,int)>
<android.animation.Animator: void cancel()>
<android.hardware.camera2.CaptureRequest.Key: java.lang.String getName()>
<com.android.systemui.recents.model.Task.TaskCallbacks: void onTaskStackIdChanged()>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<com.android.printspooler.ui.PrintActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.hotspot2.omadm.NodeAttribute: java.lang.String getValue()>
<android.text.util.Rfc822Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.media.AudioTrack: int getChannelConfiguration()>
<com.android.layoutlib.bridge.android.BridgeContext: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,float[],int)>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>
<com.android.server.usage.UserUsageStatsService.StatsUpdatedListener: void onStatsReloaded()>
<android.app.Notification.Builder: android.widget.RemoteViews createBigContentView()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: com.android.ide.common.rendering.api.ActionBarCallback getCallBack()>
<com.android.server.FgThread: com.android.server.FgThread get()>
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.android.keyguard.ViewMediatorCallback: boolean isInputRestricted()>
<android.content.pm.PackageParser.Package: void setSignatures(android.content.pm.Signature[])>
<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.TaskViewDismissedEvent)>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withExpectedCount(int)>
<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>
<com.android.server.notification.ZenLog: void traceListenerHintsChanged(int,int,int)>
<android.content.SyncAdapterType: void <init>(android.os.Parcel)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.NotificationMediaTemplateViewWrapper: void updateTransformedTypes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportKeyguardSecured(int)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: boolean hasNativeMethods()>
<android.location.Address: java.lang.String getPremises()>
<android.service.notification.ZenModeConfig.ZenRule: boolean isAutomaticActive()>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle addLine(java.lang.CharSequence)>
<android.media.midi.MidiDeviceStatus: int describeContents()>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.util.ArraySet: void <init>(android.util.ArraySet)>
<android.widget.VideoView: void onDetachedFromWindow()>
<android.view.View: void setAnimation(android.view.animation.Animation)>
<android.view.IWindowManagerImpl: void overridePendingAppTransitionInPlace(java.lang.String,int)>
<android.app.job.JobInfo: int getBackoffPolicy()>
<android.graphics.drawable.StateListDrawable: void <init>()>
<com.android.systemui.qs.customize.TileAdapter: void setTileSpecs(java.util.List)>
<android.print.PrintJob: void restart()>
<com.android.systemui.statusbar.phone.PanelBar: void setPanel(com.android.systemui.statusbar.phone.PanelView)>
<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onProximityNegative()>
<android.app.Dialog: android.content.Context getContext()>
<android.view.View: void addTouchables(java.util.ArrayList)>
<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>
<android.app.DialogFragment: void onCreate(android.os.Bundle)>
<com.android.documentsui.BaseActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.text.InputFilter.LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int,boolean)>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asPortrait()>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>
<android.security.KeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()>
<javax.microedition.khronos.opengles.GL10: void glTexParameterf(int,int,float)>
<android.hardware.Camera.Parameters: void setPreviewFormat(int)>
<android.media.ImageReader: int getMaxImages()>
<com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArrayOrNull(byte[],com.android.documentsui.model.Durable)>
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()>
<android.text.format.Formatter: java.lang.String formatIpAddress(int)>
<com.android.server.DeviceIdleController: void exitIdleInternal(java.lang.String)>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<com.android.systemui.qs.external.TileServiceManager: void handleDestroy()>
<com.android.anqp.eap.Credential: com.android.anqp.eap.EAP.AuthInfoID getAuthInfoID()>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>
<com.android.egg.neko.Cat: java.lang.String getName()>
<com.android.systemui.statusbar.ExpandableView: void setClipTopAmount(int)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void loadDimens(android.content.res.Resources)>
<android.telephony.CellIdentityLte: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.car.UserGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitchComplete(int)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagDefinitionsForTagId(short)>
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()>
<com.android.uiautomator.core.UiDevice: android.graphics.Point getDisplaySizeDp()>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>
<android.content.pm.PackageParser.PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>
<com.android.server.notification.ManagedServices: java.lang.String restoredSettingName(java.lang.String)>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: int hashCode()>
<android.widget.TextView: void onEndBatchEdit()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getPromotedFields()>
<android.database.MergeCursor: int getType(int)>
<android.media.audiofx.Visualizer: boolean getEnabled()>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void getChildrenStates(com.android.systemui.statusbar.stack.StackScrollState)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>
<android.media.MediaDescription: android.os.Bundle getExtras()>
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceFormat(android.view.Surface)>
<android.media.SoundPool: void setRate(int,float)>
<com.android.server.am.ActivityManagerService: boolean shutdown(int)>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>
<com.android.systemui.statusbar.BaseStatusBar: android.view.View getStatusBarView()>
<android.graphics.pdf.PdfRenderer.Page: int getWidth()>
<android.widget.SearchView: int getImeOptions()>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<com.android.server.LockSettingsService.Lifecycle: void onStart()>
<android.os.health.HealthStats: java.lang.String getDataType()>
<android.print.PageRange: boolean equals(java.lang.Object)>
<android.media.AudioAttributes: int getUsage()>
<com.android.systemui.tuner.AutoScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.nfc.Tag: java.lang.String[] getTechList()>
<android.widget.GridLayout.LayoutParams: boolean equals(java.lang.Object)>
<com.android.printspooler.ui.PageAdapter: long getItemId(int)>
<com.android.server.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.usb.UsbDevice: int getDeviceSubclass()>
<com.android.systemui.qs.tiles.LocationTile: java.lang.String composeChangeAnnouncement()>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setConfiguring()>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>
<android.media.RingtoneManager: void <init>(android.app.Activity)>
<android.media.AudioManager: void unregisterRemoteController(android.media.RemoteController)>
<android.media.tv.TvView: void setZOrderOnTop(boolean)>
<com.android.systemui.statusbar.phone.DozeScrimController: void abortPulsing()>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: android.os.IBinder getBinder()>
<android.hardware.fingerprint.FingerprintManager.AuthenticationCallback: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager.AuthenticationResult)>
<com.android.settingslib.wifi.AccessPoint: java.lang.CharSequence getSsid()>
<com.android.server.backup.BackupUtils: byte[] hashSignature(android.content.pm.Signature)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void onDensityOrFontScaleChanged()>
<android.preference.ListPreference: java.lang.CharSequence getSummary()>
<com.google.android.gles_jni.GLImpl: void glTexParameterf(int,int,float)>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.os.DropBoxManager.Entry: void close()>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>
<com.android.systemui.qs.tiles.DndTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<android.widget.AbsListView: int getListPaddingRight()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>
<com.android.systemui.classifier.EndPointLengthClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>
<android.location.GnssClock: boolean hasTimeUncertaintyNanos()>
<com.android.systemui.statusbar.NotificationContentView: void setFocusOnVisibilityChange()>
<android.util.ArrayMap: void putAll(android.util.ArrayMap)>
<android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
<com.android.printservice.recommendation.plugin.samsung.ServiceListener: void start()>
<android.view.inputmethod.InputMethodManager: void dispatchKeyEventFromInputMethod(android.view.View,android.view.KeyEvent)>
<android.view.KeyEvent: boolean isCapsLockOn()>
<com.android.server.LockSettingsService.CredentialUtil: byte[] toHash(java.lang.String,int)>
<android.widget.ArrayAdapter: long getItemId(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onExpansionStopped()>
<com.android.server.am.ActivityManagerService: int checkUriPermission(android.net.Uri,int,int,int,int,android.os.IBinder)>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void <init>(android.print.PrinterDiscoverySession)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.Activity: boolean requestWindowFeature(int)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<android.location.Criteria: int getBearingAccuracy()>
<android.service.voice.VoiceInteractionService: void onCreate()>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthFunc(android.renderscript.ProgramStore.DepthFunc)>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>
<com.android.tools.layoutlib.create.RefactorClassAdapter: java.lang.String renameInternalType(java.lang.String)>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.android.documentsui.dirlist.MultiSelectManager.BandController: void onSelectionChanged(java.util.Set)>
<android.media.AudioDeviceCallback: void onAudioDevicesRemoved(android.media.AudioDeviceInfo[])>
<android.app.Presentation: void onStop()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)>
<android.view.ViewParent: int getLayoutDirection()>
<android.security.keystore.KeyGenParameterSpec: boolean isDigestsSpecified()>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.classifier.FalsingManager: void onCameraHintStarted()>
<android.hardware.Camera.Parameters: java.util.List getSupportedJpegThumbnailSizes()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<android.content.pm.InstrumentationInfo: int describeContents()>
<android.os.Debug: void resetGlobalAllocSize()>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: void <init>(android.content.Context)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isScrolledToTop()>
<com.android.systemui.qs.tiles.WifiTile: void handleClick()>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.hotspot2.osu.WiFiKeyManager: java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)>
<android.view.ViewOutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<android.media.MediaDrm.KeyStatus: byte[] getKeyId()>
<com.android.systemui.DessertCaseView: void place(android.view.View,android.graphics.Point,boolean)>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>
<android.widget.TextView: java.lang.CharSequence getError()>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>
<android.widget.Switch: boolean getShowText()>
<com.android.settingslib.widget.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>
<android.content.ContextWrapper: java.io.File getObbDir()>
<android.service.carrier.CarrierService: void notifyCarrierNetworkChange(boolean)>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
<android.os.BatteryStats.Timer: int getCountLocked(int)>
<com.android.systemui.statusbar.CommandQueue: void animateExpandNotificationsPanel()>
<com.android.documentsui.BaseActivity: void addEventListener(com.android.documentsui.EventListener)>
<android.app.ListActivity: android.widget.ListView getListView()>
<com.android.systemui.statusbar.policy.RemoteInputView: android.app.PendingIntent getPendingIntent()>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean isSimpleUserSwitcher()>
<com.android.server.utils.ManagedApplicationService.BinderChecker: boolean checkType(android.os.IInterface)>
<android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>
<com.android.hotspot2.osu.commands.MOURN: java.lang.String toString()>
<android.hardware.camera2.params.OutputConfiguration: int hashCode()>
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>
<android.telecom.Call: void phoneAccountSelected(android.telecom.PhoneAccountHandle,boolean)>
<android.app.FragmentController: void noteStateNotSaved()>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>
<com.android.settingslib.drawer.UserAdapter: com.android.settingslib.drawer.UserAdapter createUserSpinnerAdapter(android.os.UserManager,android.content.Context)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>
<com.android.server.content.SyncJobService: int onStartCommand(android.content.Intent,int,int)>
<android.widget.ProgressBar: int getSecondaryProgress()>
<com.android.preload.DumpData: java.util.Map getDumpData()>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float,boolean)>
<com.android.hotspot2.osu.OSUCommand: com.android.hotspot2.osu.OSUCommandID getOSUCommand()>
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>
<com.android.server.notification.NotificationManagerService.DumpFilter: java.lang.String toString()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean checkAndIncreaseMessageRejectionCount()>
<com.android.hotspot2.asn1.Asn1Octets: byte[] getOctets()>
<javax.microedition.khronos.opengles.GL10: void glHint(int,int)>
<com.android.settingslib.dream.DreamBackend: void <init>(android.content.Context)>
<com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodReplacer: void replace(com.android.tools.layoutlib.create.ReplaceMethodCallsAdapter.MethodInformation)>
<android.os.Handler: void dispatchMessage(android.os.Message)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setTitle(java.lang.CharSequence)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<com.android.server.notification.ZenLog: void traceConfig(java.lang.String,android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig)>
<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.media.audiofx.Virtualizer: short getRoundedStrength()>
<com.android.uiautomator.core.UiObject: java.lang.String getClassName()>
<android.app.usage.NetworkStats.Bucket: int getRoaming()>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>
<android.view.View: void setScrollBarFadeDuration(int)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.media.AudioRecord: boolean setPreferredDevice(android.media.AudioDeviceInfo)>
<com.android.documentsui.BaseActivity: void onDocumentsPicked(java.util.List)>
<com.android.systemui.recents.tv.animations.DismissAnimationsHolder: void reset()>
<android.graphics.drawable.GradientDrawable: int getShape()>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onSuccess()>
<android.graphics.pdf.PdfDocument.Page: android.graphics.Canvas getCanvas()>
<android.util.Pair: boolean equals(java.lang.Object)>
<android.view.animation.GridLayoutAnimationController: int getDirection()>
<android.content.Context: boolean isCredentialEncryptedStorage()>
<android.media.MediaSync: void setSurface(android.view.Surface)>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: com.android.ide.common.rendering.api.RenderSession getSession()>
<com.android.systemui.statusbar.car.CarBatteryController: void setPowerSaveMode(boolean)>
<android.util.SparseLongArray: int indexOfKey(int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>
<com.android.server.audio.AudioService.VolumeController: void setLayoutDirection(int)>
<com.android.layoutlib.bridge.util.SparseWeakArray: int size()>
<android.widget.TextView: int getAutoLinkMask()>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setExtra(android.os.Bundle)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.BaseStatusBar.H createHandler()>
<com.android.egg.neko.NekoTile: void onStopListening()>
<android.app.Fragment: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
<android.database.sqlite.SQLiteProgram: void clearBindings()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setFractionalPart(java.lang.String)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeMs()>
<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String)>
<android.content.DialogInterface.OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus.NmeaListener)>
<com.android.layoutlib.bridge.android.support.RecyclerViewUtil: void setAdapter(android.view.View,com.android.layoutlib.bridge.android.BridgeContext,com.android.ide.common.rendering.api.LayoutlibCallback,int)>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>
<android.view.View: android.view.View findFocus()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>
<com.android.server.policy.PhoneWindowManager: void setRotationLw(int)>
<com.android.systemui.statusbar.BaseStatusBar: void overrideActivityPendingAppTransition(boolean)>
<com.android.server.notification.NotificationUsageStats.Aggregate: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
<android.provider.ContactsContract.CommonDataKinds.Email: int getTypeLabelResource(int)>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.view.View: void onVisibilityAggregated(boolean)>
<android.graphics.Bitmap: void setHeight(int)>
<com.android.MainActivity: void onResume()>
<android.app.VoiceInteractor.PickOptionRequest: void <init>(android.app.VoiceInteractor.Prompt,android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.bluetooth.BluetoothGatt: boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)>
<android.net.wifi.p2p.WifiP2pInfo: void <init>()>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>
<android.hardware.Camera.Parameters: boolean isVideoStabilizationSupported()>
<android.telecom.Call.Callback: void onStateChanged(android.telecom.Call,int)>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.graphics.Paint: float getRunAdvance(java.lang.CharSequence,int,int,int,int,boolean,int)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>
<android.graphics.Interpolator: void reset(int)>
<android.telecom.GatewayInfo: void <init>(java.lang.String,android.net.Uri,android.net.Uri)>
<android.graphics.Rect: int centerX()>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void requestDisallowInterceptTouchEvent(boolean)>
<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>
<android.content.BroadcastReceiver.PendingResult: void finish()>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSTileBaseView createTileView(com.android.systemui.qs.QSTile,boolean)>
<android.widget.DialerFilter: java.lang.CharSequence getDigits()>
<com.android.server.am.CompatModePackages: boolean getPackageAskCompatModeLocked(java.lang.String)>
<com.android.server.connectivity.NetworkAgentInfo: int numBackgroundNetworkRequests()>
<com.android.systemui.recents.Recents: void start()>
<android.content.Loader: boolean cancelLoad()>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)>
<com.android.server.am.BatteryStatsService: void notePhoneOff()>
<android.location.Address: void setSubThoroughfare(java.lang.String)>
<com.android.server.tv.UinputBridge: void <init>(android.os.IBinder,java.lang.String,int,int,int)>
<com.android.hotspot2.utils.HTTPMessage: java.io.InputStream getPayloadStream()>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.server.am.UidRecord: void <init>(int)>
<android.graphics.Matrix: void reset()>
<android.media.RemoteControlClient: void setPlaybackState(int)>
<android.renderscript.FieldPacker: android.renderscript.Int2 subInt2()>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isContentValid()>
<com.android.server.DiskStatsService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onRtlPropertiesChanged(int)>
<android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>
<android.view.MotionEvent: float getOrientation()>
<com.android.server.am.ActivityManagerService: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.ExpandableNotificationRow: void setActualHeight(int,boolean)>
<com.android.systemui.volume.SafetyWarningDialog: void onClick(android.content.DialogInterface,int)>
<com.android.documentsui.model.RootInfo: boolean isHome()>
<android.content.pm.PackageParser.Permission: void setPackageName(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<android.widget.Editor.SuggestionsPopupWindow: int getTextOffset()>
<com.android.layoutlib.bridge.android.BridgeContext: android.graphics.drawable.Drawable peekWallpaper()>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap,int)>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: long getExpireMillis()>
<javax.microedition.khronos.opengles.GL10: void glClearDepthf(float)>
<android.graphics.drawable.shapes.Shape: void getOutline(android.graphics.Outline)>
<com.android.systemui.classifier.FalsingLog: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.transition.Explode: void <init>()>
<com.android.systemui.tv.pip.PipRecentsOverlayManager: void removePipRecentsOverlayView()>
<android.util.JsonReader: boolean hasNext()>
<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>
<com.android.systemui.statusbar.BaseStatusBar: void notifyUserAboutHiddenNotifications()>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void onReturnViewToPool(java.lang.Object)>
<android.content.res.BridgeTypedArray: int getDimensionPixelSize(int,int)>
<android.app.Activity: boolean isTaskRoot()>
<android.mtp.MtpDevice: long getParent(int)>
<android.app.AlertDialog: void setIcon(int)>
<android.widget.ScrollView: void scrollTo(int,int)>
<com.android.systemui.statusbar.stack.AmbientState: void setHideSensitive(boolean)>
<android.nfc.tech.NfcA: byte[] getAtqa()>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>
<android.view.WindowId: int hashCode()>
<android.app.Notification.Builder: android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
<android.widget.TextView: java.util.Locale getTextLocale()>
<com.android.hotspot2.osu.OSUInfo: long getHESSID()>
<com.android.server.audio.AudioService.VolumeStreamState: void applyAllVolumes()>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.widget.SlidingDrawer: void lock()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean isEmergencyOnly()>
<android.net.wifi.WifiEnterpriseConfig: void setAnonymousIdentity(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getEphemeralApplicationIcon(java.lang.String)>
<android.view.KeyEvent: boolean hasModifiers(int)>
<android.view.View: int getWindowSystemUiVisibility()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionController getControllerBinder()>
<com.android.gallery3d.exif.ExifInterface: void clearExif()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean fitSystemWindows(android.graphics.Rect)>
<com.android.server.usage.UsageStatsXml: void write(android.util.AtomicFile,com.android.server.usage.IntervalStats)>
<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<com.android.systemui.statusbar.AlphaImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.speech.tts.TextToSpeech.OnInitListener: void onInit(int)>
<android.telecom.InCallService.VideoCall: void setCamera(java.lang.String)>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<android.hardware.camera2.utils.SurfaceUtils: int getSurfaceDataspace(android.view.Surface)>
<android.content.PeriodicSync: int describeContents()>
<com.android.server.connectivity.NetworkAgentInfo: void unlinger()>
<android.widget.ListPopupWindow: int getHorizontalOffset()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onStopListening()>
<android.opengl.GLES32: void glDisablei(int,int)>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Picture: int getHeight()>
<android.net.CaptivePortal: void reportCaptivePortalDismissed()>
<android.view.animation.Animation: boolean getDetachWallpaper()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void setBouncerShowing(boolean)>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String getFilenameHint()>
<android.app.Notification.Action: boolean getAllowGeneratedReplies()>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setSummaryText(java.lang.CharSequence)>
<android.renderscript.ScriptIntrinsicBLAS: void ZGERU(android.renderscript.Double2,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>
<android.provider.DocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: android.hardware.camera2.utils.TypeReference getTypeReference()>
<com.android.server.job.controllers.DeviceIdleJobsController: void dumpControllerStateLocked(java.io.PrintWriter,int)>
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<android.widget.DatePicker: int getMonth()>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStarted(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glPushMatrix()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: boolean getFeature(java.lang.String)>
<com.android.statementservice.IntentFilterVerificationReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.app.ActivityManagerInternal.SleepToken: void release()>
<android.hardware.camera2.CaptureRequest.Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>
<com.android.server.backup.Trampoline: void dataChanged(java.lang.String)>
<com.android.systemui.statusbar.notification.ImageTransformState: void initFrom(android.view.View)>
<android.renderscript.Matrix4f: boolean inverseTranspose()>
<android.media.MediaMuxer: int addTrack(android.media.MediaFormat)>
<android.media.MediaPlayer: void attachAuxEffect(int)>
<com.google.android.util.AbstractMessageParser.TrieNode: void setValue(java.lang.String)>
<com.android.server.LocationManagerService: void clearTestProviderStatus(java.lang.String,java.lang.String)>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int,int)>
<com.android.systemui.statusbar.phone.ScrimController: void animateGoingToFullShade(long,long)>
<android.service.voice.VoiceInteractionSession.Request: java.lang.String toString()>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>
<android.net.TrafficStats: void setThreadStatsTag(int)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder addInt(java.lang.Object,java.lang.String,int[])>
<android.view.WindowManagerPolicy.WindowState: android.view.WindowManager.LayoutParams getAttrs()>
<com.android.systemui.qs.QSAnimator: void onAnimationStarted()>
<android.bluetooth.le.ScanRecord: int getTxPowerLevel()>
<com.android.settingslib.drawer.UserAdapter: com.android.settingslib.drawer.UserAdapter createUserAdapter(android.os.UserManager,android.content.Context,java.util.List)>
<android.view.View: int computeVerticalScrollExtent()>
<android.os.Bundle: char getChar(java.lang.String,char)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>
<com.android.server.am.CompatModePackages: void handlePackageDataClearedLocked(java.lang.String)>
<com.android.systemui.qs.customize.QSCustomizer: void show(int,int)>
<android.content.pm.LauncherApps: void startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>
<com.android.printspooler.widget.PageContentView: com.android.printspooler.model.PageContentRepository.PageContentProvider getPageContentProvider()>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setHintLaunchesActivity(boolean)>
<android.text.format.Time: void set(int,int,int,int,int,int)>
<android.widget.Space: void draw(android.graphics.Canvas)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(com.android.gallery3d.exif.Rational)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onRepeatingRequestError(long)>
<android.os.Binder: long clearCallingIdentity()>
<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<android.graphics.Paint: void setElegantTextHeight(boolean)>
<com.android.server.lights.Light: void pulse(int,int)>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void computeConstantSize()>
<android.telecom.DisconnectCause: void <init>(int,java.lang.String)>
<android.nfc.cardemulation.HostNfcFService: void onDeactivated(int)>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.app.backup.IFullBackupRestoreObserver: void onBackupPackage(java.lang.String)>
<com.android.tools.layoutlib.create.MethodAdapter: long onInvokeL(java.lang.String,boolean,java.lang.Object)>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>
<android.service.dreams.DreamService: android.os.IBinder onBind(android.content.Intent)>
<android.location.Location: void removeSpeed()>
<com.android.systemui.statusbar.phone.BarTransitions: void finishAnimations()>
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>
<android.service.chooser.ChooserTarget: java.lang.String toString()>
<android.app.ActivityManager: void dumpPackageState(java.io.FileDescriptor,java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl: void tearDown(android.view.Surface)>
<android.preference.Preference: boolean persistLong(long)>
<android.app.ActivityManagerProxy: boolean showAssistFromActivity(android.os.IBinder,android.os.Bundle)>
<com.android.settingslib.net.UidDetailProvider: void <init>(android.content.Context)>
<com.android.systemui.recents.model.TaskGrouping: int indexOf(com.android.systemui.recents.model.Task)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<android.hardware.radio.RadioManager.FmBandConfig: boolean getTa()>
<android.view.ViewStub: void setLayoutResource(int)>
<com.google.android.gles_jni.GLImpl: void glMatrixMode(int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeListValue(int,java.lang.String[],int)>
<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>
<android.media.audiofx.AutomaticGainControl: android.media.audiofx.AutomaticGainControl create(int)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.media.MediaPlayer: android.media.MediaTimestamp getTimestamp()>
<com.android.gallery3d.common.Utils: float interpolateScale(float,float,float)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isDozing()>
<com.android.preload.Main: void <init>()>
<android.renderscript.FieldPacker: boolean subBoolean()>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int)>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>
<android.widget.AbsListView: boolean onRemoteAdapterConnected()>
<android.hardware.radio.RadioManager.ModuleProperties: java.lang.String toString()>
<android.app.assist.AssistStructure.ViewNode: java.lang.CharSequence getText()>
<com.android.gallery3d.glrenderer.BasicTexture: void yieldAllTextures()>
<android.media.MediaMuxer: void <init>(java.lang.String,int)>
<android.hardware.usb.UsbRequest: void finalize()>
<android.widget.AbsListView: boolean isInFilterMode()>
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()>
<android.widget.ExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.hardware.camera2.legacy.LegacyCameraDevice: android.util.Size getSurfaceSize(android.view.Surface)>
<com.android.layoutlib.bridge.impl.GcSnapshot.Drawable: void draw(java.awt.Graphics2D,android.graphics.Paint_Delegate)>
<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.widget.AdapterViewFlipper: void showPrevious()>
<com.android.server.display.WifiDisplayController.Listener: void onFeatureStateChanged(int)>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>
<android.content.pm.PackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: void lockNow(android.os.Bundle)>
<android.graphics.Camera: float dotWithNormal(float,float,float)>
<com.android.hotspot2.pps.Credential: void <init>(long,long,java.lang.String,boolean,com.android.anqp.eap.EAPMethod,com.android.hotspot2.IMSIParameter)>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,float[],int)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean isActive()>
<com.android.systemui.qs.tiles.HotspotTile: android.content.Intent getLongClickIntent()>
<com.android.server.net.LockdownVpnTracker: void reset()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.recents.model.Task getNextLaunchTarget()>
<android.text.HtmlToSpannedConverter: void <init>(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler,org.ccil.cowan.tagsoup.Parser,int)>
<com.android.hotspot2.osu.WiFiKeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>
<android.widget.StackView: void advance()>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>
<android.media.AudioTrack: int getNotificationMarkerPosition()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String toString()>
<android.net.wifi.nan.SubscribeSettings.Builder: android.net.wifi.nan.SubscribeSettings.Builder setSubscribeType(int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>
<android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)>
<android.app.ActivityManagerProxy: void showLockTaskEscapeMessage(android.os.IBinder)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String)>
<android.media.midi.MidiDevice: void finalize()>
<android.content.UriPermission: int describeContents()>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>
<android.app.ActivityManager.RecentTaskInfo: void <init>()>
<com.android.hotspot2.omadm.OMAScalar: com.android.hotspot2.omadm.OMANode getListValue(java.util.Iterator)>
<android.widget.PopupWindow: float getElevation()>
<android.media.session.PlaybackState.CustomAction: int getIcon()>
<com.android.systemui.qs.tiles.DataUsageDetailView: void bind(com.android.settingslib.net.DataUsageController.DataUsageInfo)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.UserInteractionEvent)>
<android.text.style.LocaleSpan: void <init>(android.os.LocaleList)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void pruneApprovedPrintServices(java.util.List)>
<com.android.systemui.recents.views.TaskView: void onPrepareLaunchTargetForEnterAnimation()>
<com.android.server.LockSettingsStrongAuth: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<android.os.BatteryStats.Uid: android.util.SparseArray getPidStats()>
<com.android.server.hdmi.HdmiCecMessageValidator: void <init>(com.android.server.hdmi.HdmiControlService)>
<android.view.InputDevice: java.lang.String getName()>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.os.Parcel: byte[] createByteArray()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendRecentsDrawnEvent()>
<android.mtp.MtpObjectInfo: int getAssociationDesc()>
<com.android.documentsui.dirlist.MultiSelectManager.Selection: java.lang.String[] getAll()>
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.server.am.ActivityManagerService: void startObservingNativeCrashes()>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<android.content.pm.PackageInstaller.Session: void fsync(java.io.OutputStream)>
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>
<android.appwidget.AppWidgetHost: void deleteHost()>
<android.widget.Editor.HandleView: void updateDrawable()>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothDevicesChanged()>
<android.service.voice.VoiceInteractionSession: void onRequestCompleteVoice(android.service.voice.VoiceInteractionSession.CompleteVoiceRequest)>
<android.telecom.Call: void splitFromConference()>
<android.widget.SearchView: void onDetachedFromWindow()>
<com.android.server.wm.TaskStack: java.lang.String toString()>
<android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)>
<com.android.systemui.classifier.AccelerationClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.view.View: int getScrollBarSize()>
<com.android.systemui.settings.ToggleSlider: void setOnChangedListener(com.android.systemui.settings.ToggleSlider.Listener)>
<com.android.settingslib.applications.ApplicationsState.Session: void pause()>
<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>
<com.android.server.storage.AppCollector: void <init>(android.content.Context,android.os.storage.VolumeInfo)>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>
<com.android.printspooler.model.RemotePrintDocument: boolean hasUpdateError()>
<android.os.UserHandle: android.os.UserHandle readFromParcel(android.os.Parcel)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>
<android.media.MediaCodecInfo.AudioCapabilities: boolean isSampleRateSupported(int)>
<android.text.util.Rfc822Token: void setAddress(java.lang.String)>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>
<com.android.gallery3d.exif.ExifTag: boolean equals(java.lang.Object)>
<android.telecom.PhoneAccount: android.net.Uri getSubscriptionAddress()>
<com.android.systemui.qs.tiles.HotspotTile: com.android.systemui.qs.QSTile.AirplaneBooleanState newTileState()>
<android.service.carrier.CarrierMessagingService.SendMmsResult: int getSendStatus()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvf(int,int,float)>
<android.graphics.drawable.LayerDrawable: void setOpacity(int)>
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>
<com.android.systemui.ResizingSpace: void draw(android.graphics.Canvas)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putText(java.lang.String,java.lang.CharSequence)>
<com.android.systemui.qs.QSContainer: int getDesiredHeight()>
<android.widget.TabWidget: void setCurrentTab(int)>
<android.service.dreams.DreamService: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<com.android.server.am.ActivityManagerService: void stopSystemLockTaskMode()>
<android.graphics.BlendComposite: android.graphics.BlendComposite getInstance(android.graphics.BlendComposite.BlendingMode,float)>
<com.android.server.wm.AppTransition: void overridePendingAppTransitionMultiThumb(android.view.AppTransitionAnimationSpec[],android.os.IRemoteCallback,android.os.IRemoteCallback,boolean)>
<android.service.restrictions.RestrictionsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.documentsui.dirlist.DirectoryFragment: void onSortOrderChanged()>
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>
<android.widget.CursorTreeAdapter: long getChildId(int,int)>
<com.android.gallery3d.glrenderer.GLCanvas: float getAlpha()>
<com.android.systemui.qs.tiles.FlashlightTile: int getMetricsCategory()>
<android.nfc.cardemulation.NfcFCardEmulation: boolean registerSystemCodeForService(android.content.ComponentName,java.lang.String)>
<android.media.tv.TvInputService.Session: void onTimeShiftResume()>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>
<android.nfc.NdefRecord: void <init>(short,byte[],byte[],byte[])>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>
<android.util.JsonReader: boolean isLenient()>
<android.mtp.MtpEvent: int getTransactionId()>
<com.android.MainActivity: void onCreate(android.os.Bundle)>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<com.android.layoutlib.bridge.android.BridgeContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<android.media.SoundPool: int load(android.content.Context,int,int)>
<android.os.ConditionVariable: boolean block(long)>
<com.android.server.policy.PhoneWindowManager: boolean canMagnifyWindow(int)>
<android.view.ViewGroup: void childHasTransientStateChanged(android.view.View,boolean)>
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>
<android.accounts.AccountManagerFuture: boolean isCancelled()>
<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder jpegCaptured(long)>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)>
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getValue()>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationStarted()>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getConnectableProfiles()>
<android.inputmethodservice.InputMethodService: void hideWindow()>
<android.renderscript.ScriptIntrinsicBLAS: void SGBMV(int,int,int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: void moveToFullscreen()>
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>
<android.graphics.Path: boolean isEmpty()>
<com.android.server.notification.ZenModeHelper: void initZenMode()>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<com.android.server.am.ActivityManagerService: void startLockTaskMode(int)>
<com.android.systemui.qs.external.CustomTile: void onDialogShown()>
<android.widget.TextView: void setHint(java.lang.CharSequence)>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ProviderInfo)>
<android.net.Uri: java.lang.String getEncodedPath()>
<android.widget.PopupMenu: void inflate(int)>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<android.ddm.DdmRegister: void registerHandlers()>
<com.android.documentsui.MessageBar: void hide()>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>
<android.renderscript.Allocation: void copy2DRangeTo(int,int,int,int,float[])>
<android.hardware.Sensor: java.lang.String getVendor()>
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)>
<android.app.job.JobInfo: java.lang.String toString()>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationEndX(float)>
<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>
<android.telecom.RemoteConference: int getState()>
<android.os.Binder: void flushPendingCommands()>
<android.hardware.camera2.params.MeteringRectangle: int getY()>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: java.lang.String getNamespaceUri(int)>
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnRestricted()>
<android.app.job.JobInfo.TriggerContentUri: void <init>(android.net.Uri,int)>
<android.app.AutomaticZenRule: void <init>(android.os.Parcel)>
<com.android.systemui.BatteryMeterDrawable: int getIntrinsicWidth()>
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchMostRecentTaskRequestEvent)>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setBatteryController(com.android.systemui.statusbar.policy.BatteryController)>
<android.graphics.drawable.ColorDrawable: int getColor()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isMedia()>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToString(int,int)>
<android.hardware.Camera.Parameters: java.util.List getFocusAreas()>
<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
<com.android.server.location.LocationRequestStatistics: void startRequesting(java.lang.String,java.lang.String,long)>
<android.renderscript.FieldPacker: android.renderscript.Int3 subInt3()>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative)>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,int[],int)>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.media.MediaDrm: void release()>
<com.android.server.am.ActivityManagerService: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<com.android.server.pm.PackageKeySetData: void removeAllUpgradeKeySets()>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>
<android.preference.MultiSelectListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>
<android.view.KeyEvent: boolean isShiftPressed()>
<com.android.systemui.tv.pip.PipManager: android.graphics.Rect getRecentsFocusedPipBounds()>
<android.content.AsyncTaskLoader: void setUpdateThrottle(long)>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent setAudioSessionId(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onStateChanged(boolean,boolean)>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>
<com.android.tools.layoutlib.create.MethodListener: double onInvokeD(java.lang.String,boolean,java.lang.Object)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState getInstance(android.app.Application)>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)>
<com.google.android.gles_jni.GLImpl: void glFinish()>
<android.text.AlteredCharSequence: java.lang.CharSequence subSequence(int,int)>
<android.widget.CalendarView.CalendarViewDelegate: int getUnfocusedMonthDateColor()>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster create()>
<android.view.View: void setTransitionName(java.lang.String)>
<android.webkit.WebChromeClient.FileChooserParams: int getMode()>
<android.text.style.TtsSpan.TextBuilder: android.text.style.TtsSpan.TextBuilder setText(java.lang.String)>
<android.service.dreams.DreamService: android.view.Window getWindow()>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>
<android.telecom.Call.Details: int getVideoState()>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: int getCustomBackgroundColor()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: int hashCode()>
<android.hardware.radio.RadioManager.AmBandDescriptor: boolean isStereoSupported()>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
<android.app.ActivityManagerProxy: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,boolean,int)>
<android.telephony.PhoneNumberUtils: boolean is12Key(char)>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)>
<android.os.Parcel: void writeException(java.lang.Exception)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender clone()>
<android.transition.ArcMotion: void <init>()>
<com.android.preload.actions.ImportAction: void run()>
<com.android.server.am.ActivityManagerService: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>
<com.android.preload.actions.ExportAction: void run()>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>
<android.widget.DialerFilter: void setMode(int)>
<com.android.server.am.ActivityManagerService.Lifecycle: com.android.server.am.ActivityManagerService getService()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
<android.location.LocationManager: boolean registerGnssNavigationMessageCallback(android.location.GnssNavigationMessage.Callback,android.os.Handler)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onCaptureResult(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.legacy.RequestHolder)>
<android.media.MediaRecorder: void setLocation(float,float)>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.settingslib.dream.DreamBackend: java.util.List getDreamInfos()>
<com.android.printspooler.widget.PreviewPageFrame: void setSelected(boolean,boolean)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getPrimaryVpnName()>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setTimestamp(long)>
<com.android.hotspot2.asn1.Asn1Boolean: java.lang.String toString()>
<com.android.systemui.qs.tiles.WorkModeTile: int getMetricsCategory()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>
<com.android.systemui.recents.RecentsImplProxy: void preloadRecents()>
<com.android.server.twilight.TwilightManager: com.android.server.twilight.TwilightState getLastTwilightState()>
<android.widget.GridLayout: void onViewRemoved(android.view.View)>
<com.android.systemui.tuner.TunerZenModePanel: void onClick(android.view.View)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,float[],int)>
<android.telecom.Connection: java.lang.String getCallerDisplayName()>
<com.android.server.AppOpsService: void packageRemoved(int,java.lang.String)>
<com.android.layoutlib.bridge.util.CachedPathIteratorFactory.CachedPathIterator: float getTotalLength()>
<android.graphics.ColorFilter_Delegate: boolean isSupported()>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View.MeasureSpec: int getSize(int)>
<com.android.server.display.NightDisplayService: void onCustomStartTimeChanged(com.android.internal.app.NightDisplayController.LocalTime)>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<android.webkit.CacheManager.CacheResult: java.lang.String getContentDisposition()>
<android.graphics.drawable.LayerDrawable: int findIndexByLayerId(int)>
<android.graphics.drawable.LayerDrawable: int getTopPadding()>
<android.print.PrintJobInfo.Builder: android.print.PrintJobInfo build()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onMiddleClicked()>
<android.telecom.Connection: android.telecom.Conference getConference()>
<android.telecom.Call.Details: java.lang.String getCallerDisplayName()>
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<android.hardware.camera2.utils.CloseableLock: void releaseLock()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.testrunner.IAutomationSupport getAutomationSupport()>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>
<com.android.anqp.IconInfo: java.lang.String getFileName()>
<com.android.systemui.recents.tv.animations.ViewFocusAnimator: void onFocusChange(android.view.View,boolean)>
<com.android.documentsui.RecentsLoader.RecentsTask: void run()>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplayProvider: int getDiscoveryMode()>
<com.android.systemui.statusbar.NotificationContentView: void setUserExpanding(boolean)>
<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer.Page openPage(int)>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceRegistered(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isPinnedStack(int)>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.hotspot2.omadm.OMANode: java.lang.String getContext()>
<android.telephony.PhoneNumberUtils: android.text.style.TtsSpan createTtsSpan(java.lang.String)>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>
<android.hardware.Camera: void cancelAutoFocus()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinnedModeChanged(boolean)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.documentsui.model.RootInfo: boolean isEmpty()>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<com.google.android.gles_jni.EGLSurfaceImpl: boolean equals(java.lang.Object)>
<com.android.documentsui.FilteringCursorWrapper: int getInt(int)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.hotspot2.osu.OSUSocketFactory: java.util.Set getRootCerts(java.security.KeyStore)>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>
<android.print.PrintJobInfo: java.lang.String getLabel()>
<com.android.server.am.ActivityManagerService: android.app.IActivityContainer createVirtualActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setCustomizerAnimating(boolean)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDClear()>
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
<android.widget.TextView: void onSelectionChanged(int,int)>
<com.android.systemui.statusbar.KeyboardShortcuts: void show(android.content.Context,int)>
<com.android.documentsui.SectionedListAdapter: java.lang.Object getItem(int)>
<com.android.documentsui.DirectoryLoader: void onStopLoading()>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>
<android.widget.ListPopupWindow: void dismiss()>
<com.android.hotspot2.osu.OSUManager: void setOSUSelection(int)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<com.android.systemui.statusbar.NotificationData: int getImportance(java.lang.String)>
<android.util.DisplayMetrics: void <init>()>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>
<android.media.MediaDrm: byte[] openSession()>
<com.android.printspooler.ui.PrinterRegistry: boolean areHistoricalPrintersLoaded()>
<android.app.VoiceInteractor.Prompt: void <init>(java.lang.CharSequence)>
<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>
<android.content.BroadcastReceiver: void setResultCode(int)>
<android.util.JsonReader: void nextNull()>
<com.android.systemui.recents.tv.RecentsTvActivity: boolean onPreDraw()>
<com.android.settingslib.RestrictedPreferenceHelper: boolean performClick()>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setSession(java.lang.String)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>
<android.graphics.drawable.AnimatedStateListDrawable: void <init>()>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
<com.android.uiautomator.core.UiObject: boolean isEnabled()>
<android.widget.Editor.HandleView: void positionAtCursorOffset(int,boolean)>
<com.android.settingslib.drawable.CircleFramedDrawable: int getIntrinsicHeight()>
<com.android.server.pm.PermissionsState.PermissionState: java.lang.String getName()>
<android.opengl.GLES10: void glNormal3x(int,int,int)>
<android.media.session.PlaybackState: float getPlaybackSpeed()>
<com.android.providers.settings.SettingsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
<android.view.BridgeInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.text.util.Rfc822Token: java.lang.String quoteName(java.lang.String)>
<com.android.gallery3d.util.IntArray: int[] getInternalArray()>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>
<android.app.ActivityManagerProxy: void updateDeviceOwner(java.lang.String)>
<android.hardware.camera2.legacy.RequestHolder: android.hardware.camera2.CaptureRequest getRequest()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void forceNoOverlappingRendering(boolean)>
<com.android.egg.neko.Cat: void <init>(android.content.Context,long)>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaSync.OnErrorListener: void onError(android.media.MediaSync,int,int)>
<android.graphics.Point: void offset(int,int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.NetworkControllerImpl.Config,boolean,android.telephony.TelephonyManager,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl,android.telephony.SubscriptionInfo,com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults,android.os.Looper)>
<android.media.ExifInterface: void saveAttributes()>
<android.widget.AutoCompleteTextView: void setThreshold(int)>
<android.app.SearchableInfo: int getVoiceLanguageId()>
<android.view.accessibility.AccessibilityEvent: void setAction(int)>
<com.example.android.networkusage.SettingsActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void addView(android.view.View)>
<android.view.IWindowManagerImpl: void setDockedStackDividerTouchRegion(android.graphics.Rect)>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasAlphaChangedFrom(float)>
<android.widget.Toolbar: void setNavigationOnClickListener(android.view.View.OnClickListener)>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: boolean getFeature(java.lang.String)>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.ExpandableView getChildAtPosition(float,float)>
<android.opengl.EGLObjectHandle: int getHandle()>
<android.content.pm.permission.RuntimePermissionPresenter.OnResultCallback: void onGetAppPermissions(java.util.List)>
<com.android.server.connectivity.NetdEventListenerService: void <init>(android.content.Context)>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>
<com.android.systemui.doze.DozeLog: void traceKeyguardBouncerChanged(boolean)>
<android.hardware.Sensor: int getFifoReservedEventCount()>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()>
<android.util.LruCache: int size()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageNameMatches(java.lang.String)>
<android.content.OperationApplicationException: void <init>(int)>
<android.media.MediaRecorder: void setMaxFileSize(long)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void lockDeviceNow()>
<com.android.systemui.qs.QSTile.ResourceIcon: java.lang.String toString()>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndication()>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>
<android.speech.RecognitionService.Callback: void error(int)>
<com.android.systemui.analytics.DataCollector: void onQsDown()>
<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener: void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo)>
<android.widget.TextView: void setHighlightColor(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onCameraLaunchGestureDetected(int)>
<android.opengl.GLES32: void glDrawElementsInstancedBaseVertex(int,int,int,java.nio.Buffer,int,int)>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
<com.android.systemui.recents.model.RecentsTaskLoader: void dump(java.lang.String,java.io.PrintWriter)>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>
<com.android.server.audio.AudioService.VolumeController: void postMasterMuteChanged(int)>
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>
<android.database.CursorWrapper: short getShort(int)>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>
<android.app.Presentation: void onStart()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void reset()>
<android.webkit.ServiceWorkerWebSettings: boolean getAllowContentAccess()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setOccluded(boolean,boolean)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor remove(java.lang.String)>
<android.app.admin.SecurityLog.SecurityEvent: void writeToParcel(android.os.Parcel,int)>
<android.webkit.CacheManager.CacheResult: java.lang.String getMimeType()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.widget.AbsSpinner: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.media.tv.TvInputService.RecordingSession: void onStartRecording(android.net.Uri)>
<com.android.systemui.statusbar.NotificationContentView: void updateBackgroundColor(boolean)>
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>
<android.view.Surface: android.graphics.Canvas lockHardwareCanvas()>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.documentsui.RootsFragment: com.android.documentsui.RootsFragment get(android.app.FragmentManager)>
<com.android.systemui.stackdivider.DividerView: void calculateBoundsForPosition(int,int,android.graphics.Rect)>
<android.widget.VideoView: boolean isPlaying()>
<com.android.systemui.statusbar.DismissView: void onFinishInflate()>
<android.media.SubtitleController.Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.view.View,int,int)>
<android.content.Context: android.content.res.AssetManager getAssets()>
<android.widget.OverScroller: void <init>(android.content.Context)>
<android.content.CursorLoader: void onCanceled(android.database.Cursor)>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.media.MediaCodec.OnFrameRenderedListener: void onFrameRendered(android.media.MediaCodec,long,long)>
<android.view.View: android.os.Parcelable onSaveInstanceState()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,float[],int)>
<android.media.tv.TvView: void timeShiftResume()>
<com.android.location.fused.FusionEngine.Callback: void reportLocation(android.location.Location)>
<android.media.RemoteController.MetadataEditor: void apply()>
<android.os.TokenWatcher: void dump(java.io.PrintWriter)>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<com.android.systemui.recents.tv.RecentsTvActivity: void onBackPressed()>
<android.opengl.GLSurfaceView: void setRenderMode(int)>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setSubtitle(java.lang.CharSequence)>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: android.os.UserHandle getCurrentUserHandle()>
<com.android.server.policy.BurnInProtectionHelper: void <init>(android.content.Context,int,int,int,int,int)>
<android.renderscript.Matrix4f: float[] getArray()>
<android.widget.TextView: boolean bringPointIntoView(int)>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.SerialService: java.lang.String[] getSerialPorts()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isShowing()>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionGroupInfo)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean)>
<com.android.systemui.qs.tiles.CellularTile: int getMetricsCategory()>
<android.view.View.OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>
<android.os.storage.StorageVolume: boolean isEmulated()>
<com.android.systemui.qs.QSPanel: void showDeviceMonitoringDialog()>
<android.hardware.camera2.params.MeteringRectangle: void <init>(int,int,int,int,int)>
<android.text.HtmlToSpannedConverter: void skippedEntity(java.lang.String)>
<android.app.assist.AssistStructure.ViewNode: int[] getTextLineBaselines()>
<com.android.systemui.statusbar.policy.SignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.systemui.statusbar.BaseStatusBar: boolean isKeyguardSecure()>
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>
<com.android.server.content.SyncStorageEngine.AuthorityInfo: java.lang.String toString()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>
<android.app.ApplicationErrorReport: int describeContents()>
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.Style: void checkBuilder()>
<android.text.style.SubscriptSpan: void <init>()>
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
<android.net.ConnectivityManager: void reportNetworkConnectivity(android.net.Network,boolean)>
<android.view.View: void postInvalidate()>
<android.printservice.PrintJob: void setStatus(java.lang.CharSequence)>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>
<android.hardware.radio.RadioManager.FmBandConfig.Builder: android.hardware.radio.RadioManager.FmBandConfig.Builder setTa(boolean)>
<com.android.systemui.RecentsComponent: void toggleRecents(android.view.Display)>
<android.net.Uri: int getPort()>
<com.android.systemui.qs.QuickQSPanel: void setHost(com.android.systemui.statusbar.phone.QSTileHost,com.android.systemui.qs.customize.QSCustomizer)>
<com.android.systemui.classifier.LengthCountClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.text.style.TtsSpan.FractionBuilder: void <init>()>
<com.android.layoutlib.bridge.Bridge.StaticMethodNotImplementedException: void <init>(java.lang.String)>
<android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)>
<android.widget.ZoomButtonsController.OnZoomListener: void onVisibilityChanged(boolean)>
<android.os.BatteryStats.HistoryStepDetails: void <init>()>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapS()>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,int[],int)>
<android.media.ImageWriter: int getFormat()>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionPending()>
<android.widget.AbsSeekBar: android.content.res.ColorStateList getThumbTintList()>
<android.app.ActivityManagerProxy: void unhandledBack()>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.widget.CalendarView.CalendarViewDelegate: int getShownWeekCount()>
<com.android.systemui.statusbar.stack.StackScrollState: com.android.systemui.statusbar.stack.StackViewState getViewStateForView(android.view.View)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<com.android.keyguard.KeyguardSimPinView: void resetState()>
<android.graphics.BlendComposite: int hashCode()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void release()>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.util.List getIntentFilterVerifications(java.lang.String)>
<android.database.AbstractCursor: void checkPosition()>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK getDeviceStateCallback()>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelRevealed(boolean,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean canCameraGestureBeLaunched(boolean)>
<android.os.ParcelUuid: java.util.UUID getUuid()>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<android.os.FileObserver: void <init>(java.lang.String)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<android.graphics.Bitmap: void setPixel(int,int,int)>
<android.widget.Editor.EditOperation: java.lang.String toString()>
<com.android.settingslib.BatteryInfo.BatteryDataParser: void onParsingStarted(long,long)>
<com.android.server.am.ActivityManagerService: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>
<android.view.animation.Animation: void setBackgroundColor(int)>
<com.android.documentsui.State: void popDocument()>
<android.widget.ExpandableListAdapter: int getGroupCount()>
<android.media.MediaMetadata.Builder: void <init>()>
<com.android.server.am.ActivityManagerService: java.lang.String checkContentProviderAccess(java.lang.String,int)>
<android.view.View: void postInvalidateOnAnimation()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void onDensityOrFontScaleChanged()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<com.android.location.provider.GeofenceProvider: android.os.IBinder getBinder()>
<android.telecom.TelecomManager: boolean handleMmi(java.lang.String)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>
<android.webkit.CookieManager: java.lang.Object clone()>
<com.android.systemui.statusbar.tv.TvStatusBar: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.notification.ManagedServices: void registerGuestService(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>
<android.media.AudioPortConfig: android.media.AudioPort port()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void addReorderingAllowedCallback(com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.anqp.eap.EAP: com.android.anqp.eap.EAP.AuthInfoID mapAuthMethod(int)>
<android.bluetooth.le.ScanRecord: java.util.Map getServiceData()>
<com.android.printspooler.model.PageContentRepository: void open(android.os.ParcelFileDescriptor,com.android.printspooler.model.OpenDocumentCallback)>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<android.media.AudioRecordingConfiguration: android.media.AudioFormat getClientFormat()>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.security.keystore.AndroidKeyStoreKeyGeneratorSpi.HmacSHA1: void <init>()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance()>
<android.media.RemoteController: boolean setSynchronizationMode(int)>
<com.android.tools.layoutlib.create.PromoteFieldClassAdapter: void <init>(org.objectweb.asm.ClassVisitor,java.util.Set)>
<android.database.AbstractCursor: boolean isNull(int)>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.Certificate provideCertificateResponse(android.media.MediaDrm,byte[])>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>
<android.widget.NumberPicker.Formatter: java.lang.String format(int)>
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>
<android.view.ScaleGestureDetector: long getEventTime()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap.Config)>
<android.app.admin.DevicePolicyManager: int getOrganizationColor(android.content.ComponentName)>
<com.android.server.net.NetlinkTracker.Callback: void update()>
<com.android.systemui.statusbar.ExpandableView: boolean pointInView(float,float,float)>
<android.telecom.RemoteConference.Callback: void onExtrasChanged(android.telecom.RemoteConference,android.os.Bundle)>
<android.service.voice.VoiceInteractionSession: void startVoiceActivity(android.content.Intent)>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<android.view.ViewParent: boolean isTextAlignmentResolved()>
<android.preference.PreferenceActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.app.ActionBar: void setHomeActionContentDescription(int)>
<android.widget.Editor.SuggestionsPopupWindow: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.server.fingerprint.AuthenticationClient: boolean onRemoved(int,int)>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.StatFs: int getFreeBlocks()>
<android.media.AudioTrack: void removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener)>
<com.android.server.am.ActivityManagerService: int setVrMode(android.os.IBinder,boolean,android.content.ComponentName)>
<android.graphics.PointF: void readFromParcel(android.os.Parcel)>
<android.webkit.WebView: void onStartTemporaryDetach()>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void <init>()>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setCoefficients(float[])>
<android.content.pm.PackageStats: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glPointSize(float)>
<android.widget.SearchView: int getMaxWidth()>
<android.app.Activity: boolean onSearchRequested(android.view.SearchEvent)>
<android.sax.EndTextElementListener: void end(java.lang.String)>
<com.android.systemui.Prefs: void registerListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.app.FragmentManagerImpl: void dispatchDestroy()>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>
<android.view.InputEvent: android.view.InputDevice getDevice()>
<android.view.View: void setRotationY(float)>
<android.text.AlteredCharSequence: java.lang.String toString()>
<android.os.Debug: int getGlobalExternalFreedCount()>
<android.app.job.JobInfo: boolean isRequireCharging()>
<com.android.server.pm.PackageInstallerService: java.io.File allocateStageDirLegacy(java.lang.String,boolean)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean uploadLimitReached()>
<android.text.SpannableStringBuilder: boolean equals(java.lang.Object)>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>
<com.android.defcontainer.MeasurementUtils: long measureDirectory(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<com.android.hotspot2.osu.HTTPHandler: void renegotiate(java.util.Map,java.security.PrivateKey)>
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()>
<android.telecom.ConnectionRequest: java.lang.String toString()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIcon(int)>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<com.google.android.gles_jni.GLImpl: void glPixelStorei(int,int)>
<com.android.systemui.statusbar.policy.NetworkController: void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<android.transition.Transition.EpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,int[],int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void launchAffordance(boolean,boolean)>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.content.ContentProviderResult: java.lang.String toString()>
<android.graphics.Gradient_Delegate: void <init>(int[],float[])>
<android.os.BatteryStats.HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>
<com.android.settingslib.drawer.UserAdapter: boolean isEnabled(int)>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>
<android.graphics.Paint: boolean isFilterBitmap()>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.util.TypedValue: float getFraction(float,float)>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.String)>
<android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
<android.net.wifi.WifiManager.MulticastLock: void release()>
<com.android.systemui.statusbar.notification.NotificationViewWrapper: void <init>(android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: void process()>
<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
<android.media.midi.MidiDeviceInfo: int hashCode()>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView()>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.TimePicker.TimePickerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<com.android.server.backup.Trampoline: android.content.Intent getDataManagementIntent(java.lang.String)>
<android.app.FragmentHostCallback: android.view.View onFindViewById(int)>
<android.telephony.SubscriptionInfo: int getIconTint()>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>
<com.android.systemui.tuner.ClipboardView: void startListening()>
<android.graphics.Bitmap_Delegate: android.graphics.Bitmap_Delegate getDelegate(long)>
<android.security.keystore.KeyGenParameterSpec: java.lang.String[] getBlockModes()>
<android.ddm.DdmHandleViewDebug: void disconnected()>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference.Callback,android.os.Handler)>
<com.android.systemui.statusbar.car.UserGridView: void onMeasure(int,int)>
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>
<android.animation.ValueAnimator: void setFrameDelay(long)>
<android.util.StateSet: boolean isWildCard(int[])>
<android.text.StaticLayout: int getEllipsizedWidth()>
<android.media.audiofx.Visualizer: int getFft(byte[])>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<com.android.server.notification.ZenModeConditions: void <init>(com.android.server.notification.ZenModeHelper,com.android.server.notification.ConditionProviders)>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<com.android.systemui.statusbar.StatusBarIconView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: int compareTo(com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry)>
<com.android.settingslib.bluetooth.MapProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>
<com.android.server.media.MediaSessionService: void onStart()>
<android.view.animation.Animation: int getZAdjustment()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void onReorderingFinished()>
<android.app.ApplicationThreadProxy: void scheduleLowMemory()>
<android.media.tv.TvInputService.HardwareSession: java.lang.String getHardwareInputId()>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Instrumentation: android.content.Context getContext()>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.filterpacks.imageproc.FillLightFilter: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>
<com.android.documentsui.model.RootInfo: boolean isLibrary()>
<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>
<com.android.systemui.keyguard.KeyguardViewMediator: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>
<android.widget.ToggleButton: void onFinishInflate()>
<com.android.systemui.classifier.AccelerationClassifier: java.lang.String getTag()>
<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.view.InflateException: void <init>(java.lang.Throwable)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.systemui.qs.QuickQSPanel: void onDetachedFromWindow()>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void start()>
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartX()>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.mtp.MtpDevice: boolean open(android.hardware.usb.UsbDeviceConnection)>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>
<android.hardware.Camera: void release()>
<android.preference.Preference: boolean shouldDisableDependents()>
<android.text.Layout: float getPrimaryHorizontal(int)>
<android.net.wifi.ScanResult: boolean is80211mcResponder()>
<android.graphics.Canvas: int save(int)>
<com.android.server.location.GeofenceManager: void onLocationChanged(android.location.Location)>
<android.telecom.InCallService.VideoCall: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.view.View: float getCameraDistance()>
<android.hardware.radio.RadioManager.FmBandConfig: boolean getEa()>
<android.webkit.WebViewClient: void onPageCommitVisible(android.webkit.WebView,java.lang.String)>
<android.widget.GridLayout.Spec: int hashCode()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>
<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.filterpacks.imageproc.DuotoneFilter: void setupPorts()>
<android.opengl.GLES10: void glTranslatef(float,float,float)>
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>
<com.android.server.SensorNotificationService: void onSensorChanged(android.hardware.SensorEvent)>
<android.app.NativeActivity: void onDestroy()>
<android.content.res.ComplexColor_Accessor: android.content.res.ColorStateList createColorStateListFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onStartedWakingUp()>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>
<android.content.SyncResult: void clear()>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>
<com.android.systemui.recents.tv.views.TaskCardView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.text.style.UnderlineSpan: int getSpanTypeId()>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>
<com.android.layoutlib.bridge.android.BridgePowerManager: boolean isPowerSaveMode()>
<android.widget.ImageView: void onDetachedFromWindow()>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>
<android.database.AbstractCursor: int getInt(int)>
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>
<android.graphics.Region: boolean isRect()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcIn()>
<android.renderscript.Allocation: void copyFrom(byte[])>
<android.app.FragmentManager: void popBackStack()>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.os.PowerManager: void reboot(java.lang.String)>
<android.net.ProxyInfo: java.lang.String toString()>
<android.os.health.HealthStats: int getMeasurementKeyAt(int)>
<android.service.carrier.CarrierMessagingService: void onSendMms(android.net.Uri,int,android.net.Uri,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>
<com.android.systemui.AutoReinflateContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.media.MediaRouterService: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,int,java.lang.String[],int[])>
<android.view.Window: android.transition.Transition getReenterTransition()>
<android.app.admin.DevicePolicyManager: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbumURL(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.view.ViewPropertyAnimator,float,float,float,float)>
<android.widget.SimpleAdapter: android.content.res.Resources.Theme getDropDownViewTheme()>
<com.android.anqp.eap.EAPMethod: void <init>(java.nio.ByteBuffer)>
<android.bluetooth.BluetoothGattCallback: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>
<android.app.Dialog: boolean isShowing()>
<android.renderscript.ScriptIntrinsicBLAS: void CHPR(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.systemui.tv.pip.PipMenuActivity: void onResume()>
<android.app.VoiceInteractor.PickOptionRequest: void onPickOptionResult(boolean,android.app.VoiceInteractor.PickOptionRequest.Option[],android.os.Bundle)>
<android.widget.RemoteViews: void removeAllViews(int)>
<com.android.server.accessibility.KeyboardInterceptor: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<android.opengl.GLES20: void glFinish()>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>
<com.android.systemui.statusbar.RemoteInputController: void addRemoteInput(com.android.systemui.statusbar.NotificationData.Entry,java.lang.Object)>
<android.app.admin.DevicePolicyManager: void lockNow()>
<android.preference.Preference: boolean persistBoolean(boolean)>
<com.android.server.statusbar.StatusBarShellCommand: void <init>(com.android.server.statusbar.StatusBarManagerService)>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward()>
<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdminOnAnyUser(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<com.android.location.provider.ProviderRequestUnbundled: long getInterval()>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void setDiscoverableAlarm(android.content.Context,long)>
<android.widget.GridView: void setColumnWidth(int)>
<android.app.Fragment: void setInitialSavedState(android.app.Fragment.SavedState)>
<com.android.gallery3d.glrenderer.GLId: void glGenBuffers(int,int[],int)>
<android.nfc.NdefMessage: java.lang.String toString()>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>
<android.location.Address: java.lang.String getPostalCode()>
<com.android.printspooler.ui.PageAdapter: void <init>(android.content.Context,com.android.printspooler.ui.PageAdapter.ContentCallbacks,com.android.printspooler.ui.PageAdapter.PreviewArea)>
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>
<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)>
<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>
<android.widget.DatePicker: int getFirstDayOfWeek()>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean areChildrenExpanded()>
<com.android.systemui.recents.RecentsImpl: void onBootCompleted()>
<com.android.server.am.BatteryStatsService: void noteJobFinish(java.lang.String,int)>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>
<com.android.systemui.qs.tiles.UserDetailItemView: void setDisabledByAdmin(boolean)>
<com.android.systemui.recents.events.EventBus: void unregister(java.lang.Object)>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
<com.android.hotspot2.asn1.Asn1Decoder: com.android.hotspot2.asn1.Asn1Tag mapTag(int)>
<android.media.midi.MidiSender: void onDisconnect(android.media.midi.MidiReceiver)>
<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>
<com.android.systemui.qs.QuickTileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean useFullscreenUserSwitcher()>
<com.android.server.InputMethodManagerService.Lifecycle: void onStart()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: android.content.Context getContext()>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Shader_Delegate: boolean isSupported()>
<com.android.systemui.qs.customize.TileAdapter: void onTilesChanged(java.util.List)>
<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>
<com.android.settingslib.SuggestionParser: java.util.List getSuggestions()>
<android.app.assist.AssistStructure.ViewNode: float getAlpha()>
<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources.Theme)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.net.Uri,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.documentsui.RecentsProvider: java.lang.String getType(android.net.Uri)>
<android.webkit.WebView: void destroy()>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.content.ContextWrapper: android.content.Context createDeviceProtectedStorageContext()>
<com.android.server.pm.PackageInstallerService: void onPrivateVolumeMounted(java.lang.String)>
<android.widget.AbsSeekBar: void onMeasure(int,int)>
<com.android.server.statusbar.StatusBarManagerInternal: void preloadRecentApps()>
<com.android.server.job.controllers.ContentObserverController: void maybeStartTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus)>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: void <init>(android.content.pm.UserInfo,android.graphics.Bitmap,boolean,boolean,boolean,boolean,boolean)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<com.android.settingslib.users.AppRestrictionsHelper: void applyUserAppState(java.lang.String,boolean,com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation build()>
<com.android.server.connectivity.NetworkAgentInfo.LingerTimer: boolean equals(java.lang.Object)>
<android.widget.Toolbar: int getContentInsetStart()>
<com.android.server.notification.NotificationDelegate: void onNotificationError(int,int,java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<android.os.ConditionVariable: void open()>
<com.android.server.notification.ManagedServices: void onUserSwitched(int)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeCallback(android.media.MediaRouter.VolumeCallback)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void <init>(android.content.Context)>
<android.media.session.MediaSession: void setActive(boolean)>
<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)>
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getLineNumber()>
<android.content.Context: boolean migrateSharedPreferencesFrom(android.content.Context,java.lang.String)>
<android.widget.GridLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.layoutlib.bridge.android.BridgeContext: android.os.IBinder getBinder()>
<android.location.GnssClock: boolean hasBiasUncertaintyNanos()>
<android.media.midi.MidiInputPort: int getPortNumber()>
<android.drm.DrmStore.Playback: void <init>()>
<android.media.AudioFormat: int describeContents()>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setWeekday(int)>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int,java.util.List)>
<android.graphics.drawable.LayerDrawable: int getOpacity()>
<android.widget.VideoView: void suspend()>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>
<android.media.ExifInterface: byte[] getThumbnail()>
<android.hardware.camera2.params.OutputConfiguration: int getSurfaceGroupId()>
<android.service.notification.ZenModeConfig.ScheduleInfo: java.lang.String toString()>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>
<android.telephony.CellSignalStrengthCdma: int getLevel()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearPages()>
<android.view.Window: int getDefaultFeatures(android.content.Context)>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>
<com.android.systemui.statusbar.tv.TvStatusBar: void buzzBeepBlinked()>
<com.android.systemui.statusbar.RemoteInputController: void removeRemoteInput(com.android.systemui.statusbar.NotificationData.Entry,java.lang.Object)>
<android.widget.NumberPicker: void <init>(android.content.Context)>
<com.android.systemui.qs.external.TileServiceManager: void setShowingDialog(boolean)>
<com.android.layoutlib.bridge.MockView: void addView(android.view.View)>
<android.app.FragmentManagerImpl: android.app.FragmentTransaction beginTransaction()>
<android.telephony.CellInfoGsm: int hashCode()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.keyguard.NumPadKey: void onDetachedFromWindow()>
<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>
<com.android.statementservice.retriever.Utils: java.lang.String joinStrings(java.lang.String,java.util.List)>
<com.android.documentsui.dirlist.MultiSelectManager: void <init>(android.support.v7.widget.RecyclerView,com.android.documentsui.dirlist.DocumentsAdapter,int,com.android.documentsui.dirlist.MultiSelectManager.Selection)>
<com.android.gallery3d.common.Utils: boolean equals(java.lang.Object,java.lang.Object)>
<android.graphics.PaintFlagsDrawFilter_Delegate: java.lang.String getSupportMessage()>
<android.database.Observable: void registerObserver(java.lang.Object)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.media.ExifInterface: void <init>(java.io.FileDescriptor)>
<android.media.MediaDrm: void releaseSecureStops(byte[])>
<android.media.JetPlayer: boolean play()>
<android.renderscript.Matrix3f: void rotate(float)>
<com.android.server.policy.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
<android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
<android.graphics.drawable.ColorDrawable: boolean canApplyTheme()>
<com.android.uiautomator.core.UiDevice: int getDisplayWidth()>
<com.android.settingslib.dream.DreamBackend: boolean isActivatedOnSleep()>
<android.graphics.Paint: void setFontFeatureSettings(java.lang.String)>
<com.android.server.notification.PriorityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<android.media.AudioRecord: int getAudioSource()>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean setDefaultBrowserPackageNameAsUser(java.lang.String,int)>
<android.telephony.CellInfo: boolean isRegistered()>
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>
<com.android.documentsui.model.DocumentInfo: boolean isVirtualDocument()>
<android.widget.LinearLayout: boolean isBaselineAligned()>
<com.android.systemui.recents.misc.DozeTrigger: void poke()>
<com.android.systemui.SystemUIFactory: void createFromConfig(android.content.Context)>
<com.android.systemui.qs.QSDualTileLabel: java.lang.String getText()>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>
<android.telecom.Connection.VideoProvider: void onRequestCameraCapabilities()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyPostedLocked(android.service.notification.StatusBarNotification,android.service.notification.StatusBarNotification)>
<android.service.voice.VoiceInteractionSession: void setKeepAwake(boolean)>
<com.android.documentsui.SectionedListAdapter: boolean areAllItemsEnabled()>
<android.content.pm.ShortcutInfo: boolean isPinned()>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.preference.ListPreference: void setEntries(int)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowCreated(android.graphics.SurfaceTexture,float,long,int)>
<com.android.documentsui.model.RootInfo: boolean isMtp()>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: long getCombinedChildId(long,long)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>
<com.android.gallery3d.exif.ExifTag: long getValueAsLong(long)>
<com.android.keyguard.KeyguardPasswordView: void reset()>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleSecondaryClick()>
<com.android.systemui.statusbar.policy.HotspotController: void addCallback(com.android.systemui.statusbar.policy.HotspotController.Callback)>
<com.android.systemui.statusbar.NotificationData.Entry: boolean cacheContentViews(android.content.Context,android.app.Notification)>
<com.android.keyguard.KeyguardHostView.OnDismissAction: boolean onDismiss()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBadgeMargin(float)>
<android.util.SparseBooleanArray: boolean equals(java.lang.Object)>
<android.graphics.Point: void set(int,int)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void addUnfocusedTaskOverride(com.android.systemui.recents.model.Task,float)>
<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>
<android.media.MediaMetadata: void writeToParcel(android.os.Parcel,int)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int,android.content.res.Resources.Theme)>
<com.android.hotspot2.osu.HTTPHandler: com.android.hotspot2.osu.OSUResponse exchangeSOAP(java.net.URL,java.lang.String)>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.mtp.MtpObjectInfo: int getThumbPixWidth()>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)>
<android.opengl.GLES10: void glLineWidthx(int)>
<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>
<com.android.systemui.RecentsComponent: void showNextAffiliatedTask()>
<javax.microedition.khronos.opengles.GL10: void glDepthRangex(int,int)>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>
<android.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)>
<com.android.settingslib.bluetooth.MapProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.location.GeofenceManager: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.telephony.CellIdentityGsm: int getCid()>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,boolean)>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.volume.ZenModePanel: void onFinishInflate()>
<com.android.photos.views.TiledImageView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<android.view.ViewGroup: boolean canAnimate()>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
<libcore.io.MemoryMappedFile_Delegate: void <init>(java.io.RandomAccessFile)>
<com.android.systemui.statusbar.phone.ScrimController: void onHeadsUpStateChanged(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void cancelExpandHelper()>
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>
<android.app.Dialog: void onBackPressed()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void cleanupEGLContext()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.content.res.Resources,int,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<android.telecom.DisconnectCause: void writeToParcel(android.os.Parcel,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: boolean getSampleEnabled()>
<android.app.Fragment: void onMultiWindowModeChanged(boolean)>
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>
<com.android.settingslib.bluetooth.PanProfile: boolean isAutoConnectable()>
<com.android.server.am.BatteryStatsService: void noteResetAudio()>
<android.text.DynamicLayout: int getEllipsizedWidth()>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: java.awt.image.BufferedImage getImage()>
<com.android.systemui.qs.QSPanel: void updateResources()>
<com.android.server.notification.ConditionProviders: android.util.ArraySet loadComponentNamesFromSetting(java.lang.String,int)>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getOrdinal()>
<android.location.GnssStatus.Callback: void onStopped()>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()>
<android.util.PathParser_Delegate.PathDataNode: float[] getParams()>
<android.content.BroadcastReceiver.PendingResult: void setResultCode(int)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setPhoneStatusBar(com.android.systemui.statusbar.phone.PhoneStatusBar)>
<android.bluetooth.le.BluetoothLeScanner: void flushPendingScanResults(android.bluetooth.le.ScanCallback)>
<android.media.SoundPool: int load(java.lang.String,int)>
<android.view.ViewStructure: int getTextSelectionStart()>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.app.usage.ConfigurationStats: android.content.res.Configuration getConfiguration()>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(android.renderscript.Float4)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<android.media.Image.Plane: int getRowStride()>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<com.android.server.net.NetworkPolicyManagerService: void addIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.media.AudioAttributes: int getContentType()>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,int[],int)>
<android.opengl.GLES20: void glBlendEquation(int)>
<android.media.MediaRouter.Callback: void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<com.android.server.midi.MidiService.Lifecycle: void onStart()>
<com.android.photos.views.TiledImageRenderer: void freeTextures()>
<android.hardware.camera2.impl.CameraCaptureSessionCore: boolean isAborting()>
<android.widget.LinearLayout: float getWeightSum()>
<com.android.server.location.LocationProviderProxy: void disable()>
<com.android.keyguard.CarrierText: void onAttachedToWindow()>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11: void glDrawElements(int,int,int,int)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>
<android.hardware.camera2.legacy.LegacyRequest: void setParameters(android.hardware.Camera.Parameters)>
<com.android.layoutlib.bridge.android.BridgePackageManager: int installExistingPackage(java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)>
<com.android.systemui.recents.misc.ForegroundThread: com.android.systemui.recents.misc.ForegroundThread get()>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onCreate(android.os.Bundle)>
<android.app.ActivityManagerProxy: void notifyActivityDrawn(android.os.IBinder)>
<android.view.ViewGroup: void setLayoutMode(int)>
<android.view.MotionEvent: void setEdgeFlags(int)>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<com.android.printspooler.widget.EmbeddedContentContainer: void onSizeChanged(int,int,int,int)>
<com.android.systemui.qs.QSDetailItems: void onAttachedToWindow()>
<com.android.documentsui.GridItemThumbnail: void onMeasure(int,int)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View,float,float)>
<android.media.MediaDrm: android.media.MediaDrm.CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(android.view.Surface)>
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<com.android.documentsui.FilesAppPerfTest: void testFilesColdStartPerformance()>
<android.app.ActionBar: void setNavigationMode(int)>
<com.android.server.storage.DiskStatsFileLogger: void <init>(com.android.server.storage.FileCollector.MeasurementResult,com.android.server.storage.FileCollector.MeasurementResult,java.util.List,long)>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSavedNetworkSummary()>
<android.widget.AbsListView: int getTopPaddingOffset()>
<com.android.systemui.statusbar.BaseStatusBar: void preloadRecentApps()>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.renderscript.ScriptGroup.Closure: void destroy()>
<com.android.settingslib.dream.DreamBackend: void setActiveDream(android.content.ComponentName)>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,float[])>
<android.bluetooth.BluetoothAdapter: boolean isEnabled()>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>
<android.service.voice.VoiceInteractionSession.AbortVoiceRequest: android.app.VoiceInteractor.Prompt getVoicePrompt()>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>
<android.widget.Spinner: int getDropDownVerticalOffset()>
<com.android.layoutlib.bridge.impl.RenderSessionImpl: void dispose()>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>
<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,int)>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>
<android.hardware.camera2.impl.CameraDeviceImpl: void prepare(android.view.Surface)>
<android.graphics.PathMeasure: void finalize()>
<com.android.server.am.LockTaskNotify: void showToast(int)>
<com.android.systemui.qs.external.QSTileServiceWrapper: android.os.IBinder asBinder()>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>
<android.widget.Toolbar: void setNavigationIcon(int)>
<com.android.systemui.qs.TileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onBootCompleted()>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(java.lang.String)>
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: android.content.SharedPreferences.Editor edit()>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<com.android.server.am.BatteryStatsService: void noteResetBleScan()>
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onOverscrolled(float,float,int)>
<com.android.server.backup.FullBackupJob: void finishBackupPass()>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>
<android.animation.LayoutTransition: void setStagger(int,long)>
<com.android.server.notification.RankingConfig: void setImportance(java.lang.String,int,int)>
<android.content.Context: boolean moveSharedPreferencesFrom(android.content.Context,java.lang.String)>
<android.media.midi.MidiSender: void disconnect(android.media.midi.MidiReceiver)>
<com.android.systemui.recents.misc.SystemServicesProxy: com.android.systemui.recents.misc.SystemServicesProxy getInstance(android.content.Context)>
<android.content.Loader: void onReset()>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>
<com.android.documentsui.BaseActivity: void onDestroy()>
<android.view.MotionEvent: int getSource()>
<android.graphics.Matrix: void mapPoints(float[],float[])>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void startPreHideAnimation(java.lang.Runnable)>
<com.android.server.pm.ShortcutService: long getRateLimitResetTime(java.lang.String,int)>
<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>
<com.android.server.policy.SystemGesturesPointerEventListener.Callbacks: void onMouseHoverAtBottom()>
<com.android.server.am.BatteryStatsService: void enforceCallingPermission()>
<android.os.BatteryStats.HistoryEventTracker: java.util.HashMap getStateForEvent(int)>
<com.android.tools.layoutlib.create.DelegateClassAdapter: void <init>(com.android.tools.layoutlib.create.Log,org.objectweb.asm.ClassVisitor,java.lang.String,java.util.Set)>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(com.android.gallery3d.exif.ExifTag)>
<com.android.server.usage.UsageStatsService: void <init>(android.content.Context)>
<com.android.systemui.qs.QSTile.ResourceIcon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>
<com.android.systemui.volume.ZenModePanel: void onAttachedToWindow()>
<android.provider.Contacts.ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
<android.transition.Transition: boolean canRemoveViews()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.NotificationSettingsIconRow getSettingsRow()>
<android.view.IWindowManagerImpl: int getAppOrientation(android.view.IApplicationToken)>
<android.content.pm.ShortcutInfo: java.lang.String getId()>
<com.android.systemui.statusbar.AnimatedImageView: boolean hasOverlappingRendering()>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<com.android.hotspot2.osu.OSUManager: void remediationComplete(com.android.hotspot2.pps.HomeSP,java.util.Collection,java.util.Map,java.security.PrivateKey)>
<com.android.systemui.qs.external.CustomTile: void handleClick()>
<com.android.server.connectivity.DataConnectionStats: void <init>(android.content.Context)>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>
<android.os.LocaleList: boolean isEmpty()>
<com.android.systemui.power.PowerUI.WarningsUI: void update(int,int,long)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setShowRunningNotification(boolean)>
<android.app.assist.AssistStructure.ViewNode: java.lang.String getIdPackage()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.qs.external.TileServiceManager: android.service.quicksettings.IQSTileService getTileService()>
<javax.microedition.khronos.opengles.GL11: void glTexCoordPointer(int,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getCannedFlingDurationFactor()>
<com.android.systemui.statusbar.phone.PanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.transition.ChangeTransform: void captureEndValues(android.transition.TransitionValues)>
<com.android.server.net.NetworkStatsService.NetworkStatsSettings: long getPollInterval()>
<android.app.FragmentController: void dispatchLowMemory()>
<com.android.hotspot2.Utils: java.util.List splitDomain(java.lang.String)>
<android.widget.GridLayout.Spec: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void appTransitionFinished()>
<com.android.location.fused.FusedLocationProvider: void onDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getTagsURL(java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void setRelativeFocusedTask(boolean,boolean,boolean,boolean,int)>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>
<android.telecom.RemoteConference: void playDtmfTone(char)>
<android.view.ViewConfiguration: int getScrollBarSize()>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>
<com.android.server.pm.PreferredComponent: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>
<android.media.MediaCodec: android.media.Image getInputImage(int)>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.lang.String,java.util.Collection)>
<android.widget.RelativeLayout.LayoutParams: int[] getRules()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void clearNonBondedDevices()>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String)>
<android.database.CharArrayBuffer: void <init>(int)>
<android.app.NotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<android.util.SparseLongArray: void <init>()>
<com.android.location.provider.LocationRequestUnbundled: java.lang.String toString()>
<com.android.server.notification.ZenModeFiltering: boolean isCall(com.android.server.notification.NotificationRecord)>
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
<android.net.wifi.nan.TlvBufferUtils.TlvConstructor: byte[] getArray()>
<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.CursorWindow: boolean isFloat(int,int)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsOES(short,short,short,short,short)>
<com.android.server.AppOpsService: void removeUser(int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void postStartActivityDismissingKeyguard(android.content.Intent,int)>
<com.android.keyguard.KeyguardPasswordView: java.lang.String getPasswordText()>
<android.widget.LinearLayout: int getGravity()>
<android.telecom.Connection: void setInitialized()>
<android.database.Cursor: boolean isLast()>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>
<android.widget.AbsListView: void onGlobalLayout()>
<android.media.MediaCodecList: java.lang.String findDecoderForFormat(android.media.MediaFormat)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getTransform(int,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<com.android.server.hdmi.HdmiCecMessage: int getSource()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(byte[],android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.SwipeHelper: float getUnscaledEscapeVelocity()>
<android.bluetooth.BluetoothClass: java.lang.String toString()>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>
<com.android.systemui.statusbar.BaseStatusBar: boolean onSecureLockScreen()>
<com.android.settingslib.drawer.SettingsDrawerAdapter: long getItemId(int)>
<android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
<android.view.Display.HdrCapabilities: boolean equals(java.lang.Object)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putRating(java.lang.String,android.media.Rating)>
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)>
<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: void <init>(int,int)>
<com.google.android.maps.MapView: boolean isStreetView()>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForAid(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getForegroundActivity()>
<com.android.systemui.ExpandHelper: void cancel()>
<android.media.tv.TvTrackInfo: int getAudioSampleRate()>
<android.widget.ExpandableListView: void setChildIndicatorBoundsRelative(int,int)>
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>
<com.android.server.am.UnsupportedDisplaySizeDialog: void <init>(com.android.server.am.ActivityManagerService,android.content.Context,android.content.pm.ApplicationInfo)>
<android.media.tv.TvInputInfo.Builder: android.media.tv.TvInputInfo.Builder setCanRecord(boolean)>
<com.android.location.provider.ActivityChangedEvent: java.lang.Iterable getActivityRecognitionEvents()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isScrolledToBottom()>
<android.opengl.GLES20: int glCreateProgram()>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.telephony.SubscriptionManager: int getActiveSubscriptionInfoCount()>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.widget.MediaController: void show()>
<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>
<com.android.systemui.statusbar.phone.NoisyVelocityTracker: void recycle()>
<android.view.View: boolean isClickable()>
<com.android.wallpapercropper.CropView: void setTouchCallback(com.android.wallpapercropper.CropView.TouchCallback)>
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>
<android.os.Parcel: void writeBooleanArray(boolean[])>
<android.view.IWindowManagerImpl: void clearForcedDisplaySize(int)>
<com.android.systemui.qs.tiles.CastTile: void <init>(com.android.systemui.qs.QSTile.Host)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.keyguard.PasswordTextView: void setUserActivityListener(com.android.keyguard.PasswordTextView.UserActivityListener)>
<android.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()>
<android.widget.ScrollView: void addView(android.view.View,int)>
<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<android.app.DialogFragment: void setCancelable(boolean)>
<android.text.style.TtsSpan.VerbatimBuilder: android.text.style.TtsSpan.VerbatimBuilder setVerbatim(java.lang.String)>
<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: boolean isFocusable()>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 times(float)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isMethodSecure()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void updateBackgroundForGroupState()>
<android.filterpacks.imageproc.SaturateFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.hardware.camera2.legacy.RequestQueue: android.hardware.camera2.utils.SubmitInfo submit(android.hardware.camera2.CaptureRequest[],boolean)>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseFinished()>
<android.util.BridgeXmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>
<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)>
<android.app.assist.AssistStructure.ViewNode: boolean isChecked()>
<android.view.animation.Animation: int getBackgroundColor()>
<android.media.session.MediaController.PlaybackInfo: int getMaxVolume()>
<com.android.statementservice.retriever.JsonParser: org.json.JSONObject parse(android.util.JsonReader)>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean,boolean)>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)>
<android.nfc.tech.TagTechnology: void close()>
<com.android.documentsui.dirlist.FragmentTuner: void <init>(android.content.Context,com.android.documentsui.State)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getIconCacheSize()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.text.format.Time: long setJulianDay(int)>
<com.android.server.notification.ConditionProviders: boolean isSystemProviderEnabled(java.lang.String)>
<com.android.systemui.qs.customize.QSCustomizer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.ServiceWatcher: void onServiceDisconnected(android.content.ComponentName)>
<com.android.server.pm.ProtectedPackages: boolean isPackageStateProtected(int,java.lang.String)>
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: boolean onDeviceDisappeared(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.text.style.DrawableMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<android.service.dreams.DreamService: boolean isFullscreen()>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.location.provider.FusedLocationHardware: void startBatching(int,com.android.location.provider.GmsFusedBatchOptions)>
<android.app.Fragment: void setSharedElementEnterTransition(android.transition.Transition)>
<com.android.preload.DeviceUtils: java.lang.String doShellReturnString(com.android.ddmlib.IDevice,java.lang.String,long,java.util.concurrent.TimeUnit)>
<android.os.HardwarePropertiesManager: android.os.CpuUsageInfo[] getCpuUsages()>
<com.android.server.pm.ShortcutService: byte[] getBackupPayload(int)>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<com.android.server.notification.ZenModeFiltering: boolean shouldIntercept(int,android.service.notification.ZenModeConfig,com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void addCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<android.media.tv.TvInputInfo: boolean equals(java.lang.Object)>
<android.location.GnssStatus: int getSatelliteCount()>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPromtReasonStringRes(int)>
<android.text.style.StrikethroughSpan: int describeContents()>
<android.text.BidiFormatter: boolean getStereoReset()>
<com.android.server.DeviceIdleController: boolean getPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: void setActualHeight(int)>
<com.android.hotspot2.pps.SubscriptionParameters: void <init>(com.android.hotspot2.omadm.OMANode)>
<android.animation.Keyframes.IntKeyframes: int getIntValue(float)>
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isHeadsUp(java.lang.String)>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>
<android.widget.ListPopupWindow: void setAnchorView(android.view.View)>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>
<com.android.systemui.statusbar.notification.NotificationMediaTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.os.Looper: java.lang.String toString()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.telecom.Call.Callback: void onCallDestroyed(android.telecom.Call)>
<android.text.style.LocaleSpan: void updateDrawState(android.text.TextPaint)>
<android.graphics.Paint_Delegate: android.graphics.Paint_Delegate getDelegate(long)>
<android.database.AbstractCursor: void onChange(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: void onDensityOrFontScaleChanged()>
<com.android.settingslib.wifi.AccessPoint: void setListener(com.android.settingslib.wifi.AccessPoint.AccessPointListener)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setStorageId(int)>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>
<com.android.systemui.qs.SecureSetting: void setValue(int)>
<com.android.systemui.recents.RecentsImplProxy: void onConfigurationChanged()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>
<com.android.systemui.qs.SecureSetting: int getValue()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.android.server.location.LocationBlacklist: void dump(java.io.PrintWriter)>
<com.android.systemui.analytics.DataCollector: void onNotificatonStartDismissing()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onHeadsUpPinned(com.android.systemui.statusbar.ExpandableNotificationRow)>
<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(java.lang.Object)>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onActivityDrawn()>
<android.os.BatteryStats.Uid.Sensor: int getHandle()>
<com.android.documentsui.services.FileOperations: java.lang.String copy(android.app.Activity,java.util.List,com.android.documentsui.model.DocumentStack)>
<com.android.systemui.tuner.ClipboardView: void onAttachedToWindow()>
<com.android.server.fingerprint.ClientMonitor: boolean onEnrollResult(int,int,int)>
<android.graphics.drawable.AnimatedVectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.widget.OverScroller: float getCurrVelocity()>
<com.android.systemui.recents.views.FixedSizeImageView: void invalidate()>
<android.media.audiofx.PresetReverb: void <init>(int,int)>
<com.android.systemui.statusbar.notification.TransformState: void setClippingDeactivated(android.view.View,boolean)>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>
<com.android.systemui.recents.Recents: void logDockAttempt(android.content.Context,android.content.ComponentName,int)>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet(java.lang.Object[])>
<android.os.PatternMatcher: java.lang.String getPath()>
<android.renderscript.Allocation: void copy1DRangeToUnchecked(int,int,float[])>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.LocationController getLocationController()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onFinishInflate()>
<com.android.systemui.qs.tiles.UserTile: com.android.systemui.qs.QSTile.State newTileState()>
<com.android.systemui.statusbar.policy.HotspotController.Callback: void onHotspotChanged(boolean)>
<android.widget.Toolbar_Accessor: android.content.Context getPopupContext(android.widget.Toolbar)>
<com.android.server.am.ActivityManagerService: void setUsageStatsManager(android.app.usage.UsageStatsManagerInternal)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<android.security.keystore.KeyPermanentlyInvalidatedException: void <init>()>
<android.bluetooth.le.ScanResult: boolean equals(java.lang.Object)>
<android.os.FileBridge.FileBridgeOutputStream: void fsync()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<android.view.OrientationEventListener: void enable()>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskStartedEvent)>
<com.android.systemui.qs.QSPanel: void onCollapse()>
<android.app.ExpandableListActivity: long getSelectedId()>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.customize.TileAdapter: void <init>(android.content.Context)>
<com.android.hotspot2.osu.OSUClient: void <init>(com.android.hotspot2.osu.OSUInfo,java.security.KeyStore)>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayAdded(int)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.opengl.GLES30: void glReadPixels(int,int,int,int,int,int,int)>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentProviderOperation: android.net.Uri getUri()>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View: void setWillNotDraw(boolean)>
<android.renderscript.ScriptIntrinsicBLAS: void SSYR2(int,float,android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void showScrim()>
<android.print.PrintDocumentInfo: boolean equals(java.lang.Object)>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.graphics.drawable.Animatable2: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
<android.graphics.Bitmap: int getScaledHeight(int)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getHeight()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>
<com.android.settingslib.wifi.AccessPointPreference: com.android.settingslib.wifi.AccessPoint getAccessPoint()>
<com.android.printspooler.ui.PrinterRegistry: void addHistoricalPrinter(android.print.PrinterInfo)>
<android.graphics.drawable.NinePatchDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.hardware.camera2.params.LensShadingMap: boolean equals(java.lang.Object)>
<android.content.ContextWrapper: boolean isRestricted()>
<android.os.Debug: long getNativeHeapSize()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.ui.PrintActivity: void onLoadFinished(android.content.Loader,java.util.List)>
<com.android.systemui.volume.VolumeDialogComponent: com.android.systemui.statusbar.policy.ZenModeController getZenController()>
<android.widget.BaseAdapter: int getItemViewType(int)>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.view.MotionEvent: long getDownTime()>
<com.android.server.AppOpsService.Ops: void <init>(java.lang.String,com.android.server.AppOpsService.UidState,boolean)>
<android.text.AlteredCharSequence: char charAt(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe[])>
<com.android.server.pm.PermissionsState: void <init>(com.android.server.pm.PermissionsState)>
<android.content.res.TypedArray: int getChangingConfigurations()>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectActivityLeaks()>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>
<android.widget.TextView: void setShowSoftInputOnFocus(boolean)>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.telecom.Call: void mergeConference()>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.content.pm.PackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
<android.location.GnssMeasurement: long getCarrierCycles()>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchGetNewSurface()>
<android.os.LocaleList: void <init>(java.util.Locale[])>
<com.android.anqp.I18Name: java.lang.String getText()>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>
<android.view.KeyEvent: char getDisplayLabel()>
<com.android.systemui.qs.QSPanel.Callback: void onToggleStateChanged(boolean)>
<android.content.pm.PackageParser.Package: void setApplicationInfoSplitCodePaths(java.lang.String[])>
<com.android.systemui.recents.RecentsActivity: void onDetachedFromWindow()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
<android.app.Activity: java.lang.CharSequence getTitle()>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.util.SparseLongArray: java.lang.String toString()>
<com.android.systemui.qs.QSTileBaseView: void <init>(android.content.Context,com.android.systemui.qs.QSIconView,boolean)>
<com.android.hotspot2.omadm.OMAScalar: java.lang.String getValue()>
<android.view.MotionEvent: float getY()>
<android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void setContentView(android.view.View)>
<android.nfc.TagLostException: void <init>()>
<android.widget.TableLayout.LayoutParams: void <init>()>
<android.net.NetworkStats.Entry: java.lang.String toString()>
<com.android.printspooler.model.PrintSpoolerService: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HfpClientProfile getHfpClientProfile()>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>
<com.android.systemui.settings.BrightnessController: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context)>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>
<com.android.systemui.qs.TileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.AutoSizingList: void setAdapter(android.widget.ListAdapter)>
<android.app.VoiceInteractor.ConfirmationRequest: void onConfirmationResult(boolean,android.os.Bundle)>
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String,java.lang.String)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent)>
<com.google.android.gles_jni.GLImpl: int glCheckFramebufferStatusOES(int)>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: boolean setEphemeralCookie(byte[])>
<android.view.WindowManagerPolicy.WindowState: boolean hasAppShownWindows()>
<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>
<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService.BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)>
<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setThrottled(boolean)>
<com.android.systemui.ExpandHelper.Callback: int getMaxExpandHeight(com.android.systemui.statusbar.ExpandableView)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onRotationLockStateChanged(boolean,boolean)>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isWakeUpComingFromTouch()>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<com.android.systemui.statusbar.SignalClusterView: void onDetachedFromWindow()>
<com.android.systemui.recents.views.AnimationProps: boolean isImmediate()>
<com.android.server.am.ActivityManagerService: void setDumpHeapDebugLimit(java.lang.String,int,long,java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>
<android.widget.Gallery: int computeHorizontalScrollOffset()>
<android.net.wifi.WifiManager.WifiLock: void finalize()>
<android.os.PowerManager: boolean isInteractive()>
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)>
<com.android.systemui.qs.QSIconView: android.view.View getIconView()>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
<com.android.server.connectivity.NetworkNotificationManager: void <init>(android.content.Context,android.telephony.TelephonyManager,android.app.NotificationManager)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionStarting(long,long)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<com.android.systemui.recents.views.TaskView: com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider()>
<android.transition.ChangeTransform: void <init>()>
<com.android.server.policy.PhoneWindowManager: void setDisplayOverscan(android.view.Display,int,int,int,int)>
<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<com.android.server.policy.GlobalActions.Action: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: float updateFocusStateOnScroll(float,float,float)>
<com.android.systemui.statusbar.stack.NotificationChildrenContainer: int getNotificationChildCount()>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.TableRow.LayoutParams: void <init>()>
<android.util.PathParser_Delegate: android.util.PathParser_Delegate.PathDataNode[] createNodesFromPathData(java.lang.String)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putString(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.ExpandableNotificationRow: boolean handleSlideBack()>
<com.android.systemui.egg.MLand: float getLastTimeStep()>
<android.security.KeyChainException: void <init>(java.lang.String)>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb.Settings)>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>
<com.android.server.am.ActivityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>
<android.view.WindowManagerInternal.OnHardKeyboardStatusChangeListener: void onHardKeyboardStatusChange(boolean)>
<com.android.documentsui.model.DocumentInfo: boolean isDirectory()>
<android.webkit.WebResourceError: java.lang.CharSequence getDescription()>
<com.android.server.midi.MidiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.ScrollView: boolean pageScroll(int)>
<com.android.server.search.Searchables: void <init>(android.content.Context,int)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>
<com.android.systemui.classifier.PointerCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>
<com.android.server.am.AppTimeTracker: void <init>(android.app.PendingIntent)>
<android.view.MotionEvent: float getPressure(int)>
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>
<com.android.systemui.recents.model.TaskStack: int getStackTaskCount()>
<android.ddm.DdmHandleViewDebug: void register()>
<android.media.MediaCodecInfo.CodecCapabilities: void <init>()>
<android.service.carrier.CarrierMessagingService.ResultCallback: void onReceiveResult(java.lang.Object)>
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>
<com.android.systemui.recents.RecentsActivityLaunchState: void reset()>
<android.service.voice.VoiceInteractionSession.PickOptionRequest: android.app.VoiceInteractor.PickOptionRequest.Option[] getOptions()>
<com.android.systemui.statusbar.phone.PanelView: void setBar(com.android.systemui.statusbar.phone.PanelBar)>
<android.graphics.DashPathEffect_Delegate: boolean isSupported()>
<android.opengl.GLES32: void glColorMaski(int,boolean,boolean,boolean,boolean)>
<com.android.printspooler.ui.PrintActivity: void onLoaderReset(android.content.Loader)>
<android.database.CursorWindow: int getStartPosition()>
<com.google.android.gles_jni.GLImpl: void glSampleCoverage(float,boolean)>
<android.view.ViewGroup: int getLayoutMode()>
<android.view.View: float getRotationX()>
<com.android.server.net.NetworkStatsRecorder: void setPersistThreshold(long)>
<android.ddm.DdmHandleExit: void connected()>
<android.os.BaseBundle: int[] getIntArray(java.lang.String)>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFormatSupported(android.media.MediaFormat)>
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])>
<com.android.statementservice.retriever.AbstractAsset: com.android.statementservice.retriever.AbstractAsset create(java.lang.String)>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.view.inputmethod.InputContentInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.ScrimView: int getScrimColorWithAlpha()>
<android.hardware.radio.RadioManager.FmBandDescriptor: boolean equals(java.lang.Object)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>
<com.android.layoutlib.bridge.android.BridgeIInputMethodManager: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<android.print.PrintJob: android.print.PrintJobId getId()>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean hasSameSize(com.android.printspooler.model.PageContentRepository.RenderedPage)>
<com.android.documentsui.LauncherActivity: void onCreate(android.os.Bundle)>
<android.hardware.radio.RadioManager.AmBandDescriptor: int describeContents()>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>
<android.renderscript.FieldPacker: byte subI8()>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle nonNull(android.os.Bundle)>
<com.android.server.job.controllers.AppIdleController: void maybeStopTrackingJobLocked(com.android.server.job.controllers.JobStatus,com.android.server.job.controllers.JobStatus,boolean)>
<android.widget.TableLayout: boolean isStretchAllColumns()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent)>
<com.android.server.am.BroadcastStats: void <init>()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<android.text.format.Time: int getJulianDay(long,long)>
<com.android.systemui.statusbar.phone.ScrimController: void setShowScrimBehind(boolean)>
<android.transition.ArcMotion: void setMaximumAngle(float)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintShowBackgroundOnly(boolean)>
<android.graphics.Path: void set(android.graphics.Path)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeCount()>
<com.android.settingslib.drawable.UserIconDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.media.remotedisplay.RemoteDisplay: void <init>(java.lang.String,java.lang.String)>
<com.android.server.display.DisplayManagerService: void windowManagerAndInputReady()>
<android.app.usage.ConfigurationStats: int describeContents()>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>
<android.renderscript.FieldPacker: void reset(int)>
<android.widget.TextView: float getLineSpacingMultiplier()>
<android.filterpacks.imageproc.ImageSlicer: void <init>(java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: int getFocusedMonthDateColor()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserURL(java.lang.String)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void performDismiss(android.view.View,com.android.systemui.statusbar.phone.NotificationGroupManager,boolean)>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onFailure(int)>
<android.os.Process: boolean is64Bit()>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void onWindowSystemUiVisibilityChanged(int)>
<android.transition.TransitionInflater: android.transition.TransitionInflater from(android.content.Context)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.Class)>
<com.android.systemui.qs.QuickQSPanel: void setMaxTiles(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getOpacity()>
<android.view.View: android.view.PointerIcon getPointerIcon()>
<android.app.Fragment: android.content.Context getContext()>
<android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>
<android.widget.SlidingDrawer: boolean isMoving()>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>
<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>
<android.animation.FloatArrayEvaluator: float[] evaluate(float,float[],float[])>
<android.view.View: boolean isTextDirectionResolved()>
<com.android.systemui.qs.external.TileServiceManager: void calculateBindPriority(long)>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int,int)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>
<com.android.server.am.BatteryStatsService: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasEmergencyCryptKeeperText()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>
<android.hardware.Camera.Parameters: void setVideoStabilization(boolean)>
<android.ext.services.Version: int getVersionCode()>
<android.app.UiModeManager: void disableCarMode(int)>
<com.android.location.provider.FusedLocationHardwareSink: void onCapabilities(int)>
<com.android.server.am.ActivityManagerService: boolean startUserInBackground(int)>
<android.util.LongSparseArray: long keyAt(int)>
<android.hardware.camera2.params.TonemapCurve: int hashCode()>
<com.android.systemui.qs.PagedTileLayout.TilePage: void setMaxRows(int)>
<android.hardware.usb.UsbEndpoint: int getAddress()>
<com.android.keyguard.KeyguardSimPinView: boolean shouldLockout(long)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.location.Location: java.lang.String toString()>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>
<android.telecom.Call.Details: android.telecom.StatusHints getStatusHints()>
<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<com.android.systemui.qs.tiles.DndTile: boolean isAvailable()>
<android.hardware.camera2.CaptureResult.Key: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void onChildAnimationFinished()>
<android.os.Debug: long getNativeHeapFreeSize()>
<android.telecom.Connection: void onCallAudioStateChanged(android.telecom.CallAudioState)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForSelectorTimeout(long)>
<com.android.server.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>
<android.widget.RatingBar: void setNumStars(int)>
<android.webkit.WebStorage: void deleteAllData()>
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>
<android.media.browse.MediaBrowser.MediaItem: void writeToParcel(android.os.Parcel,int)>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap,boolean)>
<android.app.ActionBar: android.view.View getCustomView()>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onPause()>
<android.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.analytics.DataCollector: void onUnlockHintStarted()>
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>
<android.app.ActivityManager: java.util.List getAppTasks()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClick(android.view.View)>
<com.android.layoutlib.bridge.android.BridgeContext: android.content.ContentResolver getContentResolver()>
<android.database.MergeCursor: int getCount()>
<com.android.layoutlib.bridge.impl.LayoutParserWrapper: int getLineNumber()>
<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.drawer.UserAdapter: boolean hasStableIds()>
<android.view.Window: void setExitTransition(android.transition.Transition)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<android.telephony.gsm.GsmCellLocation: int getPsc()>
<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationColor(android.content.ComponentName,int)>
<android.graphics.Paint: boolean hasGlyph(java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: void onMeasure(int,int)>
<com.android.wallpapercropper.CropView: void moveToLeft()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void makeActionsVisibile()>
<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView.OnMenuItemClickListener)>
<android.webkit.WebSettings: void setCacheMode(int)>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.media.audiofx.Virtualizer: boolean getSpeakerAngles(int,int,int[])>
<com.android.server.policy.PhoneWindowManager: boolean isScreenOn()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getPhonebookPermissionChoice()>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>
<com.android.systemui.egg.MLand: void onAttachedToWindow()>
<com.android.systemui.statusbar.stack.StackStateAnimator: void animateOverScrollToAmount(float,boolean,boolean)>
<com.android.documentsui.SectionedListAdapter: void addSection(com.android.documentsui.SectionedListAdapter.SectionAdapter)>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getDockedDividerInsetsLw()>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.BounceInterpolator: float getInterpolation(float)>
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setUnderlyingNetworks(android.net.Network[])>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>
<com.android.systemui.qs.external.TileLifecycleManager: void onClick(android.os.IBinder)>
<android.telecom.Voicemail.Builder: android.telecom.Voicemail.Builder setSourceData(java.lang.String)>
<com.android.systemui.statusbar.phone.TrustDrawable: void setAlpha(int)>
<android.widget.GridView: int getRequestedColumnWidth()>
<android.os.HandlerThread: void onLooperPrepared()>
<com.android.MainActivity.OSUService: android.os.IBinder onBind(android.content.Intent)>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
<com.android.hotspot2.osu.OSUCommand: com.android.hotspot2.osu.ExecCommand getExecCommand()>
<com.android.printspooler.ui.PrintErrorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.server.LockSettingsService.Lifecycle: void onCleanupUser(int)>
<com.android.systemui.statusbar.SignalClusterView: void setSubs(java.util.List)>
<android.view.View: void setClipBounds(android.graphics.Rect)>
<android.nfc.NdefRecord: void <init>(byte[])>
<com.android.layoutlib.bridge.impl.GcSnapshot: java.awt.geom.AffineTransform getTransform()>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<com.android.systemui.statusbar.phone.IconMerger: void onMeasure(int,int)>
<com.android.systemui.BatteryMeterDrawable: void <init>(android.content.Context,android.os.Handler,int)>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.applications.AppUtils: boolean hasUsbDefaults(android.hardware.usb.IUsbManager,java.lang.String)>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<com.android.systemui.volume.Events.Callback: void writeEvent(long,int,java.lang.Object[])>
<android.widget.Toast: int getGravity()>
<android.media.audiofx.NoiseSuppressor: android.media.audiofx.NoiseSuppressor create(int)>
<android.database.AbstractCursor: android.os.Bundle getExtras()>
<android.app.Activity: void setMediaController(android.media.session.MediaController)>
<android.media.AudioRecord.OnRoutingChangedListener: void onRoutingChanged(android.media.AudioRecord)>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: void <init>(java.util.Map)>
<android.media.midi.MidiDeviceInfo: boolean equals(java.lang.Object)>
<android.widget.SearchView: void onMeasure(int,int)>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>
<android.database.Cursor: boolean moveToNext()>
<com.android.systemui.DessertCaseDream: void onDreamingStarted()>
<android.speech.tts.TextToSpeech: void shutdown()>
<android.media.FaceDetector: void <init>(int,int,int)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: int getHeight()>
<com.android.server.net.NetworkStatsService: void bindConnectivityManager(android.net.IConnectivityManager)>
<android.telephony.NeighboringCellInfo: void setCid(int)>
<android.content.SyncResult: boolean hasSoftError()>
<android.location.GnssMeasurement: double getPseudorangeRateMetersPerSecond()>
<android.gesture.GestureLibrary: int getSequenceType()>
<com.android.documentsui.FilesAppPerfTest: void runFilesStartPerformanceTest(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<com.android.future.usb.UsbManager: boolean hasPermission(com.android.future.usb.UsbAccessory)>
<android.app.ActivityManager.TaskDescription: void writeToParcel(android.os.Parcel,int)>
<android.opengl.EGL14: boolean eglWaitNative(int)>
<android.database.CursorWindow: boolean setNumColumns(int)>
<android.service.carrier.CarrierMessagingService: void onSendMultipartTextSms(java.util.List,int,java.lang.String,int,android.service.carrier.CarrierMessagingService.ResultCallback)>
<android.net.LocalSocket: void <init>(int)>
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)>
<com.android.systemui.qs.customize.TileQueryHelper: void <init>(android.content.Context,com.android.systemui.statusbar.phone.QSTileHost)>
<javax.microedition.khronos.opengles.GL10: void glDisableClientState(int)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.tools.layoutlib.java.IntegralToString: java.lang.String intToOctalString(int)>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.classifier.FalsingManager: void onTouchEvent(android.view.MotionEvent,int,int)>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>
<android.hardware.radio.RadioManager.FmBandConfig: boolean getAf()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,float)>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener,android.os.Handler)>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>
<android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl: void prepare(android.view.Surface)>
<com.android.systemui.qs.tiles.WorkModeTile: java.lang.String composeChangeAnnouncement()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary()>
<com.android.systemui.recents.model.RecentsTaskLoader: void preloadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,int,boolean)>
<android.telecom.Conference: int getConnectionProperties()>
<android.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<android.widget.ViewAnimator: void <init>(android.content.Context)>
<com.android.settingslib.accounts.AuthenticatorHelper: void onReceive(android.content.Context,android.content.Intent)>
<android.opengl.GLES32: void glCopyImageSubData(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
<android.view.WindowLeaked: void <init>(java.lang.String)>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.phone.StatusBarWindowManager: void setHeadsUpShowing(boolean)>
<android.app.usage.NetworkStats: boolean hasNextBucket()>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>
<android.graphics.RoundRectangle: double getWidth()>
<com.android.printservice.recommendation.plugin.samsung.ServiceRecommendationPlugin: void stop()>
<android.security.keystore.KeyInfo: int getOrigin()>
<com.android.systemui.ViewInvertHelper: void <init>(android.content.Context,long)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.media.MediaDrm: java.util.List getSecureStops()>
<android.app.ActivityManagerProxy: android.graphics.Rect getTaskBounds(int)>
<com.android.server.connectivity.LingerMonitor: android.app.PendingIntent createNotificationIntent()>
<com.android.systemui.statusbar.DismissViewButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.hotspot2.osu.ClientKeyManager: java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket)>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.provider.ContactsContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HeadsetProfile getHeadsetProfile()>
<android.app.MediaRouteActionProvider: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<com.android.systemui.statusbar.NotificationOverflowIconsView: void onFinishInflate()>
<com.android.server.pm.PackageManagerService: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<com.android.layoutlib.bridge.impl.Stack: void <init>(int)>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameMethodAdapter: void visitTryCatchBlock(org.objectweb.asm.Label,org.objectweb.asm.Label,org.objectweb.asm.Label,java.lang.String)>
<android.nfc.tech.MifareClassic: int getSectorCount()>
<com.android.systemui.tv.pip.PipControlsView: void setListener(com.android.systemui.tv.pip.PipControlsView.Listener)>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>
<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>
<android.media.MediaRecorder: void release()>
<com.android.systemui.statusbar.policy.RemoteInputView: void setPendingIntent(android.app.PendingIntent)>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short4)>
<com.android.settingslib.dream.DreamBackend: void setActivatedOnSleep(boolean)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesList()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getName()>
<com.android.systemui.DessertCaseView: void fillFreeList()>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>
<com.android.server.pm.PackageManagerService: void forceDexOpt(java.lang.String)>
<com.android.tools.layoutlib.create.DependencyFinder: void printAllDeps(java.util.List)>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>
<com.android.systemui.recents.tv.animations.RecentsRowFocusAnimationHolder: void startFocusGainAnimation()>
<android.os.WorkSource: int hashCode()>
<android.widget.DatePicker: long getMinDate()>
<android.net.Uri.Builder: java.lang.String toString()>
<android.widget.ListPopupWindow: boolean isModal()>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,java.nio.IntBuffer)>
<android.view.ViewStructure: void setLongClickable(boolean)>
<com.android.tools.layoutlib.create.ClassHasNativeVisitor: void <init>()>
<com.android.systemui.statusbar.NotificationContentView: void setContractedChild(android.view.View)>
<android.widget.ListView: long[] getCheckItemIds()>
<android.media.audiofx.PresetReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.PresetReverb,int,int,short)>
<android.text.style.ImageSpan: java.lang.String getSource()>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<com.android.server.TextServicesManagerService.Lifecycle: void onSwitchUser(int)>
<com.android.server.audio.AudioService.VolumeController: void setVisible(boolean)>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.Mesh getMesh()>
<android.os.Process: int getUidForName(java.lang.String)>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void updateNotificationIcons(com.android.systemui.statusbar.NotificationData)>
<com.android.systemui.tv.pip.PipControlsView: void onDetachedFromWindow()>
<android.app.FragmentManagerImpl: void performPendingDeferredStart(android.app.Fragment)>
<android.content.pm.ActivityInfo: void <init>()>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setShadeEmpty(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowScale()>
<android.mtp.MtpObjectInfo.Builder: void <init>()>
<com.android.server.usb.UsbService.Lifecycle: void <init>(android.content.Context)>
<android.service.dreams.DreamService: void setContentView(android.view.View)>
<com.android.server.statusbar.StatusBarManagerInternal: void onCameraLaunchGestureDetected(int)>
<com.android.server.power.PowerManagerService: void onStart()>
<android.renderscript.ScriptIntrinsicBLAS: void DTRMM(int,int,int,int,double,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.os.Debug: void dumpHprofData(java.lang.String)>
<com.android.server.am.InstrumentationReporter: void reportStatus(android.app.IInstrumentationWatcher,android.content.ComponentName,int,android.os.Bundle)>
<com.android.server.net.NetworkStatsCollection: void readLegacyNetwork(java.io.File)>
<android.text.method.ScrollingMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription)>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String extractButton(java.lang.String)>
<com.android.systemui.classifier.DirectionClassifier: java.lang.String getTag()>
<android.graphics.Paint: void setTextScaleX(float)>
<com.android.layoutlib.bridge.bars.AppCompatActionBar: void setTitle(java.lang.CharSequence)>
<android.app.ActivityManagerProxy: android.app.IActivityContainer createVirtualActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>
<android.net.wifi.RttManager.ResponderCallback: void onResponderEnabled(android.net.wifi.RttManager.ResponderConfig)>
<com.android.commands.hid.Event: int getProductId()>
<com.android.settingslib.RestrictedSwitchPreference: boolean isDisabledByAdmin()>
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void lock()>
<com.android.hotspot2.osu.XMLParser: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)>
<android.service.voice.VoiceInteractionSession: void onAssistStructureFailure(java.lang.Throwable)>
<com.android.layoutlib.bridge.android.BridgeWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>
<android.widget.Toolbar: void setTitle(int)>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>
<com.android.hotspot2.osu.OSUListener: void osuNotification(int)>
<com.android.systemui.egg.MLand: float frand(float,float)>
<com.android.server.pm.Installer: void rmdex(java.lang.String,java.lang.String)>
<com.android.systemui.settings.BrightnessController: void unregisterCallbacks()>
<android.view.animation.Animation: void setFillEnabled(boolean)>
<android.util.ArrayMap: boolean removeAll(java.util.Collection)>
<android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void startUnlockHintAnimation()>
<com.android.systemui.statusbar.ExpandableView: boolean mustStayOnScreen()>
<com.android.systemui.recents.views.TaskStackView: boolean setFocusedTask(int,boolean,boolean,int)>
<com.android.systemui.tv.pip.PipMenuActivity: void onMoveToFullscreen()>
<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.ScrimController: void setPanelExpansion(float)>
<com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback: void onStateChanged(boolean,boolean)>
<com.android.server.net.NetworkStatsService: void advisePersistThreshold(long)>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>
<android.app.DatePickerDialog: void <init>(android.content.Context,int)>
<android.text.style.TtsSpan.SemioticClassBuilder: void <init>(java.lang.String)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStoppedLw()>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>
<com.android.documentsui.RecentsProvider: android.net.Uri buildState(java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: android.view.ViewPropertyAnimator animate()>
<com.android.layoutlib.bridge.bars.BridgeActionBar: void setSubtitle(java.lang.CharSequence)>
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>
<android.util.Base64OutputStream: void close()>
<com.android.systemui.settings.ToggleSlider: void <init>(android.content.Context)>
<android.app.ActionBar.Tab: int getPosition()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void onSessionHidden(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>
<android.app.WallpaperManager: void forgetLoadedWallpaper()>
<com.android.documentsui.model.DocumentInfo: void write(java.io.DataOutputStream)>
<com.android.server.pm.ShortcutService.Lifecycle: void onStart()>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
<android.view.animation.Animation: void setFillAfter(boolean)>
<com.android.server.pm.UserManagerService: boolean isUserRunning(int)>
<android.widget.DialerFilter: java.lang.CharSequence getLetters()>
<com.google.android.gles_jni.GLImpl: void glClientActiveTexture(int)>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.view.DragAndDropPermissions: int describeContents()>
<org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(java.lang.String)>
<android.bluetooth.le.ScanFilter: int hashCode()>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>
<com.android.systemui.qs.NonInterceptingScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>
<android.preference.PreferenceManager: boolean isStorageDefault()>
<android.content.AsyncQueryHandler: void onInsertComplete(int,java.lang.Object,android.net.Uri)>
<android.view.ViewStructure: void setFocusable(boolean)>
<com.android.server.net.IpConfigStore: void <init>(com.android.server.net.DelayedDiskWrite)>
<com.android.future.usb.UsbAccessory: java.lang.String getUri()>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printspooler.ui.AddPrinterActivity: void onCreate(android.os.Bundle)>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>
<com.android.printspooler.ui.PrintActivity: void onActivityResult(int,int,android.content.Intent)>
<android.view.MotionEvent.PointerCoords: void <init>(android.view.MotionEvent.PointerCoords)>
<android.app.FragmentController: void restoreLoaderNonConfig(android.util.ArrayMap)>
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>
<android.hardware.camera2.legacy.RequestHolder: void failRequest()>
<android.location.LocalListenerHelper.ListenerOperation: void execute(java.lang.Object)>
<android.media.session.PlaybackState: int describeContents()>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>
<com.android.printspooler.model.RemotePrintDocument: void cancel(boolean)>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>
<com.android.systemui.statusbar.NotificationContentView: int getMinHeight(boolean)>
<android.opengl.GLES20: void glDepthMask(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onTrackingStarted()>
<android.view.View: boolean isLongClickable()>
<com.android.systemui.statusbar.DismissView: boolean isOnEmptySpace(float,float)>
<com.android.server.AppOpsService.Op: void <init>(int,java.lang.String,int)>
<android.widget.Toolbar: int getTitleMarginEnd()>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.PackageParser.Instrumentation: void setPackageName(java.lang.String)>
<com.android.printspooler.ui.PageAdapter: android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.systemui.statusbar.stack.StackIndentationFunctor: float getValue(float)>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyResponse(android.telecom.VideoProfile)>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>
<com.android.keyguard.KeyguardSecurityContainer: boolean startDisappearAnimation(java.lang.Runnable)>
<android.view.ViewGroup.MarginLayoutParams: void setMarginStart(int)>
<android.view.Window: void setUiOptions(int,int)>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: void setProperty(java.lang.String,java.lang.Object)>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.content.pm.PackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>
<android.util.JsonWriter: void setIndent(java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getFrameLw()>
<android.hardware.camera2.params.BlackLevelPattern: void copyTo(int[],int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void showMessage(java.lang.String,int)>
<android.text.style.ClickableSpan: void onClick(android.view.View)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int,int)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>
<com.android.server.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>
<android.widget.TextView: void setMinEms(int)>
<com.android.server.am.BatteryStatsService: void notePackageUninstalled(java.lang.String)>
<android.telecom.Connection: void onSeparate()>
<android.view.View: int getMeasuredHeightAndState()>
<com.android.printspooler.ui.PageAdapter: void open(android.os.ParcelFileDescriptor,java.lang.Runnable)>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>
<com.android.systemui.recents.model.TaskKeyLruCache: void <init>(int)>
<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>
<android.widget.ProgressBar: void setProgressTintMode(android.graphics.PorterDuff.Mode)>
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<com.android.systemui.qs.SignalTileView: void setIcon(com.android.systemui.qs.QSTile.State)>
<android.opengl.GLES30: void glWaitSync(long,int,long)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String,android.os.Bundle)>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaExtractor: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>
<android.net.ip.IpManager.ProvisioningConfiguration.Builder: android.net.ip.IpManager.ProvisioningConfiguration.Builder withPreDhcpAction(int)>
<com.google.android.gles_jni.GLImpl: void glMaterialx(int,int,int)>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>
<com.android.hotspot2.pps.UpdateInfo: boolean isSPPClientInitiated()>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.String)>
<android.printservice.PrinterDiscoverySession: void onRequestCustomPrinterIcon(android.print.PrinterId,android.os.CancellationSignal,android.printservice.CustomPrinterIconCallback)>
<android.service.dreams.DreamService: android.view.View findViewById(int)>
<android.webkit.WebViewClient: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)>
<android.os.BatteryStats.ControllerActivityCounter: android.os.BatteryStats.LongCounter getPowerCounter()>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setCullMode(android.renderscript.ProgramRaster.CullMode)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES10: void glFrontFace(int)>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>
<android.content.Loader.OnLoadCanceledListener: void onLoadCanceled(android.content.Loader)>
<com.android.systemui.recents.views.TaskView: com.android.systemui.recents.views.TaskViewHeader getHeaderView()>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path.Op)>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<com.android.systemui.recents.events.EventBus.ReusableEvent: void <init>()>
<com.android.server.am.ActivityManagerService: int getActivityStackId(android.os.IBinder)>
<android.view.WindowManagerPolicy.WindowState: boolean showLw(boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<com.android.systemui.statusbar.BaseStatusBar: void showAssistDisclosure()>
<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,android.content.res.Resources.Theme)>
<android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>
<android.media.audiofx.BassBoost.Settings: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glPushMatrix()>
<android.hardware.radio.RadioManager.AmBandConfig.Builder: android.hardware.radio.RadioManager.AmBandConfig build()>
<android.text.InputFilter.LengthFilter: void <init>(int)>
<com.android.server.connectivity.NetworkAgentInfo.LingerTimer: int hashCode()>
<android.util.Range: android.util.Range intersect(android.util.Range)>
<com.android.gallery3d.glrenderer.RawTexture: void setIsFlippedVertically(boolean)>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: double checkFps()>
<android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>
<android.view.View: void setLabelFor(int)>
<com.android.hotspot2.omadm.OMAConstants: void indent(int,java.io.OutputStream)>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>
<android.location.LocationManager: void removeNmeaListener(android.location.GnssNmeaListener)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void add(android.view.MotionEvent)>
<com.android.systemui.statusbar.stack.StackScrollAlgorithm: boolean canChildBeDismissed(android.view.View)>
<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>
<android.widget.NumberPicker: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<com.android.systemui.power.PowerUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.AppOpsService: void setMode(int,int,java.lang.String,int)>
<com.android.server.policy.PolicyControl: int getSystemUiVisibility(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<android.util.JsonReader: void beginArray()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.ExpandableNotificationRow,int)>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>
<android.animation.FloatArrayEvaluator: void <init>()>
<com.android.server.am.BatteryStatsService: void noteEvent(int,java.lang.String,int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUrl()>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<android.telephony.CellInfoWcdma: int hashCode()>
<android.widget.TableLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.pm.PackageManagerService: int getFlagsForUid(int)>
<android.view.View: void playSoundEffect(int)>
<android.app.ActivityManagerProxy: void setProcessLimit(int)>
<android.util.AttributeSet: int getIdAttributeResourceValue(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: long getKeyguardFadingAwayDelay()>
<android.preference.Preference: long getPersistedLong(long)>
<android.service.notification.ZenModeConfig.ZenRule: boolean isTrueOrUnknown()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void hideIfNotSimple(boolean)>
<android.telecom.ConnectionService: android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<com.android.layoutlib.bridge.android.graphics.NopCanvas: void drawLines(float[],int,int,android.graphics.Paint)>
<android.telecom.CallAudioState: java.lang.String audioRouteToString(int)>
<android.content.pm.PackageInstaller.SessionCallback: void onProgressChanged(int,float)>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.media.MediaDescription,int)>
<android.app.Activity: void onLocalVoiceInteractionStopped()>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.app.Dialog: int getVolumeControlStream()>
<android.view.Display.Mode: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,int[],int)>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>
<android.service.dreams.DreamService: void finish()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
<android.app.Notification.WearableExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentConstantIndex()>
<com.android.server.content.SyncStorageEngine.PeriodicSyncAddedListener: void onPeriodicSyncAdded(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle,long,long)>
<android.graphics.Xfermode_Delegate: java.lang.String getSupportMessage()>
<com.android.hotspot2.osu.OSUInfo: void <init>(android.net.wifi.ScanResult,java.lang.String,com.android.anqp.OSUProvider,int)>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>
<android.content.pm.PackageInstaller.Session: void abandon()>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>
<android.renderscript.ScriptIntrinsicBLAS: void SSYMV(int,float,android.renderscript.Allocation,android.renderscript.Allocation,int,float,android.renderscript.Allocation,int)>
<android.content.ContentUris: long parseId(android.net.Uri)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<android.media.AudioPortConfig: int samplingRate()>
<android.media.MediaRecorder: void setAudioChannels(int)>
<android.provider.DocumentsContract: java.lang.String getRootId(android.net.Uri)>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>
<android.ddm.DdmHandleExit: void register()>
<com.android.systemui.statusbar.phone.PanelView: void instantCollapse()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setCurrency(java.lang.String)>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothGattServer openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)>
<android.location.Location: void set(android.location.Location)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onBootPhase(int)>
<android.service.carrier.CarrierIdentifier: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContentValues: void putNull(java.lang.String)>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<android.graphics.Camera: void translate(float,float,float)>
<com.google.android.util.AbstractMessageParser.Token: boolean isHtml()>
<com.android.uiautomator.core.UiSelector: void <init>()>
<com.android.layoutlib.bridge.android.BridgeWindow: void requestAppKeyboardShortcuts(com.android.internal.os.IResultReceiver,int)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onStateChange(int[])>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getRightPreview()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setVisible(boolean)>
<com.android.documentsui.BaseActivity: void refreshCurrentRootAndDirectory(int)>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>
<android.security.keystore.KeyInfo: java.lang.String[] getEncryptionPaddings()>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>
<android.telephony.CellIdentityWcdma: boolean equals(java.lang.Object)>
<android.renderscript.Matrix3f: void transpose()>
<android.app.VoiceInteractor.Request: android.content.Context getContext()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>
<android.view.View: int[] getDrawableState()>
<android.media.browse.MediaBrowser: boolean isConnected()>
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: void setExpansionCancelled(android.view.View)>
<android.webkit.PermissionRequest: void deny()>
<android.net.NetworkStats.Entry: void add(android.net.NetworkStats.Entry)>
<com.android.server.connectivity.IpConnectivityMetrics.Impl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.anqp.eap.ExpandedEAPMethod: int getVendorID()>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>
<android.telecom.StatusHints: android.graphics.drawable.Icon getIcon()>
<android.app.ActivityManagerProxy: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>
<android.app.MediaRouteButton: void onMeasure(int,int)>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder type(int)>
<android.widget.TimePicker: int getHour()>
<com.android.tools.layoutlib.create.ICreateInfo: java.lang.String[] getDelegateMethods()>
<android.media.MediaRouter: android.media.MediaRouter.UserRouteInfo createUserRoute(android.media.MediaRouter.RouteCategory)>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>
<com.android.server.wm.BlackFrame: void <init>(android.view.SurfaceSession,android.graphics.Rect,android.graphics.Rect,int,int,boolean)>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>
<com.android.server.net.NetworkStatsService: void unregisterUsageRequest(android.net.DataUsageRequest)>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<android.widget.Editor.UndoInputFilter: void setForceMerge(boolean)>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>
<com.android.systemui.volume.ZenFooter: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<android.renderscript.ScriptIntrinsicBLAS: void DSPMV(int,double,android.renderscript.Allocation,android.renderscript.Allocation,int,double,android.renderscript.Allocation,int)>
<android.app.ProgressDialog: int getMax()>
<com.android.hotspot2.osu.OSUManager: void setActiveNetwork(android.net.wifi.WifiConfiguration,android.net.Network)>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.String)>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>
<android.os.BatteryStats.Uid: int getWifiBatchedScanCount(int,int)>
<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.animation.LayoutTransition: void setDuration(int,long)>
<android.location.GnssStatusCallback: void onStopped()>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.NotificationData.Entry: boolean hasInterrupted()>
<com.android.gallery3d.exif.ExifTag: boolean isValidType(short)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>
<com.android.settingslib.drawer.ProfileSelectDialog: void onClick(android.content.DialogInterface,int)>
<android.view.View: int getHorizontalScrollbarHeight()>
<javax.microedition.khronos.opengles.GL10: void glSampleCoveragex(int,boolean)>
<com.android.server.storage.DiskStatsLoggingService: boolean onStopJob(android.app.job.JobParameters)>
<android.view.View: boolean getKeepScreenOn()>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Path: void <init>(android.graphics.Path)>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowAttached()>
<android.location.GnssNavigationMessage: int getType()>
<android.os.PatternMatcher: int describeContents()>
<com.android.systemui.statusbar.NotificationBackgroundView: void setTint(int)>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean,android.os.Bundle)>
<com.android.systemui.recents.tv.views.RecentsTvView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setName(java.lang.String)>
<android.media.session.MediaController.Callback: void onMetadataChanged(android.media.MediaMetadata)>
<android.view.Window: android.view.View getDecorView()>
<android.media.SoundPool: int play(int,float,float,int,int,float)>
<android.graphics.RectF: float height()>
<android.view.ViewStructure: void setAlpha(float)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,int[],int)>
<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>
<android.print.PrintAttributes.Resolution: void <init>(java.lang.String,java.lang.String,int,int)>
<com.android.settingslib.wifi.AccessPoint: void saveWifiState(android.os.Bundle)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.model.RecentsTaskLoadPlan createLoadPlan(android.content.Context)>
<com.android.server.policy.RecentApplicationsBackground: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.media.remotedisplay.RemoteDisplay: void setName(java.lang.String)>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.graphics.Canvas: int getDensity()>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
<android.graphics.pdf.PdfRenderer.Page: void close()>
<android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
<android.app.MediaRouteActionProvider: boolean isVisible()>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)>
<com.android.server.pm.UserManagerService.LifeCycle: void onStart()>
<android.widget.TabHost: java.lang.CharSequence getAccessibilityClassName()>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()>
<com.android.layoutlib.bridge.util.SparseWeakArray: int indexOfValue(java.lang.Object)>
<android.os.BatteryStats.HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats.HistoryItem,long,boolean,boolean)>
<com.android.hotspot2.omadm.MOTree: com.android.hotspot2.omadm.MOTree buildMgmtTree(java.lang.String,java.lang.String,com.android.hotspot2.omadm.OMAConstructed)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulFingerprintAttempt(int)>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>
<android.content.res.Resources: java.lang.String getString(int)>
<com.android.server.am.PreBootBroadcaster: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<com.android.server.am.ActivityManagerService: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean,int)>
<android.app.FragmentController: void doLoaderDestroy()>
<com.android.hotspot2.omadm.OMAScalar: com.android.hotspot2.omadm.OMANode addChild(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: boolean wasShownLongEnough()>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStart()>
<android.content.pm.ShortcutInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.documentsui.RecentsCreateFragment.RecentsCreateLoader: java.util.List loadInBackground(android.net.Uri,android.os.CancellationSignal)>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>
<android.database.Cursor: java.lang.String getString(int)>
<com.android.server.am.ActivityManagerService: long inputDispatchingTimedOut(int,boolean,java.lang.String)>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<android.bluetooth.BluetoothGatt: boolean discoverServices()>
<com.android.settingslib.bluetooth.PanProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<android.view.View: void setHasTransientState(boolean)>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.hotspot2.asn1.Asn1Integer: java.math.BigInteger getBigValue()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector selected(boolean)>
<com.android.tools.layoutlib.create.AsmAnalyzer.DependencyVisitor: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map)>
<android.app.ProgressDialog: void setIndeterminate(boolean)>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isDeviceManaged()>
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>
<com.android.layoutlib.bridge.android.BridgeSharedPreferences: int getInt(java.lang.String,int)>
<android.os.Looper: void loop()>
<android.telecom.RemoteConnection.Callback: void onConnectionPropertiesChanged(android.telecom.RemoteConnection,int)>
<android.media.VolumeProvider: void onSetVolumeTo(int)>
<android.app.usage.UsageStats: long getTotalTimeInForeground()>
<android.widget.TableLayout: void addView(android.view.View)>
<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
<android.view.View.AttachInfo.Callbacks: boolean performHapticFeedback(int,boolean)>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>
<com.android.hotspot2.omadm.OMAConstructed: void toString(java.lang.StringBuilder,int)>
<com.android.systemui.qs.tiles.DndTile: void handleClick()>
<android.hardware.Camera: int getNumberOfCameras()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void clickTile(android.content.ComponentName)>
<com.android.server.policy.GlobalActions.Action: boolean isEnabled()>
<android.widget.Switch: void setTrackTintList(android.content.res.ColorStateList)>
<com.android.documentsui.State: void setStack(com.android.documentsui.model.DocumentStack)>
<com.android.hotspot2.omadm.OMANode: java.util.List getPath()>
<android.app.Activity: void closeOptionsMenu()>
<com.android.server.pm.PackageInstallerService: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getOrCreateChild(char)>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>
<android.renderscript.Allocation: void generateMipmaps()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.widget.TextView: void setSingleLine()>
<com.android.server.pm.PackageManagerService: int getInstallLocation()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.content.Context: java.lang.String getString(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: void registerMoveCallback(android.content.pm.PackageManager.MoveCallback,android.os.Handler)>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>
<android.content.SharedPreferences.Editor: boolean commit()>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>
<com.android.systemui.statusbar.stack.StackScrollState: void <init>(android.view.ViewGroup)>
<com.android.documentsui.RootsList: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>
<android.os.Parcel: int dataAvail()>
<com.android.systemui.qs.QSTileView: void createLabel()>
<com.google.android.util.AbstractMessageParser.Token: boolean isArray()>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectFileUriExposure()>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayChanged(int)>
<com.android.printspooler.ui.PageAdapter: int getFilePageCount()>
<android.transition.ChangeClipBounds: void captureStartValues(android.transition.TransitionValues)>
<com.android.printservice.recommendation.plugin.samsung.MDnsUtils: java.lang.String getVendor(android.net.nsd.NsdServiceInfo)>
<com.android.server.input.InputManagerService: void setWiredAccessoryCallbacks(com.android.server.input.InputManagerService.WiredAccessoryCallbacks)>
<com.android.hotspot2.asn1.Asn1Object: java.lang.String toString()>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String)>
<android.os.Parcel: java.lang.String[] createStringArray()>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.Class checkPrimitiveClass(java.lang.Class)>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>()>
<com.android.hotspot2.pps.Credential: com.android.hotspot2.pps.Credential.CertType mapCertType(java.lang.String)>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.Settings getProperties()>
<com.android.server.pm.Installer: void moveAb(java.lang.String,java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glFlush()>
<android.content.pm.PackageManager: int checkSignatures(int,int)>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>
<com.android.server.am.BatteryStatsService: boolean isCharging()>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBitrateRange()>
<android.view.View: int getTopPaddingOffset()>
<com.android.settingslib.RestrictedSwitchPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)>
<android.media.JetPlayer: void release()>
<com.android.server.pm.PreferredIntentResolver: com.android.server.pm.PreferredActivity[] newArray(int)>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
<com.android.systemui.tuner.StatusBarSwitch: void onAttached()>
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)>
<com.android.keyguard.KeyguardPasswordView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.view.BridgeInflater: void setIsInMerge(boolean)>
<android.media.VolumeProvider: int getVolumeControl()>
<com.android.server.policy.PhoneWindowManager: void removeStartingWindow(android.os.IBinder,android.view.View)>
<android.drm.DrmManagerClient: int removeAllRights()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<android.view.ViewGroup: void addView(android.view.View,int)>
<android.transition.Transition.TransitionListener: void onTransitionPause(android.transition.Transition)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setCurrentUser(int)>
<android.content.res.BridgeTypedArray: void <init>(android.content.res.Resources,com.android.layoutlib.bridge.android.BridgeContext,int,boolean)>
<android.text.AlteredCharSequence: int length()>
<com.android.systemui.qs.QSTile.Callback: void onStateChanged(com.android.systemui.qs.QSTile.State)>
<com.google.android.gles_jni.GLImpl: void glTexGeni(int,int,int)>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>
<android.hardware.radio.RadioManager.ModuleProperties: int getNumTuners()>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View)>
<android.view.WindowManagerPolicy.WindowState: boolean isDimming()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onIconClicked(boolean)>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(float,float,float,float)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void unbindCameraPrewarmService(boolean)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>
<com.android.systemui.tuner.ClipboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.layoutlib.bridge.android.BridgePackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void initSignalCluster(android.view.View)>
<com.android.server.am.ActivityManagerService: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
<android.view.MotionEvent: void recycle()>
<com.android.systemui.statusbar.tv.TvStatusBar: void onActivated(com.android.systemui.statusbar.ActivatableNotificationView)>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create2D(android.renderscript.RenderScript,android.renderscript.Allocation)>
<com.android.printspooler.model.PageContentRepository: com.android.printspooler.model.PageContentRepository.PageContentProvider acquirePageContentProvider(int,android.view.View)>
<android.hardware.radio.RadioManager.BandConfig: boolean equals(java.lang.Object)>
<android.content.DialogInterface.OnClickListener: void onClick(android.content.DialogInterface,int)>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)>
<android.media.MediaRecorder: void stop()>
<android.net.Uri.Builder: android.net.Uri build()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onFinishInflate()>
<android.ddm.DdmHandleHeap: void disconnected()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onExpandingFinished()>
<com.android.gallery3d.glrenderer.BasicTexture: void invalidateAllTextures()>
<com.android.server.power.SuspendBlocker: void release()>
<com.android.gallery3d.exif.ExifTag: byte getValueAsByte(byte)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setFractionalPart(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<com.android.server.backup.AccountSyncSettingsBackupHelper: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void releaseAllImmediately()>
<com.android.server.job.JobStore: void forEachJob(int,com.android.server.job.JobStore.JobStatusFunctor)>
<com.android.systemui.recents.model.TaskStack: int getTaskCount()>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>
<com.android.systemui.statusbar.stack.AmbientState: int getInnerHeight()>
<android.os.Debug: void resetThreadAllocCount()>
<android.webkit.WebView: void pauseTimers()>
<android.content.SyncStats: void clear()>
<com.android.systemui.statusbar.ExpandableNotificationRow: com.android.systemui.statusbar.ExpandableNotificationRow getNotificationParent()>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>
<android.bluetooth.le.ScanSettings: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Matrix: boolean equals(java.lang.Object)>
<android.graphics.Matrix: void setSkew(float,float,float,float)>
<android.view.Window: android.media.session.MediaController getMediaController()>
<android.app.ActivityManagerProxy: void requestBugReport(int)>
<com.android.systemui.statusbar.BaseStatusBar: void onWorkChallengeUnlocked()>
<com.android.tools.layoutlib.create.AbstractClassAdapter.RenameSignatureAdapter: org.objectweb.asm.signature.SignatureVisitor visitClassBound()>
<com.android.layoutlib.bridge.android.BridgeContext: void addCookie(java.lang.Object,java.lang.Object)>
<android.view.TextureView: boolean isAvailable()>
<android.mtp.MtpConstants: boolean isAbstractObject(int)>
<com.android.layoutlib.bridge.bars.StatusBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.LightStatusBarController: void <init>(com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.statusbar.policy.BatteryController)>
<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String get(java.lang.String)>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent,android.os.Looper)>
<android.widget.Toolbar: int getTitleMarginTop()>
<com.android.hotspot2.osu.SPVerifier: void verify(java.security.cert.X509Certificate)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getCenterIcon()>
<com.android.systemui.qs.QSPanel.QSTileLayout: boolean updateResources()>
<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent.PointerCoords[],int)>
<android.media.AudioRecordingConfiguration: boolean equals(java.lang.Object)>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>
<android.util.ArrayMap: boolean retainAll(java.util.Collection)>
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder previewProduced()>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>
<android.widget.TableLayout.LayoutParams: void <init>(int,int,float)>
<com.android.hotspot2.pps.Credential: long getExpTime()>
<com.android.server.policy.PhoneWindowManager: void showBootMessage(java.lang.CharSequence,boolean)>
<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>
<com.android.systemui.recents.RecentsImpl: com.android.systemui.recents.model.RecentsTaskLoadPlan consumeInstanceLoadPlan()>
<android.webkit.WebViewDatabase: void clearFormData()>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>
<android.transition.Transition: java.util.List getTargetNames()>
<com.android.server.backup.KeyValueBackupJob: boolean onStopJob(android.app.job.JobParameters)>
<android.os.BatteryStats.HistoryEventTracker: void removeEvents(int)>
<com.android.systemui.recents.tv.RecentsTvActivity: void requestPipControlsFocus()>
<com.android.layoutlib.bridge.BridgeRenderSession: com.android.ide.common.rendering.api.Result moveChild(java.lang.Object,java.lang.Object,int,java.util.Map,com.android.ide.common.rendering.api.IAnimationListener)>
<com.android.layoutlib.bridge.impl.binding.FakeExpandableAdapter: java.lang.Object getChild(int,int)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: int getWindowMillis()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean hideKeyguard()>
<android.content.res.Resources_Delegate: android.content.res.Resources initSystem(com.android.layoutlib.bridge.android.BridgeContext,android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,com.android.ide.common.rendering.api.LayoutlibCallback)>
<android.widget.Switch: void drawableHotspotChanged(float,float)>
<com.android.systemui.statusbar.phone.IconMerger: void setOverflowIndicator(android.view.View)>
<com.android.externalstorage.ExternalStorageProvider: void updateVolumes()>
<com.android.systemui.tuner.ClockPreference: void onDetached()>
<com.android.systemui.statusbar.ViewTransformationHelper: void reset()>
<android.printservice.PrintJob: android.print.PrintJobInfo getInfo()>
<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>
<com.android.documentsui.OpenExternalDirectoryActivity.OpenExternalDirectoryDialogFragment: void onCancel(android.content.DialogInterface)>
<android.os.ConditionVariable: void close()>
<com.android.systemui.tv.pip.PipControlButtonView: void onFinishInflate()>
<android.print.PrintAttributes.Margins: boolean equals(java.lang.Object)>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable mutate()>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String toString()>
<android.os.MemoryFile: java.io.InputStream getInputStream()>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void closeInputBridge(android.os.IBinder)>
<com.android.server.audio.AudioService.VolumeController: boolean isSameBinder(android.media.IVolumeController)>
<com.android.systemui.statusbar.CommandQueue: void notificationLightPulse(int,int,int)>
<android.os.PersistableBundle: void <init>(int)>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageWidth()>
<com.android.systemui.volume.VolumeDialogController.StreamState: com.android.systemui.volume.VolumeDialogController.StreamState copy()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setName(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeWindowSession: boolean outOfMemory(android.view.IWindow)>
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>
<android.view.inputmethod.InputConnection: android.os.Handler getHandler()>
<com.android.systemui.statusbar.ExpandableView: void setOnHeightChangedListener(com.android.systemui.statusbar.ExpandableView.OnHeightChangedListener)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiObject)>
<com.android.systemui.tv.pip.PipRecentsOverlayManager.Callback: void onClosed()>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>
<android.hardware.fingerprint.IFingerprintDaemon: long preEnroll()>
<com.android.systemui.ViewInvertHelper: void <init>(android.view.View,long)>
<android.hardware.usb.UsbInterface: int getInterfaceClass()>
<android.telephony.NeighboringCellInfo: void setRssi(int)>
<com.android.server.notification.ScheduleConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.server.UpdateLockService: void acquireUpdateLock(android.os.IBinder,java.lang.String)>
<android.media.ImageReader: int getImageFormat()>
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)>
<android.graphics.drawable.LayerDrawable: void getOutline(android.graphics.Outline)>
<android.os.Parcel: void setDataSize(int)>
<com.android.layoutlib.bridge.bars.FrameworkActionBarWrapper: void setIcon(java.lang.String)>
<com.android.systemui.recents.misc.DozeTrigger: void setDozeDuration(int)>
<android.nfc.NdefMessage: int describeContents()>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getDynamicShortcuts(java.lang.String,int)>
<android.mtp.MtpDevice: boolean sendObject(int,long,android.os.ParcelFileDescriptor)>
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
<com.android.systemui.statusbar.notification.HeaderTransformState: void prepareFadeIn()>
<com.android.layoutlib.bridge.android.BridgeContext: void startActivity(android.content.Intent,android.os.Bundle)>
<com.android.server.wallpaper.WallpaperManagerService: boolean isWallpaperSupported(java.lang.String)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.content.pm.ResolveInfo resolveCameraIntent()>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.media.tv.TvInputInfo.Builder: android.media.tv.TvInputInfo.Builder setExtras(android.os.Bundle)>
<android.os.health.TimerStat: void <init>(int,long)>
<com.google.android.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)>
<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void doKeyguardTimeout(android.os.Bundle)>
<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnecting()>
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.webkit.WebViewProvider.ViewDelegate: void onActivityResult(int,int,android.content.Intent)>
<com.android.server.firewall.SenderPackageFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<android.os.BinderProxy: void dump(java.io.FileDescriptor,java.lang.String[])>
<android.graphics.drawable.Drawable: int getOpacity()>
<com.android.systemui.statusbar.ViewTransformationHelper: void addTransformedView(int,android.view.View)>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
<android.os.storage.StorageManager: boolean isEncrypted(java.io.File)>
<android.media.session.PlaybackState.Builder: void <init>()>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>
<android.widget.Advanceable: void fyiWillBeAdvancedByHostKThx()>
<android.widget.Chronometer: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void removeView()>
<com.android.keyguard.KeyguardStatusView: void onFinishInflate()>
<com.android.keyguard.NumPadKey: boolean hasOverlappingRendering()>
<com.android.server.pm.PackageManagerService: void restoreIntentFilterVerification(byte[],int)>
<com.android.server.lights.LightsManager: com.android.server.lights.Light getLight(int)>
<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String,int)>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void processFaceDetectMode(android.hardware.camera2.CaptureRequest,android.hardware.Camera.Parameters)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.filterpacks.imageproc.GrainFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.server.pm.PackageManagerService: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>
<android.view.ViewGroup: boolean getClipToPadding()>
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int)>
<com.android.mtp.AppFuse.Callback: int writeObjectBytes(long,int,long,int,byte[])>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>
<android.app.Notification.WearableExtender: int getHintScreenTimeout()>
<com.android.printspooler.ui.PrintActivity: void onDestroy()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator.AnimatorListener)>
<com.android.server.backup.UsageStatsBackupHelper: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<android.widget.CalendarView.CalendarViewDelegate: void setMinDate(long)>
<com.android.documentsui.RootsList: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.SSLCertificateSocketFactory: void <init>(int)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>
<android.widget.Editor.HandleView: int getCursorOffset()>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(android.graphics.Rect)>
<com.android.server.location.LocationProviderProxy: java.lang.String getName()>
<android.content.res.BridgeTypedArray: java.lang.String toString()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy build()>
<com.android.preload.classdataretrieval.hprof.Hprof: java.util.Map analyzeHprof(java.io.File)>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean hasOverlappingRendering()>
<android.media.MediaRouter.UserRouteInfo: void setVolumeHandling(int)>
<android.telecom.RemoteConnection.VideoProvider: void setCamera(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFingerprintAuthenticated(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOn()>
<android.animation.RectEvaluator: void <init>(android.graphics.Rect)>
<android.view.ScaleGestureDetector: void setQuickScaleEnabled(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean onBackPressed()>
<com.android.systemui.analytics.DataCollector: com.android.systemui.analytics.DataCollector getInstance(android.content.Context)>
<android.renderscript.AllocationAdapter: void resize(int)>
<com.android.statementservice.retriever.JsonParser: java.util.List parseArray(android.util.JsonReader)>
<android.widget.Scroller: void startScroll(int,int,int,int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void addDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>
<android.app.Fragment: void requestPermissions(java.lang.String[],int)>
<android.content.pm.PackageParser.Service: java.lang.String toString()>
<com.android.settingslib.accounts.AuthenticatorHelper: android.accounts.AuthenticatorDescription getAccountTypeDescription(java.lang.String)>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>
<com.android.server.firewall.FilterFactory: java.lang.String getTagName()>
<android.media.session.MediaSession.Callback: void onFastForward()>
<com.android.settingslib.BatteryInfo.BatteryDataParser: void onParsingDone()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.XmlResourceParser: void close()>
<com.android.documentsui.model.DocumentInfo: long getCursorLong(android.database.Cursor,java.lang.String)>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<android.webkit.WebChromeClient: void onPermissionRequestCanceled(android.webkit.PermissionRequest)>
<android.net.wifi.p2p.WifiP2pInfo: void <init>(android.net.wifi.p2p.WifiP2pInfo)>
<com.android.systemui.qs.QSDetail: void setExpanded(boolean)>
<com.android.layoutlib.bridge.impl.binding.FakeAdapter: int getViewTypeCount()>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<android.app.admin.DevicePolicyManager: int enableSystemApp(android.content.ComponentName,android.content.Intent)>
<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<com.android.systemui.statusbar.BaseStatusBar: void updateNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: int describeContents()>
<android.graphics.Matrix: void setScale(float,float)>
<com.android.hotspot2.pps.UpdateInfo: java.lang.String getCertFP()>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getString()>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>
<com.android.systemui.qs.QSPanel: void onTileClick(com.android.systemui.qs.QSTile)>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.widget.AbsListView: void scrollListBy(int)>
<android.media.audiofx.PresetReverb.Settings: void <init>()>
<com.android.photos.DumbBitmapRegionDecoder: int getWidth()>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(java.io.FileDescriptor)>
<com.android.systemui.doze.DozeLog: void traceScreenOff(int)>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeystoreAlias()>
<android.media.session.MediaSession: void setQueue(java.util.List)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>
<com.android.systemui.statusbar.BaseStatusBar: boolean userAllowsPrivateNotificationsInPublic(int)>
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.io.File,int)>
<com.android.systemui.statusbar.NotificationContentView: android.view.NotificationHeaderView getVisibleNotificationHeader()>
<com.android.server.pm.ShortcutService: boolean setDynamicShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureProgressed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.os.StatFs: int getAvailableBlocks()>
<com.android.systemui.statusbar.stack.NotificationStackScrollLayout: boolean isDismissViewNotGone()>
<android.printservice.PrintJob: boolean complete()>
<android.telecom.RemoteConference.Callback: void onConnectionCapabilitiesChanged(android.telecom.RemoteConference,int)>
<android.webkit.WebView: int computeVerticalScrollExtent()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clone()>
<android.speech.tts.Voice: boolean isNetworkConnectionRequired()>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.view.View: void cancelDragAndDrop()>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String,int)>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.transition.Transition: android.transition.Transition excludeTarget(android.view.View,boolean)>
<android.app.ActivityManagerProxy: void removeStack(int)>
<android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>
<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>
<android.graphics.ColorFilter_Delegate: android.graphics.ColorFilter_Delegate getDelegate(long)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<com.android.anqp.IconInfo: int getWidth()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void instantFinishAnimation()>
<com.android.systemui.statusbar.phone.QSTileHost: void setHeaderView(android.view.View)>
<com.android.layoutlib.bridge.impl.GcSnapshot: void setTransform(java.awt.geom.AffineTransform)>
<com.android.systemui.tuner.TunerService.Tunable: void onTuningChanged(java.lang.String,java.lang.String)>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyRequest(android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>
<android.text.style.UnderlineSpan: int describeContents()>
<android.view.View: void setX(float)>
<android.app.assist.AssistContent: boolean isAppProvidedIntent()>
<android.preference.PreferenceManager: void setStorageCredentialEncrypted()>
<com.android.systemui.classifier.DurationCountClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.am.DumpHeapProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.view.SurfaceView: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isProfileReady()>
<com.android.server.display.AutomaticBrightnessController.Callbacks: void updateBrightness()>
<com.android.systemui.DejankUtils: void postAfterTraversal(java.lang.Runnable)>
<android.widget.ListPopupWindow: void setPromptPosition(int)>
<com.android.systemui.statusbar.policy.SplitClockView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean needsFullscreenBouncer()>
<com.android.uiautomator.core.UiObject: int getChildCount()>
<android.widget.AbsListView: int getRightPaddingOffset()>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,long,long,android.view.animation.Interpolator)>
<android.widget.CursorFilter.CursorFilterClient: java.lang.CharSequence convertToString(android.database.Cursor)>
<com.android.server.fingerprint.FingerprintUtils: void vibrateFingerprintSuccess(android.content.Context)>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.google.android.gles_jni.GLImpl: void glRotatef(float,float,float,float)>
<android.location.Criteria: void setBearingRequired(boolean)>
<com.android.layoutlib.bridge.android.BridgeContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.settingslib.drawable.UserIconDrawable: void setFramePadding(float)>
<com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted: void <init>(boolean)>
<android.view.ViewStructure: java.lang.CharSequence getText()>
<android.graphics.Path_Delegate: void cubicTo(float,float,float,float,float,float)>
<com.android.hotspot2.asn1.Asn1ID: void <init>(int,com.android.hotspot2.asn1.Asn1Class)>
<android.content.pm.PackageParser.ServiceIntentInfo: java.lang.String toString()>
<android.view.View: void onFinishTemporaryDetach()>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>
<com.android.systemui.statusbar.phone.LightStatusBarController: void onPowerSaveChanged(boolean)>
<android.telephony.TelephonyManager: int getNetworkType()>
<com.android.documentsui.FilesActivityPerfTest: void setupTestingRoots()>
<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])>
<android.media.session.MediaController.PlaybackInfo: int getCurrentVolume()>
<android.nfc.NfcAdapter.ReaderCallback: void onTagDiscovered(android.nfc.Tag)>
<com.android.server.pm.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>
<com.android.server.policy.RecentApplicationsBackground: void onAttachedToWindow()>
<android.app.NotificationManager: android.app.NotificationManager.Policy getNotificationPolicy()>
<com.google.android.gles_jni.GLImpl: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.widget.TextView: boolean didTouchFocusSelect()>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getPermissionControllerPackageName()>
<android.text.Layout: int getParagraphDirection(int)>
<android.renderscript.ScriptIntrinsicBLAS: void BNNM(android.renderscript.Allocation,int,android.renderscript.Allocation,int,android.renderscript.Allocation,int,int)>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getFromParent(com.android.uiautomator.core.UiSelector)>
<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.app.IActivityManager.WaitResult: void writeToParcel(android.os.Parcel,int)>
<android.text.style.EasyEditSpan: void <init>(android.app.PendingIntent)>
<android.hardware.SensorManager: int getSensors()>
<com.android.systemui.statusbar.ExpandableNotificationRow: void applyChildrenState(com.android.systemui.statusbar.stack.StackScrollState)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPage(android.app.Notification)>
<com.android.server.power.ShutdownThread: void shutdown(android.content.Context,java.lang.String,boolean)>
<android.widget.ViewAnimator: int getDisplayedChild()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleClick()>
<android.net.VpnService.Builder: android.net.VpnService.Builder setMtu(int)>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.os.Parcel)>
<com.android.systemui.tuner.TunerFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.external.TileLifecycleManager: void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener)>
<android.graphics.Paint: void setSubpixelText(boolean)>
<android.content.BroadcastReceiver.PendingResult: void setResultData(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glCullFace(int)>
<android.view.MotionEvent: java.lang.String toString()>
<android.widget.ImageView: boolean isOpaque()>
<com.android.server.wallpaper.WallpaperManagerService: void finalize()>
<com.android.server.tv.TvRemoteProviderWatcher.ProviderMethods: void addProvider(com.android.server.tv.TvRemoteProviderProxy)>
<android.telephony.SubscriptionInfo: int getSubscriptionId()>
<com.android.systemui.statusbar.phone.ScrimController: void setCurrentUser(int)>
<com.android.systemui.recents.events.EventBus: java.lang.String dumpInternal(java.lang.String)>
<android.nfc.tech.NfcV: byte getDsfId()>
<android.app.Dialog: void dismiss()>
<com.android.documentsui.OperationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.widget.ExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.view.MenuItem: android.view.View getActionView()>
<com.android.statementservice.retriever.AbstractAsset: java.lang.String toJson()>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.restrictions.RestrictionsManagerService: void <init>(android.content.Context)>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.app.ActivityManager: int getLauncherLargeIconSize()>
<com.android.systemui.statusbar.ExpandableView: void setActualHeightAnimating(boolean)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>
<android.widget.MediaController: boolean isShowing()>
<android.database.ContentObserver: void onChange(boolean)>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo.DetailedState getDetailedState()>
<com.android.server.am.ActivityManagerService: void moveTaskToStack(int,int,boolean)>
<com.android.server.job.JobPackageTracker: void noteConcurrency(int,int)>
<com.android.settingslib.SuggestionParser: boolean dismissSuggestion(com.android.settingslib.drawer.Tile)>
<android.widget.RadioButton: void <init>(android.content.Context)>
<android.content.RestrictionEntry: java.lang.String getKey()>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
<com.android.layoutlib.bridge.impl.RenderAction: com.android.ide.common.rendering.api.RenderParams getParams()>
<com.android.systemui.statusbar.NotificationContentView: void closeRemoteInput()>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceUnregistered(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.qs.customize.QSCustomizer: void setHost(com.android.systemui.statusbar.phone.QSTileHost)>
<com.android.server.am.BroadcastQueue: boolean finishReceiverLocked(com.android.server.am.BroadcastRecord,int,java.lang.String,android.os.Bundle,boolean,boolean)>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void fadeInSettings(boolean,float,float)>
<com.android.layoutlib.bridge.android.BridgeContext: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<com.android.server.audio.AudioService.VolumeStreamState: int getMinIndex()>
<com.android.systemui.qs.tiles.UserDetailView: void refreshAdapter()>
<android.util.SparseLongArray: void <init>(int)>
<com.android.systemui.classifier.AnglesVarianceEvaluator: float evaluate(float)>
<com.android.systemui.statusbar.phone.PanelBar: void onExpandingFinished()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
<com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildStandby(int,int)>
<com.android.server.am.ProcessStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>()>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.qs.QSTile.DetailAdapter getDetailAdapter()>
<com.android.systemui.statusbar.BaseStatusBar: void setZenMode(int)>
<android.view.View: void setCameraDistance(float)>
<com.android.systemui.statusbar.BaseStatusBar: boolean startWorkChallengeIfNecessary(int,android.content.IntentSender,java.lang.String)>
<android.view.View: int getRight()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSettingsSummary()>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<android.view.View: void <init>(android.content.Context)>
<com.android.systemui.recents.views.RecentsView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.TextView: float getShadowDy()>
<com.android.systemui.statusbar.NotificationData: boolean showNotificationEvenIfUnprovisioned(android.service.notification.StatusBarNotification)>
<android.app.NotificationManager.Policy: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PanelView: void cancelHeightAnimator()>
<android.view.animation.LayoutAnimationController: boolean isDone()>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType)>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String)>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeTypeEquals(int,int)>
<android.util.AndroidException: void <init>()>
<com.android.systemui.statusbar.policy.LocationController.LocationSettingsChangeCallback: void onLocationSettingsChanged(boolean)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeath()>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
<android.view.ViewStructure: java.lang.CharSequence getHint()>
<android.view.ViewTreeObserver: boolean isAlive()>
<com.android.server.DeviceIdleController.LocalService: long getNotificationWhitelistDuration()>
<android.telecom.RemoteConnection.VideoProvider: void setPauseImage(android.net.Uri)>
<com.android.systemui.qs.external.TileServiceManager: android.os.IBinder getToken()>
<android.view.IWindowManagerImpl: int watchRotation(android.view.IRotationWatcher)>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>
<android.media.audiofx.Equalizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int)>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: boolean isRunning()>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()>
<android.app.Instrumentation: void start()>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setStringArgument(java.lang.String,java.lang.String)>
<android.telecom.Connection: void setConferenceables(java.util.List)>
<android.widget.ListPopupWindow: boolean isInputMethodNotNeeded()>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isSnoozedPackage(android.service.notification.StatusBarNotification)>
<com.android.hotspot2.WifiNetworkAdapter: void launchBrowser(java.net.URL,android.net.Network,java.net.URL)>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>
<com.android.server.wm.DimLayer.DimLayerUser: java.lang.String toShortString()>
<android.telecom.Call.Details: long getConnectTimeMillis()>
<com.android.keyguard.KeyguardSecurityContainer: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.systemui.statusbar.notification.HybridGroupManager: void <init>(android.content.Context,android.view.ViewGroup)>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackLayoutAlgorithm getStackAlgorithm()>
<android.view.Window: void setTransitionBackgroundFadeDuration(long)>
<android.preference.TwoStatePreference: void setSummaryOn(int)>
<android.view.ActionProvider: android.view.View onCreateActionView()>
<com.android.documentsui.model.DocumentStack: void updateRoot(java.util.Collection)>
<com.android.gallery3d.exif.ExifTag: long forceGetValueAsLong(long)>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>
<android.accessibilityservice.GestureDescription.StrokeDescription: long getStartTime()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context)>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>
<android.view.animation.PathInterpolator: float getInterpolation(float)>
<com.android.systemui.statusbar.CommandQueue: void showRecentApps(boolean,boolean)>
<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>
<android.media.AudioTrack: int getPlayState()>
<com.android.systemui.tv.pip.PipOnboardingActivity: void onCreate(android.os.Bundle)>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>
<android.net.wifi.nan.SubscribeSettings.Builder: android.net.wifi.nan.SubscribeSettings.Builder setSubscribeCount(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<android.widget.NumberPicker: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<android.service.quicksettings.TileService: boolean isSecure()>
<android.database.MergeCursor: float getFloat(int)>
<android.view.ViewParent: boolean canResolveLayoutDirection()>
<android.util.AttributeSet: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.app.usage.UsageStats: void writeToParcel(android.os.Parcel,int)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getText()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>
<com.android.systemui.recents.views.TaskView: void onStartFrontTaskEnterAnimation(boolean)>
<android.widget.OverScroller: int getFinalY()>
<android.app.NotificationManager: int getImportance()>
<android.content.RestrictionEntry: void setIntValue(int)>
<com.android.systemui.statusbar.phone.QSTileHost: com.android.systemui.statusbar.policy.CastController getCastController()>
<com.android.keyguard.NumPadKey: boolean onTouchEvent(android.view.MotionEvent)>
<android.service.quicksettings.TileService: boolean isLocked()>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String trimTrailingWhitespace(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable.VectorDrawableAnimator: void setListener(android.animation.Animator.AnimatorListener)>
<android.telecom.InCallService.VideoCall: void registerCallback(android.telecom.InCallService.VideoCall.Callback)>
<android.view.View: boolean isHovered()>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.widget.CheckedTextView: void drawableHotspotChanged(float,float)>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>
<android.renderscript.Script.LaunchOptions: int getXEnd()>
<android.view.ActionMode: android.view.View getCustomView()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<com.android.systemui.qs.QSContainer: com.android.systemui.statusbar.phone.BaseStatusBarHeader getHeader()>
<com.android.systemui.statusbar.UserUtil: void deleteUserWithPrompt(android.content.Context,int,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever.Result retrieveStatements(com.android.statementservice.retriever.AbstractAsset)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canApplyTheme()>
<android.opengl.GLES32: void glGetSamplerParameterIiv(int,int,java.nio.IntBuffer)>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>
<com.android.keyguard.KeyguardPasswordView: void showUsabilityHint()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallPackageWithActiveAdmins(java.lang.String)>
<com.android.systemui.statusbar.phone.BaseStatusBarHeader: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>
<com.android.systemui.statusbar.NotificationContentView: int getMaxHeight()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: android.view.View inflateButton(java.lang.String,android.view.ViewGroup,boolean)>
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMagnification()>
<android.graphics.drawable.Animatable2: void clearAnimationCallbacks()>
<android.app.admin.DeviceAdminReceiver: void onBugreportShared(android.content.Context,android.content.Intent,java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: boolean isWifiEnabled()>
<android.media.tv.TvView: boolean dispatchUnhandledInputEvent(android.view.InputEvent)>
<android.app.admin.DevicePolicyManager: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.view.animation.AnticipateInterpolator: void <init>()>
<android.hardware.camera2.utils.TaskDrainer: void beginDrain()>
<com.android.server.wm.DimLayer.DimLayerUser: void getDimBounds(android.graphics.Rect)>
<android.app.admin.DevicePolicyManager: void uninstallCaCert(android.content.ComponentName,byte[])>
<android.app.Notification.CarExtender.Builder: android.app.Notification.CarExtender.Builder setReadPendingIntent(android.app.PendingIntent)>
<android.animation.ValueAnimator: long getStartDelay()>
<com.android.server.notification.ScheduleConditionProvider: void saveSnoozedLocked()>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()>
<com.android.hotspot2.asn1.Asn1Object: void <init>(int,com.android.hotspot2.asn1.Asn1Class,boolean,int,java.nio.ByteBuffer)>
<android.preference.PreferenceManager: void setStorageDefault()>
<com.android.server.job.JobCompletedListener: void onJobCompleted(com.android.server.job.controllers.JobStatus,boolean)>
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>
<android.app.AlertDialog: void setView(android.view.View)>
<android.widget.TextView: int getCurrentTextColor()>
<android.speech.tts.TextToSpeech: boolean isSpeaking()>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int,int)>
<android.util.SparseArray: java.lang.String toString()>
<android.view.View: java.lang.String toString()>
<android.os.Bundle: boolean hasFileDescriptors()>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.media.AudioManager: void stopBluetoothSco()>
<com.android.hotspot2.asn1.Asn1Boolean: java.util.Collection getChildren()>
<com.android.server.am.BatteryStatsService: void noteWifiControllerActivity(android.net.wifi.WifiActivityEnergyInfo)>
<com.android.layoutlib.bridge.MockView: void setText(java.lang.CharSequence)>
<com.android.systemui.qs.external.CustomTile: com.android.systemui.qs.QSTile.State newTileState()>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.browse.MediaBrowser: void disconnect()>
<android.widget.DatePicker: void setMinDate(long)>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>
<android.text.style.MaskFilterSpan: void <init>(android.graphics.MaskFilter)>
<com.android.systemui.qs.external.TileServices: void onShowDialog(android.os.IBinder)>
<com.android.server.net.NetworkPinner: void unpin()>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(java.lang.CharSequence,boolean)>
<com.android.systemui.analytics.DataCollector: void onAffordanceSwipingAborted()>
<android.transition.ChangeClipBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.gallery3d.exif.ExifTag: java.lang.Object getValue()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void <init>(android.content.Context)>
<android.app.admin.SecurityLog.SecurityEvent: long getTimeNanos()>
<com.google.android.gles_jni.GLImpl: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.hardware.camera2.CameraManager.TorchCallback: void onTorchModeUnavailable(java.lang.String)>
<android.content.Context: android.graphics.drawable.Drawable peekWallpaper()>
<android.service.voice.VoiceInteractionSessionService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void setFocusState(int)>
<android.os.IRecoverySystem: boolean setupBcb(java.lang.String)>
<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>
<com.android.systemui.assist.AssistOrbView: void onFinishInflate()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isTouchExplorationEnabled()>
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>
<com.android.layoutlib.bridge.android.BridgeLayoutParamsMapAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<com.android.systemui.volume.ZenFooter: void cleanup()>
<android.media.AudioManager: void setParameters(java.lang.String)>
<android.widget.TextView: boolean isSuggestionsEnabled()>
<com.android.anqp.I18Name: java.lang.String toString()>
<android.content.Loader: boolean isReset()>
<android.view.accessibility.AccessibilityWindowInfo: int getType()>
<javax.microedition.khronos.opengles.GL10: void glLightf(int,int,float)>
<com.android.fakeoemfeatures.FakeBackgroundService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.ActivatableNotificationView: void setBelowSpeedBump(boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getDimensionForDevice(android.content.Context,int,int,int,int,int,int,int)>
<android.location.LocationManager: java.util.List getAllProviders()>
<com.android.future.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(com.android.future.usb.UsbAccessory)>
<android.view.KeyEvent: boolean isTracking()>
<com.android.server.wm.DimLayer.DimLayerUser: boolean dimFullscreen()>
<android.mtp.MtpDevice: long getPartialObject64(int,long,long,byte[])>
<android.renderscript.Allocation: void copyFrom(android.graphics.Bitmap)>
<android.telephony.TelephonyManager: boolean setVoiceMailNumber(java.lang.String,java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>
<com.android.tools.layoutlib.java.IntegralToString: void appendLong(java.lang.StringBuilder,long)>
<android.view.View: int getTop()>
<com.android.layoutlib.bridge.android.BridgeContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.am.AppTimeTracker: void start(java.lang.String)>
<com.android.layoutlib.bridge.android.BridgeContext: int getScrollXPos(android.view.View)>
<android.telecom.Call: java.util.List getConferenceableCalls()>
<android.widget.ProgressBar: void onDetachedFromWindow()>
<com.android.systemui.qs.tiles.WifiTile: void handleSecondaryClick()>
<android.graphics.Canvas_Delegate: android.graphics.DrawFilter_Delegate getDrawFilter()>
<com.android.systemui.tv.pip.PipControlButtonView: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.view.MotionEvent: int getHistorySize()>
<com.android.documentsui.DirectoryLoader: void onCanceled(com.android.documentsui.DirectoryResult)>
<android.widget.Spinner: void setPopupBackgroundResource(int)>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setCallback(com.android.systemui.qs.QSPanel.Callback)>
<com.android.systemui.qs.external.TileLifecycleManager: void setBindService(boolean)>
<android.text.util.Rfc822Token: java.lang.String quoteComment(java.lang.String)>
<android.content.Loader: void stopLoading()>
<android.telephony.CellSignalStrengthGsm: int getLevel()>
<com.android.settingslib.drawer.SettingsDrawerActivity: void remCategoryListener(com.android.settingslib.drawer.SettingsDrawerActivity.CategoryListener)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsScrimEnabled(boolean)>
<com.android.systemui.usb.StorageNotification: void start()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void reset()>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.view.Window: void setType(int)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.widget.AdapterView: long getItemIdAtPosition(int)>
<android.app.Instrumentation: android.content.Context getTargetContext()>
<android.content.ClipData.Item: java.lang.String coerceToHtmlText(android.content.Context)>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceRemoved(int)>
<com.android.layoutlib.bridge.android.BridgePackageManager: java.lang.String getSharedSystemSharedLibraryPackageName()>
<android.view.View: void setSoundEffectsEnabled(boolean)>
<android.hardware.usb.UsbAccessory: int describeContents()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setDeviceOwner(android.content.ComponentName,java.lang.String,int)>
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.graphics.Canvas: int getMaximumBitmapHeight()>
<com.android.preload.Main: javax.swing.DefaultListModel getClientListModel()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void endRenderTarget()>
<android.security.keystore.KeyProtection: boolean isDigestsSpecified()>
<android.view.Window: void injectInputEvent(android.view.InputEvent)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.systemui.qs.tiles.AirplaneModeTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.policy.MobileSignalController: void registerListener()>
<android.webkit.WebView: void setInitialScale(int)>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onUnconfigured(android.hardware.camera2.CameraDevice)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<com.android.hotspot2.omadm.MOManager: java.lang.Object getSelection(com.android.hotspot2.omadm.OMANode,java.lang.String)>
<com.android.server.net.NetworkStatsRecorder: void importLegacyNetworkLocked(java.io.File)>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
<android.transition.Visibility: void setMode(int)>
<android.print.PrintAttributes.MediaSize: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: void writeToParcel(android.os.Parcel,int)>
<com.android.server.usb.UsbDeviceManager: void denyUsbDebugging()>
<com.android.systemui.recents.Recents: void showNextAffiliatedTask()>
<android.webkit.WebSettings: boolean getAllowContentAccess()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void <init>(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.systemui.qs.PageIndicator: void onMeasure(int,int)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.Session newSession(com.android.settingslib.applications.ApplicationsState.Callbacks)>
<com.android.systemui.tv.pip.PipManager: void addListener(com.android.systemui.tv.pip.PipManager.Listener)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>
<android.text.TextUtils.SimpleStringSplitter: java.lang.String next()>
<android.location.LocationManager: boolean registerGnssStatusCallback(android.location.GnssStatus.Callback,android.os.Handler)>
<android.inputmethodservice.InputMethodService: void setTheme(int)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>
<com.android.systemui.recents.views.TaskView: void setFocusedState(boolean,boolean)>
<com.android.settingslib.bluetooth.MapProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.view.inputmethod.InputContentInfo: void releasePermission()>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>
<com.android.hotspot2.WifiNetworkAdapter: void updateNetwork(com.android.hotspot2.pps.HomeSP,java.security.cert.X509Certificate,java.util.List,java.security.PrivateKey)>
<android.app.usage.UsageStats: void <init>(android.app.usage.UsageStats)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.layoutlib.bridge.util.SparseWeakArray: void removeAt(int)>
<android.widget.ListPopupWindow: void setPromptView(android.view.View)>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>
<android.app.VoiceInteractor.CommandRequest: void <init>(java.lang.String,android.os.Bundle)>
<android.graphics.LightingColorFilter: void <init>(int,int)>
<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>
<android.opengl.GLES32: void glGetnUniformuiv(int,int,int,java.nio.IntBuffer)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(long)>
<android.provider.Settings.System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.widget.AbsListView: void <init>(android.content.Context)>
<com.android.server.net.NetworkStatsService: void systemReady()>
<android.service.dreams.DreamService: void onDestroy()>
<com.android.keyguard.KeyguardPatternView: void onPause()>
<android.app.FragmentManagerImpl: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>
<android.accessibilityservice.GestureDescription.StrokeDescription: android.graphics.Path getPath()>
<android.media.tv.TvInputService.Session: long onTimeShiftGetStartPosition()>
<com.android.systemui.SwipeHelper.Callback: void onChildDismissed(android.view.View)>
<android.widget.LinearLayout: void setVerticalGravity(int)>
<android.os.LocaleList: int indexOf(java.util.Locale)>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>
<android.os.Looper: android.os.MessageQueue getQueue()>
<android.hardware.camera2.legacy.LegacyCameraDevice: android.hardware.camera2.utils.SubmitInfo submitRequestList(android.hardware.camera2.CaptureRequest[],boolean)>
<android.mtp.MtpObjectInfo: int getAssociationType()>
<com.android.server.am.BatteryStatsService: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModes()>
<com.android.server.statusbar.StatusBarManagerInternal: void topAppWindowChanged(boolean)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.media.AudioDeviceInfo: java.lang.CharSequence getProductName()>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>
<android.media.audiopolicy.AudioPolicy.Builder: void setAudioPolicyFocusListener(android.media.audiopolicy.AudioPolicy.AudioPolicyFocusListener)>
<android.graphics.drawable.LayerDrawable: void setLayerInsetEnd(int,int)>
<com.android.systemui.classifier.FalsingManager: void onNotificatonStopDismissing()>
<android.widget.Toolbar: void <init>(android.content.Context)>
<com.android.layoutlib.bridge.android.BridgeXmlBlockParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.app.ApplicationErrorReport.BatteryInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowId: java.lang.String toString()>
<com.android.keyguard.KeyguardHostView: void showPrimarySecurityScreen()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.String)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setUserSetupComplete(boolean)>
<android.app.Notification.Builder: android.app.Notification.Builder setExtras(android.os.Bundle)>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
<android.widget.Editor.HandleView: boolean isDragging()>
<android.widget.Toast: void setView(android.view.View)>
<com.android.server.SystemConfig: android.util.ArraySet getSystemUserBlacklistedApps()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent)>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.widget.ListView: void <init>(android.content.Context)>
<com.android.server.wm.BoundsAnimationController.AnimateBoundsUser: void getFullScreenBounds(android.graphics.Rect)>
<com.android.server.backup.ShortcutBackupHelper: void applyRestoredPayload(java.lang.String,byte[])>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void updateStackScrollerState(boolean,boolean)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedKernelVersion()>
<android.printservice.PrintService: java.util.List getActivePrintJobs()>
<android.widget.HeaderViewListAdapter: int getFootersCount()>
<android.location.GnssMeasurement: boolean hasCarrierPhase()>
<android.media.tv.TvInputService.RecordingSession: void <init>(android.content.Context)>
<android.view.ViewConfiguration_Accessor: void clearConfigurations()>
<android.net.nsd.NsdServiceInfo: int describeContents()>
<android.location.LocationProvider: boolean requiresCell()>
<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>
<android.app.ApplicationThreadProxy: void updateTimeZone()>
<android.os.Binder: int getCallingUid()>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>
<com.android.systemui.volume.VolumeDialogComponent: void dismissNow()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void showRecents(boolean,boolean,boolean,boolean,boolean,int)>
<com.android.hotspot2.omadm.OMANode: void toXml(java.lang.StringBuilder)>
<com.android.systemui.recents.views.RecentsView: boolean launchFocusedTask(int)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.BluetoothGattCallback: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)>
<com.android.server.am.BatteryStatsService: void initPowerManagement()>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>
<android.service.notification.NotificationListenerService: void onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.qs.QSTile: void handleSecondaryClick()>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.hardware.camera2.CameraManager: void setTorchMode(java.lang.String,boolean)>
<com.android.server.am.ActivityStackSupervisor: void onDisplayChanged(int)>
<android.location.Location: void setExtras(android.os.Bundle)>
<com.android.media.remotedisplay.RemoteDisplayProvider: com.android.media.remotedisplay.RemoteDisplay findRemoteDisplay(java.lang.String)>
<android.mtp.MtpObjectInfo.Builder: android.mtp.MtpObjectInfo.Builder setAssociationType(int)>
<android.os.BatteryStats.HistoryItem: void <init>()>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter.Builder setEncryptionRequired(boolean)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.anqp.Constants: com.android.anqp.Constants.ANQPElementType mapHS20Element(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: void onExpandClicked(com.android.systemui.statusbar.NotificationData.Entry,boolean)>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>
<android.os.HandlerThread: boolean quitSafely()>
<com.android.systemui.qs.QSFooter: java.lang.CharSequence getMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<android.app.VoiceInteractor.CompleteVoiceRequest: void onCompleteResult(android.os.Bundle)>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationRepeat(android.animation.Animator)>
<com.android.layoutlib.bridge.android.BridgeContext: boolean isRestricted()>
<com.android.settingslib.Utils: boolean isDeviceProvisioningPackage(android.content.res.Resources,java.lang.String)>
<android.graphics.Color: int HSVToColor(float[])>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>
<android.view.IWindowManagerImpl: void removeAppToken(android.os.IBinder)>
<com.android.anqp.HSIconFileElement: byte[] getIconData()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.Editor.EditOperation: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.android.systemui.statusbar.notification.NotificationHeaderViewWrapper: void notifyContentUpdated(android.service.notification.StatusBarNotification)>
<android.net.wifi.p2p.WifiP2pManager.PeerListListener: void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList)>
<com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener: void onActivityForcedResizable(java.lang.String,int)>
<com.android.documentsui.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.NotificationContentView: void setHeadsupDisappearRunning(boolean)>
<android.graphics.Bitmap: int getDensity()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEmergencyCallsOnly(boolean)>
<android.graphics.Canvas: void translate(float,float)>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<com.android.hotspot2.omadm.OMAParser: com.android.hotspot2.omadm.MOTree parse(java.lang.String,java.lang.String)>
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)>
<android.content.res.BridgeTypedArray: int getType(int)>
<com.android.systemui.statusbar.phone.QuickStatusBarHeader: void setActivityStarter(com.android.systemui.statusbar.phone.ActivityStarter)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void setUserId(int)>
<android.hardware.camera2.legacy.CameraDeviceState: void setError(int)>
<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
<android.app.FragmentManager: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>
<com.android.settingslib.dream.DreamBackend: void launchSettings(com.android.settingslib.dream.DreamBackend.DreamInfo)>
<android.service.dreams.DreamService: void onDreamingStarted()>
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.app.FragmentManager: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.media.audiofx.Visualizer: int setScalingMode(int)>
<com.android.systemui.statusbar.StatusBarIconView: void setNotification(android.app.Notification)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.app.LocalActivityManager: void dispatchStop()>
<com.android.systemui.volume.VolumeDialogMotion.Callback: void onAnimatingChanged(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBar: boolean isCollapsing()>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>
<com.android.server.am.ActivityManagerService: int getActivityDisplayId(android.os.IBinder)>
<android.view.accessibility.AccessibilityManager: boolean addHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<android.view.View: void setRevealOnFocusHint(boolean)>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>
<com.android.systemui.statusbar.NotificationSettingsIconRow: void onClick(android.view.View)>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onScrollChanged()>
